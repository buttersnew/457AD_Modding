from header_game_menus import *
from header_parties import *
from header_items import *
from header_mission_templates import *
from header_music import *
from header_terrain_types import *
#SB : optional menu toggles
# from header_sounds import sf_vol_1
from ID_info_pages import *
from header_triggers import key_left_shift, key_right_shift
from module_constants import *

from compiler import *
####################################################################################################################
#  (menu-id, menu-flags, menu_text, mesh-name, [<operations>], [<options>]),
#
#   Each game menu is a tuple that contains the following fields:
#
#  1) Game-menu id (string): used for referencing game-menus in other files.
#     The prefix menu_ is automatically added before each game-menu-id
#
#  2) Game-menu flags (int). See header_game_menus.py for a list of available flags.
#     You can also specify menu text color here, with the menu_text_color macro
#  3) Game-menu text (string).
#  4) mesh-name (string). Not currently used. Must be the string "none"
#  5) Operations block (list). A list of operations. See header_operations.py for reference.
#     The operations block is executed when the game menu is activated.
#  6) List of Menu options (List).
#     Each menu-option record is a tuple containing the following fields:
#   6.1) Menu-option-id (string) used for referencing game-menus in other files.
#        The prefix mno_ is automatically added before each menu-option.
#   6.2) Conditions block (list). This must be a valid operation block. See header_operations.py for reference.
#        The conditions are executed for each menu option to decide whether the option will be shown to the player or not.
#   6.3) Menu-option text (string).
#   6.4) Consequences block (list). This must be a valid operation block. See header_operations.py for reference.
#        The consequences are executed for the menu option that has been selected by the player.
#
#
# Note: The first Menu is the initial character creation menu.
####################################################################################################################

game_menus = [
("start_game_0",menu_text_color(0xFF000000)|mnf_disable_all_keys,
  ##diplomacy begin
    "Welcome, adventurer, to 457 AD for Mount & Blade: Warband.^^You have three start options: ^^Royal Sandbox: Play as one of the many famous rulers of the 5th century AD.^^Lordly Sandbox: Play as a lord of one of the many factions.^^Normal Sandbox: Default sandbox start. Begin from nothing and build up your path.^^^^In honor of PILOS",
  ##diplomacy end
  "none",
    [],
  [
    ("starting_as_king",[],"Royal Sandbox",[
      (assign, "$temp_troop", -1),
      (assign, "$jugador_rey", 1),
      (assign,"$character_gender",tf_male),
      (start_presentation, "prsnt_select_king"),
    ]),

    ("starting_as_lord",[],"Lordly Sandbox",[
      (assign, "$temp_troop", -1),
      (assign, "$jugador_rey", -1),
      (assign,"$character_gender",tf_male),
      (start_presentation, "prsnt_select_lord"),
    ]),

    ("continue",[],"Normal Sandbox",[
        (assign, "$background_answer_4", slot_religion_christian_chalcedonian),
        (assign, "$background_answer_5", "fac_culture_1"),
        (start_presentation, "prsnt_mcc_character_creation"),
      ]),

    ("go_back",[],"Go back",[
      (change_screen_quit),
    ]),
]),

("start_phase_2",mnf_disable_all_keys, #start_phase_2_5
"{!}",
"none",[
    #(jump_to_menu, "mnu_start_phase_3"),
    (party_relocate_near_party, "p_main_party", "$g_starting_town", 2),
    (change_screen_return),
],
[
  ("continue",[], "Leave...",
  [(change_screen_quit)]),

]),


("start_game_3",mnf_disable_all_keys,
    "Choose your scenario:",
    "none",
    [
      (assign, "$g_custom_battle_scenario", 0),
      (assign, "$g_custom_battle_scenario", "$g_custom_battle_scenario"),
##      #Default banners
##      (troop_set_slot, "trp_banner_background_color_array", 126, 0xFF212221),
##      (troop_set_slot, "trp_banner_background_color_array", 127, 0xFF212221),
##      (troop_set_slot, "trp_banner_background_color_array", 128, 0xFF2E3B10),
##      (troop_set_slot, "trp_banner_background_color_array", 129, 0xFF425D7B),
##      (troop_set_slot, "trp_banner_background_color_array", 130, 0xFF394608),
      ],
    [
##      ("custom_battle_scenario_1",[], "Skirmish 1",
##       [
##           (assign, "$g_custom_battle_scenario", 0),
##           (jump_to_menu, "mnu_custom_battle_2"),
##
##        ]
##       ),
####      ("custom_battle_scenario_2",[],"Siege Attack 1",
####       [
####           (assign, "$g_custom_battle_scenario", 1),
####           (jump_to_menu, "mnu_custom_battle_2"),
####
####        ]
####       ),
##      ("custom_battle_scenario_3",[],"Skirmish 2",
##       [
##           (assign, "$g_custom_battle_scenario", 1),
##           (jump_to_menu, "mnu_custom_battle_2"),
##
##        ]
##       ),
##       ("custom_battle_scenario_4",[],"Siege Defense",
##       [
##           (assign, "$g_custom_battle_scenario", 2),
##           (jump_to_menu, "mnu_custom_battle_2"),
##        ]
##       ),
##       ("custom_battle_scenario_5",[],"Skirmish 3",
##       [
##           (assign, "$g_custom_battle_scenario", 3),
##           (jump_to_menu, "mnu_custom_battle_2"),
##        ]
##       ),
##      ("custom_battle_scenario_6",[],"Siege Attack",
##       [
##           (assign, "$g_custom_battle_scenario", 4),
##           (jump_to_menu, "mnu_custom_battle_2"),
##
##        ]
##       ),
      ("go_back",[],"Go back",
       [(change_screen_quit),
        ]
		),
    ]
  ),

##  ("start_game_3",mnf_disable_all_keys,
##    "Choose your scenario:",
##    "none",
##    [
##      (assign, "$g_custom_battle_scenario", 0),
##      (assign, "$g_custom_battle_scenario", "$g_custom_battle_scenario"),
####      #Default banners
####      (troop_set_slot, "trp_banner_background_color_array", 126, 0xFF212221),
####      (troop_set_slot, "trp_banner_background_color_array", 127, 0xFF212221),
####      (troop_set_slot, "trp_banner_background_color_array", 128, 0xFF2E3B10),
####      (troop_set_slot, "trp_banner_background_color_array", 129, 0xFF425D7B),
####      (troop_set_slot, "trp_banner_background_color_array", 130, 0xFF394608),
##      ],
##    [
####      ("custom_battle_scenario_1",[], "Skirmish 1",
####       [
####           (assign, "$g_custom_battle_scenario", 0),
####           (jump_to_menu, "mnu_custom_battle_2"),
####
####        ]
####       ),
######      ("custom_battle_scenario_2",[],"Siege Attack 1",
######       [
######           (assign, "$g_custom_battle_scenario", 1),
######           (jump_to_menu, "mnu_custom_battle_2"),
######
######        ]
######       ),
####      ("custom_battle_scenario_3",[],"Skirmish 2",
####       [
####           (assign, "$g_custom_battle_scenario", 1),
####           (jump_to_menu, "mnu_custom_battle_2"),
####
####        ]
####       ),
####       ("custom_battle_scenario_4",[],"Siege Defense",
####       [
####           (assign, "$g_custom_battle_scenario", 2),
####           (jump_to_menu, "mnu_custom_battle_2"),
####        ]
####       ),
####       ("custom_battle_scenario_5",[],"Skirmish 3",
####       [
####           (assign, "$g_custom_battle_scenario", 3),
####           (jump_to_menu, "mnu_custom_battle_2"),
####        ]
####       ),
####      ("custom_battle_scenario_6",[],"Siege Attack",
####       [
####           (assign, "$g_custom_battle_scenario", 4),
####           (jump_to_menu, "mnu_custom_battle_2"),
####
####        ]
####       ),
##      ("go_back",[],"Go back",
##       [(change_screen_quit),
##        ]
##       ),
##    ]
##  ),

  (
    "tutorial",mnf_disable_all_keys,
    "You approach a field where the locals are training with weapons. You can practice here to improve your combat skills.",
    "none",
    [
      (try_begin),
        (eq, "$g_tutorial_entered", 1),
        (change_screen_quit),
      (else_try),
        (set_passage_menu, "mnu_tutorial"),
##        (try_begin),
##          (eq, "$tutorial_1_finished", 1),
##          (str_store_string, s1, "str_finished"),
##        (else_try),
##          (str_store_string, s1, "str_empty_string"),
##        (try_end),
##        (try_begin),
##          (eq, "$tutorial_2_finished", 1),
##          (str_store_string, s2, "str_finished"),
##        (else_try),
##          (str_store_string, s2, "str_empty_string"),
##        (try_end),
##        (try_begin),
##          (eq, "$tutorial_3_finished", 1),
##          (str_store_string, s3, "str_finished"),
##        (else_try),
##          (str_store_string, s3, "str_empty_string"),
##        (try_end),
##        (try_begin),
##          (eq, "$tutorial_4_finished", 1),
##          (str_store_string, s4, "str_finished"),
##        (else_try),
##          (str_store_string, s4, "str_empty_string"),
##        (try_end),
##        (try_begin),
##          (eq, "$tutorial_5_finished", 1),
##          (str_store_string, s5, "str_finished"),
##        (else_try),
##          (str_store_string, s5, "str_empty_string"),
##        (try_end),
        (assign, "$g_tutorial_entered", 1),
      (try_end),
    ],
    [
##      ("tutorial_1",
##      [(eq,1,0),],
##      "Tutorial #1: Basic movement and weapon selection. {s1}",
##      [
##        #(modify_visitors_at_site,"scn_tutorial_1"),(reset_visitors,0),
####           (set_jump_mission,"mt_tutorial_1"),
####           (jump_to_scene,"scn_tutorial_1"),(change_screen_mission)]),
##      ]),
##
##      ("tutorial_2",[(eq,1,0),],"Tutorial #2: Fighting with a shield. {s2}",[
####           (modify_visitors_at_site,"scn_tutorial_2"),(reset_visitors,0),
####           (set_visitor,1,"trp_tutorial_maceman"),
####           (set_visitor,2,"trp_tutorial_archer"),
####           (set_jump_mission,"mt_tutorial_2"),
####           (jump_to_scene,"scn_tutorial_2"),(change_screen_mission)]),
##           (modify_visitors_at_site,"scn_tutorial_training_ground"),
##           (reset_visitors, 0),
##           (set_player_troop, "trp_player"),
##           (set_visitor,0,"trp_player"),
##           (set_jump_mission,"mt_ai_training"),
##           (jump_to_scene,"scn_tutorial_training_ground"),
##           (change_screen_mission)]),
##
##      ("tutorial_3",[(eq,1,0),],"Tutorial #3: Fighting without a shield. {s3}",[
##           (modify_visitors_at_site,"scn_tutorial_3"),(reset_visitors,0),
##           (set_visitor,1,"trp_tutorial_maceman"),
##           (set_visitor,2,"trp_tutorial_swordsman"),
##           (set_jump_mission,"mt_tutorial_3"),
##           (jump_to_scene,"scn_tutorial_3"),(change_screen_mission)]),
##      ("tutorial_3b",[(eq,0,1)],"Tutorial 3 b",[(try_begin),
##                                                  (ge, "$tutorial_3_state", 12),
##                                                  (modify_visitors_at_site,"scn_tutorial_3"),(reset_visitors,0),
##                                                  (set_visitor,1,"trp_tutorial_maceman"),
##                                                  (set_visitor,2,"trp_tutorial_swordsman"),
##                                                  (set_jump_mission,"mt_tutorial_3_2"),
##                                                  (jump_to_scene,"scn_tutorial_3"),
##                                                  (change_screen_mission),
##                                                (else_try),
##                                                  (display_message,"str_door_locked",message_locked),
##                                                (try_end)], "Next level"),
##      ("tutorial_4",[(eq,1,0),],"Tutorial #4: Riding a horse. {s4}",[
##           (modify_visitors_at_site,"scn_tutorial_training_ground"),
##           (reset_visitors, 0),
##           (set_player_troop, "trp_player"),
##           (assign, "$g_player_troop", "trp_player"),
##           (troop_raise_attribute, "$g_player_troop", ca_strength, 12),
##           (troop_raise_attribute, "$g_player_troop", ca_agility, 9),
##           (troop_raise_attribute, "$g_player_troop", ca_charisma, 5),
##           (troop_raise_skill, "$g_player_troop", skl_shield, 3),
##           (troop_raise_skill, "$g_player_troop", skl_athletics, 2),
##           (troop_raise_skill, "$g_player_troop", skl_riding, 3),
##           (troop_raise_skill, "$g_player_troop", skl_power_strike, 1),
##           (troop_raise_skill, "$g_player_troop", skl_power_draw, 5),
##           (troop_raise_skill, "$g_player_troop", skl_weapon_master, 4),
##           (troop_raise_skill, "$g_player_troop", skl_ironflesh, 1),
##           (troop_raise_skill, "$g_player_troop", skl_horse_archery, 6),
##           (troop_raise_proficiency_linear, "$g_player_troop", wpt_one_handed_weapon, 70),
##           (troop_raise_proficiency_linear, "$g_player_troop", wpt_two_handed_weapon, 70),
##           (troop_raise_proficiency_linear, "$g_player_troop", wpt_polearm, 70),
##           (troop_raise_proficiency_linear, "$g_player_troop", wpt_crossbow, 70),
##           (troop_raise_proficiency_linear, "$g_player_troop", wpt_throwing, 70),
##
##        (troop_clear_inventory, "$g_player_troop"),
##        (troop_add_item, "$g_player_troop","itm_leather_jerkin",0),
##        (troop_add_item, "$g_player_troop","itm_leather_boots",0),
##        (troop_add_item, "$g_player_troop","itm_practice_sword",0),
##        (troop_add_item, "$g_player_troop","itm_quarter_staff",0),
##        (troop_equip_items, "$g_player_troop"),
##        (set_visitor,0,"trp_player"),
##        (set_visitor,32,"trp_tutorial_fighter_1"),
##        (set_visitor,33,"trp_tutorial_fighter_2"),
##        (set_visitor,34,"trp_tutorial_fighter_3"),
##        (set_visitor,35,"trp_tutorial_fighter_4"),
##        (set_visitor,40,"trp_tutorial_master_archer"),
##        (set_visitor,41,"trp_tutorial_archer_1"),
##        (set_visitor,42,"trp_tutorial_archer_1"),
##        (set_visitor,60,"trp_tutorial_master_horseman"),
##        (set_visitor,61,"trp_tutorial_rider_1"),
##        (set_visitor,62,"trp_tutorial_rider_1"),
##        (set_visitor,63,"trp_tutorial_rider_2"),
##        (set_visitor,64,"trp_tutorial_rider_2"),
##        (set_jump_mission,"mt_tutorial_training_ground"),
##        (jump_to_scene,"scn_tutorial_training_ground"),
##        (change_screen_mission),
##      ]),
##
##      ("tutorial_5",
##      [
##        (eq,1,0),
##      ],
##      "Tutorial #5: Commanding a band of soldiers. {s5}",
##      [
##        (modify_visitors_at_site,"scn_tutorial_5"),(reset_visitors,0),
##        (set_visitor,0,"trp_player"),
##        (set_visitor,1,"trp_vaegir_infantry"),
##        (set_visitor,2,"trp_vaegir_infantry"),
##        (set_visitor,3,"trp_vaegir_infantry"),
##        (set_visitor,4,"trp_vaegir_infantry"),
##        (set_jump_mission,"mt_tutorial_5"),
##        (jump_to_scene,"scn_tutorial_5"),
##        (change_screen_mission),
##      ]),
##
##      ("tutorial_edit_custom_battle_scenes",
##      [(eq,1,0),],
##      "(NO TRANSLATE) tutorial_edit_custom_battle_scenes",
##      [
##        (jump_to_menu,"mnu_custom_battle_scene"),
##      ]),

      ("continue",[],"Continue...",
      [
        (modify_visitors_at_site,"scn_tutorial_training_ground"),
        (reset_visitors, 0),
        (set_player_troop, "trp_player"),
        (assign, "$g_player_troop", "trp_player"),
        (troop_raise_attribute, "$g_player_troop", ca_strength, 12),
        (troop_raise_attribute, "$g_player_troop", ca_agility, 9),
        (troop_raise_attribute, "$g_player_troop", ca_charisma, 5),
        (troop_raise_skill, "$g_player_troop", skl_shield, 3),
        (troop_raise_skill, "$g_player_troop", skl_athletics, 2),
        (troop_raise_skill, "$g_player_troop", skl_riding, 3),
        (troop_raise_skill, "$g_player_troop", skl_power_strike, 1),
        (troop_raise_skill, "$g_player_troop", skl_power_draw, 5),
        (troop_raise_skill, "$g_player_troop", skl_weapon_master, 4),
        (troop_raise_skill, "$g_player_troop", skl_ironflesh, 1),
        (troop_raise_skill, "$g_player_troop", skl_horse_archery, 6),
        (troop_raise_proficiency_linear, "$g_player_troop", wpt_one_handed_weapon, 70),
        (troop_raise_proficiency_linear, "$g_player_troop", wpt_two_handed_weapon, 70),
        (troop_raise_proficiency_linear, "$g_player_troop", wpt_polearm, 70),
        (troop_raise_proficiency_linear, "$g_player_troop", wpt_crossbow, 70),
        (troop_raise_proficiency_linear, "$g_player_troop", wpt_throwing, 70),
        (troop_raise_proficiency_linear, "$g_player_troop", wpt_firearm, 70),

        (troop_clear_inventory, "$g_player_troop"),
        (troop_add_item, "$g_player_troop","itm_leather_jerkin",0),
        (troop_add_item, "$g_player_troop","itm_leather_boots",0),
        (troop_add_item, "$g_player_troop","itm_practice_sword",0),
        (troop_add_item, "$g_player_troop","itm_quarter_staff",0),
        (troop_equip_items, "$g_player_troop"),
        (set_visitor,0,"trp_player"),
        (set_visitor,32,"trp_tutorial_fighter_1"),
        (set_visitor,33,"trp_tutorial_fighter_2"),
        (set_visitor,34,"trp_tutorial_fighter_3"),
        (set_visitor,35,"trp_tutorial_fighter_4"),
        (set_visitor,40,"trp_tutorial_master_archer"),
        (set_visitor,41,"trp_tutorial_archer_1"),
        (set_visitor,42,"trp_tutorial_archer_1"),
        (set_visitor,60,"trp_tutorial_master_horseman"),
        (set_visitor,61,"trp_tutorial_rider_1"),
        (set_visitor,62,"trp_tutorial_rider_1"),
        (set_visitor,63,"trp_tutorial_rider_2"),
        (set_visitor,64,"trp_tutorial_rider_2"),
        (set_jump_mission,"mt_tutorial_training_ground"),
        (jump_to_scene,"scn_tutorial_training_ground"),
        (change_screen_mission),
        ]),

      ("go_back_dot",
      [],
      "Go back.",
       [
         (change_screen_quit),
       ]),
    ]
  ),

  ("reports",mnf_enable_hot_keys,
   "Character Renown: {reg5}^Honor Rating: {reg6}^Party Morale: {reg8}^Party Size Limit: {reg7}^Piety: {reg9}^Culture: {s22}",
   "none",
   [
    (troop_get_slot, ":culture", "trp_player", slot_troop_culture),
    (str_store_faction_name, s22, ":culture"),

    (call_script, "script_game_get_party_companion_limit"),
    (assign, ":party_size_limit", reg0),
    (troop_get_slot, ":renown", "trp_player", slot_troop_renown),
    (assign, reg5, ":renown"),
    (assign, reg6, "$player_honor"),
    (assign, reg7, ":party_size_limit"),
    (assign, reg9, "$piety"),
    #(call_script, "script_get_player_party_morale_values"),
    #(party_set_morale, "p_main_party", reg0),
    (party_get_morale, reg8, "p_main_party"),

    ##diplomacy begin
    (str_clear, s1),
    (try_begin),
      (gt, "$g_next_pay_time", 0),
      (str_store_date, s1, "$g_next_pay_time"),
      (str_store_string, s1, "@ Next pay day: {s1}"),
    (try_end),

    (try_begin),
      (is_between, "$g_player_affiliated_troop", lords_begin, kingdom_ladies_end),
      (str_store_troop_name, s5, "$g_player_affiliated_troop"),
      (str_store_string, s1, "@{s1}^^Affiliated to {s5}"),
    (try_end),
    ##diplomacy end
   ],
    [
      ("cheat_faction_orders",[(ge,"$cheat_mode",1)],"{!}Cheat: Faction orders.",
       [(jump_to_menu, "mnu_faction_orders"),
        ]
       ),
      ## CC
     ("action_view_troop_trees",[],"View unit rosters.",
      [
       (start_presentation, "prsnt_faction_troop_trees"),
       ]
      ),
     # ("action_view_troop_trees_minor",[],"View troop trees (continued).",
     #  [
     #   (start_presentation, "prsnt_faction_troop_trees_minor"),
     #   ]
     #  ),
      ## CC
      ("view_character_report",[],"View character report.",
       [(jump_to_menu, "mnu_character_report"),
        ]
       ),
      ("view_party_size_report",[],"View party size report.",
       [(jump_to_menu, "mnu_party_size_report"),
        ]
       ),

      ("view_npc_mission_report",[],"View companion mission report.",
       [(jump_to_menu, "mnu_companion_report"),
        #SB : we modified this, reset the global to the player so it shows up first
        (assign, "$g_player_troop", "trp_player"),
        #could also jump to presentation directly
        ]
       ),

      ("view_weekly_budget_report",[],"View weekly budget report.",
       [
         (assign, "$g_apply_budget_report_to_gold", 0),
         (start_presentation, "prsnt_budget_report"),
        ]
       ),

      ("view_morale_report",[],"View party morale report.",
       [(jump_to_menu, "mnu_morale_report"),
        ]
       ),

#NPC companion changes begin
##diplomacy start
      ("lord_relations",[],"View list of known lords by relation.",
       [
         #(jump_to_menu, "mnu_lord_relations"),
         (assign, "$g_jrider_pres_called_from_menu", 1),
         (assign, "$g_character_presentation_type", 1),
         (start_presentation, "prsnt_jrider_character_relation_report"),
        ]
       ),
##diplomacy end

	##diplomacy start+ see dplmc_affiliated_family_report
     ("view_affiliated_family_report",[
		#(this_or_next|troop_slot_ge, "trp_player", slot_troop_spouse, 1),
        (this_or_next|ge,"$cheat_mode",1),
		(is_between, "$g_player_affiliated_troop", kingdoms_begin, kingdoms_end),
		], "View affiliated family member / spouse report.",
       [
           (jump_to_menu, "mnu_dplmc_affiliated_family_report"),
        ]
       ),
	##diplomacy end+

      ("courtship_relations",[],"View courtship relations.",
       [
		(jump_to_menu, "mnu_courtship_relations"),
        ]
       ),

      ("status_check",[(eq,"$cheat_mode",1)],"{!}NPC status check.",
       [
        (try_for_range, ":npc", companions_begin, companions_end),
            (main_party_has_troop, ":npc"),
            (str_store_troop_name, 4, ":npc"),
            (troop_get_slot, reg3, ":npc", slot_troop_morality_state),
            (troop_get_slot, reg4, ":npc", slot_troop_2ary_morality_state),
            (troop_get_slot, reg5, ":npc", slot_troop_personalityclash_state),
            (troop_get_slot, reg6, ":npc", slot_troop_personalityclash2_state),
            (troop_get_slot, reg7, ":npc", slot_troop_personalitymatch_state),
            (display_message, "@{!}{s4}: M{reg3}, 2M{reg4}, PC{reg5}, 2PC{reg6}, PM{reg7}"),
        (try_end),
        ]
       ),

#NPC companion changes end

	   ##diplomacy begin
     ("view_faction_relations_report",[],"View faction relations report.",
       [
           # Jrider + REPORTS PRESENTATIONS 1.2, comment to hook faction report presentation
           ##(jump_to_menu, "mnu_faction_relations_report"),
           (start_presentation, "prsnt_jrider_faction_relations_report"),
           # Jrider -
        ]
       ),

     ("dplmc_show_economic_report",[],"View prosperity report.",
       [
           (jump_to_menu, "mnu_dplmc_economic_report"),
        ]
       ),
       ##diplomacy end

      ("resume_travelling",[],"Resume travelling.",
       [(change_screen_return),
        ]
       ),
      ]
  ),

  (
    "custom_battle_scene",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "(NO_TRANS)",

    "none",
    [],
    [

      ("quick_battle_scene_1",[],"{!}quick_battle_scene_1",
       [
           (set_jump_mission,"mt_ai_training"),
           (jump_to_scene,"scn_quick_battle_scene_1"),(change_screen_mission)
		]
       ),
      ("quick_battle_scene_2",[],"{!}quick_battle_scene_2",
       [
           (set_jump_mission,"mt_ai_training"),
           (jump_to_scene,"scn_quick_battle_scene_2"),(change_screen_mission)
		]
       ),
      ("quick_battle_scene_3",[],"{!}quick_battle_scene_3",
       [
           (set_jump_mission,"mt_ai_training"),
           (jump_to_scene,"scn_quick_battle_scene_3"),(change_screen_mission)
		]
       ),
      ("quick_battle_scene_4",[],"{!}quick_battle_scene_4",
       [
           (set_jump_mission,"mt_ai_training"),
           (jump_to_scene,"scn_quick_battle_scene_4"),(change_screen_mission)
		]
       ),
      ("quick_battle_scene_5",[],"{!}quick_battle_scene_5",
       [
           (set_jump_mission,"mt_ai_training"),
           (jump_to_scene,"scn_quick_battle_scene_5"),(change_screen_mission)
		]
       ),

      ("go_back",[],"{!}Go back",
       [(change_screen_quit),
        ]
       ),
      ]
  ),


  (
    "custom_battle_end",mnf_disable_all_keys,
    "The battle is over. {s1} Your side killed {reg5} enemies and lost {reg6} troops over the battle. You personally slew {reg7} men in the fighting.",
    "none",
    [(music_set_situation, 0),
     (assign, reg5, "$g_custom_battle_team2_death_count"),
     (assign, reg6, "$g_custom_battle_team1_death_count"),
     (get_player_agent_kill_count, ":kill_count"),
     (get_player_agent_kill_count, ":wound_count", 1),
     (store_add, reg7, ":kill_count", ":wound_count"),
     (try_begin),
       (eq, "$g_battle_result", 1),
       (str_store_string, s1, "str_battle_won"),
     (else_try),
       (str_store_string, s1, "str_battle_lost"),
     (try_end),

     (try_begin),
       (ge, "$g_custom_battle_team2_death_count", 100),
       (unlock_achievement, ACHIEVEMENT_LOOK_AT_THE_BONES),
     (try_end),
     ],
    [
      ("continue",[],"Continue...",
       [(change_screen_quit),
        ]
       ),
    ]
  ),

  ("start_game_1",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Select your character's gender.",
    "none",
##diplomacy start+ Reset prejudice preferences
    [
        (assign, "$g_disable_condescending_comments", 0),
    ],
##diplomacy end+
    [
#       ("start_male",[],"Male",
#        [
#          (troop_set_type,"trp_player", 0),
#          (assign,"$character_gender", tf_male),
#          (jump_to_menu,"mnu_start_character_1"),
#         ]
#        ),
#       ("start_female",[],"Female",
#        [
#          (troop_set_type, "trp_player", 1),
#          (assign, "$character_gender", tf_female),
# ##diplomacy start+
# #Jump to the prejudice-level menu instead
# #         (jump_to_menu, "mnu_start_character_1"),
#          (jump_to_menu, "mnu_dplmc_start_select_prejudice"),
# ##diplomacy end+
#        ]
#        ),
	  ("go_back",[],"Go back",
       [
	     (jump_to_menu,"mnu_start_game_0"),
       ]),
    ]
  ),

#   (
#     "start_character_1",mnf_disable_all_keys,
#     "You were born years ago, in a land far away. Your father was...",
#     "none",
#     [
#     (str_clear,s10),
#     (str_clear,s11),
#     (str_clear,s12),
#     (str_clear,s13),
#     (str_clear,s14),
#     (str_clear,s15),
#     (assign, reg11, "$character_gender"), #SB : every string now uses reg11 for daughter/son boy/girl etc
#     ],
#     [


#     ("start_noble",[],"An impoverished landowner.",[
#         (assign,"$background_type",cb_noble),
#         (str_store_string,s10,"str_story_parent_noble"),
#         (jump_to_menu,"mnu_start_character_2"),
#     ]),
#     ("start_merchant",[],"A travelling merchant.",[
#         (assign,"$background_type",cb_merchant),
#         (str_store_string,s10,"str_story_parent_merchant"),
#         (jump_to_menu,"mnu_start_character_2"),
#     ]),
#     ("start_guard",[],"A veteran warrior.",[
#         (assign,"$background_type",cb_guard),
#         (str_store_string,s10,"str_story_parent_guard"),
#         (jump_to_menu,"mnu_start_character_2"),
#     ]),
#     ("start_forester",[],"A hunter.",[
#         (assign,"$background_type",cb_forester),
#         (str_store_string,s10,"str_story_parent_forester"),
#         (jump_to_menu,"mnu_start_character_2"),
#     ]),
#     ("start_nomad",[],"A steppe nomad.",[
#         (assign,"$background_type",cb_nomad),
#         (str_store_string,s10,"str_story_parent_nomad"),
#         (jump_to_menu,"mnu_start_character_2"),
#     ]),
#     ("start_thief",[],"A thief.",[
#         (assign,"$background_type",cb_thief),
#         (str_store_string,s10,"str_story_parent_thief"),
#         (jump_to_menu,"mnu_start_character_2"),
#     ]),
#     #SB: could say "Your father was... The Church" instead of "A Priest/s"
#     ("start_priest",[],"A fleeting memory.",[
#         (assign,"$background_type",cb_priest),
#         (str_store_string,s10,"str_story_parent_priest"),
#         (jump_to_menu,"mnu_start_character_2"),
#     ]),
#     ("go_back",[],"Go back",
#      [(jump_to_menu,"mnu_start_game_1"),
#     ]),
#     ]
#   ),
#   (
#     "start_character_2",0,
#     "{s10}^^ You started to learn about the world almost as soon as you could walk and talk. You spent your early life as...",
#     "none",
#     [],
#     [
#       ("page",[
#           ],"A noble's acolyte.",[
#             (assign,"$background_answer_2", cb2_page),
#             (str_store_string,s11,"str_story_childhood_page"),
#             (jump_to_menu,"mnu_start_character_3"),
#         ]),
#       ("apprentice",[
#           ],"A craftsman's apprentice.",[
#             (assign,"$background_answer_2", cb2_apprentice),
#             (str_store_string,s11,"str_story_childhood_apprentice"),
#             (jump_to_menu,"mnu_start_character_3"),
#         ]),
#       ("stockboy",[
#           ],"A shop assistant.",[
#             (assign,"$background_answer_2",cb2_merchants_helper),
#             (str_store_string,s11,"str_story_childhood_stockboy"),
#             (jump_to_menu,"mnu_start_character_3"),
#         ]),
#       ("urchin",[
#           ],"A street urchin.",[
#             (assign,"$background_answer_2",cb2_urchin),
#             (str_store_string,s11,"str_story_childhood_urchin"),
#             (jump_to_menu,"mnu_start_character_3"),
#         ]),
#       ("nomad",[
#           ],"A steppe child.",[
#             (assign,"$background_answer_2",cb2_steppe_child),
#             (str_store_string,s11,"str_story_childhood_nomad"),
#             (jump_to_menu,"mnu_start_character_3"),
#         ]),

#         #SB : standardize strings as prompted
# #     ("mummer",[],"A thespian.",[
# #            (assign,"$background_answer_2",dplmc_cb2_mummer),
# #            (str_store_string,s11,"str_story_childhood_mummer"),
# #            (jump_to_menu,"mnu_start_character_3"),
# #        ]),
# #     ("courtier",[],"An advisor's student.",[
# #            (assign,"$background_answer_2",dplmc_cb2_courtier),
# #            (str_store_string,s11,"str_story_childhood_courtier"),
# #            (jump_to_menu,"mnu_start_character_3"),
# #        ]),
#         #SB : conditional of parents being noble
#      ("noble",[ #"Noble in Training" is vaguely similar to role of courtier/page,
#         #we pretend this means you were not fostered but rather educated in-situ
#         (eq, "$background_type", cb_noble),
#         ],"An unexpected heir.",[
#             (assign,"$background_answer_2",dplmc_cb2_noble),
#             (str_store_string,s11,"str_story_childhood_noble"),
#             (jump_to_menu,"mnu_start_character_3"),
#         ]),
#      ("acolyte",[],"A cleric acolyte.",[
#             (assign,"$background_answer_2",dplmc_cb2_acolyte),
#             (str_store_string,s11,"str_story_childhood_acolyte"),
#             (jump_to_menu,"mnu_start_character_3"),
#         ]),
#       ("go_back",[],"Go back.",
#      [(jump_to_menu,"mnu_start_character_1"),
#     ]),
#     ]
#   ),
#   (
#     "start_character_3",mnf_disable_all_keys,
#     "As a {reg11?girl:boy} growing out of childhood, {s11}^^ Then, as a young adult, life changed as it always does. You became...",
#     "none",
#     [],
#     [
#     #SB : maybe restrict these two by gender like squire?
# #     ("bravo",[],"A bravo.",[
# #       (assign,"$background_answer_3",dplmc_cb3_bravo),
# #     (str_store_string,s12,"str_story_job_bravo"),
# #	(jump_to_menu,"mnu_start_character_4"),
# #       ]),
#      ("merc",[],"A mercenary.",[
#        (assign,"$background_answer_3",dplmc_cb3_merc),
#      (str_store_string,s12,"str_story_job_merc"),
# 	(jump_to_menu,"mnu_start_character_4"),
#        ]),
#       ("squire",[(eq,"$character_gender",tf_male)],"A retainer.",[
#         (assign,"$background_answer_3",cb3_troubadour), #changed initial start up equipment
#       (str_store_string,s12,"str_story_job_squire"),
# 	(jump_to_menu,"mnu_start_character_4"),
#         ]),
#       ("lady",[(eq,"$character_gender",tf_female)],"A servant woman.",[
#         (assign,"$background_answer_3",cb3_lady_in_waiting),
#       (str_store_string,s12,"str_story_job_lady"),
# 	(jump_to_menu,"mnu_start_character_4"),
#         ]),
# #      ("troubadour",[],"A poet.",[
# #        (assign,"$background_answer_3",cb3_troubadour),
# #      (str_store_string,s12,"str_story_job_troubadour"),
# #	(jump_to_menu,"mnu_start_character_4"),
# #        ]),
#       ("student",[],"A philosophy student.",[
#         (assign,"$background_answer_3",cb3_student),
#       (str_store_string,s12,"str_story_job_student"),
# 	(jump_to_menu,"mnu_start_character_4"),
#         ]),
#       ("peddler",[],"A goods peddler.",[
#         (assign,"$background_answer_3",cb3_peddler),
#       (str_store_string,s12,"str_story_job_peddler"),
# 	(jump_to_menu,"mnu_start_character_4"),
#         ]),
#       ("craftsman",[],"A smith.",[
#         (assign,"$background_answer_3", cb3_craftsman),
#       (str_store_string,s12,"str_story_job_craftsman"),
# 	(jump_to_menu,"mnu_start_character_4"),
#         ]),
#       ("poacher",[],"A hunter.",[
#         (assign,"$background_answer_3", cb3_poacher),
#       (str_store_string,s12,"str_story_job_poacher"),
# 	(jump_to_menu,"mnu_start_character_4"),
#         ]),
#      ("preacher",[],"An itinerant preacher.",[
#        (assign,"$background_answer_3", dplmc_cb3_preacher),
#      (str_store_string,s12,"str_story_job_preacher"),
# 	(jump_to_menu,"mnu_start_character_4"),
#        ]),
#       ("go_back",[],"Go back.",
#        [(jump_to_menu,"mnu_start_character_2"),
#         ]
#        ),
#     ]
#   ),

#   (
#     "start_character_4",mnf_disable_all_keys,
#     "Though the distinction felt sudden to you, somewhere along the way you had become a {reg11?woman:man}, and the whole world seemed to change around you.\
#  {s12}^^But soon everything changed and you decided to strike out on your own as an adventurer. What made you take this decision was...",
#     #Finally, what made you decide to strike out on your own as an adventurer?",
#     "none",
#     [],
#     [
#       ("revenge",[],"Personal revenge.",[
#         (assign,"$background_answer_4", cb4_revenge),
#         (str_store_string,s13,"str_story_reason_revenge"),
#         (jump_to_menu,"mnu_choose_skill"),
#         ]),
#       ("death",[],"The loss of a loved one.",[
#         (assign,"$background_answer_4",cb4_loss),
#         (str_store_string,s13,"str_story_reason_death"),
#         (jump_to_menu,"mnu_choose_skill"),
#         ]),
#       ("wanderlust",[],"Wanderlust.",[
#         (assign,"$background_answer_4",cb4_wanderlust),
#         (str_store_string,s13,"str_story_reason_wanderlust"),
#         (jump_to_menu,"mnu_choose_skill"),
#         ]),
#         #SB : condition of at least one priestly background
#      ("fervor",[
#         (this_or_next|eq, "$background_type", cb_priest),
#         (eq, "$background_answer_2", dplmc_cb2_acolyte),
#      ],"Religious fervor.",[
#         (assign,"$background_answer_4",dplmc_cb4_fervor),
#         (str_store_string,s13,"str_story_reason_fervor"),
#         (jump_to_menu,"mnu_choose_skill"),
#        ]),
#       ("disown",[],"Being forced out of your home.",[
#         (assign,"$background_answer_4",cb4_disown),
#         (str_store_string,s13,"str_story_reason_disown"),
#         (jump_to_menu,"mnu_choose_skill"),
#         ]),
#      ("greed",[],"Lust for money and power.",[
#         (assign,"$background_answer_4",cb4_greed),
#         (str_store_string,s13,"str_story_reason_greed"),
#         (jump_to_menu,"mnu_choose_skill"),
# #        (jump_to_menu,"mnu_choose_skill"),
#         ]),
#       ("go_back",[],"Go back.",
#        [(jump_to_menu,"mnu_start_character_3"),
#         ]
#        ),
#     ]
#   ),
("choose_skill",mnf_disable_all_keys,
    "You have made some choices. You will not be able to change them later after the game starts. Would you like to keep them and continue?",
    "none",
    [
      (try_begin),
          (eq, "$background_type", cb_noble),
          (neg|troop_slot_ge, "trp_player", slot_troop_banner_scene_prop, 1),
          (assign, "$g_presentation_next_presentation", -1),
          (start_presentation, "prsnt_banner_selection"),
      (try_end),
      (try_begin),
          (is_edit_mode_enabled),
          (display_message, "@WARNING: EDIT MODE IS ENABLED", message_alert),
      (try_end),
      (try_begin),
          (is_cheat_mode_enabled),
          (display_message, "@cheats are enabled, PILOS is watching", message_negative),
      (try_end),
    ],
    [
    ("go_back_dot",[],"Continue.",[
      (change_screen_return),
      ]),
    ("go_back_dot",[],"Return to main menu.",[
      (change_screen_quit),
      ]),
]),

  (
    "past_life_explanation",mnf_disable_all_keys,
    "{s3}",
    "none",
    [
     (try_begin),
       (gt,"$current_string_reg",14),
       (assign,"$current_string_reg",10),
     (try_end),
     (str_store_string_reg,s3,"$current_string_reg"),
     (try_begin),
       (ge,"$current_string_reg",14),
       (str_store_string,s5,"@Back to the beginning..."),
     (else_try),
       (str_store_string,s5,"@View next segment..."),
     (try_end),
     ],
    [
      ("view_next",[],"{s5}",[
        (val_add,"$current_string_reg",1),
        (jump_to_menu, "mnu_past_life_explanation"),
        ]),
      ("continue",[],"Continue...",
       [
        ]),
      ("go_back_dot",[],"Go back.",[
        (jump_to_menu, "mnu_choose_skill"),
        ]),
    ]
  ),

  (
    "auto_return",0,
    "{!}This menu automatically returns to caller.",
    "none",
    [(change_screen_return, 0)],
    [
    ]
  ),
  ("morale_report",0,
   "{s1}",
   "none",
   [
     (call_script, "script_get_player_party_morale_values"),

     (assign, ":target_morale", reg0),
     (assign, reg1, "$g_player_party_morale_modifier_party_size"),
     (try_begin),
       (gt, reg1, 0),
       (str_store_string, s2, "@{!} -"),
     (else_try),
       (str_store_string, s2, "str_space"),
     (try_end),

     (assign, reg2, "$g_player_party_morale_modifier_leadership"),
     (try_begin),
       (gt, reg2, 0),
       (str_store_string, s3, "@{!} +"),
     (else_try),
       (str_store_string, s3, "str_space"),
     (try_end),

     (try_begin),
       (gt, "$g_player_party_morale_modifier_no_food", 0),
       (assign, reg7, "$g_player_party_morale_modifier_no_food"),
       (str_store_string, s5, "@^No food:  -{reg7}"),
     (else_try),
       (str_store_string, s5, "str_space"),
     (try_end),
     (assign, reg3, "$g_player_party_morale_modifier_food"),
     (try_begin),
       (gt, reg3, 0),
       (str_store_string, s4, "@{!} +"),
     (else_try),
       (str_store_string, s4, "str_space"),
     (try_end),

     (try_begin),
       (gt, "$g_player_party_morale_modifier_debt", 0),
       (assign, reg6, "$g_player_party_morale_modifier_debt"),
       (str_store_string, s6, "@^Wage debt:  -{reg6}"),
     (else_try),
       (str_store_string, s6, "str_space"),
     (try_end),

     (party_get_morale, reg5, "p_main_party"),
     (store_sub, reg4, reg5, ":target_morale"),
     (try_begin),
       (gt, reg4, 0),
       (str_store_string, s7, "@{!} +"),
     (else_try),
       (str_store_string, s7, "str_space"),
     (try_end),

#     (assign, reg2, "$g_player_party_morale_modifier_special_items"),
#     (try_begin),
#       (gt, reg2, 0),
#       (str_store_string, s3, "@{!} +"),
#     (else_try),
#       (str_store_string, s3, "str_space"),
#     (try_end),

     (assign, reg6, 50),

     (str_store_string, s1, "str_current_party_morale_is_reg5_current_party_morale_modifiers_are__base_morale__50_party_size_s2reg1_leadership_s3reg2_food_variety_s4reg3s5s6_recent_events_s7reg4_total__reg5___"),

     (try_for_range, ":kingdom_no", npc_kingdoms_begin, npc_kingdoms_end),
       (faction_get_slot, ":faction_morale", ":kingdom_no",  slot_faction_morale_of_player_troops),
       (store_div, ":value", ":faction_morale", 100),
       (neq, ":value", 0),
       (assign, reg6, ":value"),
       #SB : show decimal values
       (store_mod, reg7, ":faction_morale", 100),
       (val_abs, reg7),
       (str_store_faction_name, s9, ":kingdom_no"),
       (str_store_string, s1, "str_s1extra_morale_for_s9_troops__reg6_"),
       (store_sub, ":faction_offset", ":kingdom_no", kingdoms_begin), #SB : add one to index to not override default string
       (add_info_page_note_from_sreg, ip_morale, ":faction_offset", "@Morale for {s9} troops: {reg6}", 0),
     (try_end),
    ],
    [
      ("continue",[],"Continue...",
      [
        (jump_to_menu, "mnu_reports"),
      ]),
    ]
  ),


  ("courtship_relations",0,
   "{s1}",
   "none",
   [(str_store_string, s1, "str_courtships_in_progress_"),
    (try_for_range, ":lady", kingdom_ladies_begin, kingdom_ladies_end),
		(troop_slot_eq, ":lady", slot_troop_met, 2),
		(call_script, "script_troop_get_relation_with_troop", "trp_player", ":lady"),
		(gt, reg0, 0),
		(assign, reg3, reg0),

		(str_store_troop_name, s2, ":lady"),

		(store_current_hours, ":hours_since_last_visit"),
		(troop_get_slot, ":last_visit_hour", ":lady", slot_troop_last_talk_time),
		(val_sub, ":hours_since_last_visit", ":last_visit_hour"),
		(store_div, ":days_since_last_visit", ":hours_since_last_visit", 24),
		(assign, reg4, ":days_since_last_visit"),

		(str_store_string, s1, "str_s1_s2_relation_reg3_last_visit_reg4_days_ago"),
	(try_end),

	(str_store_string, s1, "str_s1__poems_known"),
	(try_begin),
		 (gt, "$allegoric_poem_recitations", 0),
		 (str_store_string, s1, "str_s1_storming_the_castle_of_love_allegoric"),
	(try_end),
	(try_begin),
		 (gt, "$tragic_poem_recitations", 0),
		 (str_store_string, s1, "str_s1_kais_and_layali_tragic"),
	(try_end),
	(try_begin),
		 (gt, "$comic_poem_recitations", 0),
		 (str_store_string, s1, "str_s1_a_conversation_in_the_garden_comic"),
	(try_end),
	(try_begin),
		 (gt, "$heroic_poem_recitations", 0),
		 (str_store_string, s1, "str_s1_helgered_and_kara_epic"),
	(try_end),
	(try_begin),
		 (gt, "$mystic_poem_recitations", 0),
		 (str_store_string, s1, "str_s1_a_hearts_desire_mystic"),
	(try_end),

    ],
    [
      ("continue",[],"Continue...",
       [(jump_to_menu, "mnu_reports"),
        ]
       ),
      ]
  ),


  ("lord_relations",0,
   "{s1}",
   "none",
   [
    ##diplomacy start+
	 #Avoid unnecessary iterations, since below we only use slto_kingdom_hero troops.
    (assign, ":met_lord_count", 0),
    #Add support for promoted kingdom ladies.
    #(try_for_range, ":active_npc", active_npcs_begin, active_npcs_end),
    (try_for_range, ":active_npc", heroes_begin, heroes_end),
      (troop_slot_eq, ":active_npc", slot_troop_occupation, slto_kingdom_hero),
      (troop_slot_ge, ":active_npc", slot_troop_met, 1),
      (val_add, ":met_lord_count", 1),
    ##diplomacy end+
		(troop_set_slot, ":active_npc", slot_troop_temp_slot, 0),
	(try_end),

	(str_clear, s1),
    ##diplomacy start+
    #Add support for promoted kingdom ladies.
    #(try_for_range, ":unused", active_npcs_begin, active_npcs_end),#<- changed
    #We counted the number of heroes, so we can cut down on the number of
    #iterations (since expanding this from active_npcs to heroes means that
    #a lot of them will not be lords).
    (try_for_range, ":unused", 0, ":met_lord_count"),#<- added
		(assign, ":score_to_beat", -100),
		(assign, ":best_relation_remaining_npc", -1),
		#Add support for promoted kingdom ladies
		#(try_for_range, ":active_npc", active_npcs_begin, active_npcs_end),#<-changed
		(try_for_range, ":active_npc", heroes_begin, heroes_end),#<-added
	##diplomacy end+
			(troop_slot_eq, ":active_npc", slot_troop_temp_slot, 0),
			(troop_slot_eq, ":active_npc", slot_troop_occupation, slto_kingdom_hero),
			(troop_slot_ge, ":active_npc", slot_troop_met, 1),

			(call_script, "script_troop_get_player_relation", ":active_npc"),
			(assign, ":relation_with_player", reg0),
			(ge, ":relation_with_player", ":score_to_beat"),

			(assign, ":score_to_beat", ":relation_with_player"),
			(assign, ":best_relation_remaining_npc", ":active_npc"),
		(try_end),
		(gt, ":best_relation_remaining_npc", -1),

		(str_store_troop_name_link, s4, ":best_relation_remaining_npc"),
		(assign, reg4, ":score_to_beat"),
		(str_store_string, s1, "@{!}{s1}^{s4}: {reg4}"),
		(troop_set_slot, ":best_relation_remaining_npc", slot_troop_temp_slot, 1),
	(try_end),


    ],
    [
      ("continue",[],"Continue...",
       [(jump_to_menu, "mnu_reports"),
        ]
       ),
      ]
  ),



  ("companion_report",0,
   "{s7}{s2}",
   "none",
  [
  (str_clear, s1),
  (str_clear, s2),
  (str_store_string, s7, "str_no_companions_in_service"),

  (try_begin),
    (troop_get_slot, ":spouse_or_betrothed", "trp_player", slot_troop_spouse),
    (try_begin),
      ##diplomacy start+ Test gender with script
      #(troop_get_type, ":is_female", "trp_player"),#<- replaced
      (call_script, "script_cf_dplmc_troop_is_female", "trp_player"),
      #(eq, ":is_female", 1),#<- replaced
      ##diplomacy end+
      (str_store_string, s8, "str_husband"),
    (else_try),
      (str_store_string, s8, "str_wife"),
    (try_end),

    (try_begin),
      (le, ":spouse_or_betrothed", 0),
      (troop_get_slot, ":spouse_or_betrothed", "trp_player", slot_troop_betrothed),
      (str_store_string, s8, "str_betrothed"),
    (try_end),
    (gt, ":spouse_or_betrothed", 0),

    (str_store_troop_name, s4, ":spouse_or_betrothed"),
    (troop_get_slot, ":cur_center", ":spouse_or_betrothed", slot_troop_cur_center),
    (try_begin), #SB : in your party
      (main_party_has_troop, ":spouse_or_betrothed"),
      (str_store_string, s5, "str_in_your_party"),
    (else_try), #shopping for bread
      (store_num_parties_of_template, ":num_bread", "pt_dplmc_spouse"),
      (gt, ":num_bread", 0),
      (str_store_string, s5, "str_expected_back_imminently"),
    (else_try),
      (is_between, ":cur_center", centers_begin, centers_end),
      (str_store_party_name, s5, ":cur_center"),
    (else_try),
      (troop_slot_eq, ":spouse_or_betrothed", slot_troop_occupation, slto_kingdom_hero),
      (str_store_string, s5, "str_leading_party"),
    (else_try),
      (str_store_string, s5, "str_whereabouts_unknown"),
    (try_end),
    (str_store_string, s3, "str_s4_s8_s5"),
    # (str_store_string, s2, s1),
    (str_store_string, s2, "str_s2_s3"),
  (try_end),


  (try_begin),
    (ge, "$cheat_mode", 1),
    (gt, "$npc_to_rejoin_party", 0), #SB : ge -> gt
    (str_store_troop_name, s5, "$npc_to_rejoin_party"),
    (str_store_string, s1, s2),
    (str_store_string, s2, "@{!}DEBUG -- {s1}^NPC in rejoin queue: {s5}^"),
  (try_end),


   (try_for_range, ":companion", companions_begin, companions_end),
		# (str_clear, s2),
		(str_clear, s3),

		(try_begin),
			# (troop_get_slot, ":days_left", ":companion", slot_troop_days_on_mission),

			(troop_slot_eq, ":companion", slot_troop_occupation, slto_player_companion),
            #SB : replace the call
            (call_script, "script_companion_get_mission_string", ":companion"),


			# (str_store_troop_name, s4, ":companion"),

			# (try_begin),
				# (troop_slot_eq, ":companion", slot_troop_current_mission, npc_mission_kingsupport),
				# (str_store_string, s8, "str_gathering_support"),
				# (try_begin),
					# (eq, ":days_left", 1),
					# (str_store_string, s5, "str_expected_back_imminently"),
				# (else_try),
					# (assign, reg3, ":days_left"),
					# (str_store_string, s5, "str_expected_back_in_approximately_reg3_days"),
				# (try_end),
			# (else_try),
				# (troop_slot_eq, ":companion", slot_troop_current_mission, npc_mission_gather_intel),
				# (troop_get_slot, ":town_with_contacts", ":companion", slot_troop_town_with_contacts),
				# (str_store_party_name, s11, ":town_with_contacts"),

				# (str_store_string, s8, "str_gathering_intelligence"),
				# (try_begin),
					# (eq, ":days_left", 1),
					# (str_store_string, s5, "str_expected_back_imminently"),
				# (else_try),
					# (assign, reg3, ":days_left"),
					# (str_store_string, s5, "str_expected_back_in_approximately_reg3_days"),
				# (try_end),
			# (else_try),	#This covers most diplomatic missions

				# (troop_slot_ge, ":companion", slot_troop_current_mission, npc_mission_peace_request),
				# ##diplomacy begin
				# (neg|troop_slot_eq, ":companion", slot_troop_current_mission, npc_mission_rejoin_when_possible), #SB : replace hard constant 8
        		# ##diplomacy end

				# (troop_get_slot, ":faction", ":companion", slot_troop_mission_object),
				# (str_store_faction_name, s9, ":faction"),
				# (str_store_string, s8, "str_diplomatic_embassy_to_s9"),
				# (try_begin),
					# (eq, ":days_left", 1),
					# (str_store_string, s5, "str_expected_back_imminently"),
				# (else_try),
					# (assign, reg3, ":days_left"),
					# (str_store_string, s5, "str_expected_back_in_approximately_reg3_days"),
				# (try_end),
			# (else_try),
				# (eq, ":companion", "$g_player_minister"),
				# (str_store_string, s8, "str_serving_as_minister"),
				# (try_begin),
					# (is_between, "$g_player_court", centers_begin, centers_end),
					# (str_store_party_name, s9, "$g_player_court"),
					# (str_store_string, s5, "str_in_your_court_at_s9"),
				# (else_try),
					# (str_store_string, s5, "str_whereabouts_unknown"),
				# (try_end),
			# (else_try),
				# (main_party_has_troop, ":companion"),
				# (str_store_string, s8, "str_under_arms"),
				# (str_store_string, s5, "str_in_your_party"),
			# (else_try),
				# (troop_slot_eq, ":companion", slot_troop_current_mission, npc_mission_rejoin_when_possible),
				# (str_store_string, s8, "str_attempting_to_rejoin_party"),
				# (str_store_string, s5, "str_whereabouts_unknown"),
			# (else_try),	#Companions who are in a center
				# (troop_slot_ge, ":companion", slot_troop_cur_center, 1),

				# (str_store_string, s8, "str_separated_from_party"),
				# (str_store_string, s5, "str_whereabouts_unknown"),
			# (else_try), #Excludes companions who have occupation = retirement
				# (try_begin),
					# (check_quest_active, "qst_lend_companion"),
					# (quest_slot_eq, "qst_lend_companion", slot_quest_target_troop, ":companion"),
					# (str_store_string, s8, "@On loan,"),
				# (else_try),
					# (check_quest_active, "qst_lend_surgeon"),
					# (quest_slot_eq, "qst_lend_surgeon", slot_quest_target_troop, ":companion"),
					# (str_store_string, s8, "@On loan,"),
				# (else_try),
					# (troop_set_slot, ":companion", slot_troop_current_mission, npc_mission_rejoin_when_possible),
					# (str_store_string, s8, "str_attempting_to_rejoin_party"),
				# (try_end),
				# (str_store_string, s5, "str_whereabouts_unknown"),

				(try_begin),
					(ge, "$cheat_mode", 1),
					(troop_get_slot, reg2, ":companion", slot_troop_current_mission),
					(troop_get_slot, reg3, ":companion", slot_troop_days_on_mission),
					(troop_get_slot, reg4, ":companion", slot_troop_prisoner_of_party),
					(troop_get_slot, reg4, ":companion", slot_troop_playerparty_history),

					(display_message, "@{!}DEBUG: {s4} current mission: {reg2}, days on mission: {reg3}, prisoner: {reg4}, pphistory: {reg5}"),
				(try_end),
			# (try_end),

			# (str_store_string, s3, "str_s4_s8_s5"),

			# (str_store_string, s2, s1),
            (str_store_string_reg, s3, s0),
			(str_store_string, s2, "str_s2_s3"),

			(str_clear, s7), #"no companions in service"
		# (else_try),
			# (neg|troop_slot_eq, ":companion", slot_troop_occupation, slto_kingdom_hero),
			# (troop_slot_ge, ":companion", slot_troop_prisoner_of_party, centers_begin),

			# (str_store_troop_name, s4, ":companion"),
			# (str_store_string, s8, "str_missing_after_battle"),
			# (str_store_string, s5, "str_whereabouts_unknown"),

			# (str_store_string, s3, "str_s4_s8_s5"),
			# (str_store_string, s2, s1),
			# (str_store_string, s1, "str_s2_s3"),
			# (str_clear, s7), #"no companions in service"

		(try_end),

   (try_end),


    ],
    [

    #SB : start commander presentation
      ("start",[],"Companion Overview...",
       [
        # (assign, "$g_player_troop", "trp_player"),
        #clear troop's temp slots for presentation
        (try_for_range, ":stack_troop", active_npcs_including_player_begin, companions_end),
          (troop_set_slot, ":stack_troop", dplmc_slot_troop_temp_slot, 0),
        (try_end),
        (troop_set_slot, "trp_player", dplmc_slot_troop_temp_slot, 0),
        #assign first companion to be selected
        # (party_get_num_companion_stacks, ":end", "p_main_party"),
        # (try_for_range, ":stack_no", 1, ":end"),
          # (party_stack_get_troop_id, ":troop_no", "p_main_party", ":stack_no"),
          # (is_between, ":troop_no", companions_begin, companions_end),
          # (assign, "$g_player_troop", ":troop_no"),
          # (assign, ":end", -1),
        # (try_end),
        # (set_player_troop, "$g_player_troop"),

        #To do : add $supported_pretender and/or spouse in two placeholder troops before active_npcs
        (start_presentation, "prsnt_companion_overview"),
        ]
       ),

      ("continue",[],"Continue...",
       [(jump_to_menu, "mnu_reports"),
        #SB : fix globals
        (assign, "$g_player_troop", "trp_player"),
        (set_player_troop, "$g_player_troop"),
        ]
       ),
    ]
  ),





  ("faction_orders",0,
   "{!}{s9}",
   "none",
   [
    (str_clear, s9),
    (store_current_hours, ":cur_hours"),
    (try_for_range, ":faction_no", kingdoms_begin, kingdoms_end),
        (faction_slot_eq, ":faction_no", slot_faction_state, sfs_active),
        (neq, ":faction_no", "fac_player_supporters_faction"),

        (faction_get_slot, ":old_faction_ai_state", ":faction_no", slot_faction_ai_state),

	    (try_begin),
			(faction_get_slot, ":faction_marshal", ":faction_no", slot_faction_marshall),
			(gt, ":faction_marshal", -1),
			(assign, ":faction_ai_decider", ":faction_marshal"),
	    (else_try),
			(faction_get_slot, ":faction_ai_decider", ":faction_no", slot_faction_leader),
	    (try_end),


        #(*1) these two lines moved to here from (*2)
        (call_script, "script_npc_decision_checklist_faction_ai_alt", ":faction_ai_decider"),
	    (assign, ":new_strategy", reg0),
	    (str_store_string, s26, s14),

        #(3*) these three lines moved to here from (*4)
        (faction_get_slot, ":faction_ai_state", ":faction_no", slot_faction_ai_state),
        (faction_get_slot, ":faction_ai_object", ":faction_no", slot_faction_ai_object),
        (faction_get_slot, ":faction_marshall", ":faction_no", slot_faction_marshall),

        (faction_get_slot, ":faction_ai_offensive_max_followers", ":faction_no", slot_faction_ai_offensive_max_followers),
        (str_store_faction_name, s10, ":faction_no"),

	   (try_begin),
			(faction_get_slot, ":faction_issue", ":faction_no", slot_faction_political_issue),

			(try_begin),
				(eq, ":faction_issue", 1),
				(str_store_string, s11, "@Appoint next marshal"),
			(else_try),
				(is_between, ":faction_issue", centers_begin, centers_end),
				(str_store_party_name, s12, ":faction_issue"),
				(str_store_string, s11, "@Award {s12} as fief"),
			(else_try),
				(eq, ":faction_issue", 0),
				(str_store_string, s11, "str_dplmc_none"),
			(else_try),
				(assign, reg3, ":faction_issue"),
				(str_store_string, s11, "@{!}Error ({reg3})"),
			(try_end),

			(store_current_hours, reg4),
			(faction_get_slot, ":faction_issue_put_on_agenda", ":faction_no", slot_faction_political_issue_time),
			(val_sub, reg4, ":faction_issue_put_on_agenda"),

	        (str_store_string, s10, "@{!}{s10}^Faction political issue: {s11}"),
			(try_begin),
				(faction_slot_ge, ":faction_no", slot_faction_political_issue, 1),
				(str_store_string, s10, "@{!}{s10} (on agenda {reg4} hours)"),
			(try_end),
	   (try_end),


       (assign, reg2, ":faction_ai_offensive_max_followers"),
       (try_begin),
         (eq, ":faction_ai_state", sfai_default),
         (str_store_string, s11, "@{!}Defending"),
       (else_try),
         (eq, ":faction_ai_state", sfai_gathering_army),
         (str_store_string, s11, "@{!}Gathering army"),
       (else_try),
         (eq, ":faction_ai_state", sfai_attacking_center),
         (str_store_party_name, s11, ":faction_ai_object"),
         (str_store_string, s11, "@{!}Besieging {s11}"),
       (else_try),
         (eq, ":faction_ai_state", sfai_raiding_village),
         (str_store_party_name, s11, ":faction_ai_object"),
         (str_store_string, s11, "@{!}Raiding {s11}"),
       (else_try),
         (eq, ":faction_ai_state", sfai_attacking_enemy_army),
         (str_store_party_name, s11, ":faction_ai_object"),
         (str_store_string, s11, "str_attacking_enemy_army_near_s11"),
       (else_try),
         (eq, ":faction_ai_state", sfai_feast),
         (str_store_party_name, s11, ":faction_ai_object"),
         (str_store_string, s11, "str_holding_feast_at_s11"),
	   (else_try),
         (eq, ":faction_ai_state", sfai_attacking_enemies_around_center),
         (str_store_party_name, s11, ":faction_ai_object"),
         (str_store_string, s11, "@{!}Attacking enemies around {s11}"),
       (else_try),
	     (assign, reg4, ":faction_ai_state"),
		 (str_store_string, s11, "str_sfai_reg4"),
	   (try_end),

       (try_begin),
         (lt, ":faction_marshall", 0),
         (str_store_string, s12, "@No one"),
       (else_try),
         (str_store_troop_name, s12, ":faction_marshall"),
		 (troop_get_slot, reg21, ":faction_marshall", slot_troop_controversy),
		 (str_store_string, s12, "@{!}{s12} (controversy: {reg21})"),
       (try_end),

	   (try_for_parties, ":screen_party"),
			(party_slot_eq, ":screen_party", slot_party_ai_state, spai_screening_army),
			(store_faction_of_party, ":screen_party_faction", ":screen_party"),
			(eq, ":screen_party_faction", ":faction_no"),

			(str_store_party_name, s38, ":screen_party"),
			(str_store_string, s12, "@{!}{s12}^Screening party: {s38}"),
	   (try_end),

       #(*2) these two lines moved to up (look *1)
	   #(call_script, "script_npc_decision_checklist_faction_ai", ":faction_no"),
	   #(assign, ":new_strategy", reg0),

       #(try_begin),
       #  (this_or_next|eq, ":new_strategy", sfai_default),
       #  (eq, ":new_strategy", sfai_feast),
	   #
	   #  (store_current_hours, ":hours"),
	   #  (faction_set_slot, ":faction_no", slot_faction_ai_last_rest_time, ":hours"),
	   #(try_end),
      (try_begin),
         #new condition to rest, (a faction's new strategy should be feast or default) and (":hours_at_current_state" > 20)
         (this_or_next|eq, ":new_strategy", sfai_default),
         (eq, ":new_strategy", sfai_feast),

         (store_current_hours, ":hours_at_current_state"),
         (faction_get_slot, ":current_state_started", ":faction_no", slot_faction_ai_current_state_started),
         (val_sub, ":hours_at_current_state", ":current_state_started"),
         (ge, ":hours_at_current_state", 18),

         (store_current_hours, ":hours"),
         (faction_set_slot, ":faction_no", slot_faction_ai_last_rest_time, ":hours"),
       (try_end),

        #Change of strategy
        (try_begin),
          (neq, ":new_strategy", ":old_faction_ai_state"),

          (store_current_hours, ":hours"),
          (faction_set_slot, ":faction_no", slot_faction_ai_current_state_started, ":hours"),
        (try_end),

	   (call_script, "script_evaluate_realm_stability", ":faction_no"),
	   (assign, ":disgruntled_lords", reg0),
	   (assign, ":restless_lords", reg1),

	   (faction_get_slot, ":last_feast_ended", ":faction_no", slot_faction_last_feast_start_time),
	   (store_sub, ":hours_since_last_feast", ":cur_hours", ":last_feast_ended"),
	   (val_sub, ":hours_since_last_feast", 72),

	   (faction_get_slot, ":current_state_started", ":faction_no", slot_faction_ai_current_state_started),
	   (store_sub, ":hours_at_current_state", ":cur_hours", ":current_state_started"),

       (faction_get_slot, ":faction_ai_last_offensive_time", ":faction_no", slot_faction_last_offensive_concluded),
       (store_sub, ":hours_since_last_offensive", ":cur_hours", ":faction_ai_last_offensive_time"),

       (faction_get_slot, ":faction_ai_last_rest", ":faction_no", slot_faction_ai_last_rest_time),
       (store_sub, ":hours_since_last_rest", ":cur_hours", ":faction_ai_last_rest"),

       (faction_get_slot, ":faction_ai_last_decisive_event", ":faction_no", slot_faction_ai_last_decisive_event),
       (store_sub, ":hours_since_last_decisive_event", ":cur_hours", ":faction_ai_last_decisive_event"),

	   (assign, reg3, ":hours_at_current_state"),
	   (assign, reg4, ":hours_since_last_offensive"),
	   (assign, reg5, ":hours_since_last_feast"),

	   (assign, reg7, ":disgruntled_lords"),
	   (assign, reg8, ":restless_lords"),
	   (assign, reg9, ":hours_since_last_rest"),
	   (assign, reg10, ":hours_since_last_decisive_event"),
	   (str_store_string, s14, s26),

       (str_store_string, s9, "str_s9s10_current_state_s11_hours_at_current_state_reg3_current_strategic_thinking_s14_marshall_s12_since_the_last_offensive_ended_reg4_hours_since_the_decisive_event_reg10_hours_since_the_last_rest_reg9_hours_since_the_last_feast_ended_reg5_hours_percent_disgruntled_lords_reg7_percent_restless_lords_reg8__"),
     (try_end),

     (try_begin),
       (neg|is_between, "$g_cheat_selected_faction", kingdoms_begin, kingdoms_end),
       (call_script, "script_get_next_active_kingdom", kingdoms_end),
       (assign, "$g_cheat_selected_faction", reg0),
     (try_end),
     (str_store_faction_name, s10, "$g_cheat_selected_faction"),
     (str_store_string, s9, "@Selected faction is: {s10}^^{s9}"),
    ],
    [
      ("faction_orders_next_faction", [],"{!}Select next faction.",
       [
         (call_script, "script_get_next_active_kingdom", "$g_cheat_selected_faction"),
         (assign, "$g_cheat_selected_faction", reg0),
         (jump_to_menu, "mnu_faction_orders"),
        ]
       ),

       #SB : debug slots
      ("faction_orders_slots", [],"{!}Debug slots.",
       [
         (assign, "$g_presentation_input", rename_kingdom),
         (assign, "$g_presentation_state", 0),
         (start_presentation, "prsnt_modify_slots"),
        ]
       ),

      ("faction_orders_political_collapse", [],"{!}CHEAT - Cause all lords in faction to fall out with their liege.",
       [
	   (try_for_range, ":lord", active_npcs_begin, active_npcs_end),
			(troop_slot_eq, ":lord", slot_troop_occupation, slto_kingdom_hero),
			(store_faction_of_troop, ":troop_faction", ":lord"),
			(eq, ":troop_faction", "$g_cheat_selected_faction"),
			(faction_get_slot, ":faction_liege", ":troop_faction", slot_faction_leader),
			(call_script, "script_troop_change_relation_with_troop", ":lord", ":faction_liege", -200),
	   (try_end),

	   ]
       ),

      ("faction_orders_defend", [],"{!}Force defend.",
       [
         (faction_set_slot, "$g_cheat_selected_faction", slot_faction_ai_state, sfai_default),
         (faction_set_slot, "$g_cheat_selected_faction", slot_faction_ai_object, -1),
         (jump_to_menu, "mnu_faction_orders"),
        ]
       ),
      ("faction_orders_feast", [],"{!}Force feast.",
       [

		 (assign, ":location_high_score", 0),
		 (try_for_range, ":location", walled_centers_begin, walled_centers_end),
			(neg|party_slot_ge, ":location", slot_center_is_besieged_by, 1),
			(store_faction_of_party, ":location_faction", ":location"),
			(eq, ":location_faction", "$g_cheat_selected_faction"),
			(party_get_slot, ":location_lord", ":location", slot_town_lord),
			(troop_get_slot, ":location_score", ":location_lord", slot_troop_renown),
			(store_random_in_range, ":random", 0, 1000), #will probably be king or senior lord
			(val_add, ":location_score", ":random"),
			(gt, ":location_score", ":location_high_score"),
			(assign, ":location_high_score", ":location_score"),
			(assign, ":location_feast", ":location"),
		 (try_end),

		 (try_begin),
			(gt, ":location_feast", centers_begin),
			(faction_set_slot, "$g_cheat_selected_faction", slot_faction_ai_state, sfai_feast),
			(faction_set_slot, "$g_cheat_selected_faction", slot_faction_ai_object, ":location_feast"),
			(try_begin),
			  (eq, "$g_player_eligible_feast_center_no", ":location_feast"),
			  (assign, "$g_player_eligible_feast_center_no", -1),
			(try_end),

			(store_current_hours, ":hours"),
			(faction_set_slot, "$g_cheat_selected_faction", slot_faction_last_feast_start_time, ":hours"),
		 (try_end),

	     (jump_to_menu, "mnu_faction_orders"),
        ]
       ),


      ("faction_orders_gather", [],"{!}Force gather army.",
       [
         (store_current_hours, ":cur_hours"),
         (faction_set_slot, "$g_cheat_selected_faction", slot_faction_ai_state, sfai_gathering_army),
         (faction_set_slot, "$g_cheat_selected_faction", slot_faction_last_offensive_concluded, ":cur_hours"),
         (faction_set_slot, "$g_cheat_selected_faction", slot_faction_ai_offensive_max_followers, 1),
         (faction_set_slot, "$g_cheat_selected_faction", slot_faction_ai_object, -1),
         (jump_to_menu, "mnu_faction_orders"),
        ]
       ),
      ("faction_orders_increase_time", [],"{!}Increase last offensive time by 24 hours.",
       [
         (faction_get_slot, ":faction_ai_last_offensive_time", "$g_cheat_selected_faction", slot_faction_last_offensive_concluded),
         (val_sub, ":faction_ai_last_offensive_time", 24),
         (faction_set_slot, "$g_cheat_selected_faction", slot_faction_last_offensive_concluded, ":faction_ai_last_offensive_time"),
         (jump_to_menu, "mnu_faction_orders"),
        ]
       ),
      ("faction_orders_rethink", [],"{!}Force rethink.",
       [
         (call_script, "script_init_ai_calculation"),
         (call_script, "script_decide_faction_ai", "$g_cheat_selected_faction"),
         (jump_to_menu, "mnu_faction_orders"),
        ]
       ),
      ("faction_orders_rethink_all", [],"{!}Force rethink for all factions.",
       [
         (call_script, "script_recalculate_ais"),
         (jump_to_menu, "mnu_faction_orders"),
        ]
       ),

	   # ("enable_alt_ai",[(eq, "$g_use_alternative_ai", 2),],"{!}CHEAT! - enable alternative ai",
       # [
	   # (assign, "$g_use_alternative_ai", 1),
	   # (jump_to_menu, "mnu_faction_orders"),
       # ]
       # ),

	   # ("disable_alt_ai",[(eq, "$g_use_alternative_ai", 2)],"{!}CHEAT! - disable alternative ai",
       # [
	   # (assign, "$g_use_alternative_ai", 0),
	   # (jump_to_menu, "mnu_faction_orders"),
       # ]
       # ),

       #SB : see if this works
     ("faction_orders_pretend", [],"{!}Restore pretender.",
       [
         # (call_script, "script_recalculate_ais"),
         (store_sub, "$supported_pretender", "$g_cheat_selected_faction", npc_kingdoms_begin),
         (val_add, "$supported_pretender", pretenders_begin),
         (assign, "$g_talk_troop", "$supported_pretender"),
         (party_add_members, "p_main_party", "$supported_pretender", 1),
         # (troop_get_slot, "$supported_pretender_old_faction", "$supported_pretender", slot_troop_original_faction),
         (assign, "$supported_pretender_old_faction", "$g_cheat_selected_faction"),
         (troop_set_faction, "$g_talk_troop", "fac_player_supporters_faction"),
         (faction_set_slot, "fac_player_supporters_faction", slot_faction_leader, "$supported_pretender"),
         (assign, "$g_talk_troop_faction", "fac_player_supporters_faction"),

         (quest_set_slot, "qst_rebel_against_kingdom", slot_quest_giver_troop, "$supported_pretender"),
         (quest_set_slot, "qst_rebel_against_kingdom", slot_quest_target_faction, "$supported_pretender_old_faction"),

         (str_store_faction_name_link, s14, "$supported_pretender_old_faction"),
         (str_store_troop_name_link, s13, "$supported_pretender"),
         (setup_quest_text,"qst_rebel_against_kingdom"),
         (str_store_string, s2, "@You promised to help {s13} claim the throne of {s14}."),
         (call_script, "script_start_quest", "qst_rebel_against_kingdom", "$supported_pretender"),

         #merge lords
         (try_begin),
           (eq, "$players_kingdom", "fac_player_supporters_faction"),
           (call_script, "script_deactivate_player_faction"),
           (try_for_range, ":npc", active_npcs_begin, active_npcs_end),
              (store_faction_of_troop, ":npc_faction", ":npc"),
              (eq, ":npc_faction", "fac_player_supporters_faction"),
              (troop_slot_eq, ":npc", slot_troop_occupation, slto_kingdom_hero),
              (call_script, "script_change_troop_faction", ":npc", "$g_talk_troop_faction"),
           (try_end),
         (try_end),

         (try_begin),
           (is_between, "$players_kingdom", kingdoms_begin, kingdoms_end),
           (neq, "$players_kingdom", "fac_player_supporters_faction"),
           (neq, "$players_kingdom", "$g_talk_troop_faction"), #ie, don't leave faction if the player is already part of the same kingdom

           (faction_get_slot, ":old_leader", "$players_kingdom", slot_faction_leader),
           (call_script, "script_add_log_entry", logent_renounced_allegiance,   "trp_player",  -1, ":old_leader", "$players_kingdom"),
           (call_script, "script_activate_player_faction", "$g_talk_troop"),
         (try_end),

         (call_script, "script_player_join_faction", "$g_talk_troop_faction"),

         (call_script, "script_add_notification_menu", "mnu_notification_faction_defeated", "$g_cheat_selected_faction", 0),
         (change_screen_return),
        ]
       ),
      ("faction_orders_init_econ", [],"{!}Initialize economic stats.",
       [
         (call_script, "script_initialize_economic_information"),
         (jump_to_menu, "mnu_faction_orders"),
        ]
       ),
       ("action_change_policies",
        [
        ],
        "{!}Change kingdom policies",
        [
        (assign, "$g_faction_selected", "$g_cheat_selected_faction"),
        (start_presentation, "prsnt_dplmc_policy_management"),]
       ),


      ("go_back_dot",[],"{!}Go back.",
       [(jump_to_menu, "mnu_reports"),
        ]
       ),
      ]
  ),


  ("character_report",0,
   "{s9}",
   "none",
   [(try_begin),
      (gt, "$g_player_reading_book", 0),
      (player_has_item, "$g_player_reading_book"),
      (str_store_item_name, s8, "$g_player_reading_book"),
      (str_store_string, s9, "@You are currently reading {s8}."),
    (else_try),
      (assign, "$g_player_reading_book", 0),
      (str_store_string, s9, "@You are not reading any books."),
    (try_end),
    (assign, ":num_friends", 0),
    (assign, ":num_enemies", 0),
    (str_store_string, s6, "str_dplmc_none"),
    (str_store_string, s8, "str_dplmc_none"),
    (try_for_range, ":troop_no", active_npcs_begin, active_npcs_end),
	  (this_or_next|troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
		(troop_slot_eq, ":troop_no", slot_troop_occupation, slto_inactive_pretender),
	  (call_script, "script_troop_get_player_relation", ":troop_no"),
      (assign, ":player_relation", reg0),
      #(troop_get_slot, ":player_relation", ":troop_no", slot_troop_player_relation),
      (try_begin),
        (gt, ":player_relation", 20),
        (try_begin),
          (eq, ":num_friends", 0),
          (str_store_troop_name, s8, ":troop_no"),
        (else_try),
          (eq, ":num_friends", 1),
          (str_store_troop_name, s7, ":troop_no"),
          (str_store_string, s8, "@{s7} and {s8}"),
        (else_try),
          (str_store_troop_name, s7, ":troop_no"),
          (str_store_string, s8, "@{!}{s7}, {s8}"),
        (try_end),
        (val_add, ":num_friends", 1),
      (else_try),
        (lt, ":player_relation", -20),
        (try_begin),
          (eq, ":num_enemies", 0),
          (str_store_troop_name, s6, ":troop_no"),
        (else_try),
          (eq, ":num_enemies", 1),
          (str_store_troop_name, s5, ":troop_no"),
          (str_store_string, s6, "@{s5} and {s6}"),
        (else_try),
          (str_store_troop_name, s5, ":troop_no"),
          (str_store_string, s6, "@{!}{s5}, {s6}"),
        (try_end),
        (val_add, ":num_enemies", 1),
      (try_end),
    (try_end),

	#lord recruitment changes begin
	(str_clear, s12),
	(try_begin),
		(gt, "$player_right_to_rule", 0),
		(assign, reg12, "$player_right_to_rule"),
		(str_store_string, s12, "str__right_to_rule_reg12"),
	(try_end),

	(str_clear, s15),
	(try_begin),
		(this_or_next|gt, "$claim_arguments_made", 0),
		(this_or_next|gt, "$ruler_arguments_made", 0),
		(this_or_next|gt, "$victory_arguments_made", 0),
		(this_or_next|gt, "$lords_arguments_made", 0),
		(eq, 1, 0),

		(assign, reg3, "$claim_arguments_made"),
		(assign, reg4, "$ruler_arguments_made"),
		(assign, reg5, "$victory_arguments_made"),
		(assign, reg6, "$lords_arguments_made"),
		(assign, reg7, "$benefit_arguments_made"),

		(str_store_string, s15, "str_political_arguments_made_legality_reg3_rights_of_lords_reg4_unificationpeace_reg5_rights_of_commons_reg6_fief_pledges_reg7"),
	(try_end),

	#lord recruitment changes begin

    (assign, reg3, "$player_honor"),
    (troop_get_slot, reg2, "trp_player", slot_troop_renown),

    (str_store_string, s9, "str_renown_reg2_honour_rating_reg3s12_friends_s8_enemies_s6_s9"),

    (call_script, "script_get_number_of_hero_centers", "trp_player"),
    (assign, ":no_centers", reg0),
    (try_begin),
      (gt, ":no_centers", 0),
      (try_for_range, ":i_center", 0, ":no_centers"),
        (call_script, "script_troop_get_leaded_center_with_index", "trp_player", ":i_center"),
        (assign, ":cur_center", reg0),
        (try_begin),
          (eq, ":i_center", 0),
          (str_store_party_name, s8, ":cur_center"),
        (else_try),
          (eq, ":i_center", 1),
          (str_store_party_name, s7, ":cur_center"),
          (str_store_string, s8, "@{s7} and {s8}"),
        (else_try),
          (str_store_party_name, s7, ":cur_center"),
          (str_store_string, s8, "@{!}{s7}, {s8}"),
        (try_end),
      (try_end),
      (str_store_string, s9, "@Your estates are: {s8}.^{s9}"),
    (try_end),
    (try_begin),
      (gt, "$players_kingdom", 0),

      (str_store_faction_name, s8, "$players_kingdom"),
      (try_begin),
	  ##diplomacy start+ Handle player is co-ruler of NPC faction
		(is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
		(call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$players_kingdom"),
		(ge, reg0, DPLMC_FACTION_STANDING_LEADER_SPOUSE),
		(str_store_string, s9, "str_you_are_king_queen_of_s8_s9"),
	  (else_try),
	  ##diplomacy end+
        (this_or_next|is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
        (neg|faction_slot_eq, "fac_player_supporters_faction", slot_faction_leader, "trp_player"),
        #(str_store_string, s9, "@You are a lord of {s8}.^{s9}"),
        (str_store_string, s9, "str_you_are_a_lord_lady_of_s8_s9"),
      (else_try),
        (str_store_string, s9, "str_you_are_king_queen_of_s8_s9"),
      (try_end),

    (try_end),
    ],
    [

	#lord recruitment changes begin

	("continue",[(eq,"$cheat_mode",1)],"{!}CHEAT! - increase Right to Rule",
       [
	   (val_add, "$player_right_to_rule", 10),
	   (jump_to_menu, "mnu_character_report"),
       ]
       ),


	("continue",[(eq,"$cheat_mode",1),
		(str_store_troop_name, s14, "$g_talk_troop"),
	],"{!}CHEAT! - increase your relation with {s14}",
       [
	   (call_script, "script_change_player_relation_with_troop", "$g_talk_troop", 10),
	   (jump_to_menu, "mnu_character_report"),
       ]
       ),

	("cheat_slots",[(eq,"$cheat_mode",1),
        (str_store_troop_name, s14, "$g_talk_troop"),
	],"{!}CHEAT! - Access {s14} troop slots",
       [
	   # (assign, "$g_talk_troop", "trp_player"),
	   (jump_to_menu, "mnu_display_troop_slots"),
       ]
       ),



	("continue",[(eq,"$cheat_mode",1)],"{!}CHEAT! - increase honor",
       [
	   (val_add, "$player_honor", 10),
	   (jump_to_menu, "mnu_character_report"),
       ]
       ),

	("continue",[(eq,"$cheat_mode",1)],"{!}CHEAT! - increase renown",
       [
	   (troop_get_slot, ":renown", "trp_player", slot_troop_renown),
	   (val_add, ":renown", 50),
	   (troop_set_slot, "trp_player", slot_troop_renown, ":renown"),

	   (jump_to_menu, "mnu_character_report"),
       ]
       ),

	("continue",[(eq,"$cheat_mode",1)],"{!}CHEAT! - increase persuasion",
       [
	   (troop_raise_skill, "trp_player", "skl_persuasion", 1),

	   (jump_to_menu, "mnu_character_report"),
       ]
       ),

	("continue",[],"Continue...",
       [(jump_to_menu, "mnu_reports"),
        ]
       ),

	#lord recruitment changes end

	   ]
  ),

  ("party_size_report",0,
   "{s1}",
   "none",
   [(call_script, "script_game_get_party_companion_limit"),
    (assign, ":party_size_limit", reg0),

    (store_skill_level, ":leadership", "skl_leadership", "trp_player"),
    (val_mul, ":leadership", 10),
    (store_attribute_level, ":charisma", "trp_player", ca_charisma),

    (troop_get_slot, ":renown", "trp_player", slot_troop_renown),
    (val_div, ":renown", 10),
    (try_begin),
      (gt, ":leadership", 0),
      (str_store_string, s2, "@{!} +"),
    (else_try),
      (str_store_string, s2, "str_space"),
    (try_end),
    (try_begin),
      (gt, ":charisma", 0),
      (str_store_string, s3, "@{!} +"),
    (else_try),
      (str_store_string, s3, "str_space"),
    (try_end),
    (try_begin),
      (gt, ":renown", 0),
      (str_store_string, s4, "@{!} +"),
    (else_try),
      (str_store_string, s4, "str_space"),
    (try_end),


    #SB : other modifiers from party_get_ideal_size, listed in order of precedence
    (try_for_range, ":sreg", s6, s10),
      (str_clear, ":sreg"),
    (try_end),

    (try_begin),
      (is_between, "$players_kingdom", kingdoms_begin, kingdoms_end),
      # (call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$players_kingdom"),
      # the above script doesn't exactly work for pretender
      (try_begin),
        # (ge, reg0, DPLMC_FACTION_STANDING_LEADER), #exclude spouse
        (faction_slot_eq, "$players_kingdom", slot_faction_leader, "trp_player"),
        (store_mul, ":king_bonus", 5, "$player_right_to_rule"), #20 is "legit" ruler
        (val_clamp, ":king_bonus", dplmc_marshal_party_bonus, dplmc_monarch_party_bonus + 1),
        (assign, reg6, ":king_bonus"),
        (str_store_string, s8, "@Monarch: +{reg6}^"),
      (else_try),
        (assign, ":king_bonus", 0),
      (try_end),

      (try_begin),
        (faction_slot_eq, "$players_kingdom", slot_faction_marshall, "trp_player"),
        (assign, ":marshal_bonus", dplmc_marshal_party_bonus),
        (assign, reg6, ":marshal_bonus"),
        (str_store_string, s7, "@Marshal: +{reg6}^"),
      (else_try),
        (assign, ":marshal_bonus", 0),
      (try_end),
      #percentage calculation follows
      (assign, ":faction_id", "$players_kingdom"),
      (assign, ":percent", 100),
      #Limit effects of policies for nascent kingdoms.
      (assign, ":policy_min", -3),
      (assign, ":policy_max", 4),#one greater than the maximum
      (try_begin),
          (this_or_next|eq, ":faction_id", "fac_player_supporters_faction"),
          (faction_slot_eq, ":faction_id", slot_faction_leader, "trp_player"),
          (faction_get_slot, ":policy_max", ":faction_id", slot_faction_num_towns),
          (faction_get_slot, reg0, ":faction_id", slot_faction_num_castles),
          (val_add, ":policy_max", reg0),
          (val_clamp, ":policy_max", 0, 4),#0, 1, 2, 3
          (store_mul, ":policy_min", ":policy_max", -1),
          (val_add, ":policy_max", 1),#one greater than the maximum
      (try_end),
      (try_begin), #we detecting rulership using king_bonus to determine which percent to apply
        (gt, ":king_bonus", 0),
        (try_begin),
          (faction_get_slot, ":centralization", ":faction_id", dplmc_slot_faction_centralization),
          (val_clamp, ":centralization", ":policy_min", ":policy_max"),
          (val_mul, ":centralization", 10),
          (val_add, ":percent", ":centralization"),
        (try_end),
      (else_try), #player is a regular vassal
        (try_begin),
          (faction_get_slot, ":centralization", ":faction_id", dplmc_slot_faction_centralization),
          (val_clamp, ":centralization", ":policy_min", ":policy_max"),
          (val_mul, ":centralization", -3),
          (val_add, ":percent", ":centralization"),
        (try_end),
        (try_begin),
          (faction_get_slot, ":aristocracy", ":faction_id", dplmc_slot_faction_aristocracy),
          (val_clamp, ":aristocracy", ":policy_min", ":policy_max"),
          (val_mul, ":aristocracy", 3),
          (val_add, ":percent", ":aristocracy"),
        (try_end),
        (try_begin),
          (faction_get_slot, ":quality", ":faction_id", dplmc_slot_faction_quality),
          (val_clamp, ":quality", ":policy_min", ":policy_max"),
          (val_mul, ":quality", -4),
          (val_add, ":percent", ":quality"),
        (try_end),
        ##diplomacy end
      (try_end),
      (try_begin),
        (faction_get_slot, ":serfdom", ":faction_id", dplmc_slot_faction_serfdom),
        (val_clamp, ":serfdom", ":policy_min", ":policy_max"),
        (val_mul, ":serfdom", 2), #SB : no multiplier as per description
        (val_add, ":percent", ":serfdom"),
      (try_end),
      #if no change from default, do not display
      (try_begin),
        (eq, ":percent", 100),
        (assign, ":percent", 0),
      (else_try), #last new string
        (assign, reg6, ":percent"),
        (str_store_string, s9, "@Policy: {reg6}%^"),
      (try_end),
    (else_try), #not affiliated, do not show position-based bonus
      (assign, ":king_bonus", 0),
      (assign, ":marshal_bonus", 0),
      (assign, ":percent", 0),
    (try_end),
    ## CC
    (assign, ":center_bonus", 0),
    (try_for_range, ":cur_center", castles_begin, castles_end),
      (party_slot_eq, ":cur_center", slot_town_lord, "trp_player"),
      (val_add, ":center_bonus", dplmc_castle_party_bonus),
    (try_end),
    (try_begin),
      (gt, ":center_bonus", 0),
      (assign, reg6, ":center_bonus"),
      (str_store_string, s6, "@Castellan: +{reg6}^"),
    (try_end),
    ## CC

    # (assign, reg9, ":percent"),
    # (assign, reg8, ":king_bonus"),
    # (assign, reg7, ":marshal_bonus"),
    # (assign, reg6, ":center_bonus"),
    (assign, reg5, ":party_size_limit"),
    (assign, reg1, ":leadership"),
    (assign, reg2, ":charisma"),
    (assign, reg3, ":renown"),
    #SB : might as well show player party size
    (party_get_num_companions, reg10, "p_main_party"),
    (str_store_string, s1, "@Current party size is {reg10}/{reg5}.^\
Current party size modifiers are:^^\
Base size:  +50^\
Leadership: {s2}{reg1}^\
Charisma: {s3}{reg2}^\
Renown: {s4}{reg3}^^\
{s8}{s7}{s6}{s9}\
TOTAL:  {reg5}"),
    ],
    [
      ("continue",[],"Continue...",
       [(jump_to_menu, "mnu_reports"),
        ]
       ),
      ]
  ),

  ("faction_relations_report",0,
   "{s1}",
   "none",
   [(str_clear, s2),
    (try_for_range, ":cur_kingdom", kingdoms_begin, kingdoms_end),
      (faction_slot_eq, ":cur_kingdom", slot_faction_state, sfs_active),
      (neq, ":cur_kingdom", "fac_player_supporters_faction"),
      (store_relation, ":cur_relation", "fac_player_supporters_faction", ":cur_kingdom"),

      # (try_begin),
        # (ge, ":cur_relation", 90),
        # (str_store_string, s3, "@Loyal"),
      # (else_try),
        # (ge, ":cur_relation", 80),
        # (str_store_string, s3, "@Devoted"),
      # (else_try),
        # (ge, ":cur_relation", 70),
        # (str_store_string, s3, "@Fond"),
      # (else_try),
        # (ge, ":cur_relation", 60),
        # (str_store_string, s3, "@Gracious"),
      # (else_try),
        # (ge, ":cur_relation", 50),
        # (str_store_string, s3, "@Friendly"),
      # (else_try),
        # (ge, ":cur_relation", 40),
        # (str_store_string, s3, "@Supportive"),
      # (else_try),
        # (ge, ":cur_relation", 30),
        # (str_store_string, s3, "@Favorable"),
      # (else_try),
        # (ge, ":cur_relation", 20),
        # (str_store_string, s3, "@Cooperative"),
      # (else_try),
        # (ge, ":cur_relation", 10),
        # (str_store_string, s3, "@Accepting"),
      # (else_try),
        # (ge, ":cur_relation", 0),
        # (str_store_string, s3, "@Indifferent"),
      # (else_try),
        # (ge, ":cur_relation", -10),
        # (str_store_string, s3, "@Suspicious"),
      # (else_try),
        # (ge, ":cur_relation", -20),
        # (str_store_string, s3, "@Grumbling"),
      # (else_try),
        # (ge, ":cur_relation", -30),
        # (str_store_string, s3, "@Hostile"),
      # (else_try),
        # (ge, ":cur_relation", -40),
        # (str_store_string, s3, "@Resentful"),
      # (else_try),
        # (ge, ":cur_relation", -50),
        # (str_store_string, s3, "@Angry"),
      # (else_try),
        # (ge, ":cur_relation", -60),
        # (str_store_string, s3, "@Hateful"),
      # (else_try),
        # (ge, ":cur_relation", -70),
        # (str_store_string, s3, "@Revengeful"),
      # (else_try),
        # (str_store_string, s3, "@Vengeful"),
      # (try_end),
      #SB : fix relationship scale
      (call_script, "script_describe_relation_to_s63", ":cur_relation"),
      (str_store_string_reg, s3, s63),
      (str_store_faction_name, s4, ":cur_kingdom"),
      (assign, reg1, ":cur_relation"),
      (str_store_string, s2, "@{!}{s2}^{s4}: {reg1} ({s3})"),
    (try_end),
    (str_store_string, s1, "@Your relation with the factions are:^{s2}"),



    ],
    [
      ("continue",[],"Continue...",
       [(jump_to_menu, "mnu_reports"),
        ]
       ),
      ]
  ),


  ("camp",mnf_scale_picture|mnf_enable_hot_keys,
   "You set up camp. What do you want to do?",
   "none",
   [
    (try_begin),
      (ge, "$cheat_mode", 1),
      (set_fixed_point_multiplier, 1000),
      (party_get_position, pos1, "p_main_party"),
      (position_get_x, reg44, pos1),
      (position_get_y, reg45, pos1),
      (position_get_z, reg46, pos1),
      (str_store_string, s60, "@Coordinates: x={reg44} y={reg45} z={reg46}."),
      (display_message, "@{s60}"),
    (try_end),

    (assign, "$g_player_icon_state", pis_normal),
    (set_background_mesh, "mesh_pic_camp"),

    ##diplomacy start+
    #SB : do verification and update script here as well
    (troop_get_slot, reg0, "trp_dplmc_chamberlain", dplmc_slot_troop_affiliated),
    # (call_script, "script_dplmc_version_checker"),
    (str_clear, s0),
    (try_begin),
        #Print a warning message for bad version numbers
        (neq, reg0, 0),
        (store_mod, ":verify", reg0, 128),
        (this_or_next|lt, reg0, 0),
            (neq, ":verify", DPLMC_VERSION_LOW_7_BITS),
        (display_message, "@{!}WARNING: Unexpected version value in slot dplmc_slot_troop_affiliated in trp_dplmc_chamberlain: {reg0}"),
    (else_try),
        #In cheat mode, print the diplomacy+ version
        (ge, "$cheat_mode", 1),
        (val_div, reg0, 128),
        (display_message, "@{!}DEBUG: Internal update code for current saved game is {reg0}. Update code for the current release is "+str(DPLMC_CURRENT_VERSION_CODE)+"."),
    (try_end),
    ##diplomacy end+

    ##SB : enable presentation to be launched again
    (try_begin),
      (eq, "$g_presentation_next_presentation", "prsnt_redefine_keys"),
      (start_presentation, "$g_presentation_next_presentation"),
    (try_end),
    ],
    [
      ("camp_action_1",[
(eq,"$cheat_mode",1),
(neg|party_slot_eq, "p_main_party", slot_party_on_water, 1), #madsci we're not camping in water
],"{!}Cheat: Walk around.",
       [(set_jump_mission,"mt_ai_training"),
        (call_script, "script_setup_random_scene"),
        (change_screen_mission),
        ]
       ),
    ("formation_mod_option",[],"Formations mod options.", [(start_presentation, "prsnt_formation_mod_option")]),
       ##diplomacy begin
###################################################################################
# Autoloot: Allow item management from camp
###################################################################################
##nested diplomacy start+
#Made some changes to autoloot conditions
	("dplmc_camp_manage_inventory",
		[
	  #OLD:
	  #(eq, "$g_autoloot", 1),
      #(store_skill_level, ":inv_skill", "skl_inventory_management", "trp_player"),
      #(gt, "$g_player_chamberlain", 0),
      #(ge, ":inv_skill", 3),
	  #NEW:
	  #1. Must have companions
	  #2. Either a hero in the party must have inventory management 3 or higher, or the player must have inventory management of 2 or higher, or the player or a hero in the party must have a looting skill of 2 or higher
	  (call_script, "script_cf_dplmc_player_party_meets_autoloot_conditions"),
	    ],
	  #"Manage your party's inventory.",
	  "Manage auto-loot settings.",
		[
			(try_begin),
				#dplmc+ Add check if autoloot has not been initialized yet
				(call_script, "script_dplmc_initialize_autoloot", 0),#argument "0" means this does nothing if deemed unnecessary
			(try_end),
			(troop_clear_inventory, "trp_temp_troop"),
			##diplomacy start+
			(assign, "$pool_troop", "trp_temp_troop"),
			(assign, "$dplmc_return_menu", "mnu_camp"),
			##diplomacy end+
			(assign, "$inventory_menu_offset", 0),
            #SB : variable resets
			(assign, "$lord_selected", "trp_player"),
            (str_clear, dplmc_loot_string),
			(jump_to_menu, "mnu_dplmc_manage_loot_pool")
		]
	),

#Alternate display: make it clear why autoloot isn't appearing
	("dplmc_camp_manage_inventory_disabled",
		[
	  #Print this when the player has companions but doesn't meet
	  #the minimum skill levels.
		(try_begin),
			(call_script, "script_cf_dplmc_player_party_meets_autoloot_conditions"),
		(try_end),
		(eq, reg0, 0),
		(disable_menu_option),
	    ],
	  "Auto-loot requires Inv. Management or Looting at rank 2.",
		[
		]
	),
##nested diplomacy end+ Finished changes to autoloot conditions
###################################################################################
# End Autoloot
###################################################################################
    # ("dplmc_camp_preferences",
        # [
        # ],
        # "Diplomacy preferences.",
        # [
            # (jump_to_menu, "mnu_dplmc_preferences"),
            # ## SB : global initialization for redefine_keys
            # (assign, "$g_presentation_next_presentation", -1),
        # ]
    # ),
      ("dplmc_camp_preferences",[],"Diplomacy preferences.",
       [
           # (jump_to_menu, "mnu_dplmc_preferences"),
           (start_presentation, "prsnt_adv_diplomacy_preferences"),
           (assign, "$g_presentation_next_presentation", -1),
        ]),

##diplomacy end
      ("camp_action",[],"Take an action.",
       [(jump_to_menu, "mnu_camp_action"),
        ]
       ),#scn_wedding
      # ("camp_action",[],"Work on wedding scene.",
      #  [(jump_to_scene, "scn_wedding"),
      #  (change_screen_mission),
      #   ]
      #  ),
      ("camp_wait_here",[
(neg|party_slot_eq, "p_main_party", slot_party_on_water, 1), #madsci we're not camping in water
],"Wait here for some time.",
       [
           (assign,"$g_camp_mode", 1),
           (assign, "$g_infinite_camping", 0),
           (assign, "$g_player_icon_state", pis_camping),

           (try_begin),
             (party_is_active, "p_main_party"),
             (party_get_current_terrain, ":cur_terrain", "p_main_party"),
             (try_begin),
               (eq, ":cur_terrain", rt_desert),
               (unlock_achievement, ACHIEVEMENT_SARRANIDIAN_NIGHTS),
             (try_end),
           (try_end),

           (rest_for_hours_interactive, 24 * 365, 5, 1), #rest while attackable

           (change_screen_return),
        ]
       ),
      ("camp_cheat",
       [(ge, "$cheat_mode", 1)
        ], "CHEAT MENU!",
       [(jump_to_menu, "mnu_camp_cheat"),
        ],
       ),
      ("resume_travelling",[],"Resume travelling.",
       [
           (change_screen_return),
        ]
       ),
      ]
  ),
  ("camp_cheat",0,
   "Select a cheat:",
   "none",
   [
     ],
    [
      ("camp_cheat_find_item",[], "Find an item...",
       [(jump_to_menu, "mnu_cheat_find_item"),]
       ),

      ("camp_cheat_weather",[], "Change weather..",
       [(jump_to_menu, "mnu_cheat_change_weather"),]
       ),

      ("camp_cheat_0",[],"{!}Increase player RTR.",
       [
          (try_begin),
            (this_or_next|key_is_down, key_left_shift),
            (key_is_down, key_right_shift),
            (call_script, "script_change_player_right_to_rule", 25),
          (else_try),
            (call_script, "script_change_player_right_to_rule", 3),
          (try_end),
        ]
       ),

      ("camp_cheat_1",[],"{!}Increase player renown.",
       [
          (try_begin),
            (this_or_next|key_is_down, key_left_shift),
            (key_is_down, key_right_shift),
            (call_script, "script_change_troop_renown", "trp_player", 500),
          (else_try),
            (call_script, "script_change_troop_renown", "trp_player", 100),
          (try_end),
        ]
       ),

      ("camp_cheat_2",[],"{!}Increase player honor.",
       [
          (try_begin),
            (this_or_next|key_is_down, key_left_shift),
            (key_is_down, key_right_shift),
            (call_script, "script_change_player_honor", 50),
          (else_try),
            (call_script, "script_change_player_honor", 5),
          (try_end),
        ]
       ),

      ("camp_cheat_3",[],"{!}Update political notes.",
       [
         (try_for_range, ":hero", active_npcs_begin, active_npcs_end),
           (troop_slot_eq, ":hero", slot_troop_occupation, slto_kingdom_hero),
           (call_script, "script_update_troop_political_notes", ":hero"),
         (try_end),

         (try_for_range, ":kingdom", kingdoms_begin, kingdoms_end),
           (call_script, "script_update_faction_political_notes", ":kingdom"),
         (try_end),
        ]
       ),

      ("camp_cheat_4",[],"{!}Update troop notes.",
       [
         (try_for_range, ":hero", active_npcs_begin, active_npcs_end),
           (troop_slot_eq, ":hero", slot_troop_occupation, slto_kingdom_hero),
           (call_script, "script_update_troop_notes", ":hero"),
         (try_end),

         (try_for_range, ":lady", kingdom_ladies_begin, kingdom_ladies_end),
           (call_script, "script_update_troop_notes", ":lady"),
           (call_script, "script_update_troop_political_notes", ":lady"),
           (call_script, "script_update_troop_location_notes", ":lady", 0),
         (try_end),
        ]
       ),

       #SB : update tavern npcs
      ("camp_cheat_5",[],"{!}Scramble taverngoers.",
       [
        (try_for_range, ":slots", slot_center_ransom_broker, slot_center_tavern_minstrel + 1),
          (neq, ":slots", slot_center_traveler_info_faction),
          #initialize
          (try_for_range, ":towns", towns_begin, towns_end),
            (party_set_slot, ":towns", ":slots", -1),
          (try_end),

          (try_begin), #parse
            (eq, ":slots", slot_center_ransom_broker),
            (assign, ":start", ransom_brokers_begin),
            (assign, ":end", ransom_brokers_end),
          (else_try),
            (eq, ":slots", slot_center_tavern_traveler),
            (assign, ":start", tavern_travelers_begin),
            (assign, ":end", tavern_travelers_end),
          (else_try),
            (eq, ":slots", slot_center_tavern_minstrel),
            (assign, ":start", tavern_minstrels_begin),
            (assign, ":end", tavern_minstrels_end),
          (else_try),
            (eq, ":slots", slot_center_tavern_bookseller),
            (assign, ":start", tavern_booksellers_begin),
            (assign, ":end", tavern_booksellers_end),
          (try_end),

          #populate
          (assign, ":num_towns", 0),
          (str_store_string, s51, "@nowhere in particular"),
          (try_for_range, ":troop_no", ":start", ":end"),
            (troop_set_slot, ":troop_no", slot_troop_cur_center, -1),
            (store_random_in_range, ":town_no", towns_begin, towns_end),

            (try_begin), #ensure no overlaps
              (party_slot_ge, ":town_no", ":slots", ":start"),
              # (assign, ":limit", towns_end),
              # (try_for_range, ":center_no", towns_begin, ":limit"),
                # (assign, ":town_used", 0),
                # (try_for_range, ":other_troop", ":start", ":troop_no"),
                  # (troop_slot_eq, ":other_troop", slot_troop_cur_center, ":center_no"),
                  # (assign, ":town_used", 1),
                # (try_end),
                # (eq, ":town_used", 0), #no other troop uses this slot
                # (party_set_slot, ":center_no", ":slots", ":troop_no"),
                # (assign, ":limit", 1),
              # (try_end),
            (else_try),
              (val_add, ":num_towns", 1),
              (str_store_party_name_link, s50, ":town_no"),
              (party_set_slot, ":town_no", ":slots", ":troop_no"),
              (troop_set_slot, ":troop_no", slot_troop_cur_center, ":town_no"),
              (try_begin),
                (eq, ":num_towns", 1),
                (str_store_string, s51, s50),
              (else_try),
                (str_store_string, s51, "str_s50_comma_s51"),
              (try_end),
            (try_end),
          (try_end),
          (str_store_troop_name_plural, s10, ":start"), #default titles "book_merchant" "ransom_broker" etc
          (str_store_string_reg, s11, s51),
          (display_message, "@You can find {s10}s at {s11}."),
        (try_end),
        (call_script, "script_update_mercenary_units_of_towns"), #might as well
        ]
       ),

      ("camp_cheat_6",[],"{!}Infinite camp",
       [
         (assign,"$g_camp_mode", 1),
         (assign, "$g_infinite_camping", 1),
         (assign, "$g_player_icon_state", pis_camping),
         (rest_for_hours_interactive, 10 * 24 * 365, 20), #10 year rest while not attackable with 20x speed
         (change_screen_return),
        ]
       ),

	   ##nested diplomacy start+
	  ("camp_cheat_7",[(troop_slot_ge, "trp_player", slot_troop_spouse, 1),],"{!}Divorce player spouse",
       [
	 	 (troop_get_slot, ":spouse", "trp_player", slot_troop_spouse),
        #set this before the loop below, to avoid potential wierdness in the family relation check
		 (troop_set_slot, ":spouse", slot_troop_spouse, -1),
	     (troop_set_slot, "trp_player", slot_troop_spouse, -1),

		#apply relation loss with the spouse
		 (call_script, "script_change_player_relation_with_troop", ":spouse", -40),
	    #change relations with family - inverse of gain from marriage
		(try_for_range, ":family_member", heroes_begin, heroes_end),
		    (neq, ":family_member", ":spouse"),
			(call_script, "script_dplmc_troop_get_family_relation_to_troop", ":spouse", ":family_member"),
			(gt, reg0, 0),
			(val_mul, reg0, -2),
			(val_div, reg0, 3),
			(val_min, reg0, -1),
			(call_script, "script_change_player_relation_with_troop", ":family_member", reg0),
		(try_end),
        ]
       ),
	   ##nested diplomacy end+

      ("cheat_faction_orders",[(neq,"$cheat_mode",0),
      (try_begin),
        (eq, "$cheat_mode", 1),
        (str_store_string, s1, "@all"),
      (else_try),
        (eq, "$cheat_mode", 2),
        (str_store_string, s1, "@troop"),
      (else_try),
        (eq, "$cheat_mode", 3),
        (str_store_string, s1, "@economic"),
      (else_try),
        (eq, "$cheat_mode", 4),
        (str_store_string, s1, "@political"),
      (try_end),
      ],
      "{!}Debug messages to {s1}.",
       [(val_add,"$cheat_mode",1),
        (val_mod, "$cheat_mode", 5),
         (jump_to_menu, "mnu_camp_cheat"),
        ]
       ),
      # ("cheat_faction_orders",[
	  # (ge, "$cheat_mode", 1),
	  # (neq,"$cheat_mode",3)],"{!}Cheat: Set Debug messages to Econ Only.",
       # [(assign,"$cheat_mode",3),
         # (jump_to_menu, "mnu_camp_cheat"),
        # ]
       # ),
      # ("cheat_faction_orders",[
	  # (ge, "$cheat_mode", 1),
	  # (neq,"$cheat_mode",4)],"{!}Cheat: Set Debug messages to Political Only.",
       # [(assign,"$cheat_mode",4),
         # (jump_to_menu, "mnu_camp_cheat"),
        # ]
       # ),
      ("camp_cheat_heal",[],"Heal party.",
       [
         (heal_party, "p_main_party"),
        ]
       ),
      ("camp_cheat_xp",[],"Add xp to party.",
       [
         (set_show_messages, 0),
         (party_get_num_companion_stacks, ":num_stacks", "p_main_party"),
         (try_for_range, ":stack", 0, ":num_stacks"), #include player if too lazy to ctrl+x
            (party_stack_get_troop_id, ":id", "p_main_party", ":stack"),
            (try_begin),
                # (troop_is_hero, ":id"),
                # (store_character_level, ":level", ":id"),
                # (get_level_boundary, ":xp", ":level"),
                # (troop_get_xp, ":cur_exp", ":id"),
                # (val_sub, ":xp", ":cur_exp"),
                # (add_xp_to_troop, ":xp", ":id"),
            # (else_try),
                (party_stack_get_size, ":size", "p_main_party", ":stack"),
                (call_script, "script_game_get_upgrade_xp", ":id"),
                (store_mul, ":xp", reg0, ":size"),
                (try_begin),
                  (troop_is_hero, ":id"),
                  # (troop_get_xp, ":cur_exp", ":id"),
                  # (val_sub, ":xp", ":cur_exp"),
                  (store_character_level, ":level", ":id"),
                  ##this is so stupid but it works (probably), but add_xp_to_troop caps out at 29999
                  (assign, ":end", 100),
                  (try_begin), #assign block of exp
                    (le, ":level", 10),
                    (assign, ":xp", 100),
                  (else_try),
                    (le, ":level", 25),
                    (assign, ":xp", 1000),
                  (else_try), #most people stop before level 30
                    (le, ":level", 35),
                    (assign, ":xp", 10000),
                  (else_try),
                    (le, ":level", 50),
                    (assign, ":xp", 30000),
                  (else_try),
                    (le, ":level", 60),
                    (assign, ":xp", 1000000),
                  (else_try), #good luck, level caps at 63
                    (assign, ":xp", 10000000),
                  (try_end),
                  # (val_mul, ":xp", ":level"),
                  (try_for_range, ":unused", 0, ":end"),
                    (party_add_xp_to_stack, "p_main_party", ":stack", ":xp"),
                    (add_xp_to_troop, 1, ":id"), #this actually upgrades the level
                    # (add_xp_as_reward, ":xp"),
                    (store_character_level, ":cur_level", ":id"),
                    (lt, ":level", ":cur_level"), #done
                    (assign, ":end", 0),
                  (try_end),
                (else_try),
                  (party_add_xp_to_stack, "p_main_party", ":stack", ":xp"),
                (try_end),
            (try_end),
         (try_end),
         (set_show_messages, 1),
         # (party_upgrade_with_xp, "p_main_party", 1, 0), #random upgrade - disabled
         # (jump_to_menu, "mnu_camp_cheat"),
        ]
       ),
      ("camp_cheat_prisoner",[
          (party_get_num_prisoner_stacks, ":stack", "p_main_party"),
          (gt, ":stack", 0),
          (try_for_range, ":i_stack", 0, ":stack"),
            (party_prisoner_stack_get_troop_id, ":troop", "p_main_party", ":i_stack"),
            (neg|troop_is_hero, ":troop"),
            (assign, ":stack", 0),
          (try_end),
          (eq, ":stack", 0), #found one non-hero entity
      ],"Recruit all prisoners.",
       [ # (call_script, "script_party_add_party_prisoners"),
         # (call_script, "script_party_remove_all_prisoners"),
         (party_get_num_prisoner_stacks, ":num_stacks", "p_main_party"),
         (try_for_range_backwards, ":stack", 0, ":num_stacks"),
            (party_prisoner_stack_get_troop_id, ":troop", "p_main_party", ":stack"),
            (neg|troop_is_hero, ":troop"),
            (gt, ":troop", 0),
            (party_prisoner_stack_get_size, ":amount", "p_main_party", ":stack"),
            (party_remove_prisoners, "p_main_party", ":troop", ":amount"),
            (party_add_members, "p_main_party", ":troop", ":amount"),
         (try_end),
         # (jump_to_menu, "mnu_camp_cheat"),
        ]
       ),
       #do not add more cheat options, no more room in one menu

      ("camp_cheat_add_troops",[],"More dev cheats",
       [
         (jump_to_menu, "mnu_cheat_add_troops"),
        ]
       ),

      ("back_to_camp_menu",[],"{!}Back to camp menu.",
       [
         (jump_to_menu, "mnu_camp"),
        ]
       ),
      ]
  ),

  ("cheat_find_item",0,
   "{!}Current item range: {reg5} to {reg6}",
   "none",
   [
     (assign, reg5, "$cheat_find_item_range_begin"),
     (store_add, reg6, "$cheat_find_item_range_begin", max_inventory_items),
     (val_min, reg6, normal_items_end), #SB: exclude invasion gear, they need triggers
     (val_sub, reg6, 1),
     ],
    [

    #SB : easier debug, exclude coop stuff which needs triggers
      ("cheat_find_item_prev_range",[], "{!}Move to previous range.",
       [
        (val_sub, "$cheat_find_item_range_begin", max_inventory_items),
        (try_begin),
          (lt, "$cheat_find_item_range_begin", 0),
          (store_sub, "$cheat_find_item_range_begin", coop_new_items_end, max_inventory_items),
        (try_end),
        (jump_to_menu, "mnu_cheat_find_item"),
       ]
       ),

      ("cheat_find_item_next_range",[], "{!}Move to next item range.",
       [
        (val_add, "$cheat_find_item_range_begin", max_inventory_items),
        (try_begin),
          (ge, "$cheat_find_item_range_begin", normal_items_end),
          (assign, "$cheat_find_item_range_begin", 0),
        (try_end),
        (jump_to_menu, "mnu_cheat_find_item"),
       ]
       ),

       ("cheat_find_item_choose_this",[], "{!}Choose from this range.",
       [
        (troop_clear_inventory, "trp_find_item_cheat"),
        (store_add, ":max_item", "$cheat_find_item_range_begin", max_inventory_items),
        (val_min, ":max_item", normal_items_end),
        (store_sub, ":num_items_to_add", ":max_item", "$cheat_find_item_range_begin"),
        (try_begin), #SB : even more super-cheats
          (this_or_next|key_is_down, key_left_shift),
          (key_is_down, key_right_shift),
          (try_for_range, ":i_slot", 0, ":num_items_to_add"),
            (store_add, ":item_id", "$cheat_find_item_range_begin", ":i_slot"),
            (item_get_type, ":i_type", ":item_id"),
            (try_begin),
              (eq, ":i_type", itp_type_horse),
              (troop_add_item, "trp_find_item_cheat", ":item_id", imod_champion),
            (else_try),
              (this_or_next|eq, ":i_type", itp_type_shield),
              (is_between, ":i_type", itp_type_head_armor, itp_type_pistol),
              (troop_add_item, "trp_find_item_cheat", ":item_id", imod_lordly),
            (else_try),
              (this_or_next|is_between, ":i_type", itp_type_one_handed_wpn, itp_type_goods),
              (is_between, ":i_type", itp_type_pistol, itp_type_animal),
              (troop_add_item, "trp_find_item_cheat", ":item_id", imod_masterwork),
            (else_try),
              (troop_add_item, "trp_find_item_cheat", ":item_id", imod_plain),
            (try_end),
          (try_end),
          (change_screen_loot, "trp_find_item_cheat"),
        (else_try), #Native behaviour
          (try_for_range, ":i_slot", 0, ":num_items_to_add"),
            (store_add, ":item_id", "$cheat_find_item_range_begin", ":i_slot"),
            (troop_add_items, "trp_find_item_cheat", ":item_id", 1),
          (try_end),
          (change_screen_trade, "trp_find_item_cheat"),
        (try_end),
       ]
       ),

      ("camp_action_4",[],"{!}Back to camp menu.",
       [(jump_to_menu, "mnu_camp"),
        ]
       ),
      ]
  ),

   ("cheat_change_weather",0,
   "{!}Current cloud amount: {reg5}^Current Fog Strength: {reg6}",
   "none",
   [
     (get_global_cloud_amount, reg5),
     (get_global_haze_amount, reg6),
     ],
    [
      ("cheat_increase_cloud",[], "{!}Increase Cloud Amount.",
       [
	    (get_global_cloud_amount, ":cur_cloud_amount"),
		(val_add, ":cur_cloud_amount", 5),
		(val_min, ":cur_cloud_amount", 100),
	    (set_global_cloud_amount, ":cur_cloud_amount"),
	   ]
       ),
      ("cheat_decrease_cloud",[], "{!}Decrease Cloud Amount.",
       [
	    (get_global_cloud_amount, ":cur_cloud_amount"),
		(val_sub, ":cur_cloud_amount", 5),
		(val_max, ":cur_cloud_amount", 0),
	    (set_global_cloud_amount, ":cur_cloud_amount"),
	   ]
       ),
      ("cheat_increase_fog",[], "{!}Increase Fog Amount.",
       [
	    (get_global_haze_amount, ":cur_fog_amount"),
		(val_add, ":cur_fog_amount", 5),
		(val_min, ":cur_fog_amount", 100),
	    (set_global_haze_amount, ":cur_fog_amount"),
	   ]
       ),
      ("cheat_decrease_fog",[], "{!}Decrease Fog Amount.",
       [
	    (get_global_haze_amount, ":cur_fog_amount"),
		(val_sub, ":cur_fog_amount", 5),
		(val_max, ":cur_fog_amount", 0),
	    (set_global_haze_amount, ":cur_fog_amount"),
	   ]
       ),

      ("camp_action_4",[],"{!}Back to camp menu.",
       [(jump_to_menu, "mnu_camp"),
        ]
       ),
      ]
  ),

  ("camp_action",0,
   "Choose an action:",
   "none",
   [
     ],
    [


      ("camp_recruit_prisoners",
       [(troops_can_join, 1),
        (store_current_hours, ":cur_time"),
        (val_sub, ":cur_time", 24),
        (gt, ":cur_time", "$g_prisoner_recruit_last_time"),
        (try_begin),
          (gt, "$g_prisoner_recruit_last_time", 0),
          (assign, "$g_prisoner_recruit_troop_id", 0),
          (assign, "$g_prisoner_recruit_size", 0),
          (assign, "$g_prisoner_recruit_last_time", 0),
        (try_end),
        ], "Recruit some of your prisoners to your party.",
       [(jump_to_menu, "mnu_camp_recruit_prisoners"),
        ],
       ),

      ("action_read_book",[],"Select a book to read.",
       [(jump_to_menu, "mnu_camp_action_read_book"),
        ]
       ),

      #SB : rename changes
      ("camp_change_name",[],"Change the name of your party.",
       [(assign, "$g_presentation_state", rename_party),
       (assign, "$g_encountered_party", "p_main_party"),
       (start_presentation, "prsnt_name_kingdom"),
       ]
       ),
       # #SB : recolor from CC, call this from other presentation
      # ("action_modify_factions_color",[],"Change the color of factions.",
       # [
          # (assign, "$g_presentation_state", recolor_kingdom),
          # (try_begin),
            # (is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
            # (store_sub, "$temp", "$players_kingdom", npc_kingdoms_begin),
            # (store_sub, "$temp", 8, "$temp"), #3 to 8 are npc kingdoms
          # (else_try),
            # (assign, "$temp", 9), #player faction
          # (try_end),
          # (start_presentation, "prsnt_change_color"),
        # ]
       # ),
      ("action_rename_kingdom",
       [
         (assign, ":continue", 0),
         #SB : use bits
         (try_begin),
           (store_and, ":name_set", "$players_kingdom_name_set", rename_kingdom),
           (eq, ":name_set", rename_kingdom),
           (faction_slot_eq, "$players_kingdom", slot_faction_state, sfs_active),
           (faction_slot_eq, "$players_kingdom", slot_faction_leader, "trp_player"),
           (assign, ":continue", 1),
         (else_try),
           (ge, "$cheat_mode", 1),
           (assign, ":continue", 1),
         (try_end),
         (eq, ":continue", 1),
         ],
         "Rename your kingdom.",
         [
           #SB : explicitly state kingdom
           (assign, "$g_presentation_state", rename_kingdom),
           (start_presentation, "prsnt_name_kingdom"),
         ]
       ),
      # ("action_recolor_troops",
       # [
         # ],"Recolor your troop groups.",
       # [(assign, "$g_presentation_state", recolor_groups),
        # (jump_to_menu, "mnu_recolor_groups"),
        # ]
       # ),
      # ("action_rename_troops",
       # [
         # (gt, "$g_player_constable", 0),
         # (call_script, "script_cf_has_custom_troops"),
         # ],"Rename your custom troops.",
       # [
        # (jump_to_menu, "mnu_custom_troops"),
        # ]
       # ),

      ##diplomacy begin+
      ##Custom player kingdom vassal titles, credit Caba'drin start
      #  ("action_change_vassal_title",
      #   [
      #   #SB : allow action if co-ruler of $players_kingdom
      #     (assign, ":is_coruler", -1),
      #     (try_begin),
      #       (store_and, ":name_set", "$players_kingdom_name_set", rename_kingdom),
      #       (eq, ":name_set", rename_kingdom),
      #       (faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, sfs_active),
      #       (faction_slot_eq, "fac_player_supporters_faction", slot_faction_leader, "trp_player"),
      #       (assign, ":is_coruler", 1),
      #     (else_try),
      #       (is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
      #       (call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$players_kingdom"),
      #       (ge, reg0, DPLMC_FACTION_STANDING_LEADER_SPOUSE),
      #       (assign, ":is_coruler", 1),
      #     (try_end),
      #     (eq, ":is_coruler", 1),
      #   ],
      #   "Change titles of nobility.",
      #   [(start_presentation, "prsnt_dplmc_set_vassal_title"),
      #   ]
      #  ),

       ("action_change_policies",
        [
          (gt, "$cheat_mode", 0),
          #SB : name set bits
          (store_and, ":name_set", "$players_kingdom_name_set", rename_kingdom),
          (eq, ":name_set", rename_kingdom),
          (faction_slot_eq, "$players_kingdom", slot_faction_state, sfs_active),
          (faction_slot_eq, "$players_kingdom", slot_faction_leader, "trp_player"),
        ],
        "{!}Cheat: Change kingdom policies",
        [
        (assign, "$g_faction_selected", "$players_kingdom"),
        (start_presentation, "prsnt_dplmc_policy_management"),]
       ),
      ##Custom player kingdom vassal titles, credit Caba'drin end
      ##diplomacy end+
      ("action_modify_banner",[(this_or_next|gt, "$cheat_mode", 0),(ge, "$g_player_banner_granted", 1)],
       "Modify your banner (Shift to change back colour).",
       [
        #SB : recolor mode
        (try_begin),
          (this_or_next|key_is_down, key_left_shift),
          (key_is_down, key_right_shift),
          (eq, "$g_player_banner_granted", 1),
          (assign, "$g_presentation_state", recolor_heraldic),
          (assign, "$g_player_troop", "trp_player"),
          (start_presentation, "prsnt_change_color"),
        (else_try),
          (start_presentation, "prsnt_banner_selection"),
           #(start_presentation, "prsnt_custom_banner"),
        (try_end),
        ]
       ),

      ("action_retire",[],"Retire from adventuring.", [(jump_to_menu, "mnu_retirement_verify"),]),
      ("camp_action_4",[],"Back to camp menu.", [(jump_to_menu, "mnu_camp"),]),
      ]
  ),

  ("camp_recruit_prisoners",0,
   "You offer your prisoners freedom if they agree to join you as soldiers. {s18}",
   "none",
   [(assign, ":num_regular_prisoner_slots", 0),
    (str_store_string, s18, "@No one accepts the offer."), # SB : store this back top
    (party_get_num_prisoner_stacks, ":num_stacks", "p_main_party"),
    (try_for_range, ":cur_stack", 0, ":num_stacks"),
      (party_prisoner_stack_get_troop_id, ":cur_troop_id", "p_main_party", ":cur_stack"),
	(neq, ":cur_troop_id", "trp_fugitive"),
      # (neg|troop_is_hero, ":cur_troop_id"),
      #SB : use script check
      (call_script, "script_game_check_prisoner_can_be_sold", ":cur_troop_id"),
      (eq, reg0, 1),
      (val_add, ":num_regular_prisoner_slots", 1),
    (try_end),
    (try_begin),
      (eq, ":num_regular_prisoner_slots", 0),
      (jump_to_menu, "mnu_camp_no_prisoners"),
    (else_try),
      (eq, "$g_prisoner_recruit_troop_id", 0),
      (store_current_hours, "$g_prisoner_recruit_last_time"),
      (store_random_in_range, ":rand", 0, 100),
      (store_skill_level, ":persuasion_level", "skl_persuasion", "trp_player"),
      (store_sub, ":reject_chance", 15, ":persuasion_level"),
      (val_mul, ":reject_chance", 4),
      (try_begin),
        (lt, ":rand", ":reject_chance"),
        (assign, "$g_prisoner_recruit_troop_id", -7),
      (else_try),
        # (assign, ":num_regular_prisoner_slots", 0),
        # (party_get_num_prisoner_stacks, ":num_stacks", "p_main_party"),
        # (try_for_range, ":cur_stack", 0, ":num_stacks"),
          # (party_prisoner_stack_get_troop_id, ":cur_troop_id", "p_main_party", ":cur_stack"),
          # (neg|troop_is_hero, ":cur_troop_id"),
          # (val_add, ":num_regular_prisoner_slots", 1),
        # (try_end),
        (store_random_in_range, ":random_prisoner_slot", 0, ":num_regular_prisoner_slots"),
        (try_for_range, ":cur_stack", 0, ":num_stacks"),
          (party_prisoner_stack_get_troop_id, ":cur_troop_id", "p_main_party", ":cur_stack"),
	(neq, ":cur_troop_id", "trp_fugitive"),
          (call_script, "script_game_check_prisoner_can_be_sold", ":cur_troop_id"),
          (eq, reg0, 1), #SB : use script call to prevent quest troops from being recruited
          (val_sub, ":random_prisoner_slot", 1),
          (lt, ":random_prisoner_slot", 0),
          (assign, ":num_stacks", 0),
          (assign, "$g_prisoner_recruit_troop_id", ":cur_troop_id"),
          (party_prisoner_stack_get_size, "$g_prisoner_recruit_size", "p_main_party", ":cur_stack"),
        (try_end),
      (try_end),

      (try_begin),
        (gt, "$g_prisoner_recruit_troop_id", 0),
        (party_get_free_companions_capacity, ":capacity", "p_main_party"),
        (val_min, "$g_prisoner_recruit_size", ":capacity"),
        (assign, reg1, "$g_prisoner_recruit_size"),
        (gt, "$g_prisoner_recruit_size", 0),
        (try_begin),
          (gt, "$g_prisoner_recruit_size", 1),
          (assign, reg2, 1),
        (else_try),
          (assign, reg2, 0),
        (try_end),
        (str_store_troop_name_by_count, s1, "$g_prisoner_recruit_troop_id", "$g_prisoner_recruit_size"),
        (str_store_string, s18, "@{reg1} {s1} {reg2?accept:accepts} the offer."),
      (else_try),
        (str_store_string, s18, "@No one accepts the offer."),
      (try_end),
    (try_end),
    ],
    [
      ("camp_recruit_prisoners_accept",[(gt, "$g_prisoner_recruit_troop_id", 0)],"Take them.",
       [(remove_troops_from_prisoners, "$g_prisoner_recruit_troop_id", "$g_prisoner_recruit_size"),
        (party_add_members, "p_main_party", "$g_prisoner_recruit_troop_id", "$g_prisoner_recruit_size"),
        #SB : change base morale reduction by difficulty
        (game_get_reduce_campaign_ai, ":reduce"), #0 to 2
        (val_sub, ":reduce", 4), #-4 to -2
        (store_mul, ":morale_change", ":reduce", "$g_prisoner_recruit_size"),
        (store_troop_faction, ":troop_faction", "$g_prisoner_recruit_troop_id"),
	(faction_get_slot, ":troop_faction_culture", ":troop_faction", slot_faction_culture),
        (store_character_level, ":troop_level", "$g_prisoner_recruit_troop_id"),

        (try_for_range, ":faction", kingdoms_begin, kingdoms_end),
          (faction_set_slot, ":faction", slot_faction_temp_slot, 0),
        (try_end),
        (try_begin), #give extra penalty to faction morale if we recruit high-level enemy troops
          (this_or_next|eq, ":troop_faction", "fac_outlaws"),
          (eq, ":troop_faction", "fac_deserters"),
          (call_script, "script_objectionable_action", tmt_aristocratic, "str_hire_deserters"),
        (else_try),
          (is_between, ":troop_faction", npc_kingdoms_begin, npc_kingdoms_end),
          # (store_character_level, ":relation", "$g_prisoner_recruit_troop_id"),
          (try_begin), #check culture
            (eq, "$players_kingdom", "fac_player_supporters_faction"),
		(faction_get_slot, ":player_culture", "fac_player_supporters_faction", slot_faction_culture),
            (gt, ":player_culture", 0),
            (eq, ":player_culture", ":troop_faction_culture"),
            (assign, ":troop_faction", "$players_kingdom"),
          (try_end),
          (try_begin), #no penalty for same faction
            (eq, ":troop_faction", "$players_kingdom"),
            # (val_sub, ":relation", ":morale_change"), #bonus
            (assign, ":morale_change", 0),
            (assign, "$g_prisoner_recruit_troop_id", 0),
            (assign, "$g_prisoner_recruit_size", 0),
          (else_try), #one point per offended party
            (party_get_num_companion_stacks, ":cap", "p_main_party"),
            (try_for_range, ":stack", 1, ":cap"),
              (party_stack_get_troop_id, ":troop", "p_main_party", ":stack"),
              # (neg|troop_is_hero, ":troop"),
              # (neq, ":troop", "$g_prisoner_recruit_troop_id"), #not just recruited
              (store_faction_of_troop, ":stack_faction", ":troop"),
              # (neq, ":stack_faction", ":troop_faction"),
              (store_relation, ":faction_relation", ":troop_faction", ":stack_faction"),
              (lt, ":faction_relation", 0),
              (faction_get_slot, ":amount", ":stack_faction", slot_faction_temp_slot),
              (party_stack_get_size, ":reduce", "p_main_party", ":stack"),
              (val_sub, ":amount", ":reduce"),
              (faction_set_slot, ":stack_faction", slot_faction_temp_slot, ":amount"),
            (try_end),
          (try_end),
        (try_end),
        (call_script, "script_change_player_party_morale", ":morale_change"),
        (try_for_range, ":faction", kingdoms_begin, kingdoms_end),
          (faction_get_slot, ":relation", ":faction", slot_faction_temp_slot),
          (neq, ":relation", 0),
          (val_sub, ":relation", ":troop_level"),
          (call_script, "script_change_faction_troop_morale", ":faction", ":relation", 1),
        (try_end),
        (jump_to_menu, "mnu_camp"),
        ]
       ),
      ("camp_recruit_prisoners_reject",[(gt, "$g_prisoner_recruit_troop_id", 0)],"Reject them.",
       [(jump_to_menu, "mnu_camp"),
        (assign, "$g_prisoner_recruit_troop_id", 0),
        (assign, "$g_prisoner_recruit_size", 0),
        ]
       ),
      ("continue",[(le, "$g_prisoner_recruit_troop_id", 0)],"Go back.",
       [(jump_to_menu, "mnu_camp"),
        ]
       ),
      ]
  ),

  ("camp_no_prisoners",0,
   "You have no prisoners to recruit from.",
   "none",
   [],
    [
      ("continue",[],"Continue...",
       [(jump_to_menu, "mnu_camp"),
        ]
       ),
      ]
  ),

  ("camp_action_read_book",0,
   "Choose a book to read:",
   "none",
   [],
    [
      ("action_read_book_1",[(player_has_item, "itm_book_tactics"),
                             (item_slot_eq, "itm_book_tactics", slot_item_book_read, 0),
                             (str_store_item_name, s1, "itm_book_tactics"),
                             ],"{s1}.",
       [(assign, "$temp", "itm_book_tactics"),
        (jump_to_menu, "mnu_camp_action_read_book_start"),
        ]
       ),
      ("action_read_book_2",[(player_has_item, "itm_book_persuasion"),
                             (item_slot_eq, "itm_book_persuasion", slot_item_book_read, 0),
                             (str_store_item_name, s1, "itm_book_persuasion"),
                             ],"{s1}.",
       [(assign, "$temp", "itm_book_persuasion"),
        (jump_to_menu, "mnu_camp_action_read_book_start"),
        ]
       ),
      ("action_read_book_3",[(player_has_item, "itm_book_leadership"),
                             (item_slot_eq, "itm_book_leadership", slot_item_book_read, 0),
                             (str_store_item_name, s1, "itm_book_leadership"),
                             ],"{s1}.",
       [(assign, "$temp", "itm_book_leadership"),
        (jump_to_menu, "mnu_camp_action_read_book_start"),
        ]
       ),
      ("action_read_book_4",[(player_has_item, "itm_book_intelligence"),
                             (item_slot_eq, "itm_book_intelligence", slot_item_book_read, 0),
                             (str_store_item_name, s1, "itm_book_intelligence"),
                             ],"{s1}.",
       [(assign, "$temp", "itm_book_intelligence"),
        (jump_to_menu, "mnu_camp_action_read_book_start"),
        ]
       ),
      ("action_read_book_5",[(player_has_item, "itm_book_trade"),
                             (item_slot_eq, "itm_book_trade", slot_item_book_read, 0),
                             (str_store_item_name, s1, "itm_book_trade"),
                             ],"{s1}.",
       [(assign, "$temp", "itm_book_trade"),
        (jump_to_menu, "mnu_camp_action_read_book_start"),
        ]
       ),
      ("action_read_book_6",[(player_has_item, "itm_book_weapon_mastery"),
                             (item_slot_eq, "itm_book_weapon_mastery", slot_item_book_read, 0),
                             (str_store_item_name, s1, "itm_book_weapon_mastery"),
                             ],"{s1}.",
       [(assign, "$temp", "itm_book_weapon_mastery"),
        (jump_to_menu, "mnu_camp_action_read_book_start"),
        ]
       ),
      ("action_read_book_7",[(player_has_item, "itm_book_engineering"),
                             (item_slot_eq, "itm_book_engineering", slot_item_book_read, 0),
                             (str_store_item_name, s1, "itm_book_engineering"),
                             ],"{s1}.",
       [(assign, "$temp", "itm_book_engineering"),
        (jump_to_menu, "mnu_camp_action_read_book_start"),
        ]
       ),
      ("book_next_page",[],"Next page.",
       [(jump_to_menu, "mnu_camp_action_read_book2"),
        ]
       ),
      ("camp_action_4",[],"Back to camp menu.",
       [(jump_to_menu, "mnu_camp"),
        ]
       ),
      ]
  ),

  ("camp_action_read_book_start",0,
   "{s1}",
   "none",
   [(assign, ":new_book", "$temp"),
    (str_store_item_name, s2, ":new_book"),
    (try_begin),
      (store_attribute_level, ":int", "trp_player", ca_intelligence),
      (item_get_slot, ":int_req", ":new_book", slot_item_intelligence_requirement),
      (le, ":int_req", ":int"),
      (str_store_string, s1, "@You start reading {s2}. After a few pages,\
 you feel you could learn a lot from this book. You decide to keep it close by and read whenever you have the time."),
      (assign, "$g_player_reading_book", ":new_book"),
    (else_try),
      (str_store_string, s1, "@You flip through the pages of {s2}, but you find the text confusing and difficult to follow.\
 Try as you might, it soon gives you a headache, and you're forced to give up the attempt."),
    (try_end),],
    [
      ("continue",[],"Continue...",
       [(jump_to_menu, "mnu_camp"),
        ]
       ),
      ]
  ),


  ("retirement_verify",0,
   "You are at day {reg0}. Your current luck is {reg1}. Are you sure you want to retire?",
   "none",
   [
     (store_current_day, reg0),
     (assign, reg1, "$g_player_luck"),
     ],
    [
      ("retire_yes",[],"Yes.",
       [
         (start_presentation, "prsnt_retirement"),
        ]
       ),
      ("retire_no",[],"No.",
       [
         (jump_to_menu, "mnu_camp"),
        ]
       ),
      ]
  ),

  ("end_game",0,
   "The decision is made, and you resolve to give up your adventurer's\
 life and settle down. You sell off your weapons and armour, gather up\
 all your money, and ride off into the sunset....",
   "none",
   [],
    [
      ("end_game_bye",[],"Farewell.",
       [
         (change_screen_quit),
        ]
       ),
      ]
  ),

  ("cattle_herd",mnf_scale_picture,
   "You encounter a herd of cattle.",
   "none",
   [(play_sound, "snd_cow_moo"),
    (set_background_mesh, "mesh_pic_cattle"),
   ],
    [
      ("cattle_drive_away",[],"Drive the cattle onward.",
       [
        (party_set_slot, "$g_encountered_party", slot_cattle_driven_by_player, 1),
        (party_set_ai_behavior, "$g_encountered_party", ai_bhvr_driven_by_party),
        (party_set_ai_object,"$g_encountered_party", "p_main_party"),
        (party_set_extra_text, "$g_encountered_party", "str_ai_bhvr_driven_by_party"),
        (change_screen_return),
        ]
       ),

       #SB : cattle tweaks
      ("cattle_drag_with",[
       (call_script, "script_party_count_members_with_full_health", "p_main_party"),
       (party_stack_get_size, ":num_cattle", "$g_encountered_party", 0),
       (ge, reg0, ":num_cattle"),
      ],"Drag the cattle with you.",
       [
        (party_set_slot, "$g_encountered_party", slot_cattle_driven_by_player, 1),
        (party_set_ai_behavior, "$g_encountered_party", ai_bhvr_escort_party),
        (party_set_ai_object,"$g_encountered_party", "p_main_party"),
        (party_set_extra_text, "$g_encountered_party", "str_ai_bhvr_escort_party"),
        (change_screen_return),
        ]
       ),

      ("cattle_stop",[],"Bring the herd to a stop.",
       [
        (party_set_slot, "$g_encountered_party", slot_cattle_driven_by_player, 0),
        (party_set_ai_behavior, "$g_encountered_party", ai_bhvr_hold),
        (party_set_extra_text, "$g_encountered_party", "@Grazing"),
        (change_screen_return),
        ]
       ),
      ("cattle_kill",[(assign, ":continue", 1),
                      (try_begin),
                        (check_quest_active, "qst_move_cattle_herd"),
                        (quest_slot_eq, "qst_move_cattle_herd", slot_quest_target_party, "$g_encountered_party"),
                        (assign, ":continue", 0),
                      (try_end),
                      (eq, ":continue", 1)],"Slaughter some of the animals.",
       [(jump_to_menu, "mnu_cattle_herd_kill"),
        ]
       ),
      ("leave",[],"Leave.",
       [(change_screen_return),
        ]
       ),
      ]
  ),

  ("cattle_herd_kill",0,
   "How many animals do you want to slaughter?",
   "none",
   [(party_get_num_companions, reg5, "$g_encountered_party")],
    [
      ("cattle_kill_1",[(ge, reg5, 1),],"One.",
       [(call_script, "script_kill_cattle_from_herd", "$g_encountered_party", 1),
        (jump_to_menu, "mnu_cattle_herd_kill_end"),
        (change_screen_loot, "trp_temp_troop"),
        (play_sound, "snd_cow_slaughter"),
        ]
       ),
      ("cattle_kill_2",[(ge, reg5, 2),],"Two.",
       [(call_script, "script_kill_cattle_from_herd", "$g_encountered_party", 2),
        (jump_to_menu, "mnu_cattle_herd_kill_end"),
        (change_screen_loot, "trp_temp_troop"),
        (play_sound, "snd_cow_slaughter"),
        ]
       ),
      ("cattle_kill_3",[(ge, reg5, 3),],"Three.",
       [(call_script, "script_kill_cattle_from_herd", "$g_encountered_party", 3),
        (jump_to_menu, "mnu_cattle_herd_kill_end"),
        (change_screen_loot, "trp_temp_troop"),
        (play_sound, "snd_cow_slaughter"),
        ]
       ),
      ("cattle_kill_4",[(ge, reg5, 4),],"Four.",
       [(call_script, "script_kill_cattle_from_herd", "$g_encountered_party", 4),
        (jump_to_menu, "mnu_cattle_herd_kill_end"),
        (change_screen_loot, "trp_temp_troop"),
        (play_sound, "snd_cow_slaughter"),
        ]
       ),
      ("cattle_kill_5",[(ge, reg5, 5),],"Five.",
       [(call_script, "script_kill_cattle_from_herd", "$g_encountered_party", 5),
        (jump_to_menu, "mnu_cattle_herd_kill_end"),
        (change_screen_loot, "trp_temp_troop"),
        (play_sound, "snd_cow_slaughter"),
        ]
       ),
      ("go_back_dot",[],"Go back.",
       [(jump_to_menu, "mnu_cattle_herd"),
        ]
       ),
      ]
  ),

  ("cattle_herd_kill_end",0,
   "{!}You shouldn't be reading this.",
   "none",
   [(change_screen_return)],
    [
      ]
  ),


  ("arena_duel_fight",0,
   "You and your opponent prepare to duel.",
   "none",
   [
      (troop_get_slot, ":leader_troop_faction", "$g_duel_troop", slot_troop_original_faction),
      (try_begin),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_1), #romans
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_2),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_13),
        (eq, ":leader_troop_faction", fac_kingdom_22),
        (set_background_mesh, "mesh_pic_swad"),
      (else_try),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_3), #germanic
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_4),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_7),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_8),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_9),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_10),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_11),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_14),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_15),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_17),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_18),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_20),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_30),
        (eq, ":leader_troop_faction", fac_kingdom_21),
        (set_background_mesh, "mesh_pic_vaegir"),
      (else_try),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_23), #steppe
        (eq, ":leader_troop_faction", fac_kingdom_27),
        (set_background_mesh, "mesh_pic_khergit"),
      (else_try),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_12), #northern germanic
        (eq, ":leader_troop_faction", fac_kingdom_19),
        (set_background_mesh, "mesh_pic_nord"),
      (else_try),
        (eq, ":leader_troop_faction", fac_kingdom_5),
        (set_background_mesh, "mesh_pic_rhodock"),
      (else_try),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_31),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_6),
        (this_or_next|eq, ":leader_troop_faction", fac_kingdom_16),
        (eq, ":leader_troop_faction", fac_kingdom_24),
        (set_background_mesh, "mesh_pic_sarranid_encounter"),
      (try_end),
   ],
   [
     ("continue",[],"Continue...",
      [
        (assign, "$g_leave_encounter", 0),
        (assign, ":closest_town", "$g_encountered_party"),

        #restructure this to take into account $g_start_arena_fight_at_nearest_town
        (try_begin), #check if the parameter is necessary
          (neg|is_between, ":closest_town", walled_centers_begin, walled_centers_end),
          (is_between, "$g_start_arena_fight_at_nearest_town", walled_centers_begin, walled_centers_end),
          (assign, ":closest_town", "$g_start_arena_fight_at_nearest_town"),
          (assign, "$g_start_arena_fight_at_nearest_town", 0),
        (try_end),

        (try_begin),
          (is_between, ":closest_town", towns_begin, towns_end),
          (party_get_slot, ":duel_scene", ":closest_town", slot_town_arena),
        (else_try), #SB : duels at castle arena
          (is_between, ":closest_town", castles_begin, castles_end),
          (party_get_slot, ":duel_scene", ":closest_town", slot_castle_exterior),
        (else_try),
          (party_get_current_terrain, ":terrain", "p_main_party"),
          (eq, ":terrain", rt_snow),
          (assign, ":duel_scene", "scn_training_ground_ranged_melee_3"),
        (else_try),
          (this_or_next|eq, ":terrain", rt_desert),
          (eq, ":terrain", rt_steppe), #this is the actual steppe scene
          (assign, ":duel_scene", "scn_training_ground_ranged_melee_4"),
        (else_try),
          (assign, ":duel_scene", "scn_training_ground_ranged_melee_1"),
        (try_end),
        (modify_visitors_at_site, ":duel_scene"),
        (reset_visitors),
        # (set_visitor, 0, "trp_player"),
        # (set_visitor, 1, "$g_duel_troop"),
        (troop_set_slot, "trp_tournament_participants", 0, "trp_player"),
        (troop_set_slot, "trp_tournament_participants", 1, "$g_duel_troop"),
        (set_jump_mission, "mt_duel_with_lord"),
        #SB : check relative standing, 0 = (higher renown)
        (try_begin),
          (troop_is_hero, "$g_duel_troop"),
          (troop_get_slot, ":player_renown", "trp_player", slot_troop_renown),
          (troop_slot_ge, "$g_duel_troop", slot_troop_renown, ":player_renown"),
          #swap positions
          (troop_set_slot, "trp_tournament_participants", 1, "trp_player"),
          (troop_set_slot, "trp_tournament_participants", 0, "$g_duel_troop"),
        (try_end),
        #SB : set up additional equipment, do not always use sword_medieval_a
        (troop_get_slot, ":faction", "$g_duel_troop", slot_troop_original_faction),
        (try_begin), #romans
          (this_or_next|eq, ":faction", "fac_kingdom_1"),
          (this_or_next|eq, ":faction", "fac_kingdom_2"),
          (this_or_next|eq, ":faction", "fac_kingdom_13"),
          (this_or_next|eq, ":faction", "fac_kingdom_22"),
          (this_or_next|eq, ":faction", "fac_kingdom_25"),
          (eq, ":faction", "fac_kingdom_26"),
          (assign, ":weapon", "itm_sword_khergit_3"),
        (else_try),
          (this_or_next|eq, ":faction", fac_kingdom_3), #germanic
          (this_or_next|eq, ":faction", fac_kingdom_4),
          (this_or_next|eq, ":faction", fac_kingdom_7),
          (this_or_next|eq, ":faction", fac_kingdom_8),
          (this_or_next|eq, ":faction", fac_kingdom_9),
          (this_or_next|eq, ":faction", fac_kingdom_10),
          (this_or_next|eq, ":faction", fac_kingdom_11),
          (this_or_next|eq, ":faction", fac_kingdom_14),
          (this_or_next|eq, ":faction", fac_kingdom_15),
          (this_or_next|eq, ":faction", fac_kingdom_17),
          (this_or_next|eq, ":faction", fac_kingdom_18),
          (this_or_next|eq, ":faction", fac_kingdom_20),
          (this_or_next|eq, ":faction", fac_kingdom_30),
          (eq, ":faction", fac_kingdom_21),
          (assign, ":weapon", "itm_sword_medieval_c"),
        (else_try),
          (this_or_next|eq, ":faction", fac_kingdom_12), #northern germanic
          (eq, ":faction", fac_kingdom_19),
          (assign, ":weapon", "itm_sword_medieval_a"),
        (else_try),
          (this_or_next|eq, ":faction", fac_kingdom_31),
          (this_or_next|eq, ":faction", fac_kingdom_6), #sassanid/caucasian
          (this_or_next|eq, ":faction", fac_kingdom_16),
          (eq, ":faction", fac_kingdom_24),
          (assign, ":weapon", "itm_samad_sword"),
        (else_try),
          (this_or_next|eq, ":faction", fac_kingdom_23), #steppe
          (eq, ":faction", fac_kingdom_27),
          (assign, ":weapon", "itm_hunnic_spatha"),
        (else_try),
          (assign, ":weapon", "itm_sword_medieval_d_long"),
        (try_end),

        (try_for_range, ":cur_entry_point", 0, 2),
          (troop_get_slot, ":cur_troop", "trp_tournament_participants", ":cur_entry_point"),
          (try_begin), #within the courtyard, 23/24 is guard entry
            (is_between, ":closest_town", castles_begin, castles_end),
            (val_add, ":cur_entry_point", 2), #to use the new mission template entries 3 & 4
          (try_end),

          (mission_tpl_entry_clear_override_items, "mt_duel_with_lord", ":cur_entry_point"),
          #weapon, make sure they have no difficulty requirement
          (mission_tpl_entry_add_override_item, "mt_duel_with_lord", ":cur_entry_point", ":weapon"),

          #armor, they're statistically almost the same
          #(troop_get_slot, ":renown", ":cur_troop", slot_troop_renown),
          #(val_min, ":renown", 1999), #SB : fix for turret hat
          #(store_div, ":armor", ":renown", 500),#0 to 3
          #(val_add, ":armor", "itm_heraldic_mail_with_surcoat"),
          #(mission_tpl_entry_add_override_item, "mt_duel_with_lord", ":cur_entry_point", ":armor"),

          (set_visitor, ":cur_entry_point", ":cur_troop"),
        (try_end),

        (jump_to_scene, ":duel_scene"),
        (jump_to_menu, "mnu_arena_duel_conclusion"),
        (change_screen_mission),
      ]),
    ]
  ),


  ("arena_duel_conclusion",0,
   "{!}{s11}",
   "none",
   [

    (try_begin),
		(eq, "$g_leave_encounter", 1),
		(change_screen_return),
	(try_end),

    (str_store_troop_name, s10, "$g_duel_troop"),
    #SB : change to loop
    (store_add, ":end", lady_quests_end, 2),
    (try_for_range, ":quest", "qst_duel_for_lady", ":end"),
      (try_begin),
        (eq, ":quest", lady_quests_end),
        (assign, ":quest", "qst_denounce_lord"),
      (try_end),
      (quest_slot_eq, ":quest", slot_quest_target_troop, "$g_duel_troop"),
      #get gender string
      (call_script, "script_dplmc_store_troop_is_female_reg", "$g_talk_troop", 65),
      (try_begin),
        (check_quest_succeeded, ":quest"),
        (str_store_string, s11, "str_s10_lies_in_the_arenas_dust_for_several_minutes_then_staggers_to_his_feet_you_have_won_the_duel"),
        #(set_background_mesh, "mesh_pic_victory"),
      (else_try),
        (check_quest_failed, ":quest"),
        (str_store_string, s11, "str_you_lie_stunned_for_several_minutes_then_stagger_to_your_feet_to_find_your_s10_standing_over_you_you_have_lost_the_duel"),
        #(set_background_mesh, "mesh_pic_defeat"),
      (try_end),
    (try_end),
   ],
   [
     ("continue",[],"Continue...",
      [
        (assign, "$talk_context", tc_after_duel),
        (try_begin), #SB : use the appropriate script calls
          (is_between, "$g_encountered_party", centers_begin, centers_end),
          (call_script, "script_start_court_conversation", "$g_duel_troop", "$g_encountered_party"), #SB : script call
        (else_try),
          (call_script, "script_setup_troop_meeting", "$g_duel_troop", -1), #SB : script call
        (try_end),
        ]),
      ]
  ),


  (
    "simple_encounter",mnf_enable_hot_keys|mnf_scale_picture,
    "{s2} You have {reg10} troops fit for battle against their {reg11}.",
    "none",
    [
        (assign, "$g_enemy_party", "$g_encountered_party"),
        (assign, "$g_ally_party", -1),
        (call_script, "script_encounter_calculate_fit"),
        (try_begin),
          (eq, "$new_encounter", 1),
          (assign, "$new_encounter", 0),
          (assign, "$g_encounter_is_in_village", 0),
          (assign, "$g_encounter_type", 0),
          (try_begin),
		(party_slot_eq, "p_main_party", slot_party_on_water, 0),
		(party_slot_eq, "$g_enemy_party", slot_party_ai_state, spai_raiding_around_center),
		(party_get_slot, ":village_no", "$g_enemy_party", slot_party_ai_object),
		(is_between, ":village_no", villages_begin, villages_end), #madsci
		(store_distance_to_party_from_party, ":dist", ":village_no", "$g_enemy_party"),
            		(try_begin),
              		(lt, ":dist", raid_distance),
              		(assign, "$g_encounter_is_in_village", ":village_no"),
              		(assign, "$g_encounter_type", enctype_fighting_against_village_raid),
            		(try_end),
          (try_end),
          (try_begin),
		(party_slot_eq, "p_main_party", slot_party_on_water, 0),
            	(gt, "$g_player_raiding_village", 0),
            	(assign, "$g_encounter_is_in_village", "$g_player_raiding_village"),
            	(assign, "$g_encounter_type", enctype_catched_during_village_raid),
            	(party_quick_attach_to_current_battle, "$g_encounter_is_in_village", 1), #attach as enemy
            	(str_store_string, s1, "@Villagers"),
            	(display_message, "str_s1_joined_battle_enemy", message_negative), #SB : colorize
          (else_try),
		(party_slot_eq, "p_main_party", slot_party_on_water, 0),
            	(eq, "$g_encounter_type", enctype_fighting_against_village_raid),
            	(party_quick_attach_to_current_battle, "$g_encounter_is_in_village", 0), #attach as friend
            	(str_store_string, s1, "@Villagers"),
            	(display_message, "str_s1_joined_battle_friend", message_positive), #SB : colorize
            # Let village party join battle at your side
          (try_end),

          (call_script, "script_let_nearby_parties_join_current_battle", 0, 0),
          (call_script, "script_encounter_init_variables"),
          (assign, "$encountered_party_hostile", 0),
          (assign, "$encountered_party_friendly", 0),
          (try_begin),
            (gt, "$g_encountered_party_relation", 0),
            (try_begin), #SB : apply provocation override
              (check_quest_active, "qst_cause_provocation"),
              (neg|check_quest_concluded, "qst_cause_provocation"),
              (quest_slot_eq, "qst_cause_provocation", slot_quest_target_faction, "$g_encountered_party_faction"),
              (party_slot_eq, "$g_encountered_party", slot_party_type, spt_kingdom_caravan),
              (assign, "$encountered_party_friendly", 0),
            (else_try),
              (assign, "$encountered_party_friendly", 1),
            (try_end),
          (try_end),

          (try_begin),
            (lt, "$g_encountered_party_relation", 0),
            (assign, "$encountered_party_hostile", 1),
            (try_begin),
              (encountered_party_is_attacker),
              (assign, "$cant_leave_encounter", 1),
            (try_end),
          (try_end),
          (assign, "$talk_context", tc_party_encounter),
          (call_script, "script_setup_party_meeting", "$g_encountered_party"),
        (else_try), #second or more turn
#          (try_begin),
#            (call_script, "script_encounter_calculate_morale_change"),
#          (try_end),
          (try_begin),
            # We can leave battle only after some troops have been killed.
            (eq, "$cant_leave_encounter", 1),
            (call_script, "script_party_count_members_with_full_health", "p_main_party_backup"),
            (assign, ":org_total_party_counts", reg0),
            (call_script, "script_party_count_members_with_full_health", "p_encountered_party_backup"),
            (val_add, ":org_total_party_counts", reg0),

            (call_script, "script_party_count_members_with_full_health", "p_main_party"),
            (assign, ":cur_total_party_counts", reg0),
            (call_script, "script_party_count_members_with_full_health", "p_collective_enemy"),
            (val_add, ":cur_total_party_counts", reg0),

            (store_sub, ":leave_encounter_limit", ":org_total_party_counts", 10),
            (lt, ":cur_total_party_counts", ":leave_encounter_limit"),
            (assign, "$cant_leave_encounter", 0),
          (try_end),
          (eq, "$g_leave_encounter",1),
          (change_screen_return),
        (try_end),

        #setup s2
        (try_begin),
          (party_is_active, "$g_encountered_party"),
          (str_store_party_name, s1,"$g_encountered_party"),
          (try_begin),
            (eq, "$g_encounter_type", 0),
            (str_store_string, s2,"@You have encountered {s1}."),
          (else_try),
            (eq, "$g_encounter_type", enctype_fighting_against_village_raid),
            (str_store_party_name, s3, "$g_encounter_is_in_village"),
            (str_store_string, s2,"@You have engaged {s1} while they were raiding {s3}."),
          (else_try),
            (eq, "$g_encounter_type", enctype_catched_during_village_raid),
            (str_store_party_name, s3, "$g_encounter_is_in_village"),
            (str_store_string, s2,"@You were caught by {s1} while your forces were raiding {s3}."),
          (try_end),
        (try_end),
        (try_begin),
          (call_script, "script_party_count_members_with_full_health", "p_collective_enemy"),
          (assign, ":num_enemy_regulars_remaining", reg0),
          (assign, ":enemy_finished", 0),
          (try_begin),
            (eq, "$g_battle_result", 1), #battle won

            (this_or_next|le, ":num_enemy_regulars_remaining", 0), #battle won
            (le, ":num_enemy_regulars_remaining",  "$num_routed_enemies"), #replaced for above line because we do not want routed agents to spawn again in next turn of battle.

            (assign, ":enemy_finished",1),
          (else_try),
            (eq, "$g_engaged_enemy", 1),

            (this_or_next|le, ":num_enemy_regulars_remaining", 0),
            (le, "$g_enemy_fit_for_battle", "$num_routed_enemies"),  #replaced for above line because we do not want routed agents to spawn again in next turn of battle.

            (ge, "$g_friend_fit_for_battle",1),
            (assign, ":enemy_finished",1),
          (try_end),

          (this_or_next|eq, ":enemy_finished",1),
          # (this_or_next|eq, ":num_enemy_regulars_remaining",0),
          (eq,"$g_enemy_surrenders",1),
          (assign, "$g_next_menu", -1),
          (jump_to_menu, "mnu_total_victory"),
        (else_try),
          (call_script, "script_party_count_members_with_full_health", "p_main_party"),
          (assign, ":num_our_regulars_remaining", reg0),
          (assign, ":friends_finished",0),
          (try_begin),
            (eq, "$g_battle_result", -1),

            #(eq, ":num_our_regulars_remaining", 0), #battle lost
            (le, ":num_our_regulars_remaining",  "$num_routed_us"), #replaced for above line because we do not want routed agents to spawn again in next turn of battle.

            (assign,  ":friends_finished", 1),
          (else_try),
            (eq, "$g_engaged_enemy", 1),
            (ge, "$g_enemy_fit_for_battle",1),
            (le, "$g_friend_fit_for_battle",0),
            (assign, ":friends_finished",1),
          (try_end),

          (this_or_next|eq, ":friends_finished",1),
          (eq,"$g_player_surrenders",1),
          (assign, "$g_next_menu", "mnu_captivity_start_wilderness"),
          (jump_to_menu, "mnu_total_defeat"),
        (try_end),


        (try_begin),
          (eq, "$g_encountered_party_template", "pt_looters"),
          (set_background_mesh, "mesh_pic_bandits"),
        (else_try),
          (eq, "$g_encountered_party_template", "pt_mountain_bandits"),
          (set_background_mesh, "mesh_pic_mountain_bandits"),
        (else_try),
          (eq, "$g_encountered_party_template", "pt_steppe_bandits"),
          (set_background_mesh, "mesh_pic_steppe_bandits"),
        (else_try),
          (eq, "$g_encountered_party_template", "pt_taiga_bandits"),
          (set_background_mesh, "mesh_pic_mb_warrior_1"),
        (else_try),
          (this_or_next|eq, "$g_encountered_party_template", "pt_saxon_raiders"),
          (eq, "$g_encountered_party_template", "pt_sea_raiders"),
          (set_background_mesh, "mesh_pic_sea_raiders"),
        (else_try),
          (eq, "$g_encountered_party_template", "pt_forest_bandits"),
          (set_background_mesh, "mesh_pic_forest_bandits"),
        (else_try),
          (this_or_next|eq, "$g_encountered_party_template", "pt_deserters"),
          (eq, "$g_encountered_party_template", "pt_routed_warriors"),
          (set_background_mesh, "mesh_pic_deserters"),
        #SB : dplmc party templates
        (else_try),
          (eq, "$g_encountered_party_template", "pt_center_reinforcements"),
          (set_background_mesh, "mesh_pic_recruits"),
        (else_try),
          (eq, "$g_encountered_party_template", "pt_kingdom_hero_party"),
		  (party_stack_get_troop_id, ":leader_troop", "$g_encountered_party", 0),
		  (ge, ":leader_troop", 1),
		  (troop_get_slot, ":leader_troop_faction", ":leader_troop", slot_troop_original_faction),
		(try_begin),
		(eq, ":leader_troop_faction", fac_kingdom_1),
		(set_background_mesh, "mesh_pic_swad"),
		(else_try),
		(eq, ":leader_troop_faction", fac_kingdom_2),
		(set_background_mesh, "mesh_pic_vaegir"),
		(else_try),
		(eq, ":leader_troop_faction", fac_kingdom_3),
		(set_background_mesh, "mesh_pic_khergit"),
		(else_try),
		(eq, ":leader_troop_faction", fac_kingdom_4),
		(set_background_mesh, "mesh_pic_nord"),
		(else_try),
		(eq, ":leader_troop_faction", fac_kingdom_5),
		(set_background_mesh, "mesh_pic_rhodock"),
		(else_try),
		(eq, ":leader_troop_faction", fac_kingdom_6),
            	(set_background_mesh, "mesh_pic_sarranid_encounter"),
		(else_try),
            	(set_background_mesh, "mesh_pic_swad"),
		(try_end),
        (try_end),
    ],
    [
      ("encounter_attack",
      [
        (eq, "$encountered_party_friendly", 0),
        (neg|troop_is_wounded, "trp_player"),
          (try_begin),
		(eq, "$sea_battles", 1),
		(eq, "$freelancer_state", 1),
		(gt, "$enlisted_party", 0),
		(party_is_active, "$enlisted_party"),
           	(party_slot_eq, "$enlisted_party", slot_party_on_water, 1),
		(call_script, "script_check_ports", "$enlisted_party"),
		(party_get_current_terrain, ":terrain", "$enlisted_party"),
		(this_or_next|gt, reg0, -1),
		(this_or_next|eq, ":terrain", rt_deep_water),
		(this_or_next|eq, ":terrain", rt_water),
		(eq, ":terrain", rt_river),
            	(str_store_string, s7, "@Board"),
          (else_try),
		(eq, "$sea_battles", 1),
            	(party_slot_eq, "p_main_party", slot_party_on_water, 1),
		(call_script, "script_check_ports", "p_main_party"),
		(party_get_current_terrain, ":terrain", "p_main_party"),
		(this_or_next|gt, reg0, -1),
		(this_or_next|eq, ":terrain", rt_deep_water),
		(this_or_next|eq, ":terrain", rt_water),
		(eq, ":terrain", rt_river),
            	(str_store_string, s7, "@Board"),
          (else_try),
            	(str_store_string, s7, "@Charge"),
          (end_try),
      ],
      "{s7} the enemy.",
      [
        (assign, "$g_battle_result", 0),
        (assign, "$g_engaged_enemy", 1),

        (party_get_template_id, ":encountered_party_template", "$g_encountered_party"),
        (try_begin),
		  (eq, ":encountered_party_template", "pt_village_farmers"),
		  (unlock_achievement, ACHIEVEMENT_HELP_HELP_IM_BEING_REPRESSED),
		(try_end),

        (call_script, "script_calculate_renown_value"),
		##diplomacy start+
		(try_begin),
		(assign, ":cont", 1),  #madsci we dont need terrain advantage stuff in sea battles
        		(try_begin),
			(eq, "$sea_battles", 1),
			(eq, "$freelancer_state", 1),
			(gt, "$enlisted_party", 0),
			(party_is_active, "$enlisted_party"),
        		(party_slot_eq, "$enlisted_party", slot_party_on_water, 1),
			(call_script, "script_check_ports", "$enlisted_party"),
			(party_get_current_terrain, ":terrain", "$enlisted_party"),
			(this_or_next|gt, reg0, -1),
			(this_or_next|eq, ":terrain", rt_deep_water),
			(this_or_next|eq, ":terrain", rt_water),
			(eq, ":terrain", rt_river),
        		(assign, ":cont", 0),
        		(else_try),
			(eq, "$sea_battles", 1),
        		(party_slot_eq, "p_main_party", slot_party_on_water, 1),
			(call_script, "script_check_ports", "p_main_party"),
			(party_get_current_terrain, ":terrain", "p_main_party"),
			(this_or_next|gt, reg0, -1),
			(this_or_next|eq, ":terrain", rt_deep_water),
			(this_or_next|eq, ":terrain", rt_water),
			(eq, ":terrain", rt_river),
        		(assign, ":cont", 0),
			(try_end),
		(eq, ":cont", 1),
			#Call this to properly set cached values for strength
			(eq, "$g_dplmc_terrain_advantage", DPLMC_TERRAIN_ADVANTAGE_ENABLE),
			(assign, ":terrain_code", dplmc_terrain_code_none),#defined in header_terrain_types.py
			(try_begin),
				(this_or_next|eq, "$g_encounter_type", enctype_fighting_against_village_raid),
					(eq, "$g_encounter_type", enctype_catched_during_village_raid),
				(assign, ":terrain_code", dplmc_terrain_code_village),#defined in header_terrain_types.py
			(else_try),
				(encountered_party_is_attacker),
				(call_script, "script_dplmc_get_terrain_code_for_battle", "$g_encountered_party", "p_main_party"),
				(assign, ":terrain_code", reg0),
			(else_try),
				(call_script, "script_dplmc_get_terrain_code_for_battle", "p_main_party", "$g_encountered_party"),
				(assign, ":terrain_code", reg0),
			(try_end),
			(neq, ":terrain_code", dplmc_terrain_code_none),
			(call_script, "script_dplmc_party_calculate_strength_in_terrain", "p_main_party", ":terrain_code", 0, 1),
			(call_script, "script_dplmc_party_calculate_strength_in_terrain", "$g_encountered_party", ":terrain_code", 0, 1),
		(try_end),
		##diplomacy end+
        (call_script, "script_calculate_battle_advantage"),
        (set_battle_advantage, reg0),
        (set_party_battle_mode),

        (try_begin),
          (eq, "$g_encounter_type", enctype_fighting_against_village_raid),
	  (is_between, "$g_encounter_is_in_village", centers_begin, centers_end),
          (assign, "$g_village_raid_evil", 0),
          (set_jump_mission,"mt_village_raid"),
          (party_get_slot, ":scene_to_use", "$g_encounter_is_in_village", slot_castle_exterior),
		(try_begin),
	  	(gt, ":scene_to_use", 0),
          	(jump_to_scene, ":scene_to_use"),
		(else_try),
		(call_script, "script_setup_random_scene"),
		(try_end),
        (else_try),
          (eq, "$g_encounter_type", enctype_catched_during_village_raid),
	  (is_between, "$g_encounter_is_in_village", centers_begin, centers_end),
          (assign, "$g_village_raid_evil", 1), #SB : probably true
          (set_jump_mission,"mt_village_raid"),
          (party_get_slot, ":scene_to_use", "$g_encounter_is_in_village", slot_castle_exterior),
		(try_begin),
	  	(gt, ":scene_to_use", 0),
          	(jump_to_scene, ":scene_to_use"),
		(else_try),
		(call_script, "script_setup_random_scene"),
		(try_end),
          (else_try),
	(eq, "$sea_battles", 1),
            (party_slot_eq, "p_main_party", slot_party_on_water, 1),	# = sea battle
		(call_script, "script_check_ports", "p_main_party"),
		(party_get_current_terrain, ":terrain", "p_main_party"),
		(this_or_next|gt, reg0, -1),
		(this_or_next|eq, ":terrain", rt_deep_water),
		(this_or_next|eq, ":terrain", rt_water),
		(eq, ":terrain", rt_river),
		#(store_faction_of_party, ":party_faction", "$g_encountered_party"),
            	#(try_begin),
		#(this_or_next|eq, ":party_faction", "fac_neutral"),
		#(this_or_next|eq, ":party_faction", "fac_commoners"),
		#(party_slot_eq, "$g_encountered_party", slot_party_type, spt_village_farmer),
              	#(assign, ":prepare_party_ships_for_team_script", "script_randomize_ships_for_team_civilian"),
		#(else_try),
              	(assign, ":prepare_party_ships_for_team_script", "script_randomize_ships_for_team_war_party"),
            	#(end_try),
            #new end
            (call_script, "script_party_count_members_with_full_health", "$g_encountered_party"),
            (assign, ":num_enemy", reg0),
            (call_script, "script_party_count_members_with_full_health", "p_main_party"),
		(assign, ":num_ours", reg0),
            (store_add, "$startup_battle_size", ":num_enemy", reg0),
            (try_begin),
              (encountered_party_is_attacker),
              (select_enemy, 1),
              (assign, "$player_team_in_sea_battle", 0),
              #(call_script, "script_prepare_party_ships_for_team", "p_main_party", 0),
		(assign, "$checked_ship_party", "p_main_party"),
              (call_script, "script_randomize_ships_for_team_war_party", 0, ":num_ours"),
		(assign, "$checked_ship_party", "$g_encountered_party"),
              (call_script, ":prepare_party_ships_for_team_script", 1, ":num_enemy"),
            (else_try),
              (select_enemy, 0),
              (assign, "$player_team_in_sea_battle", 1),
		(assign, "$checked_ship_party", "$g_encountered_party"),
              (call_script, ":prepare_party_ships_for_team_script", 0, ":num_enemy"),
		(assign, "$checked_ship_party", "p_main_party"),
              (call_script, "script_randomize_ships_for_team_war_party", 1, ":num_ours"),
             #(call_script, "script_prepare_party_ships_for_team", "p_main_party", 1),
            (end_try),
            (set_jump_mission,"mt_sea_battle"),
            #(jump_to_scene,"scn_sea_battle"),
            (call_script, "script_setup_random_sea_scene"),
            (assign, "$g_next_menu", "mnu_simple_encounter"),
            (jump_to_menu, "mnu_battle_debrief"),
            (change_screen_mission),
            # phaiak end
            #caravan chief anadido
        (else_try),
          (set_jump_mission,"mt_lead_charge"),
          (call_script, "script_setup_random_scene"),
        (try_end),
        (assign, "$g_next_menu", "mnu_simple_encounter"),
        (jump_to_menu, "mnu_battle_debrief"),
        (change_screen_mission),
      ]),

      ("encounter_hold",
      [
        (eq, "$encountered_party_friendly", 0),
        (neg|troop_is_wounded, "trp_player"),
	(neg|party_slot_eq, "p_main_party", slot_party_on_water, 1),
      ],
      "Start battle holding position.",
      [
        (assign, "$g_battle_result", 0),
        (assign, "$g_engaged_enemy", 1),

        (party_get_template_id, ":encountered_party_template", "$g_encountered_party"),
        (try_begin),
      (eq, ":encountered_party_template", "pt_village_farmers"),
      (unlock_achievement, ACHIEVEMENT_HELP_HELP_IM_BEING_REPRESSED),
    (try_end),

        (call_script, "script_calculate_renown_value"),
    ##diplomacy start+
    (try_begin),
      #Call this to properly set cached values for strength
      (eq, "$g_dplmc_terrain_advantage", DPLMC_TERRAIN_ADVANTAGE_ENABLE),
      (assign, ":terrain_code", dplmc_terrain_code_none),#defined in header_terrain_types.py
      (try_begin),
        (this_or_next|eq, "$g_encounter_type", enctype_fighting_against_village_raid),
          (eq, "$g_encounter_type", enctype_catched_during_village_raid),
        (assign, ":terrain_code", dplmc_terrain_code_village),#defined in header_terrain_types.py
      (else_try),
        (encountered_party_is_attacker),
        (call_script, "script_dplmc_get_terrain_code_for_battle", "$g_encountered_party", "p_main_party"),
        (assign, ":terrain_code", reg0),
      (else_try),
        (call_script, "script_dplmc_get_terrain_code_for_battle", "p_main_party", "$g_encountered_party"),
        (assign, ":terrain_code", reg0),
      (try_end),
      (neq, ":terrain_code", dplmc_terrain_code_none),
      (call_script, "script_dplmc_party_calculate_strength_in_terrain", "p_main_party", ":terrain_code", 0, 1),
      (call_script, "script_dplmc_party_calculate_strength_in_terrain", "$g_encountered_party", ":terrain_code", 0, 1),
    (try_end),
    ##diplomacy end+
        (call_script, "script_calculate_battle_advantage"),
        (set_battle_advantage, reg0),
        (set_party_battle_mode),

        (try_begin),
          (eq, "$g_encounter_type", enctype_fighting_against_village_raid),
          (assign, "$g_village_raid_evil", 0),
          (set_jump_mission,"mt_village_raid"),
          (party_get_slot, ":scene_to_use", "$g_encounter_is_in_village", slot_castle_exterior),
          (jump_to_scene, ":scene_to_use"),
        (else_try),
          (eq, "$g_encounter_type", enctype_catched_during_village_raid),
          (assign, "$g_village_raid_evil", 1), #SB : probably true
          (set_jump_mission,"mt_village_raid"),
          (party_get_slot, ":scene_to_use", "$g_encounter_is_in_village", slot_castle_exterior),
          (jump_to_scene, ":scene_to_use"),
        (else_try),
          (set_jump_mission,"mt_lead_charge"),
          (call_script, "script_setup_random_scene"),
        (try_end),
        (assign, "$g_next_menu", "mnu_simple_encounter"),
        (jump_to_menu, "mnu_battle_debrief"),
        (change_screen_mission),

        (assign, "$player_deploy_troops", 1),
      ]),

      ("encounter_order_attack",
      [
        (eq, "$encountered_party_friendly", 0),
        (call_script, "script_party_count_members_with_full_health", "p_main_party"),(ge, reg0, 4),
      ],
      "Order your troops to attack without you.",
      [
        (jump_to_menu, "mnu_order_attack_begin"),
        #(simulate_battle,3),
      ]),

      ("encounter_leave",[
          (eq,"$cant_leave_encounter", 0),
          ],"Leave.",[

###NPC companion changes begin
              (try_begin),
                  (eq, "$encountered_party_friendly", 0),
                  (encountered_party_is_attacker),
                  (call_script, "script_objectionable_action", tmt_aristocratic, "str_flee_battle"),
              (try_end),
###NPC companion changes end
#Troop commentary changes begin
              (try_begin),
                  (eq, "$encountered_party_friendly", 0),
#                  (encountered_party_is_attacker),
                  (party_get_num_companion_stacks, ":num_stacks", "p_encountered_party_backup"),
                  (try_for_range, ":stack_no", 0, ":num_stacks"),
                    (party_stack_get_troop_id,   ":stack_troop","p_encountered_party_backup",":stack_no"),
                    (is_between, ":stack_troop", active_npcs_begin, active_npcs_end),
					(troop_slot_eq, ":stack_troop", slot_troop_occupation, slto_kingdom_hero),
                    (store_troop_faction, ":victorious_faction", ":stack_troop"),
#					(store_relation, ":relation_with_stack_troop", ":victorious_faction", "fac_player_faction"),
#					(lt, ":relation_with_stack_troop", 0),
                    (call_script, "script_add_log_entry", logent_player_retreated_from_lord, "trp_player",  -1, ":stack_troop", ":victorious_faction"),
                  (try_end),
              (try_end),
#Troop commentary changes end
          	(leave_encounter),(change_screen_return)]),
      ("encounter_retreat",[
	(neg|party_slot_eq, "p_main_party", slot_party_on_water, 1),
         (eq,"$cant_leave_encounter", 1),
         (call_script, "script_get_max_skill_of_player_party", "skl_tactics"),
         (assign, ":max_skill", reg0),
         (val_add, ":max_skill", 4),

         (call_script, "script_party_count_members_with_full_health", "p_collective_enemy", 0),
         (assign, ":enemy_party_strength", reg0),
         (val_div, ":enemy_party_strength", 2),

         (val_div, ":enemy_party_strength", ":max_skill"),
         (val_max, ":enemy_party_strength", 1),

         (call_script, "script_party_count_fit_regulars", "p_main_party"),
         (assign, ":player_count", reg0),
         (ge, ":player_count", ":enemy_party_strength"),
         ],"Pull back, leaving some soldiers behind to cover your retreat.",[(jump_to_menu, "mnu_encounter_retreat_confirm"),]),

      ("encounter_surrender",[
         (eq,"$cant_leave_encounter", 1),
          ],"Surrender.",[(assign,"$g_player_surrenders",1)]),
    ]
  ),
  (
    "encounter_retreat_confirm",0,
    "As the party member with the highest tactics skill,\
 ({reg2}), {reg3?you devise:{s3} devises} a plan that will allow you and your men to escape with your lives,\
 but you'll have to leave {reg4} soldiers behind to stop the enemy from giving chase.",
    "none",
    [(call_script, "script_get_max_skill_of_player_party", "skl_tactics"),
     (assign, ":max_skill", reg0),
     (assign, ":max_skill_owner", reg1),
     (assign, reg2, ":max_skill"),
     (val_add, ":max_skill", 4),

     (call_script, "script_party_count_members_with_full_health", "p_collective_enemy", 0),
     (assign, ":enemy_party_strength", reg0),
     (val_div, ":enemy_party_strength", 2),

     (store_div, reg4, ":enemy_party_strength", ":max_skill"),
     (val_max, reg4, 1),

     (try_begin),
       (eq, ":max_skill_owner", "trp_player"),
       (assign, reg3, 1),
     (else_try),
       (assign, reg3, 0),
       (str_store_troop_name, s3, ":max_skill_owner"),
     (try_end),

    #SB : add tableau
    (set_fixed_point_multiplier, 100),
    (position_set_x, pos0, 70),
    (position_set_y, pos0, 5),
    (position_set_z, pos0, 75),
    (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", ":max_skill_owner", pos0),
     ],
    [
      ("leave_behind",[],"Go on. The sacrifice of these men will save the rest.",[
          (assign, ":num_casualties", reg4),
          (try_for_range, ":unused", 0, ":num_casualties"),
            (call_script, "script_cf_party_remove_random_regular_troop", "p_main_party"),
            (assign, ":lost_troop", reg0),
            (store_random_in_range, ":random_no", 0, 100),
            (ge, ":random_no", 30),
            (party_add_prisoners, "$g_encountered_party", ":lost_troop", 1),
           (try_end),
           (call_script, "script_change_player_party_morale", -20),
           (call_script, "script_change_troop_renown", "trp_player", -7), #SB : renown change
           (try_begin), #SB: max skill owner uses tactics
             # (eq, reg3, 0),
             (call_script, "script_get_max_skill_of_player_party", "skl_tactics"),
             (is_between, reg1, companions_begin, companions_end),
             (call_script, "script_change_troop_renown", reg1, dplmc_companion_battle_renown), #SB : renown change, less reward
           (try_end),
           (jump_to_menu, "mnu_encounter_retreat"),
          ]),
      ("dont_leave_behind",[],"No. We leave no one behind.",[(jump_to_menu, "mnu_simple_encounter"),]),
    ]
  ),
  (
    "encounter_retreat",0,
    "You tell {reg4} of your troops to hold the enemy while you retreat with the rest of your party.",
    "none",
    [
     ],
    [
      ("continue",[],"Continue...",
	  [
###Troop commentary changes begin
          (call_script, "script_objectionable_action", tmt_aristocratic, "str_flee_battle"),
          (party_get_num_companion_stacks, ":num_stacks", "p_encountered_party_backup"),
          (try_for_range, ":stack_no", 0, ":num_stacks"),
              (party_stack_get_troop_id,   ":stack_troop","p_encountered_party_backup",":stack_no"),
              (is_between, ":stack_troop", active_npcs_begin, active_npcs_end),
              (troop_slot_eq, ":stack_troop", slot_troop_occupation, slto_kingdom_hero),
              (store_troop_faction, ":victorious_faction", ":stack_troop"),
              (call_script, "script_add_log_entry", logent_player_retreated_from_lord_cowardly, "trp_player",  -1, ":stack_troop", ":victorious_faction"),
          (try_end),
###Troop commentary changes end
        (party_ignore_player, "$g_encountered_party", 1),
        (leave_encounter),
		(change_screen_return),
          ##diplomacy begin
          (assign, "$g_move_fast", 1),
          ##diplomacy end
          ]),
    ]
  ),
  (
    "order_attack_begin",0,
    "Your troops prepare to attack the enemy.",
    "none",
    [],
    [
      ("order_attack_begin",[],"Order the attack to begin.",
      [
        (party_get_template_id, ":encountered_party_template", "$g_encountered_party"),
        (try_begin),
		  (eq, ":encountered_party_template", "pt_village_farmers"),
		  (unlock_achievement, ACHIEVEMENT_HELP_HELP_IM_BEING_REPRESSED),
		(try_end),

        (assign, "$g_engaged_enemy", 1),
        (jump_to_menu,"mnu_order_attack_2"),
      ]),
      ("call_back",[],"Call them back.",[(jump_to_menu,"mnu_simple_encounter")]),
    ]
  ),
  (
    "order_attack_2",mnf_disable_all_keys,
    "{s4}^^Your casualties: {s8}^^Enemy casualties: {s9}",
    "none",
    [
      (set_background_mesh, "mesh_pic_charge"),

      (call_script, "script_party_calculate_strength", "p_main_party", 1), #exclude player
      (assign, ":player_party_strength", reg0),

      (call_script, "script_party_calculate_strength", "p_collective_enemy", 0),
      (assign, ":enemy_party_strength", reg0),

      (party_collect_attachments_to_party, "p_main_party", "p_collective_ally"),
      (call_script, "script_party_calculate_strength", "p_collective_ally", 1), #exclude player
      (assign, ":total_player_and_followers_strength", reg0),

      (try_begin),
        (le, ":total_player_and_followers_strength", ":enemy_party_strength"),
        (assign, ":minimum_power", ":total_player_and_followers_strength"),
      (else_try),
        (assign, ":minimum_power", ":enemy_party_strength"),
      (try_end),

      (try_begin),
        (le, ":minimum_power", 25),
        (assign, ":division_constant", 1),
      (else_try),
        (le, ":minimum_power", 50),
        (assign, ":division_constant", 2),
      (else_try),
        (le, ":minimum_power", 75),
        (assign, ":division_constant", 3),
      (else_try),
        (le, ":minimum_power", 125),
        (assign, ":division_constant", 4),
      (else_try),
        (le, ":minimum_power", 200),
        (assign, ":division_constant", 5),
      (else_try),
        (le, ":minimum_power", 400),
        (assign, ":division_constant", 6),
      (else_try),
        (le, ":minimum_power", 800),
        (assign, ":division_constant", 7),
      (else_try),
        (le, ":minimum_power", 1600),
        (assign, ":division_constant", 8),
      (else_try),
        (le, ":minimum_power", 3200),
        (assign, ":division_constant", 9),
      (else_try),
        (le, ":minimum_power", 6400),
        (assign, ":division_constant", 10),
      (else_try),
        (le, ":minimum_power", 12800),
        (assign, ":division_constant", 11),
      (else_try),
        (le, ":minimum_power", 25600),
        (assign, ":division_constant", 12),
      (else_try),
        (le, ":minimum_power", 51200),
        (assign, ":division_constant", 13),
      (else_try),
        (le, ":minimum_power", 102400),
        (assign, ":division_constant", 14),
      (else_try),
        (assign, ":division_constant", 15),
      (try_end),

      (val_div, ":player_party_strength", ":division_constant"), #1.126, ":division_constant" was 5 before
      (val_max, ":player_party_strength", 1), #1.126
      (val_div, ":enemy_party_strength", ":division_constant"), #1.126, ":division_constant" was 5 before
      (val_max, ":enemy_party_strength", 1), #1.126
      (val_div, ":total_player_and_followers_strength", ":division_constant"), #1.126, ":division_constant" was 5 before
      (val_max, ":total_player_and_followers_strength", 1), #1.126

      (store_mul, "$g_strength_contribution_of_player", ":player_party_strength", 100),
      (val_div, "$g_strength_contribution_of_player", ":total_player_and_followers_strength"),

      (inflict_casualties_to_party_group, "p_main_party", ":enemy_party_strength", "p_temp_casualties"),
      (call_script, "script_print_casualties_to_s0", "p_temp_casualties", 0),
      (str_store_string_reg, s8, s0),

      (try_begin),
        (ge, "$g_ally_party", 0),
        (inflict_casualties_to_party_group, "$g_ally_party", ":enemy_party_strength", "p_temp_casualties"),
        (str_store_string_reg, s8, s0),
      (try_end),

      (inflict_casualties_to_party_group, "$g_encountered_party", ":total_player_and_followers_strength", "p_temp_casualties"),

      #ozan begin
      (party_get_num_companion_stacks, ":num_stacks", "p_temp_casualties"),
      (try_for_range, ":stack_no", 0, ":num_stacks"),
        (party_stack_get_troop_id, ":stack_troop", "p_temp_casualties", ":stack_no"),
        (try_begin),
          (party_stack_get_size, ":stack_size", "p_temp_casualties", ":stack_no"),
          (gt, ":stack_size", 0),
          (party_add_members, "p_total_enemy_casualties", ":stack_troop", ":stack_size"), #addition_to_p_total_enemy_casualties
          (party_stack_get_num_wounded, ":stack_wounded_size", "p_temp_casualties", ":stack_no"),
          (gt, ":stack_wounded_size", 0),
          (party_wound_members, "p_total_enemy_casualties", ":stack_troop", ":stack_wounded_size"),
        (try_end),
      (try_end),
      #ozan end

      (call_script, "script_print_casualties_to_s0", "p_temp_casualties", 0),
      (str_store_string_reg, s9, s0),

      (party_collect_attachments_to_party, "$g_encountered_party", "p_collective_enemy"),
      (assign, "$no_soldiers_left", 0),
      (try_begin),
        (call_script, "script_party_count_members_with_full_health", "p_main_party"),
        (assign, ":num_our_regulars_remaining", reg0),
        (store_add, ":num_routed_us_plus_one", "$num_routed_us", 1),
        (le, ":num_our_regulars_remaining", ":num_routed_us_plus_one"), #replaced for above line because we do not want routed agents to spawn again in next turn of battle.
        (assign, "$no_soldiers_left", 1),
        (str_store_string, s4, "str_order_attack_failure"),
      (else_try),
        (call_script, "script_party_count_members_with_full_health", "p_collective_enemy"),
        (assign, ":num_enemy_regulars_remaining", reg0),
        (this_or_next|le, ":num_enemy_regulars_remaining", 0),
        (le, ":num_enemy_regulars_remaining", "$num_routed_enemies"), #replaced for above line because we do not want routed agents to spawn again in next turn of battle.
        (assign, ":continue", 0),
        (party_get_num_companion_stacks, ":party_num_stacks", "p_collective_enemy"),
        (try_begin),
          (eq, ":party_num_stacks", 0),
          (assign, ":continue", 1),
        (else_try),
          (party_stack_get_troop_id, ":party_leader", "p_collective_enemy", 0),
          (try_begin),
            (neg|troop_is_hero, ":party_leader"),
            (assign, ":continue", 1),
          (else_try),
            (troop_is_wounded, ":party_leader"),
            (assign, ":continue", 1),
          (try_end),
        (try_end),
        (eq, ":continue", 1),
        (assign, "$g_battle_result", 1),
        (assign, "$no_soldiers_left", 1),
        (str_store_string, s4, "str_order_attack_success"),
      (else_try),
      (str_store_string, s4, "str_order_attack_continue"),
    (try_end),
    ],
    [
      ("order_attack_continue",[(eq, "$no_soldiers_left", 0)],"Order your soldiers to continue the attack.",[
          (jump_to_menu,"mnu_order_attack_2"),
          ]),
      ("order_retreat",[(eq, "$no_soldiers_left", 0)],"Call your soldiers back.",[
          (jump_to_menu,"mnu_simple_encounter"),
          ]),
      ("continue",[(eq, "$no_soldiers_left", 1)],"Continue...",[
          (jump_to_menu,"mnu_simple_encounter"),
          ]),
    ]
  ),

  (
    "battle_debrief",mnf_scale_picture|mnf_disable_all_keys,
    "{s11}^^Your Casualties:{s8}{s10}^^Enemy Casualties:{s9}",
    "none",
    [
     (try_begin),
       (eq, "$g_battle_result", 1),
       (call_script, "script_change_troop_renown", "trp_player", "$battle_renown_value"),
       #SB : also distribute amount to companions, maybe pretender/spouse in party as well
       (assign, ":amount", 0),
       (try_for_range, ":companions", companions_begin, companions_end),
         (main_party_has_troop, ":companions"),
         (val_add, ":amount", 1),
       (try_end),
       (try_begin),
         (gt, ":amount", 0),
         (store_div, ":amount", "$battle_renown_value", ":amount"),
         (val_max, ":amount", dplmc_companion_battle_renown),
         (try_for_range, ":companions", companions_begin, companions_end),
           (main_party_has_troop, ":companions"),
           # (neg|troop_is_wounded, ":companions"), #survived, or stayed at the back
           (call_script, "script_change_troop_renown", ":companions", ":amount"),
         (try_end),
       (try_end),

       (try_begin),
         (ge, "$g_encountered_party", 0),
         (party_is_active, "$g_encountered_party"),
         (party_get_template_id, ":encountered_party_template", "$g_encountered_party"),
         (eq, ":encountered_party_template", "pt_kingdom_caravan_party"),

         (get_achievement_stat, ":number_of_village_raids", ACHIEVEMENT_THE_BANDIT, 0),
         (get_achievement_stat, ":number_of_caravan_raids", ACHIEVEMENT_THE_BANDIT, 1),
         (val_add, ":number_of_caravan_raids", 1),
         (set_achievement_stat, ACHIEVEMENT_THE_BANDIT, 1, ":number_of_caravan_raids"),

         (try_begin),
           (ge, ":number_of_village_raids", 3),
           (ge, ":number_of_caravan_raids", 3),
           (unlock_achievement, ACHIEVEMENT_THE_BANDIT),
         (try_end),
       (try_end),

       (try_begin),
         (party_get_current_terrain, ":cur_terrain", "p_main_party"),
         (eq, ":cur_terrain", rt_snow),
         (get_achievement_stat, ":number_of_victories_at_snowy_lands", ACHIEVEMENT_BEST_SERVED_COLD, 0),
         (val_add, ":number_of_victories_at_snowy_lands", 1),
         (set_achievement_stat, ACHIEVEMENT_BEST_SERVED_COLD, 0, ":number_of_victories_at_snowy_lands"),

         (try_begin),
           (eq, ":number_of_victories_at_snowy_lands", 10),
           (unlock_achievement, ACHIEVEMENT_BEST_SERVED_COLD),
         (try_end),
       (try_end),

       (try_begin),
         (ge, "$g_enemy_party", 0),
         (party_is_active, "$g_enemy_party"),
         (party_stack_get_troop_id, ":stack_troop", "$g_enemy_party", 0),
         (eq, ":stack_troop", "trp_mountain_bandit"),

         (get_achievement_stat, ":number_of_victories_aganist_mountain_bandits", ACHIEVEMENT_MOUNTAIN_BLADE, 0),
         (val_add, ":number_of_victories_aganist_mountain_bandits", 1),
         (set_achievement_stat, ACHIEVEMENT_MOUNTAIN_BLADE, 0, ":number_of_victories_aganist_mountain_bandits"),

         (try_begin),
           (eq, ":number_of_victories_aganist_mountain_bandits", 10),
           (unlock_achievement, ACHIEVEMENT_MOUNTAIN_BLADE),
         (try_end),
       (try_end),

       (try_begin),
         (is_between, "$g_ally_party", walled_centers_begin, walled_centers_end),
         (unlock_achievement, ACHIEVEMENT_NONE_SHALL_PASS),
       (try_end),

       (try_begin),
         (eq, "$g_joined_battle_to_help", 1),
         (unlock_achievement, ACHIEVEMENT_GOOD_SAMARITAN),
       (try_end),
     (try_end),

     (assign, "$g_joined_battle_to_help", 0),
     (call_script, "script_count_casualties_and_adjust_morale"),#new
     (call_script, "script_encounter_calculate_fit"),

     (call_script, "script_party_count_fit_regulars", "p_main_party"),
     (assign, "$playerparty_postbattle_regulars", reg0),

     (try_begin),
       (eq, "$g_battle_result", 1),
       (eq, "$g_enemy_fit_for_battle", 0),
       (str_store_string, s11, "@You were victorious!"),
#       (play_track, "track_bogus"), #clear current track.
#       (call_script, "script_music_set_situation_with_culture", mtf_sit_victorious),
       (try_begin),
         (gt, "$g_friend_fit_for_battle", 1),
         (set_background_mesh, "mesh_pic_victory"),
       (try_end),
     (else_try),
       (eq, "$g_battle_result", -1),
       (ge, "$g_enemy_fit_for_battle",1),
       (this_or_next|le, "$g_friend_fit_for_battle",0),
       (le, "$playerparty_postbattle_regulars", 0),
       (str_store_string, s11, "@The battle was lost. Your forces were utterly crushed."), #SB : "The battle"
       (set_background_mesh, "mesh_pic_defeat"),
     (else_try),
       (eq, "$g_battle_result", -1),
       (str_store_string, s11, "@Your companions carry you away from the fighting."),
		 ##diplomacy start+ Test gender with script
       #(troop_get_type, ":is_female", "trp_player"),#<- replaced
       (set_background_mesh, "mesh_pic_wounded"),
		 ##diplomacy end+
     (else_try),
       (eq, "$g_battle_result", 1),
       (str_store_string, s11, "@You have defeated the enemy."),
       (try_begin),
         (gt, "$g_friend_fit_for_battle", 1),
         (set_background_mesh, "mesh_pic_victory"),
       (try_end),
     (else_try),
       (eq, "$g_battle_result", 0),
       (str_store_string, s11, "@You have retreated from the fight."),
     (try_end),
#NPC companion changes begin
##check for excessive casualties, more forgiving if battle result is good
     (try_begin),
        (gt, "$playerparty_prebattle_regulars", 9),
        (store_add, ":divisor", 3, "$g_battle_result"),
        (store_div, ":half_of_prebattle_regulars", "$playerparty_prebattle_regulars", ":divisor"),
        (lt, "$playerparty_postbattle_regulars", ":half_of_prebattle_regulars"),
        (call_script, "script_objectionable_action", tmt_egalitarian, "str_excessive_casualties"),
     (try_end),
#NPC companion changes end

     (call_script, "script_print_casualties_to_s0", "p_player_casualties", 0),
     (str_store_string_reg, s8, s0),
     (call_script, "script_print_casualties_to_s0", "p_enemy_casualties", 0),
     (str_store_string_reg, s9, s0),
     (str_clear, s10),
     (try_begin),
       (eq, "$any_allies_at_the_last_battle", 1),
       (call_script, "script_print_casualties_to_s0", "p_ally_casualties", 0),
       (str_store_string, s10, "@^^Ally Casualties:{s0}"),
     (try_end),
     ],
    [
      ("continue",[],"Continue...",[(jump_to_menu, "$g_next_menu"),]),
    ]
  ),



  (
    "total_victory", 0,
    "You shouldn't be reading this... {s9}",
    "none",
    [
        # We exploit the menu condition system below.
        # The conditions should make sure that always another screen or menu is called.
        (assign, ":break", 0),
        (try_begin),
          (eq, "$routed_party_added", 0), #new
          (assign, "$routed_party_added", 1),

           #add new party to map (routed_warriors)
          (call_script, "script_add_routed_party"),
        (try_end),

		(try_begin),
			(check_quest_active, "qst_track_down_bandits"),
			(neg|check_quest_succeeded, "qst_track_down_bandits"),
			(neg|check_quest_failed, "qst_track_down_bandits"),

			(quest_get_slot, ":quest_party", "qst_track_down_bandits", slot_quest_target_party),
			(party_is_active, ":quest_party"),
			(party_get_attached_to, ":quest_party_attached"),
			(this_or_next|eq, ":quest_party", "$g_enemy_party"),
				(eq, ":quest_party_attached", "$g_enemy_party"),
			(call_script, "script_succeed_quest", "qst_track_down_bandits"),
		(try_end),

        #SB : pt_bandits_awaiting_ransom bandits_awaiting_remeet, give money back
        (try_begin),
            (check_quest_active, "qst_kidnapped_girl"),
            (quest_slot_eq, "qst_kidnapped_girl", slot_quest_current_state, 2), #paid
            (quest_get_slot, ":quest_target_amount", "qst_kidnapped_girl", slot_quest_target_amount),
            (gt, ":quest_target_amount", 0), #not already given out - otherwise this menu gets called 3 times!
            (quest_get_slot, ":quest_party", "qst_kidnapped_girl", slot_quest_target_party),
            (party_get_attached_to, ":quest_party_attached"),
            (this_or_next|eq, ":quest_party", "$g_enemy_party"),
                (eq, ":quest_party_attached", "$g_enemy_party"),
            (call_script, "script_troop_add_gold", "trp_player", ":quest_target_amount"),
            (quest_set_slot, "qst_kidnapped_girl", slot_quest_target_amount, 0),
        (try_end),

		(try_begin),
			(gt, "$g_private_battle_with_troop", 0),
			(troop_slot_eq, "$g_private_battle_with_troop", slot_troop_leaded_party, "$g_encountered_party"),
			(assign, "$g_private_battle_with_troop", 0),
			##diplomacy start+
			#g_disable_condescending_comments is also used to track the "enhanced/diminished prejudice" setting
			(try_begin),
				(eq, "$g_disable_condescending_comments", 0),
				(assign, "$g_disable_condescending_comments", 1),
			(else_try),
				(eq, "$g_disable_condescending_comments", 2),
				(assign, "$g_disable_condescending_comments", 3),
			##diplomacy end+
			(try_end),
		(try_end),

        #new - begin
        (party_get_num_companion_stacks, ":num_stacks", "p_collective_enemy"),
        (try_for_range, ":i_stack", 0, ":num_stacks"),
          (party_stack_get_troop_id, ":stack_troop", "p_collective_enemy", ":i_stack"),
          (is_between, ":stack_troop", lords_begin, lords_end),
          (troop_is_wounded, ":stack_troop"),
          (party_add_members, "p_total_enemy_casualties", ":stack_troop", 1),
        (try_end),
        #new - end

        (try_begin),
          # Talk to ally leader
          (eq, "$thanked_by_ally_leader", 0),
          (assign, "$thanked_by_ally_leader", 1),

          (gt, "$g_ally_party", 0),
          #(store_add, ":total_str_without_player", "$g_starting_strength_ally_party", "$g_starting_strength_enemy_party"),

          (store_add, ":total_str_without_player", "$g_starting_strength_friends", "$g_starting_strength_enemy_party"),
          (val_sub, ":total_str_without_player", "$g_starting_strength_main_party"),

          (store_sub, ":ally_strength_without_player", "$g_starting_strength_friends", "$g_starting_strength_main_party"),

          (store_mul, ":ally_advantage", ":ally_strength_without_player", 100),
          (val_add, ":total_str_without_player", 1),
          (val_div, ":ally_advantage", ":total_str_without_player"),
          #Ally advantage=50  means battle was evenly matched

          (store_sub, ":enemy_advantage", 100, ":ally_advantage"),

          (store_mul, ":faction_reln_boost", ":enemy_advantage", "$g_starting_strength_enemy_party"),
          (val_div, ":faction_reln_boost", 3000),
          (val_min, ":faction_reln_boost", 4),

          (store_mul, "$g_relation_boost", ":enemy_advantage", ":enemy_advantage"),
          (val_div, "$g_relation_boost", 700),
          (val_clamp, "$g_relation_boost", 0, 20),

          (party_get_num_companion_stacks, ":num_ally_stacks", "$g_ally_party"),
          (gt, ":num_ally_stacks", 0),
          (store_faction_of_party, ":ally_faction","$g_ally_party"),
          (call_script, "script_change_player_relation_with_faction", ":ally_faction", ":faction_reln_boost"),
          (party_stack_get_troop_id, ":ally_leader", "$g_ally_party"),
          (party_stack_get_troop_dna, ":ally_leader_dna", "$g_ally_party", 0),
          (try_begin),
            (troop_is_hero, ":ally_leader"),
            (troop_get_slot, ":hero_relation", ":ally_leader", slot_troop_player_relation),
            (assign, ":rel_boost", "$g_relation_boost"),
            (try_begin),
              (lt, ":hero_relation", -5),
              (val_div, ":rel_boost", 3),
            (try_end),
            (call_script,"script_change_player_relation_with_troop", ":ally_leader", ":rel_boost"),
          (try_end),
          (neq, "$freelancer_state", 1),  #Caba freelancer fixes chief
          (assign, "$talk_context", tc_ally_thanks),
          (call_script, "script_setup_troop_meeting", ":ally_leader", ":ally_leader_dna"),
        (else_try),

          # Talk to enemy leaders
          (assign, ":break", 0),

          (party_get_num_companion_stacks, ":num_stacks", "p_total_enemy_casualties"), #p_encountered changed to total_enemy_casualties
          (try_for_range, ":stack_no", "$last_defeated_hero", ":num_stacks"), #May 31 bug note -- this now returns some heroes in victorious party as well as in the other party
            (eq, ":break", 0),
            (party_stack_get_troop_id, ":stack_troop", "p_total_enemy_casualties", ":stack_no"),
            (party_stack_get_troop_dna, ":stack_troop_dna", "p_total_enemy_casualties", ":stack_no"),

            (troop_is_hero, ":stack_troop"),

            (store_troop_faction, ":defeated_faction", ":stack_troop"),
            #steve post 0912 changes begin - removed, this is duplicated elsewhere in game menus
            #(call_script, "script_add_log_entry", logent_lord_defeated_by_player, "trp_player",  -1, ":stack_troop", ":defeated_faction"),
            (try_begin),
   			  (store_relation, ":relation", ":defeated_faction", "fac_player_faction"),
			  (ge, ":relation", 0),
			  (str_store_troop_name, s4, ":stack_troop"),

			  (try_begin),
				(eq, "$cheat_mode", 1),
				(display_message, "@{!}{s4} skipped in p_total_enemy_casualties capture queue because is friendly"),
			  (try_end),
			(else_try),
              (try_begin),
                (party_stack_get_troop_id, ":party_leader", "$g_encountered_party", 0),
                (is_between, ":party_leader", active_npcs_begin, active_npcs_end),
                (troop_slot_eq, ":party_leader", slot_troop_occupation, slto_kingdom_hero),
                (store_sub, ":kingdom_hero_id", ":party_leader", active_npcs_begin),
                (get_achievement_stat, ":was_he_defeated_player_before", ACHIEVEMENT_BARON_GOT_BACK, ":kingdom_hero_id"),
                (eq, ":was_he_defeated_player_before", 1),

                (unlock_achievement, ACHIEVEMENT_BARON_GOT_BACK),
              (try_end),

              (store_add, "$last_defeated_hero", ":stack_no", 1),
              (call_script, "script_remove_troop_from_prison", ":stack_troop"),
              (troop_set_slot, ":stack_troop", slot_troop_leaded_party, -1),

              (call_script, "script_cf_check_hero_can_escape_from_player", ":stack_troop"),

              (str_store_troop_name, s1, ":stack_troop"),
              (str_store_faction_name, s3, ":defeated_faction"),
              (str_store_string, s17, "@{s1} of {s3} managed to escape."),
              (display_log_message, "@{!}{s17}"),
              (jump_to_menu, "mnu_enemy_slipped_away"),
              (assign, ":break", 1),
            (else_try),
              (store_add, "$last_defeated_hero", ":stack_no", 1),
              (call_script, "script_remove_troop_from_prison", ":stack_troop"),
              (troop_set_slot, ":stack_troop", slot_troop_leaded_party, -1),


              (neq, "$freelancer_state", 1),  #Caba freelancer fixes chief
              (assign, "$talk_context", tc_hero_defeated),

              (call_script, "script_setup_troop_meeting", ":stack_troop", ":stack_troop_dna"),
              (assign, ":break", 1),
            (try_end),
          (try_end),

          (eq, ":break", 1),
        (else_try),
          # Talk to freed heroes
         (neq, "$freelancer_state", 1), #+freelancer chief #prevents player in party from talking to enemy leaders
          (assign, ":break", 0),
          (party_get_num_prisoner_stacks, ":num_prisoner_stacks", "p_collective_enemy"),
          (try_for_range, ":stack_no", "$last_freed_hero", ":num_prisoner_stacks"),
            (eq, ":break", 0),
            (party_prisoner_stack_get_troop_id, ":stack_troop", "p_collective_enemy", ":stack_no"),
            (troop_is_hero, ":stack_troop"),
            (party_prisoner_stack_get_troop_dna, ":stack_troop_dna", "p_collective_enemy", ":stack_no"),
            (store_add, "$last_freed_hero", ":stack_no", 1),
            (assign, "$talk_context", tc_hero_freed),
            (call_script, "script_setup_troop_meeting", ":stack_troop", ":stack_troop_dna"),
            (assign, ":break", 1),
          (try_end),
          (eq, ":break", 1),
        (else_try),
          (party_stack_get_troop_id, ":party_leader", "$g_encountered_party", 0),
          (eq, ":party_leader", "trp_aestii_rebel_king"),
          (check_quest_active, "qst_aestii_rebel_quest"),
          (neg|check_quest_succeeded, "qst_aestii_rebel_quest"),
          (eq, "$g_encountered_party_template", "pt_aestii_rebel_party"),
          (assign, "$talk_context", tc_hero_defeated),
          (call_script, "script_setup_troop_meeting", "trp_aestii_rebel_king", -1),
          (assign, ":break", 1),
        (else_try),
          (eq, "$capture_screen_shown", 0),
          (assign, "$capture_screen_shown", 1),
          (party_clear, "p_temp_party"),
          (assign, "$g_move_heroes", 0),
          #(call_script, "script_party_prisoners_add_party_companions", "p_temp_party", "p_collective_enemy"),

          #p_total_enemy_casualties deki yarali askerler p_temp_party'e prisoner olarak eklenecek.
          (call_script, "script_party_add_wounded_members_as_prisoners", "p_temp_party", "p_total_enemy_casualties"),

          (call_script, "script_party_add_party_prisoners", "p_temp_party", "p_collective_enemy"),
          (try_begin),
            (call_script, "script_party_calculate_strength", "p_collective_friends_backup",0),
            (assign,":total_initial_strength", reg(0)),
            (gt, ":total_initial_strength", 0),
            #(gt, "$g_ally_party", 0),
            (call_script, "script_party_calculate_strength", "p_main_party_backup",0),
            (assign,":player_party_initial_strength", reg(0)),
            # move ally_party_initial_strength/(player_party_initial_strength + ally_party_initial_strength) prisoners to ally party.
            # First we collect the share of prisoners of the ally party and distribute those among the allies.
            (store_sub, ":ally_party_initial_strength", ":total_initial_strength", ":player_party_initial_strength"),

            #(call_script, "script_party_calculate_strength", "p_ally_party_backup"),
            #(assign,":ally_party_initial_strength", reg(0)),
            #(store_add, ":total_initial_strength", ":player_party_initial_strength", ":ally_party_initial_strength"),
            (store_mul, ":ally_share", ":ally_party_initial_strength", 1000),
            (val_div, ":ally_share", ":total_initial_strength"),
            (assign, "$pin_number", ":ally_share"), #we send this as a parameter to the script.
            (party_clear, "p_temp_party_2"),
            (call_script, "script_move_members_with_ratio", "p_temp_party", "p_temp_party_2"),

            #TODO: This doesn't handle prisoners if our allies joined battle after us.
            (try_begin),
              (gt, "$g_ally_party", 0),
              (distribute_party_among_party_group, "p_temp_party_2", "$g_ally_party"),
            (try_end),
            #next if there's anything left, we'll open up the party exchange screen and offer them to the player.
          (try_end),
          (party_get_num_companions, ":num_rescued_prisoners", "p_temp_party"),
          (party_get_num_prisoners,  ":num_captured_enemies", "p_temp_party"),

          (store_add, ":total_capture_size", ":num_rescued_prisoners", ":num_captured_enemies"),

          (neq, "$freelancer_state", 1),  #Caba freelancer fixes chief
          (gt, ":total_capture_size", 0),
          (change_screen_exchange_with_party, "p_temp_party"),
        (else_try),
          (eq, "$loot_screen_shown", 0),
          (assign, "$loot_screen_shown", 1),
#          (try_begin),
#            (gt, "$g_ally_party", 0),
#            (call_script, "script_party_add_party", "$g_ally_party", "p_temp_party"), #Add remaining prisoners to ally TODO: FIX it.
#          (else_try),
#            (party_get_num_attached_parties, ":num_quick_attachments", "p_main_party"),
#            (gt, ":num_quick_attachments", 0),
#            (party_get_attached_party_with_rank, ":helper_party", "p_main_party", 0),
#            (call_script, "script_party_add_party", ":helper_party", "p_temp_party"), #Add remaining prisoners to our reinforcements
#          (try_end),
          (troop_clear_inventory, "trp_temp_troop"),
          (call_script, "script_party_calculate_loot", "p_total_enemy_casualties"), #p_encountered_party_backup changed to total_enemy_casualties
          (gt, reg0, 0),
          (troop_sort_inventory, "trp_temp_troop"),
		  ##diplomacy start+
		  #Here: we jump to rubik's autoloot from CC if applicable instead of using the standard loot screen
		  (try_begin),
          (neq, "$freelancer_state", 1),  #Caba freelancer fixes chief
          (call_script, "script_cf_dplmc_player_party_meets_autoloot_conditions"),
          (assign, "$dplmc_return_menu", "mnu_total_victory"),
          (assign, "$lord_selected", "trp_player"),
          (jump_to_menu, "mnu_dplmc_manage_loot_pool"),
		  (else_try),
			#Old behavior:
			(change_screen_loot, "trp_temp_troop"),
		  (try_end),
		  ##diplomacy end+
        (else_try),
          #finished all
          (try_begin),
            (le, "$g_ally_party", 0),
            (end_current_battle),
          (try_end),
          (call_script, "script_party_give_xp_and_gold", "p_total_enemy_casualties"), #p_encountered_party_backup changed to total_enemy_casualties
          (try_begin),
            (eq, "$g_enemy_party", 0),
            (display_message,"str_error_string"),
          (try_end),

		  (try_begin),
		    (party_is_active, "$g_ally_party"),
			(call_script, "script_battle_political_consequences", "$g_enemy_party", "$g_ally_party"),
		  (else_try),
			(call_script, "script_battle_political_consequences", "$g_enemy_party", "p_main_party"),
		  (try_end),

          (call_script, "script_event_player_defeated_enemy_party", "$g_enemy_party"),
          (call_script, "script_clear_party_group", "$g_enemy_party"),
          (try_begin),
            (eq, "$g_next_menu", -1),

            #NPC companion changes begin
            (call_script, "script_post_battle_personality_clash_check"),
            #NPC companion changes end

            #Post 0907 changes begin
            (party_stack_get_troop_id, ":enemy_leader", "p_encountered_party_backup",0),
            (try_begin),
              (is_between, ":enemy_leader", active_npcs_begin, active_npcs_end),
              (neg|is_between, "$g_encountered_party", centers_begin, centers_end),
              (store_troop_faction, ":enemy_leader_faction", ":enemy_leader"),

              (try_begin),
                (eq, "$g_ally_party", 0),
                (call_script, "script_add_log_entry", logent_lord_defeated_by_player, "trp_player",  -1, ":enemy_leader", ":enemy_leader_faction"),
                (try_begin),
                  (eq, "$cheat_mode", 1),
                  (display_message, "@{!}Victory comment. Player was alone"),
                (try_end),
              (else_try),
                (ge, "$g_strength_contribution_of_player", 40),
                (call_script, "script_add_log_entry", logent_lord_defeated_by_player, "trp_player",  -1, ":enemy_leader", ":enemy_leader_faction"),
                (try_begin),
                  (eq, "$cheat_mode", 1),
                  (display_message, "@{!}Ordinary victory comment. The player provided at least 40 percent forces."),
                (try_end),
              (else_try),
                (gt, "$g_starting_strength_enemy_party", 1000),
                (call_script, "script_get_closest_center", "p_main_party"),
                (assign, ":battle_of_where", reg0),
                (call_script, "script_add_log_entry", logent_player_participated_in_major_battle, "trp_player",  ":battle_of_where", -1, ":enemy_leader_faction"),
                (try_begin),
                  (eq, "$cheat_mode", 1),
                  (display_message, "@{!}Player participation comment. The enemy had at least 1k starting strength."),
                (try_end),
              (else_try),
                (eq, "$cheat_mode", 1),
                (display_message, "@{!}No victory comment. The battle was small, and the player provided less than 40 percent of allied strength"),
              (try_end),
            (try_end),
            #Post 0907 changes end
            (val_add, "$g_total_victories", 1),
            (leave_encounter),
            (change_screen_return),
          (else_try),
#          (eq, "$freelancer_state", 0),
            (try_begin), #my kingdom
            ##diplomacy begin
              (eq, "$g_next_menu", "mnu_dplmc_town_riot_removed"),
              (jump_to_menu, "$g_next_menu"),
            (else_try),
            ##diplomacy end
              #(change_screen_return),
              (eq, "$g_next_menu", "mnu_castle_taken"),

              (call_script, "script_add_log_entry", logent_castle_captured_by_player, "trp_player", "$g_encountered_party", -1, "$g_encountered_party_faction"),
              (store_current_hours, ":hours"),
			  (faction_set_slot, "$players_kingdom", slot_faction_ai_last_decisive_event, ":hours"),

              (try_begin), #player took a walled center while he is a vassal of npc kingdom.
  			  ##diplomacy start+ Handle player is co-ruler of NPC faction
				(assign, ":is_coruler", 0),
                (is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
                (call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$players_kingdom"),
                (ge, reg0, DPLMC_FACTION_STANDING_LEADER_SPOUSE),
				(assign, ":is_coruler", 1),

				(assign, "$g_center_taken_by_player_faction", "$g_encountered_party"),
				(faction_get_slot, ":faction_leader", "fac_player_supporters_faction", slot_faction_leader),
				(try_begin),
					(eq, ":faction_leader", "trp_player"),
					(assign, ":faction_leader", heroes_end),
					(try_for_range, ":troop_no", heroes_begin, ":faction_leader"),
						(this_or_next|troop_slot_eq, slot_troop_spouse, "trp_player"),
							(troop_slot_eq, "trp_player", slot_troop_spouse, ":troop_no"),
						(neg|troop_slot_ge, ":faction_leader", slot_troop_prisoner_of_party, 0),#Not a prisoner
						(neg|troop_slot_ge, ":faction_leader", slot_troop_occupation, slto_retirement),#Not retired, exiled, dead
						(assign, ":faction_leader", ":troop_no"),#assign and break the loop
					(try_end),
				(try_end),

				(is_between, ":faction_leader", heroes_begin, heroes_end),#Not the player, and not a bogus value
				(neg|troop_slot_ge, ":faction_leader", slot_troop_prisoner_of_party, 0),#Not a prisoner
				(neg|troop_slot_ge, ":faction_leader", slot_troop_occupation, slto_retirement),#Not retired, exiled, dead

				(change_screen_return),
				(start_map_conversation, ":faction_leader", -1),
			  (else_try),
			  #player took a walled center while he is a vassal of npc kingdom.
			    (neq, ":is_coruler", 1),
			  ##diplomacy end+
                (is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
                (jump_to_menu, "$g_next_menu"),
              (else_try), #player took a walled center while he is a vassal of rebels.
                (eq, "$players_kingdom", "fac_player_supporters_faction"),
                (assign, "$g_center_taken_by_player_faction", "$g_encountered_party"),
                (neg|faction_slot_eq, "fac_player_supporters_faction", slot_faction_leader, "trp_player"),
                (faction_get_slot, ":faction_leader", "fac_player_supporters_faction", slot_faction_leader),
                (change_screen_return),
                # (start_map_conversation, ":faction_leader", -1), #SB : script call
                (assign, "$talk_context", tc_give_center_to_fief),
                (call_script, "script_start_court_conversation", ":faction_leader", "$current_town"),
              (else_try), #player took a walled center for player's kingdom
			    ##diplomacy start+ Handle player is co-ruler of faction
				(this_or_next|eq, ":is_coruler", 1),
				##diplomacy end+
                (neg|is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
                (assign, "$g_center_taken_by_player_faction", "$g_encountered_party"),
                (assign, "$talk_context", tc_give_center_to_fief),
                (change_screen_return),

                (assign, ":best_troop", "trp_hired_blade"),
					(try_begin),
				   	(is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
					(faction_get_slot, ":players_culture", "$players_kingdom", slot_faction_culture),
					(else_try),
					(troop_get_slot, ":players_culture", "trp_player", slot_troop_culture),
					(try_end),
				(try_begin),
				   (is_between, ":players_culture", cultures_begin, cultures_end),
				   (faction_get_slot, reg0, ":players_culture", slot_faction_guard_troop),
				   (ge, reg0, soldiers_begin),
				   (assign, ":best_troop", reg0),
				(try_end),
				##diplomacy end+
                #SB : fix this, otherwise previously calculated troop is useless
                (try_begin),
                  (neq, ":best_troop", "trp_hired_blade"),
                  (store_character_level, ":maximum_troop_score", ":best_troop"),
                (else_try),
                  (assign, ":maximum_troop_score", 0),
                (try_end),

                (party_get_num_companion_stacks, ":num_stacks", "p_main_party"),
                (try_for_range, ":stack_no", 0, ":num_stacks"),
                  (party_stack_get_troop_id, ":stack_troop", "p_main_party", ":stack_no"),
                  (neq, ":stack_troop", "trp_player"),

                  (party_stack_get_size, ":stack_size", "p_main_party", ":stack_no"),
                  (party_stack_get_num_wounded, ":num_wounded", "p_main_party", ":stack_no"),
                  (troop_get_slot, ":num_routed", "p_main_party", slot_troop_player_routed_agents),

                  (assign, ":continue", 0),
                  (try_begin),
                    (neg|troop_is_hero, ":stack_troop"),
                    (store_add, ":agents_which_cannot_speak", ":num_wounded", ":num_routed"),
                    (gt, ":stack_size", ":agents_which_cannot_speak"),
                    (assign, ":continue", 1),
                  (else_try),
                    (troop_is_hero, ":stack_troop"),
                    (neg|troop_is_wounded, ":stack_troop"),
                    (assign, ":continue", 1),
                  (try_end),
                  (eq, ":continue", 1),

                  (try_begin),
                    (troop_is_hero, ":stack_troop"),
                    (troop_get_slot, ":troop_renown", ":stack_troop", slot_troop_renown),
                    (store_mul, ":troop_score", ":troop_renown", 100),
                    (val_add, ":troop_score", 1000),
                  (else_try),
                    (store_character_level, ":troop_level", ":stack_troop"),
                    (assign, ":troop_score", ":troop_level"),
                  (try_end),

                  (try_begin),
                    (gt, ":troop_score", ":maximum_troop_score"),
                    (assign, ":maximum_troop_score", ":troop_score"),
                    (assign, ":best_troop", ":stack_troop"),
                    (party_stack_get_troop_dna, ":best_troop_dna", "p_main_party", ":stack_no"),
                  (try_end),
                (try_end),
                (call_script, "script_start_court_conversation", ":best_troop", "$current_town", ":best_troop_dna"),
                # (start_map_conversation, ":best_troop", ":best_troop_dna"),
              (try_end),
            (try_end),
          (try_end),
        (try_end),
      ],
    [
      ("continue",[],"Continue...",[]),
        ]
  ),

  (
    "enemy_slipped_away",0,
    "{s17}",
    "none",
    [],
    [
      ("continue",[],"Continue...",[(jump_to_menu,"mnu_total_victory")]),
    ]
  ),

  (
    "total_defeat",0,
    "{!}You shouldn't be reading this...",
    "none",
    [
        (play_track, "track_captured", 1),
           # Free prisoners
          (party_get_num_prisoner_stacks, ":num_prisoner_stacks","p_main_party"),
          (try_for_range, ":stack_no", 0, ":num_prisoner_stacks"),
            (party_prisoner_stack_get_troop_id, ":stack_troop","p_main_party",":stack_no"),
            (troop_is_hero, ":stack_troop"),
            (call_script, "script_remove_troop_from_prison", ":stack_troop"),
          (try_end),

		  (try_begin),
		    (party_is_active, "$g_ally_party"),
			(call_script, "script_battle_political_consequences", "$g_ally_party", "$g_enemy_party"),
		  (else_try),
			(call_script, "script_battle_political_consequences", "p_main_party", "$g_enemy_party"),
		  (try_end),

          (call_script, "script_loot_player_items", "$g_enemy_party"),

          (assign, "$g_move_heroes", 0),
          (party_clear, "p_temp_party"),
          (call_script, "script_party_add_party_prisoners", "p_temp_party", "p_main_party"),
          (call_script, "script_party_prisoners_add_party_companions", "p_temp_party", "p_main_party"),
          (distribute_party_among_party_group, "p_temp_party", "$g_enemy_party"),

          (assign, "$g_prison_heroes", 1),
          (call_script, "script_party_remove_all_companions", "p_main_party"),
          (assign, "$g_prison_heroes", 0),
          (assign, "$g_move_heroes", 1),
          (call_script, "script_party_remove_all_prisoners", "p_main_party"),

          (val_add, "$g_total_defeats", 1),

          (try_begin),
            (neq, "$g_player_surrenders", 1),
            (store_random_in_range, ":random_no", 0, 100),
            (ge, ":random_no", "$g_player_luck"),
            (jump_to_menu, "mnu_permanent_damage"),
          (else_try),
            (try_begin),
              (eq, "$g_next_menu", -1),
              (leave_encounter),
              (change_screen_return),
            (else_try),
              (jump_to_menu, "$g_next_menu"),
            (try_end),
          (try_end),
          (try_begin),
            (gt, "$g_ally_party", 0),
            (call_script, "script_party_wound_all_members", "$g_ally_party"),
          (try_end),

#Troop commentary changes begin
          (party_get_num_companion_stacks, ":num_stacks", "p_encountered_party_backup"),
          (try_for_range, ":stack_no", 0, ":num_stacks"),
            (party_stack_get_troop_id,   ":stack_troop","p_encountered_party_backup",":stack_no"),
            (is_between, ":stack_troop", active_npcs_begin, active_npcs_end),
            (troop_slot_eq, ":stack_troop", slot_troop_occupation, slto_kingdom_hero),
            (store_troop_faction, ":victorious_faction", ":stack_troop"),
            (call_script, "script_add_log_entry", logent_player_defeated_by_lord, "trp_player",  -1, ":stack_troop", ":victorious_faction"),
          (try_end),
#Troop commentary changes end

      ],
    []
  ),

  (
    "permanent_damage",mnf_disable_all_keys,
    "{s0}",
    "none",
    [
      (assign, ":end_cond", 1),
      (try_for_range, ":unused", 0, ":end_cond"),
        (store_random_in_range, ":random_attribute", 0, 4),
        (store_attribute_level, ":attr_level", "trp_player", ":random_attribute"),
        (try_begin),
          (gt, ":attr_level", 3),
          (neq, ":random_attribute", ca_charisma),
          (try_begin),
            (eq, ":random_attribute", ca_strength),
            (str_store_string, s0, "@Some of your tendons have been damaged in the battle. You lose 1 strength."),
          (else_try),
            (eq, ":random_attribute", ca_agility),
            (str_store_string, s0, "@You took a nasty wound which will cause you to limp slightly even after it heals. You lose 1 agility."),
##          (else_try),
##            (eq, ":random_attribute", ca_charisma),
##            (str_store_string, s0, "@After the battle you are aghast to find that one of the terrible blows you suffered has left a deep, disfiguring scar on your face, horrifying those around you. Your charisma is reduced by 1."),
          (else_try),
##            (eq, ":random_attribute", ca_intelligence),
            (str_store_string, s0, "@You have trouble thinking straight after the battle, perhaps from a particularly hard hit to your head, and frequent headaches now plague your existence. Your intelligence is reduced by 1."),
          (try_end),
        (else_try),
          (lt, ":end_cond", 200),
          (val_add, ":end_cond", 1),
        (try_end),
      (try_end),
      (try_begin),
        (eq, ":end_cond", 200),
        (try_begin),
          (eq, "$g_next_menu", -1),
          (leave_encounter),
          (change_screen_return),
        (else_try),
          (jump_to_menu, "$g_next_menu"),
        (try_end),
      (else_try),
        (troop_raise_attribute, "trp_player", ":random_attribute", -1),
      (try_end),
      ],
    [
      ("s0",
       [
         (store_random_in_range, ":random_no", 0, 4),
         (try_begin),
           (eq, ":random_no", 0),
           (str_store_string, s0, "@Perhaps I'm getting unlucky..."),
         (else_try),
           (eq, ":random_no", 1),
           (str_store_string, s0, "@Retirement is starting to sound better and better."),
         (else_try),
           (eq, ":random_no", 2),
           (str_store_string, s0, "@No matter! I will persevere!"),
         (else_try),
           (eq, ":random_no", 3),
			  ##diplomacy start+ Don't use troop_get_type for gender
			  #(troop_get_type, ":is_female", "trp_player"),#<- replaced
           (try_begin),
             #(eq, ":is_female", 1),#<- replaced
			 (eq, "$character_gender", tf_female),#<- added
             (str_store_string, s0, "@What did I do to deserve this?"),
           (else_try),
             (str_store_string, s0, "@I suppose it'll make for a good story, at least..."),
           (try_end),
			  ##diplomacy end+
         (try_end),
         ],
       "{s0}",
       [
         (try_begin),
           (eq, "$g_next_menu", -1),
           (leave_encounter),
           (change_screen_return),
         (else_try),
           (jump_to_menu, "$g_next_menu"),
         (try_end),
         ]),
      ]
  ),

  (
    "pre_join",0,
    "You come across a battle between {s2} and {s1}. You decide to...",
    "none",
    [
        (str_store_party_name, 1,"$g_encountered_party"),
        (str_store_party_name, 2,"$g_encountered_party_2"),
    #+Freelancer chief
      (eq, "$freelancer_state", 1),
      (try_begin),
        (party_get_attached_to, ":attached", "$enlisted_party"),
        (this_or_next|eq, "$enlisted_party", "$g_encountered_party_2"), #added in order to automatically skip this menu
        (eq, ":attached", "$g_encountered_party_2"),
        (select_enemy, 0),
        (assign,"$g_enemy_party","$g_encountered_party"),
        (assign,"$g_ally_party","$g_encountered_party_2"),
      (else_try),
        (select_enemy, 1),
        (assign,"$g_enemy_party","$g_encountered_party_2"),
        (assign,"$g_ally_party","$g_encountered_party"),
      (try_end),
      (jump_to_menu,"mnu_join_battle"),
    #+Freelancer
      ],


    [
      ("pre_join_help_attackers",[
          (store_faction_of_party, ":attacker_faction", "$g_encountered_party_2"),
          (store_relation, ":attacker_relation", ":attacker_faction", "fac_player_supporters_faction"),
          (store_faction_of_party, ":defender_faction", "$g_encountered_party"),
          (store_relation, ":defender_relation", ":defender_faction", "fac_player_supporters_faction"),
          (ge, ":attacker_relation", 0),
          (lt, ":defender_relation", 0),
          ],
          "Move in to help the {s2}.",[
              (select_enemy,0),
              (assign,"$g_enemy_party","$g_encountered_party"),
              (assign,"$g_ally_party","$g_encountered_party_2"),
              (jump_to_menu,"mnu_join_battle")]),
      ("pre_join_help_defenders",[
          (store_faction_of_party, ":attacker_faction", "$g_encountered_party_2"), #chief puesto fuera
          (store_relation, ":attacker_relation", ":attacker_faction", "fac_player_supporters_faction"),
          (store_faction_of_party, ":defender_faction", "$g_encountered_party"),
          (store_relation, ":defender_relation", ":defender_faction", "fac_player_supporters_faction"),
          (ge, ":defender_relation", 0),
          (lt, ":attacker_relation", 0), #chief puesto fuera acaba
          ],
          "Rush to the aid of the {s1}.",[
              (select_enemy,1),
              (assign,"$g_enemy_party","$g_encountered_party_2"),
              (assign,"$g_ally_party","$g_encountered_party"),
              (jump_to_menu,"mnu_join_battle")]),
      ("pre_join_leave",[],"Don't get involved.",[(leave_encounter),(change_screen_return)]),
    ]
  ),

  (#SB : pic hotkeys
    "join_battle",mnf_enable_hot_keys,
    "You are helping the {s2} against the {s1}. You have {reg10} troops fit for battle against the enemy's {reg11}.",
    "none",
    [
        #SB : this needs to be called again at bottom
        (str_store_party_name, s1, "$g_enemy_party"),
        (str_store_party_name, s2, "$g_ally_party"),

        (call_script, "script_encounter_calculate_fit"),

        (try_begin),
          (eq, "$new_encounter", 1),
          (assign, "$new_encounter", 0),
      #freelancer chief
      (try_begin),
        (eq, "$freelancer_state", 1),
        (call_script, "script_let_nearby_parties_join_current_battle", 0, 0),
        (str_store_party_name, 1,"$g_enemy_party"), #to prevent bug'd text from the above script (which also uses s1)
      (try_end),
      #freelancer end
          (call_script, "script_encounter_init_variables"),
        (else_try), #second or more turn
          (eq, "$g_leave_encounter",1),
          (change_screen_return),
        (try_end),

        (try_begin),
          (call_script, "script_party_count_members_with_full_health", "p_collective_enemy"),
          (assign, ":num_enemy_regulars_remaining", reg0),
          (assign, ":enemy_finished",0),
          (try_begin),
            (eq, "$g_battle_result", 1),

            (this_or_next|le, ":num_enemy_regulars_remaining", 0), #battle won
            (le, ":num_enemy_regulars_remaining", "$num_routed_enemies"), #replaced for above line because we do not want routed agents to spawn again in next turn of battle.

            (assign, ":enemy_finished",1),
          (else_try),
            (eq, "$g_engaged_enemy", 1),
            (le, "$g_enemy_fit_for_battle",0),
            (ge, "$g_friend_fit_for_battle",1),
            (assign, ":enemy_finished",1),
          (try_end),

          (this_or_next|eq, ":enemy_finished",1),
          (eq,"$g_enemy_surrenders",1),
          (assign, "$g_next_menu", -1),
          (jump_to_menu, "mnu_total_victory"),
        (else_try),
          (call_script, "script_party_count_members_with_full_health", "p_collective_friends"),
          (assign, ":num_ally_regulars_remaining", reg0),
          (assign, ":battle_lost", 0),
          (try_begin),
            (eq, "$g_battle_result", -1),

            #(eq, ":num_ally_regulars_remaining", 0), #battle lost
            (le, ":num_ally_regulars_remaining",  "$num_routed_allies"), #replaced for above line because we do not want routed agents to spawn again in next turn of battle.

            (assign, ":battle_lost",1),
          (try_end),

          (this_or_next|eq, ":battle_lost",1),
          (eq, "$g_player_surrenders",1),
          (leave_encounter),
          (change_screen_return),
        (try_end),
        #SB : re-do strings at bottom, hopefully globals aren't clobbered
        (str_store_party_name, s1, "$g_enemy_party"),
        (str_store_party_name, s2, "$g_ally_party"),
      ],
    [
      ("join_attack",
      [
        (neg|troop_is_wounded, "trp_player"),
          (try_begin),
	(eq, "$sea_battles", 1),
	(eq, "$freelancer_state", 1),
	(gt, "$enlisted_party", 0),
	(party_is_active, "$enlisted_party"),
            (party_slot_eq, "$enlisted_party", slot_party_on_water, 1),
		(call_script, "script_check_ports", "$enlisted_party"),
		(party_get_current_terrain, ":terrain", "$enlisted_party"),
		(this_or_next|gt, reg0, -1),
		(this_or_next|eq, ":terrain", rt_deep_water),
		(this_or_next|eq, ":terrain", rt_water),
		(eq, ":terrain", rt_river),
            (str_store_string, s7, "@Board"),
	(else_try),
	(eq, "$sea_battles", 1),
            (party_slot_eq, "p_main_party", slot_party_on_water, 1),
		(call_script, "script_check_ports", "p_main_party"),
		(party_get_current_terrain, ":terrain", "p_main_party"),
		(this_or_next|gt, reg0, -1),
		(this_or_next|eq, ":terrain", rt_deep_water),
		(this_or_next|eq, ":terrain", rt_water),
		(eq, ":terrain", rt_river),
            (str_store_string, s7, "@Board"),
          (else_try),
            (str_store_string, s7, "@Charge"),
          (end_try),
      ],
      "{s7} the enemy.",
      [
        (assign, "$g_joined_battle_to_help", 1),
        (party_set_next_battle_simulation_time, "$g_encountered_party", -1),
        (assign, "$g_battle_result", 0),
        (call_script, "script_calculate_renown_value"),
        (call_script, "script_calculate_battle_advantage"),
        (set_battle_advantage, reg0),
        (set_party_battle_mode),
          # phaiak chief begin
          (try_begin),
	(assign, ":sea_battle", 0),
		(try_begin),
		(eq, "$sea_battles", 1),
		(eq, "$freelancer_state", 1),
		(gt, "$enlisted_party", 0),
		(party_is_active, "$enlisted_party"),
            	(party_slot_eq, "$enlisted_party", slot_party_on_water, 1),
		(call_script, "script_check_ports", "$enlisted_party"),
		(party_get_current_terrain, ":terrain", "$enlisted_party"),
		(this_or_next|gt, reg0, -1),
		(this_or_next|eq, ":terrain", rt_deep_water),
		(this_or_next|eq, ":terrain", rt_water),
		(eq, ":terrain", rt_river),
		(assign, ":sea_battle", 1),
		(else_try),
		(eq, "$sea_battles", 1),
            	(party_slot_eq, "p_main_party", slot_party_on_water, 1),	# = sea battle
		(call_script, "script_check_ports", "p_main_party"),
		(party_get_current_terrain, ":terrain", "p_main_party"),
		(this_or_next|gt, reg0, -1),
		(this_or_next|eq, ":terrain", rt_deep_water),
		(this_or_next|eq, ":terrain", rt_water),
		(eq, ":terrain", rt_river),
		(assign, ":sea_battle", 1),
		(try_end),
	(eq, ":sea_battle", 1),
            #(try_begin),
              #(store_faction_of_party, ":party_faction", "$g_enemy_party"),
              #(this_or_next|eq, ":party_faction", "fac_neutral"),
              #(this_or_next|eq, ":party_faction", "fac_commoners"),
              #(party_slot_eq, "$g_enemy_party", slot_party_type, spt_village_farmer),
              #(assign, ":prepare_party_ships_for_team_script", "script_randomize_ships_for_team_civilian"),
            #(else_try),
              (assign, ":prepare_party_ships_for_team_script", "script_randomize_ships_for_team_war_party"),
            #(end_try),
            #new end
            (call_script, "script_party_count_members_with_full_health", "$g_enemy_party"),
            (assign, ":num_enemy", reg0),
            (call_script, "script_party_count_members_with_full_health", "p_main_party"),
	(assign, ":num_ours", reg0),
            (store_add, "$startup_battle_size", ":num_enemy", reg0),
            (call_script, "script_party_count_members_with_full_health", "$g_ally_party"),
		(assign, ":num_allies", reg0),
            (val_add, "$startup_battle_size", reg0),
            (try_begin),
		(eq, "$freelancer_state", 1),
              (eq,"$g_enemy_party","$g_encountered_party"),
              (eq,"$g_ally_party","$g_encountered_party_2"),
              (assign, "$player_team_in_sea_battle", 1),
		(assign, "$checked_ship_party", "$g_encountered_party"),
              (call_script, ":prepare_party_ships_for_team_script", 0, ":num_enemy"),
		(val_add, ":num_allies", 1),
		(assign, "$checked_ship_party", "$g_encountered_party_2"),
              (call_script, "script_randomize_ships_for_team_war_party", 1, ":num_allies"),
            (else_try),
              (eq,"$g_enemy_party","$g_encountered_party"),
              (eq,"$g_ally_party","$g_encountered_party_2"),
              (assign, "$player_team_in_sea_battle", 1),
		(assign, "$checked_ship_party", "$g_encountered_party"),
              (call_script, ":prepare_party_ships_for_team_script", 0, ":num_enemy"),
		(assign, "$checked_ship_party", "p_main_party"),
              (call_script, "script_randomize_ships_for_team_war_party", 1, ":num_ours"),
            (else_try),
              (assign, "$player_team_in_sea_battle", 0),
		(assign, "$checked_ship_party", "p_main_party"),
              (call_script, "script_randomize_ships_for_team_war_party", 0, ":num_ours"),
		(assign, "$checked_ship_party", "$g_encountered_party"),
              (call_script, ":prepare_party_ships_for_team_script", 1, ":num_enemy"),
            (end_try),
            (set_jump_mission,"mt_sea_battle"),					#Somebody had outcommented this. Why????
            (call_script, "script_setup_random_sea_scene"),
          (else_try),
            (set_jump_mission,"mt_lead_charge"),			# native
            (call_script, "script_setup_random_scene"),	# native
          (end_try),
          # phaiak end
          (assign, "$g_next_menu", "mnu_join_battle"),
          (jump_to_menu, "mnu_battle_debrief"),
          (change_screen_mission),
      ]),

      ("join_order_attack",
      [
      (neq, "$freelancer_state", 1),  #+freelancer chief
        (call_script, "script_party_count_members_with_full_health", "p_main_party"),
        (ge, reg0, 3),
      ],
      "Order your troops to attack with your allies while you stay back.",
      [
        (assign, "$g_joined_battle_to_help", 1),
        (party_set_next_battle_simulation_time, "$g_encountered_party", -1),
        (jump_to_menu,"mnu_join_order_attack"),
      ]),

      ("join_leave",[],"Leave.",
      [
      #(neq, "$freelancer_state", 1),  #+freelancer chief
        (try_begin),
           (neg|troop_is_wounded, "trp_player"),
           (call_script, "script_objectionable_action", tmt_aristocratic, "str_flee_battle"),
           (party_stack_get_troop_id, ":enemy_leader","$g_enemy_party",0),
           (is_between, ":enemy_leader", active_npcs_begin, active_npcs_end),
           (call_script, "script_add_log_entry", logent_player_retreated_from_lord, "trp_player",  -1, ":enemy_leader", -1),
        (try_end),

        (leave_encounter),(change_screen_return)]),
      ]),

  (
    "join_order_attack",mnf_disable_all_keys,
    "{s4}^^Your casualties: {s8}^^Allies' casualties: {s9}^^Enemy casualties: {s10}",
    "none",
    [
      (call_script, "script_party_calculate_strength", "p_main_party", 1), #skip player
      (assign, ":player_party_strength", reg0),
      (val_div, ":player_party_strength", 5),
      (call_script, "script_party_calculate_strength", "p_collective_friends", 0),
      (assign, ":friend_party_strength", reg0),
      (val_div, ":friend_party_strength", 5),

      (call_script, "script_party_calculate_strength", "p_collective_enemy", 0),
      (assign, ":enemy_party_strength", reg0),
      (val_div, ":enemy_party_strength", 5),

      (try_begin),
        (eq, ":friend_party_strength", 0),
        (store_div, ":enemy_party_strength_for_p", ":enemy_party_strength", 2),
      (else_try),
        (assign, ":enemy_party_strength_for_p", ":enemy_party_strength"),
        (val_mul, ":enemy_party_strength_for_p", ":player_party_strength"),
        (val_div, ":enemy_party_strength_for_p", ":friend_party_strength"),
      (try_end),

      (val_sub, ":enemy_party_strength", ":enemy_party_strength_for_p"),
      (inflict_casualties_to_party_group, "p_main_party", ":enemy_party_strength_for_p", "p_temp_casualties"),
      (call_script, "script_print_casualties_to_s0", "p_temp_casualties", 0),
      (str_store_string_reg, s8, s0),

      (inflict_casualties_to_party_group, "$g_enemy_party", ":friend_party_strength", "p_temp_casualties"),

      #ozan begin
      (party_get_num_companion_stacks, ":num_stacks", "p_temp_casualties"),
      (try_for_range, ":stack_no", 0, ":num_stacks"),
        (party_stack_get_troop_id, ":stack_troop", "p_temp_casualties", ":stack_no"),
        (try_begin),
          (party_stack_get_size, ":stack_size", "p_temp_casualties", ":stack_no"),
          (gt, ":stack_size", 0),
          (party_add_members, "p_total_enemy_casualties", ":stack_troop", ":stack_size"), #addition_to_p_total_enemy_casualties
          (party_stack_get_num_wounded, ":stack_wounded_size", "p_temp_casualties", ":stack_no"),
          (gt, ":stack_wounded_size", 0),
          (party_wound_members, "p_total_enemy_casualties", ":stack_troop", ":stack_wounded_size"),
        (try_end),
      (try_end),
      #ozan end

      (call_script, "script_print_casualties_to_s0", "p_temp_casualties", 0),
      (str_store_string_reg, s10, s0),

      (call_script, "script_collect_friendly_parties"),
      #(party_collect_attachments_to_party, "$g_ally_party", "p_collective_ally"),

      (inflict_casualties_to_party_group, "$g_ally_party", ":enemy_party_strength", "p_temp_casualties"),
      (call_script, "script_print_casualties_to_s0", "p_temp_casualties", 0),
      (str_store_string_reg, s9, s0),
      (party_collect_attachments_to_party, "$g_enemy_party", "p_collective_enemy"),

       #(assign, "$cant_leave_encounter", 0),
       (assign, "$no_soldiers_left", 0),
       (try_begin),
         (call_script, "script_party_count_members_with_full_health","p_main_party"),
         (assign, ":num_our_regulars_remaining", reg0),

         #(le, ":num_our_regulars_remaining", 0),
         (le, ":num_our_regulars_remaining", "$num_routed_us"), #replaced for above line because we do not want routed agents to spawn again in next turn of battle.

         (assign, "$no_soldiers_left", 1),
         (str_store_string, s4, "str_join_order_attack_failure"),
       (else_try),
         (call_script, "script_party_count_members_with_full_health","p_collective_enemy"),
         (assign, ":num_enemy_regulars_remaining", reg0),

         (this_or_next|le, ":num_enemy_regulars_remaining", 0),
         (le, ":num_enemy_regulars_remaining", "$num_routed_enemies"), #replaced for above line because we do not want routed agents to spawn again in next turn of battle.

         (assign, "$g_battle_result", 1),
         (assign, "$no_soldiers_left", 1),
         (str_store_string, s4, "str_join_order_attack_success"),
       (else_try),
         (str_store_string, s4, "str_join_order_attack_continue"),
       (try_end),
    ],
    [
      ("continue",[],"Continue...",
      [
        (jump_to_menu,"mnu_join_battle"),
      ]),
    ]
  ),


# Towns
  (
    "zendar",mnf_auto_enter,
    "You enter the town of Zendar.",
    "none",
    [(reset_price_rates,0),(set_price_rate_for_item,"itm_tools",70),(set_price_rate_for_item,"itm_salt",140)],
    [
      ("zendar_enter",[],"_",[(set_jump_mission,"mt_town_default"),(jump_to_scene,"scn_zendar_center"),(change_screen_mission)],"Door to the town center."),
      ("zendar_tavern",[],"_",[(set_jump_mission,"mt_town_default"),
                                                   (jump_to_scene,"scn_the_happy_boar"),
                                                   (change_screen_mission)],"Door to the tavern."),
      ("zendar_merchant",[],"_",[(set_jump_mission,"mt_town_default"),
                                                   (jump_to_scene,"scn_zendar_merchant"),
                                                   (change_screen_mission)],"Door to the merchant."),
      ("zendar_arena",[],"_",[(set_jump_mission,"mt_town_default"),
                                                   (jump_to_scene,"scn_zendar_arena"),
                                                   (change_screen_mission)],"Door to the arena."),
#      ("zendar_leave",[],"Leave town.",[[leave_encounter],[change_screen_return]]),
      ("town_1_leave",[],"_",[(leave_encounter),(change_screen_return)]),
    ]
  ),
  (
    "salt_mine",mnf_auto_enter,
    "You enter the salt mine.",
    "none",
    [(reset_price_rates,0),(set_price_rate_for_item,"itm_salt",55)],
    [
      ("enter",[],"Enter.",[(set_jump_mission,"mt_town_center"),(jump_to_scene,"scn_salt_mine"),(change_screen_mission)]),
      ("leave",[],"Leave.",[(leave_encounter),(change_screen_return)]),
    ]
  ),
  (
    "four_ways_inn",mnf_auto_enter,
    "You arrive at the Four Ways Inn.",
    "none",
    [],
    [

#      ("enter",[],"Enter.",[[set_jump_mission,"mt_town_default"],[jump_to_scene,"scn_conversation_scene"],[change_screen_mission]]),
      ("enter",[],"Enter.",[(set_jump_mission,"mt_ai_training"),(jump_to_scene,"scn_four_ways_inn"),(change_screen_mission)]),
      ("leave",[],"Leave.",[(leave_encounter),(change_screen_return)]),
    ]
  ),


    (
        "ruins_1",0,
        "You arrive at the ruins of Vimiacium.",
        "none",
        [
            ],
        [
            ("enter",[(eq,"$g_historia2",0),],"Approach the Ruins.",
             [
                  (set_jump_mission,"mt_dungeon_ruins_1"),
      (modify_visitors_at_site,"scn_ruins_1"),
                  (reset_visitors),
    (try_begin),
        (gt,"trp_robber", 0),
        (assign,reg(0),"trp_bandit"),
        (assign,reg(1),"trp_bandit"),
        (assign,reg(2),"trp_robber"),
        (assign,reg(3),"trp_robber"),
      (else_try),
        (assign,reg(0),"trp_bandit"),
        (assign,reg(1),"trp_bandit"),
        (assign,reg(2),"trp_robber"),
        (assign,reg(3),"trp_robber"),
      (try_end),
      (shuffle_range,0,4),
      (set_visitor,1,reg(0)),
      (set_visitor,2,reg(1)),
      (set_visitor,3,reg(2)),
      (set_visitor,4,reg(3)),
    (set_visitor,5,reg(0)),
    (set_visitor,6,"trp_brigand"),
    (set_visitor,7,"trp_brigand"),
    (set_visitor,8,reg(3)),
    (set_visitor,9,reg(0)),
    (set_visitor,10,reg(1)),
    (set_visitor,11,reg(2)),
    (set_visitor,12,reg(3)),
    (set_visitor,13,"trp_brigand"),
    (set_visitor,14,"trp_brigand"),
    (set_visitor,15,reg(2)),
    (set_visitor,16,"trp_rich_bandit"),
    (set_visitor,17,reg(2)),
    (set_visitor,18,reg(3)),
    (set_visitor,19,reg(0)),
    (set_visitor,20,reg(1)),
    (set_visitor,21,reg(2)),
    (set_visitor,22,reg(3)),
    (set_visitor,23,"trp_unique_bandit_1"),
    (set_visitor,24,"trp_rich_bandit"),
      (set_jump_entry, 0),
    (scene_set_slot, "scn_ruins_1", slot_scene_visited, 1),

#    (display_message,"@It's cold and smells old, taking you back to another time... a time when Rome ruled the world, and men knew how to construct huge stone buildings with several storeys.",color_good_news),

                 (jump_to_scene,"scn_ruins_1"),
               (change_screen_mission),
               ]),
                 ("leave",[],"Leave...",
       [(change_screen_map),
        ]),
    ],
  ),

    (
        "holy_lance_cave",0,
        "You arrive at a cave.",
        "none",
        [],
        [
        ("enter",[],"Explore...",[
          (set_jump_mission, "mt_explore_secret_place"),
          (modify_visitors_at_site, "scn_holy_lance_cave"),
          (reset_visitors),
          (set_jump_entry, 0),
          (set_visitor, 1, "trp_holy_lance_keeper"),
          (jump_to_scene, "scn_holy_lance_cave"),
          (change_screen_mission),
          ]),

        ("leave",[],"Leave...",[(change_screen_map),]),
    ],
  ),

    ("circle_mystic",0,
        "You arrive at the deep forest.",
        "none",
        [],
        [("enter",[(eq,"$g_hero_result",0),],"Approach.",
             [(modify_visitors_at_site,"scn_circle_mystic"),
              (reset_visitors,0),
              (set_visitors,1,"trp_donar_berserker",1),
              (set_jump_mission,"mt_berserker_mission"),
              (jump_to_scene,"scn_circle_mystic"),
              (change_screen_mission),]),
        ("leave",[],"Leave...",
       [(change_screen_map),]),
    ],),

  (
    "test_scene",0,
    "You enter the test scene.",
    "none",
    [],
    [

      ("enter",[],"Enter 1.",[[set_jump_mission,"mt_ai_training"],[jump_to_scene,"scn_multi_scene_1"],[change_screen_mission]]),
      ("enter",[],"Enter 2.",[[set_jump_mission,"mt_ai_training"],[jump_to_scene,"scn_multi_scene_2"],[change_screen_mission]]),
      ("enter",[],"Enter 3.",[[set_jump_mission,"mt_ai_training"],[jump_to_scene,"scn_multi_scene_3"],[change_screen_mission]]),
      ("enter",[],"Enter 4.",[[set_jump_mission,"mt_ai_training"],[jump_to_scene,"scn_multi_scene_4"],[change_screen_mission]]),
      ("enter",[],"Enter 5.",[[set_jump_mission,"mt_ai_training"],[jump_to_scene,"scn_multi_scene_5"],[change_screen_mission]]),
      ("enter",[],"Enter 6.",[[set_jump_mission,"mt_ai_training"],[jump_to_scene,"scn_multi_scene_6"],[change_screen_mission]]),
      ("enter",[],"Enter 7.",[[set_jump_mission,"mt_ai_training"],[jump_to_scene,"scn_test2"],[change_screen_mission]]),
      ("enter",[],"Enter 8.",[[set_jump_mission,"mt_ai_training"],[jump_to_scene,"scn_test3"],[change_screen_mission]]),
      ("enter",[],"Enter 9.",[[set_jump_mission,"mt_ai_training"],[jump_to_scene,"scn_multi_scene_13"],[change_screen_mission]]),
      ("leave",[],"Leave.",[(leave_encounter),(change_screen_return)]),
    ]
  ),
  (
    "battlefields",0,
    "{!}Select a field...",
    "none",
    [],
    [

      ("enter_f1",[],"{!}Field 1",[[set_jump_mission,"mt_ai_training"],[jump_to_scene,"scn_field_1"],[change_screen_mission]]),
      ("enter_f2",[],"{!}Field 2",[[set_jump_mission,"mt_ai_training"],[jump_to_scene,"scn_field_2"],[change_screen_mission]]),
      ("enter_f3",[],"{!}Field 3",[[set_jump_mission,"mt_ai_training"],[jump_to_scene,"scn_field_3"],[change_screen_mission]]),
      ("enter_f4",[],"{!}Field 4",[[set_jump_mission,"mt_ai_training"],[jump_to_scene,"scn_field_4"],[change_screen_mission]]),
      ("enter_f5",[],"{!}Field 5",[[set_jump_mission,"mt_ai_training"],[jump_to_scene,"scn_field_5"],[change_screen_mission]]),
      ("leave",[],"Leave.",[(leave_encounter),(change_screen_return)]),
    ]
  ),

##  (
##    "center_under_attack_while_resting",0,
##    "{s1} has been besieged by {s2}, and the enemy seems to be preparing for an assault!\
## What will you do?",
##    "none",
##    [
##        (party_get_battle_opponent, ":besieger_party", "$auto_enter_town"),
##        (str_store_party_name, s1, "$auto_enter_town"),
##        (str_store_party_name, s2, ":besieger_party"),
##    ],
##    [
##      ("defend_against_siege", [],"Help the defenders of {s1}!",
##       [
##           (assign, "$g_last_player_do_nothing_against_siege_next_check", 0),
##           (rest_for_hours, 0, 0, 0),
##           (change_screen_return),
##           (start_encounter, "$auto_enter_town"),
##           ]),
##      ("do_not_defend_against_siege",[],"Find a secure place and wait there.",
##       [
##           (change_screen_return),
##           ]),
##    ]
##  ),

  (#SB : pic hotkeys
    "join_siege_outside",mnf_scale_picture|mnf_enable_hot_keys,
    "{s1} has come under siege by {s2}.",
    "none",
    [
        (str_store_party_name, s1, "$g_encountered_party"),
        (str_store_party_name, s2, "$g_encountered_party_2"),
		  ##diplomacy start+ Get gender from script
        #(troop_get_type, ":is_female", "trp_player"),#<- replaced
        (try_begin),
       #+freelancer chief
          (eq, "$freelancer_state", 1),
          (try_begin),
            (store_troop_faction, ":commanders_faction", "$enlisted_lord"),
            (store_relation, ":relation", ":commanders_faction", "$g_encountered_party_faction"),
            (this_or_next|eq, ":commanders_faction", "$g_encountered_party_faction"), #encountered party is always the castle/town sieged
            (ge, ":relation", 0),
            (jump_to_menu, "mnu_siege_started_defender"),
          (else_try),
            (jump_to_menu, "mnu_besiegers_camp_with_allies"),
          (try_end),
        (else_try),
          (set_background_mesh, "mesh_pic_siege_sighted"),
        (try_end),
		  ##diplomacy end+
    ],
    [
      ("approach_besiegers",[(store_faction_of_party, ":faction_no", "$g_encountered_party_2"),
                             (store_relation, ":relation", ":faction_no", "fac_player_supporters_faction"),
                             (ge, ":relation", 0),
                             (store_faction_of_party, ":faction_no", "$g_encountered_party"),
                             (store_relation, ":relation", ":faction_no", "fac_player_supporters_faction"),
                             (lt, ":relation", 0),
                             ],"Approach the siege camp.",[
          (jump_to_menu, "mnu_besiegers_camp_with_allies"),
                                ]),
      ("pass_through_siege",[(store_faction_of_party, ":faction_no", "$g_encountered_party"),
                             (store_relation, ":relation", ":faction_no", "fac_player_supporters_faction"),
                             (ge, ":relation", 0),
                             ],"Pass through the siege lines and enter {s1}.",
       [
            (jump_to_menu,"mnu_cut_siege_without_fight"),
          ]),
      ("leave",[],"Leave.",[(leave_encounter),
                            (change_screen_return)]),
    ]
  ),
  (
    "cut_siege_without_fight",0,
    "The besiegers let you approach the gates without challenge.",
    "none",
    [],
    [
      ("continue",[],"Continue...",[(try_begin),
                                   (this_or_next|eq, "$g_encountered_party_faction", "fac_player_supporters_faction"),
                                   (eq, "$g_encountered_party_faction", "$players_kingdom"),
                                   (jump_to_menu, "mnu_town"),
                                 (else_try),
                                   (jump_to_menu, "mnu_castle_outside"),
                                 (try_end)]),
      ]
  ),
  ( #SB : pic hotkeys
    "besiegers_camp_with_allies",mnf_enable_hot_keys,
    "{s1} remains under siege. The banners of {s2} fly above the camp of the besiegers,\
 where you and your men are welcomed.",
    "none",
    [
        (str_store_party_name, s1, "$g_encountered_party"),
        (str_store_party_name, s2, "$g_encountered_party_2"),
        (assign, "$g_enemy_party", "$g_encountered_party"),
        (assign, "$g_ally_party", "$g_encountered_party_2"),
        (select_enemy, 0),
        (call_script, "script_encounter_calculate_fit"),
        (try_begin),
          (eq, "$new_encounter", 1),
          (assign, "$new_encounter", 0),
		  ###diplomacy start+
		  ##If terrain advantage is on, use siege settings
          #(assign, ":save_dplmc_terrain_advantage", "$g_dplmc_terrain_advantage"),
		  ##(assign, "$g_dplmc_terrain_advantage", ":save_dplmc_terrain_advantage"),
		  #(try_begin),
		  #   (eq, "$g_dplmc_terrain_advantage", TERRAIN_ADVANTAGE_ENABLE),
		  #   (assign, "$g_dplmc_terrain_advantage", TERRAIN_ADVANTAGE_FORCE_SIEGE),
		  #(try_end),
		  ###diplomacy end+
          (call_script, "script_encounter_init_variables"),
		  ###diplomacy start+
		  ##Revert terrain advantage setting
		  #(assign, "$g_dplmc_terrain_advantage", ":save_dplmc_terrain_advantage"),
		  ###diplomacy end+
        (try_end),

        (try_begin),
          (eq, "$g_leave_encounter",1),
          (change_screen_return),
        (else_try),
          (assign, ":enemy_finished", 0),
          (try_begin),
            (eq, "$g_battle_result", 1),
            (assign, ":enemy_finished", 1),
          (else_try),
            (le, "$g_enemy_fit_for_battle", 0),
            (ge, "$g_friend_fit_for_battle", 1),
            (assign, ":enemy_finished", 1),
          (try_end),
          (this_or_next|eq, ":enemy_finished", 1),
          (eq, "$g_enemy_surrenders", 1),
##          (assign, "$g_next_menu", -1),#"mnu_castle_taken_by_friends"),
##          (jump_to_menu, "mnu_total_victory"),

          #SB : TODO : add prisoner train of unclaimed prisoners and such, succeed quests by proxy
          (party_get_num_prisoner_stacks, ":num_prisoner_stacks", "$g_enemy_party"),
          (try_for_range, ":stack_no", 0, ":num_prisoner_stacks"),
            # (eq, ":break", 0),
            (party_prisoner_stack_get_troop_id, ":stack_troop", "p_collective_enemy", ":stack_no"),
            (troop_is_hero, ":stack_troop"),
            (try_begin),
              (check_quest_active, "qst_rescue_prisoner"),
              (quest_slot_eq, "qst_rescue_prisoner", slot_quest_target_troop, ":stack_troop"),
              (call_script, "script_succeed_quest", "qst_rescue_prisoner"),
            (else_try),
              (check_quest_active, "qst_deliver_message_to_prisoner_lord"),
              (quest_slot_eq, "qst_deliver_message_to_prisoner_lord", slot_quest_target_troop, ":stack_troop"),
              (call_script, "script_end_quest", "qst_deliver_message_to_prisoner_lord"),
            (try_end),
          (try_end),
          (try_begin), #check if player gets a share of party prisoners, freed prisoners doesn't count
            (store_faction_of_party, ":faction_no", "$g_ally_party"),
            (call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", ":faction_no"),
            (ge, reg0, DPLMC_FACTION_STANDING_MEMBER),
            #check relation with siege leader as well
            (party_stack_get_troop_id, ":leader","$g_encountered_party_2",0),
            (call_script, "script_troop_get_player_relation", ":leader"),
            (this_or_next|troop_slot_eq, ":leader", slot_lord_reputation_type, lrep_martial),
            (ge, reg0, -10),
            (eq, "$capture_screen_shown", 0),
            (assign, "$capture_screen_shown", 1),

            (party_clear, "p_temp_party"),
            (assign, "$g_move_heroes", 0),
            (change_screen_exchange_with_party, "p_temp_party"),
          (else_try), #check if player has seen the loot
            (eq, "$loot_screen_shown", 0),
            (assign, "$loot_screen_shown", 1),
            (troop_clear_inventory, "trp_temp_troop"),
            (call_script, "script_party_calculate_loot", "p_total_enemy_casualties"), #p_encountered_party_backup changed to total_enemy_casualties
            (gt, reg0, 0),
            (troop_sort_inventory, "trp_temp_troop"),
            (try_begin),
              (call_script, "script_cf_dplmc_player_party_meets_autoloot_conditions"),
              (assign, "$dplmc_return_menu", "mnu_besiegers_camp_with_allies"),
              (assign, "$lord_selected", "trp_player"),
              (jump_to_menu, "mnu_dplmc_manage_loot_pool"),
            (else_try),
              #Old behavior:
              (change_screen_loot, "trp_temp_troop"),
            (try_end),
          (else_try), #SB : increment globals, add exp
            (call_script, "script_party_give_xp_and_gold", "p_total_enemy_casualties"),
            (val_add, "$g_total_victories", 1),
            (call_script, "script_party_wound_all_members", "$g_enemy_party"),
            (leave_encounter),
            (change_screen_return),
          (try_end),
        (else_try),
          (call_script, "script_party_count_members_with_full_health", "p_collective_friends"),
          (assign, ":ally_num_soldiers", reg0),
          (eq, "$g_battle_result", -1),
          (eq, ":ally_num_soldiers", 0), #battle lost (TODO : also compare this with routed allies too like in other parts)
          (leave_encounter),
          (change_screen_return),
        (try_end),
        ],
    [
      ("talk_to_siege_commander",[]," Request a meeting with the commander.",[
                                (call_script, "script_get_meeting_scene"), (assign, ":meeting_scene", reg0),
                                (modify_visitors_at_site,":meeting_scene"),(reset_visitors),
                                (set_visitor,0,"trp_player"),
                                (party_stack_get_troop_id, ":siege_leader_id","$g_encountered_party_2",0),
                                (party_stack_get_troop_dna,":siege_leader_dna","$g_encountered_party_2",0),
                                (set_visitor,17,":siege_leader_id",":siege_leader_dna"),
                                (set_jump_mission,"mt_conversation_encounter"),
                                (jump_to_scene,":meeting_scene"),
                                (assign, "$talk_context", tc_siege_commander),
                                (change_screen_map_conversation, ":siege_leader_id")]),
      ("join_siege_with_allies",[(neg|troop_is_wounded, "trp_player")], "Join the next assault.",
       [
           (assign, "$g_joined_battle_to_help", 1),
           (party_set_next_battle_simulation_time, "$g_encountered_party", -1),
           (try_begin),
             (check_quest_active, "qst_join_siege_with_army"),
             (quest_slot_eq, "qst_join_siege_with_army", slot_quest_target_center, "$g_encountered_party"),
             (add_xp_as_reward, 250),
             (call_script, "script_end_quest", "qst_join_siege_with_army"),
             #Reactivating follow army quest
             (faction_get_slot, ":faction_marshall", "$players_kingdom", slot_faction_marshall),
             (str_store_troop_name_link, s9, ":faction_marshall"),
             (setup_quest_text, "qst_follow_army"),
             ##diplomacy start+ fix pronoun
             (call_script, "script_dplmc_store_troop_is_female", ":faction_marshall"),
             (str_store_string, s2, "@{s9} wants you to follow {reg0?her:his} army until further notice."),
             ##diplomacy end+
             (call_script, "script_start_quest", "qst_follow_army", ":faction_marshall"),
             (assign, "$g_player_follow_army_warnings", 0),
           (try_end),
           (try_begin),
             (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
             (party_get_slot, ":battle_scene", "$g_encountered_party", slot_town_walls),
           (else_try),
             (party_get_slot, ":battle_scene", "$g_encountered_party", slot_castle_exterior),
           (try_end),
           (call_script, "script_calculate_battle_advantage"),
           (val_mul, reg0, 2),
           (val_div, reg0, 3), #scale down the advantage a bit in sieges.
           (set_battle_advantage, reg0),
           (set_party_battle_mode),
           (try_begin),
             (party_slot_eq, "$g_encountered_party", slot_center_siege_with_belfry, 1),
             (set_jump_mission,"mt_castle_attack_walls_belfry"),
           #(else_try),
           #  (party_slot_eq, "$g_encountered_party", slot_center_siege_with_belfry, 2),
           #  (set_jump_mission,"mt_castle_attack_walls_special"),
           (else_try),
             (set_jump_mission,"mt_castle_attack_walls_ladder"),
           (try_end),
           (jump_to_scene,":battle_scene"),
           (assign, "$g_siege_final_menu", "mnu_besiegers_camp_with_allies"),
           (assign, "$g_siege_battle_state", 1),
           (assign, "$g_next_menu", "mnu_castle_besiege_inner_battle"),
           (jump_to_menu, "mnu_battle_debrief"),
           (change_screen_mission),
          ]),
      ("join_siege_stay_back", [
      #(neq, "$freelancer_state", 1),  #+freelancer chief
        (call_script, "script_party_count_members_with_full_health", "p_main_party"),
                                (ge, reg0, 3),
                                ],
       "Order your soldiers to join the next assault without you.",
       [
         (assign, "$g_joined_battle_to_help", 1),
         (party_set_next_battle_simulation_time, "$g_encountered_party", -1),
         (try_begin),
           (check_quest_active, "qst_join_siege_with_army"),
           (quest_slot_eq, "qst_join_siege_with_army", slot_quest_target_center, "$g_encountered_party"),
           (add_xp_as_reward, 100),
           (call_script, "script_end_quest", "qst_join_siege_with_army"),
           #Reactivating follow army quest
           (faction_get_slot, ":faction_marshall", "$players_kingdom", slot_faction_marshall),
           (str_store_troop_name_link, s9, ":faction_marshall"),
           (setup_quest_text, "qst_follow_army"),
           ##diplomacy start+ fix pronoun
           (call_script, "script_dplmc_store_troop_is_female", ":faction_marshall"),
           (str_store_string, s2, "@{s9} wants you to follow {reg0?her:his} army until further notice."),
           ##diplomacy end+
           (call_script, "script_start_quest", "qst_follow_army", ":faction_marshall"),
           (assign, "$g_player_follow_army_warnings", 0),
         (try_end),
         (jump_to_menu,"mnu_castle_attack_walls_with_allies_simulate")]),
      ("leave",[],"Leave.",[(leave_encounter),(change_screen_return)]),
    ]
  ),

  (
    "castle_outside",mnf_scale_picture,
    "You are outside {s2}.{s11} {s3} {s4}",
    "none",
    [
        (assign, "$g_enemy_party", "$g_encountered_party"),
        (assign, "$g_ally_party", -1),
        (str_store_party_name, s2,"$g_encountered_party"),
        (call_script, "script_encounter_calculate_fit"),
        (assign,"$all_doors_locked",1),
        (assign, "$current_town","$g_encountered_party"),

        (try_begin),
          (eq, "$new_encounter", 1),
          (assign, "$new_encounter", 0),
          (call_script, "script_let_nearby_parties_join_current_battle", 1, 0),
		  ###diplomacy start+
		  ##If terrain advantage is on, use siege settings for estimating strength
          #(assign, ":save_dplmc_terrain_advantage", "$g_dplmc_terrain_advantage"),
		  #(try_begin),
		  #   (eq, "$g_dplmc_terrain_advantage", TERRAIN_ADVANTAGE_ENABLE),
		  #   (assign, "$g_dplmc_terrain_advantage", TERRAIN_ADVANTAGE_FORCE_SIEGE),
		  #(try_end),
		  ###diplomacy end+
          (call_script, "script_encounter_init_variables"),
		  ###diplomacy start+
		  ##Revert terrain advantage settings
		  #(assign, "$g_dplmc_terrain_advantage", ":save_dplmc_terrain_advantage"),
		  ###diplomacy end+
          (assign, "$entry_to_town_forbidden",0),

          (try_begin),         #dckplmc: handle removing disguise here, bug with saving in-mission
            (gt, "$sneaked_into_town", disguise_none),
            (eq, "$g_dplmc_player_disguise", 1),
            (display_message, "@Removing disguise...", message_alert), #SB : colorize
            (try_begin),
              (eq, "$g_dplmc_player_disguise", 1),
              (set_show_messages, 0),
              #equipment is deposited back to inventory, it starts off blank
              (try_for_range, ":i_slot", ek_item_0, ek_food + 1),
                (troop_get_inventory_slot, ":item", "trp_player", ":i_slot"),
                (neq, ":item", -1),
                (troop_get_inventory_slot_modifier, ":imod", "trp_player", ":i_slot"),
                (troop_add_item, "trp_random_town_sequence", ":item", ":imod"),
              (try_end),
              #less efficient, but merge and respect original player inventory's order
              (call_script, "script_move_inventory_and_gold", "trp_player", "trp_random_town_sequence", 0), #do not move gold
              (call_script, "script_dplmc_copy_inventory", "trp_random_town_sequence", "trp_player"),
              (call_script, "script_troop_transfer_gold", "trp_random_town_sequence", "trp_player", 0), #move remaining gold now
              (set_show_messages, 1),
            (try_end),
            # (assign, "$sneaked_into_town", disguise_none),
          (try_end),
          (assign, "$sneaked_into_town", disguise_none),
          (assign, "$town_entered", 0),
#          (assign, "$waiting_for_arena_fight_result", 0),
          (assign, "$encountered_party_hostile", 0),
          (assign, "$encountered_party_friendly", 0),
          (try_begin),
            (gt, "$g_player_besiege_town", 0),
            (neq,"$g_player_besiege_town","$g_encountered_party"),
            (party_slot_eq, "$g_player_besiege_town", slot_center_is_besieged_by, "p_main_party"),
            (call_script, "script_lift_siege", "$g_player_besiege_town", 0),
            (assign,"$g_player_besiege_town",-1),
          (try_end),
          (try_begin),
            (lt, "$g_encountered_party_relation", 0),
            (assign, "$encountered_party_hostile", 1),
            (assign,"$entry_to_town_forbidden",1),
          (try_end),

          ##diplomacy begin
          (try_begin),
            (party_slot_eq, "$g_encountered_party", slot_village_infested_by_bandits, "trp_peasant_woman"),
            (assign, "$encountered_party_hostile", 1),
            (assign,"$entry_to_town_forbidden",1),
          (try_end),
          ##diplomacy end

          (assign,"$cant_sneak_into_town",0),
          (try_begin),
            (eq,"$current_town","$last_sneak_attempt_town"),
            (store_current_hours,reg(2)),
            (val_sub,reg(2),"$last_sneak_attempt_time"),
            (lt,reg(2),12),
            (assign,"$cant_sneak_into_town",1),
          (try_end),
        (else_try), #second or more turn
          (eq, "$g_leave_encounter",1),
          (change_screen_return),
        (try_end),

        (str_clear,s4),
        (try_begin),
          (eq,"$entry_to_town_forbidden",1),
          (try_begin),
            (eq,"$cant_sneak_into_town",1),
            (str_store_string,s4,"str_sneaking_to_town_impossible"),
          (else_try),
            (str_store_string,s4,"str_entrance_to_town_forbidden"),
          (try_end),
        (try_end),

        (party_get_slot, ":center_lord", "$current_town", slot_town_lord),
        (store_faction_of_party, ":center_faction", "$current_town"),
        (str_store_faction_name,s9,":center_faction"),
        (try_begin),
          (ge, ":center_lord", 0),
          (str_store_troop_name,s8,":center_lord"),
          (str_store_string,s7,"@{s8} of {s9}"),
        (try_end),
        ##diplomacy start+

        #SB : move coruler variable up here
		(assign, ":is_coruler", 0),
		(try_begin),
			(eq, "$g_encountered_party_faction", "$players_kingdom"),
			(is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
			(call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$players_kingdom"),
			(ge, reg0, DPLMC_FACTION_STANDING_LEADER_SPOUSE),
			(assign, ":is_coruler", 1),
		(try_end),
		(assign, ":save_reg0", reg0),#save variables
		(assign, ":save_reg4", reg4),
		(assign, ":relation", 0),
		(assign, reg4, 0),
		(try_begin),#If there's a relation of some kind, write it to s11 (which we'll overwrite below)
			(lt, ":center_lord", 1),
		(else_try),
			#your relative
			(call_script, "script_troop_get_family_relation_to_troop", ":center_lord", "trp_player"),#outputs to s11, ":relation", and reg4
			(ge, ":relation", 1),#Fall through if this not a relative
		(else_try),
			#your current liege
			(eq, ":center_faction", "$players_kingdom"),
			(is_between, ":center_faction", kingdoms_begin, kingdoms_end),#include fac_player_supporters_faction for claimant quest
			(faction_slot_eq, ":center_faction", slot_faction_leader, ":center_lord"),
			(str_store_string, s11, "@liege"),
			(assign, ":relation", 1),
		(else_try),
			#your former liege if you renounced a kingdom
			(eq, ":center_faction", "$players_oath_renounced_against_kingdom"),
			(is_between, ":center_faction", npc_kingdoms_begin, npc_kingdoms_end),
			(faction_slot_eq, ":center_faction", slot_faction_leader, ":center_lord"),
			(str_store_string, s11, "@former liege"),
			(assign, ":relation", 1),
		(else_try),
			#stop here for lords you haven't met, or non-hero troops
			(this_or_next|neg|troop_is_hero, ":center_lord"),
			(troop_slot_eq, ":center_lord", slot_troop_met, 0),
		(else_try),
			#check for affiliates
			(call_script, "script_dplmc_is_affiliated_family_member", ":center_lord"),
			(ge, reg0, 1), #SB : substitute register
			(assign, ":relation", 1),
			(try_begin),
				(ge, "$g_encountered_party_relation", 0),#don't say "ally" when you might fight them, as that's confusing
				(str_store_string, s11, "str_dplmc_ally"),
			(else_try),
				(str_store_string, s11, "@affiliate"),
			(try_end),
		(else_try),
			#check for friends (former companions)
			(call_script, "script_troop_get_player_relation", ":center_lord"),
            (assign, ":relation", reg0),
			(is_between, ":center_lord", companions_begin, companions_end),
			(neg|troop_slot_eq, ":center_lord", slot_troop_playerparty_history, dplmc_pp_history_nonplayer_entry),
			(try_begin),
			   (ge, "$g_encountered_party_relation", 0),#don't say "ally" when you might fight them, as that's confusing
			   (ge, ":relation", 50),
			   (str_store_string, s11, "str_dplmc_ally"),
			(else_try),
				(ge, "$g_encountered_party_relation", 0),
				(ge, ":relation", 20),
				(str_store_string, s11, "str_dplmc_friend"),
			(else_try),
				(str_store_string, s11, "@former companion"),
			(try_end),
			(assign, ":relation", 1),
		(else_try),
			#don't print "friend" if you might fight them
			(lt, "$g_encountered_party_relation", 0),
			(assign, ":relation", 0),
		(else_try),
			#check for friends
			# (val_div, ":relation", 50),#right now ":relation" holds the relation with the player
			(ge, ":relation", 50),
			(str_store_string, s11, "str_dplmc_friend"),
		(else_try),
			#check for marshall
			(eq, ":center_faction", "$players_kingdom"),
			(faction_slot_eq, ":center_faction", slot_faction_marshall, ":center_lord"),
			(str_store_string, s11, "@marshall"),
		(else_try), #SB : coruler check above
			# #check for vassal of player if nothing else to say
			# (call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", ":center_faction"),
			# (val_add, ":relation", 1),
			# (val_sub, ":relation", DPLMC_FACTION_STANDING_LEADER_SPOUSE),
			(ge, ":is_coruler", 1),
			(str_store_string, s11, "@vassal"),
            (assign, ":relation", 1),
		(else_try),
			(assign, ":relation", 0),
		(try_end),
		##diplomacy end+
        (try_begin), # same mnu_town
          (party_slot_eq,"$current_town",slot_party_type, spt_castle),
          (try_begin),
            (eq, ":center_lord", "trp_player"),
            (str_store_string,s11,"@ Your own banner flies over the castle gate."),
		  ##diplomacy start+ If ":relation" > 0, a relation string was written to {s11} above
		  (else_try),
			(ge, ":relation", 1),
			(str_store_string, s11, "@ You see the banner of your {s11} {s7} over the castle gate."),
		  ##diplomacy end+
          (else_try),
            (ge, ":center_lord", 0),
            (str_store_string, s11,"@ You see the banner of {s7} over the castle gate."),
          (else_try),
		    (is_between, ":center_faction", kingdoms_begin, kingdoms_end),
            (str_store_string, s11,"str__this_castle_is_temporarily_under_royal_control"),
		  (else_try),
            (str_store_string, s11,"str__this_castle_does_not_seem_to_be_under_anyones_control"),
          (try_end),
        (else_try),
          (try_begin),
            (eq, ":center_lord", "trp_player"),
            (str_store_string, s11,"@ Your own banner flies over the town gates."),
		  ##diplomacy start+ If ":relation" > 0, a relation string was written to {s11} above
		  (else_try),
			(ge, ":relation", 1),
			(str_store_string, s11, "@ You see the banner of your {s11} {s7} over the town gates."),
		  ##diplomacy end+
          (else_try),
            (ge, ":center_lord", 0),
            (str_store_string, s11,"@ You see the banner of {s7} over the town gates."),
          (else_try),
		    (is_between, ":center_faction", kingdoms_begin, kingdoms_end),
            (str_store_string, s11,"str__this_town_is_temporarily_under_royal_control"),
		  (else_try),
            (str_store_string, s11,"str__the_townspeople_seem_to_have_declared_their_independence"),
          (try_end),
        (try_end),

        #SB : get rid of register usage
        (party_get_num_companions, ":num_enemies", "p_collective_enemy"),
        (assign,"$castle_undefended",0),
        (str_clear, s3),
        (try_begin),
          (eq, ":num_enemies", 0),
          (assign,"$castle_undefended",1),
#          (party_set_faction,"$g_encountered_party","fac_neutral"),
#          (party_set_slot, "$g_encountered_party", slot_town_lord, stl_unassigned),
          (str_store_string, s3, "str_castle_is_abondened"),
        (else_try),
        ##diplomacy begin
          (party_slot_eq, "$g_encountered_party", slot_village_infested_by_bandits, "trp_peasant_woman"),
          (str_store_string, s3, "str_dplmc_place_is_occupied_by_insurgents"),
          #SB : assign globals, doesn't make senes
        (else_try),
        ##diplomacy end
		##diplomacy start+ Handle player is co-ruler of kingdom
		  (this_or_next|eq, ":is_coruler", 1),
		##diplomacy end+
          (eq,"$g_encountered_party_faction","fac_player_supporters_faction"),
          (str_store_string, s3, "str_place_is_occupied_by_player"),
        (else_try),
          (lt, "$g_encountered_party_relation", 0),
          (str_store_string, s3, "str_place_is_occupied_by_enemy"),
        (else_try),
#          (str_store_string, s3, "str_place_is_occupied_by_friendly"),
        (try_end),
		##diplomacy start+
		(assign, reg0, ":save_reg0"),#revert variables
		(assign, reg4, ":save_reg4"),
		##diplomacy end+

        (try_begin),
          (eq, "$g_leave_town_outside",1),
          (assign, "$g_leave_town_outside",0),
          (assign, "$g_permitted_to_center", 0),
          (change_screen_return),
        (else_try),
          (check_quest_active, "qst_escort_lady"),
          (quest_slot_eq, "qst_escort_lady", slot_quest_target_center, "$g_encountered_party"),
          (quest_get_slot, ":quest_object_troop", "qst_escort_lady", slot_quest_object_troop),
          # (call_script, "script_get_meeting_scene"), (assign, ":meeting_scene", reg0),
          # (modify_visitors_at_site,":meeting_scene"),
          # (reset_visitors),
          # (set_visitor,0, "trp_player"),
          # (set_visitor,17, ":quest_object_troop"),
          # (set_jump_mission, "mt_conversation_encounter"),
          # (jump_to_scene, ":meeting_scene"),
          (assign, "$talk_context", tc_entering_center_quest_talk),
          # (change_screen_map_conversation, ":quest_object_troop"),
          (call_script, "script_setup_troop_meeting", ":quest_object_troop", -1),
        (else_try),
          (check_quest_active, "qst_kidnapped_girl"),
          (quest_slot_eq, "qst_kidnapped_girl", slot_quest_giver_center, "$g_encountered_party"),
          (quest_slot_eq, "qst_kidnapped_girl", slot_quest_current_state, 3),
          # (call_script, "script_get_meeting_scene"), (assign, ":meeting_scene", reg0),
          # (modify_visitors_at_site,":meeting_scene"),
          # (reset_visitors),
          # (set_visitor,0, "trp_player"),
          # (set_visitor,17, "trp_kidnapped_girl"),
          # (set_jump_mission, "mt_conversation_encounter"),
          # (jump_to_scene, ":meeting_scene"),
          (assign, "$talk_context", tc_entering_center_quest_talk),
          # (change_screen_map_conversation, "trp_kidnapped_girl"),
          (call_script, "script_setup_troop_meeting", "trp_kidnapped_girl", -1),
        (else_try), #SB : automatically talk to caravans
          (check_quest_active, "qst_escort_merchant_caravan"),
          (quest_slot_eq, "qst_escort_merchant_caravan", slot_quest_current_state, 1), #not talked to already
          (quest_get_slot, ":quest_target_party", "qst_escort_merchant_caravan", slot_quest_target_party),
          (party_is_active, ":quest_target_party"),
          (quest_get_slot, ":quest_target_center", "qst_escort_merchant_caravan", slot_quest_target_center),
          (eq, "$current_town",":quest_target_center"),
          (store_distance_to_party_from_party, ":dist", ":quest_target_center",":quest_target_party"),
          (lt,":dist",4),
          # (start_encounter, ":quest_target_party"),
          (assign, "$talk_context", tc_party_encounter),
          (assign, "$g_encountered_party", ":quest_target_party"),
          (party_stack_get_troop_id, ":caravan_leader", ":quest_target_party", 0),
          (party_stack_get_troop_dna, ":caravan_leader_dna", ":quest_target_party", 0),
          (call_script, "script_setup_troop_meeting", ":caravan_leader", ":caravan_leader_dna"),
        (else_try), #SB : should really merge these quests, this is for older savegames
          (eq, "$caravan_escort_state",1),
          (party_is_active, "$caravan_escort_party_id"),
          (eq,"$current_town","$caravan_escort_destination_town"),
          (store_distance_to_party_from_party, ":dist", "$caravan_escort_destination_town", "$caravan_escort_party_id"),
          (lt,":dist", 5),
          # (store_distance_to_party_from_party, ":caravan_distance_to_player","p_main_party","$caravan_escort_party_id"),
          # (lt, ":caravan_distance_to_player", 5),
          # (start_encounter, "$caravan_escorted_party_id"),

          (assign, "$talk_context", tc_party_encounter),
          (assign, "$g_encountered_party", "$caravan_escort_party_id"),
          (party_stack_get_troop_id, ":caravan_leader", "$caravan_escort_party_id", 0),
          (party_stack_get_troop_dna, ":caravan_leader_dna", "$caravan_escort_party_id", 0),
          (call_script, "script_setup_troop_meeting", ":caravan_leader", ":caravan_leader_dna"),
          # (start_map_conversation, ":caravan_leader", ":caravan_leader_dna"),

##        (else_try),
##          (gt, "$lord_requested_to_talk_to", 0),
##          (store_current_hours, ":cur_hours"),
##          (neq, ":cur_hours", "$quest_given_time"),
##          (modify_visitors_at_site,"scn_conversation_scene"),
##          (reset_visitors),
##          (assign, ":cur_lord", "$lord_requested_to_talk_to"),
##          (assign, "$lord_requested_to_talk_to", 0),
##          (set_visitor,0,"trp_player"),
##          (set_visitor,17,":cur_lord"),
##          (set_jump_mission,"mt_conversation_encounter"),
##          (jump_to_scene,"scn_conversation_scene"),
##          (assign, "$talk_context", tc_castle_gate_lord),
##          (change_screen_map_conversation, ":cur_lord"),
        (else_try),
          (eq, "$g_town_visit_after_rest", 1),
          (assign, "$g_town_visit_after_rest", 0),
          (jump_to_menu,"mnu_town"),
        ##diplomacy begin
        (else_try),
          (party_slot_eq, "$g_encountered_party", slot_village_infested_by_bandits, "trp_peasant_woman"),
          (try_begin),
            (eq, "$g_player_besiege_town", "$g_encountered_party"),
            (jump_to_menu, "mnu_castle_besiege"),
          (try_end),
        ##diplomacy end
        (else_try),
          (party_slot_eq, "$g_encountered_party", slot_party_type, spt_castle),
		  ##diplomacy start+ Handle player is co-ruler of kingdom
		  (assign, ":is_coruler",0),
	  	  (try_begin),
			(eq, "$g_encountered_party_faction", "$players_kingdom"),
			(is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
			(call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$players_kingdom"),
			(ge, reg0, DPLMC_FACTION_STANDING_LEADER_SPOUSE),
			(assign, ":is_coruler", 1),
		  (try_end),
		  (this_or_next|eq, ":is_coruler", 1),
		  ##diplomacy end+
          (this_or_next|party_slot_eq, "$g_encountered_party", slot_town_lord, "trp_player"),
          (faction_slot_eq, "$g_encountered_party_faction", slot_faction_leader, "trp_player"),
          (jump_to_menu, "mnu_enter_your_own_castle"),
        (else_try),
          (party_slot_eq,"$g_encountered_party", slot_party_type,spt_castle),
          (ge, "$g_encountered_party_relation", 0),
          (this_or_next|eq,"$castle_undefended", 1),
          (this_or_next|eq, "$g_permitted_to_center", 1),
          (eq, "$g_encountered_party_faction", "$players_kingdom"),
          (jump_to_menu, "mnu_town"),
        (else_try),
          (party_slot_eq,"$g_encountered_party", slot_party_type,spt_town),
          (ge, "$g_encountered_party_relation", 0),
          (jump_to_menu, "mnu_town"),
        (else_try),
          (eq, "$g_player_besiege_town", "$g_encountered_party"),
          (jump_to_menu, "mnu_castle_besiege"),
        (try_end),

          ##diplomacy begin
          (try_begin),
            (party_slot_eq, "$g_encountered_party", slot_village_infested_by_bandits, "trp_peasant_woman"),
            (set_background_mesh, "mesh_pic_townriot"),
          (else_try),
          ##diplomacy end
            (call_script, "script_set_town_picture"),
          ##diplomacy begin
          (try_end),
          ##diplomacy end
        ],
    [
#        ("talk_to_castle_commander",[
#            (party_get_num_companions, ":no_companions", "$g_encountered_party"),
#            (ge, ":no_companions", 1),
#            (eq,"$ruler_meeting_denied",0), #this variable is removed
#            ],
#         "Request a meeting with the lord of the castle.",[
#             (modify_visitors_at_site,"scn_conversation_scene"),(reset_visitors),
#             (set_visitor,0,"trp_player"),
#             (party_stack_get_troop_id, reg(6),"$g_encountered_party",0),
#             (party_stack_get_troop_dna,reg(7),"$g_encountered_party",0),
#             (set_visitor,17,reg(6),reg(7)),
#             (set_jump_mission,"mt_conversation_encounter"),
#             (jump_to_scene,"scn_conversation_scene"),
#             (assign, "$talk_context", tc_castle_commander),
#             (change_screen_map_conversation, reg(6))
#             ]),
      ("approach_gates",[(this_or_next|eq,"$entry_to_town_forbidden",1),
                          (party_slot_eq,"$g_encountered_party", slot_party_type,spt_castle),
                          #SB : not infested by peasants, they'd just kick you out
                          (neg|party_slot_eq, "$g_encountered_party", slot_village_infested_by_bandits, "trp_peasant_woman"),
                          ],
       "Approach the gates and hail the guard.",[
                                                  (jump_to_menu, "mnu_castle_guard"),
##                                                   (modify_visitors_at_site,"scn_conversation_scene"),(reset_visitors),
##                                                   (set_visitor,0,"trp_player"),
##                                                   (store_faction_of_party, ":cur_faction", "$g_encountered_party"),
##                                                   (faction_get_slot, ":cur_guard", ":cur_faction", slot_faction_guard_troop),
##                                                   (set_visitor,17,":cur_guard"),
##                                                   (set_jump_mission,"mt_conversation_encounter"),
##                                                   (jump_to_scene,"scn_conversation_scene"),
##                                                   (assign, "$talk_context", tc_castle_gate),
##                                                   (change_screen_map_conversation, ":cur_guard")
                                                   ]),

      ("town_sneak",
        [
          (try_begin),
            (party_slot_eq, "$g_encountered_party", slot_party_type,spt_town),
            (str_store_string, s7, "str_town"),
          (else_try),
            (str_store_string, s7, "str_castle"),
          (try_end),

          (eq, "$entry_to_town_forbidden", 1),
          (eq, "$cant_sneak_into_town", 0),
          #SB : do not let player in at all, because the garrison can be managed
          (neg|party_slot_eq, "$g_encountered_party", slot_village_infested_by_bandits, "trp_peasant_woman"),
        ],
       "Disguise yourself and try to sneak into the {s7}.", #SB : period added since we removed it from module_strings
       [

         #SB : apply different disguises in new system, with outcomes
        (try_begin),
          (eq, "$g_dplmc_player_disguise", 1),
          (troop_get_slot, ":player_disguise", "trp_player", slot_troop_player_disguise_sets),
          (val_max, ":player_disguise", disguise_pilgrim),
          (troop_set_slot, "trp_player", slot_troop_player_disguise_sets, ":player_disguise"),
          # (assign, "$sneaked_into_town", disguise_none), #set no disguise
          (troop_clear_inventory, "trp_random_town_sequence"), # clear items to bring
          (try_for_range, ":i_slot", 0, ek_food + 1), #dckplmc: bugfix - clear equipped items
            (troop_set_inventory_slot, "trp_random_town_sequence", ":i_slot", -1),
          (try_end),
          (store_troop_gold, ":cur_amount", "trp_random_town_sequence"),
          (troop_remove_gold, "trp_random_town_sequence", ":cur_amount"),#clear gold
          (jump_to_menu, "mnu_dplmc_choose_disguise"),
        (else_try),
          (faction_get_slot, ":player_alarm", "$g_encountered_party_faction", slot_faction_player_alarm),
          (party_get_num_companions, ":num_men", "p_main_party"),
          (party_get_num_prisoners, ":num_prisoners", "p_main_party"),
          (val_add, ":num_men", ":num_prisoners"),
          (val_mul, ":num_men", 2),
          (val_div, ":num_men", 3),
          (store_add, ":get_caught_chance", ":player_alarm", ":num_men"),
          (store_random_in_range, ":random_chance", 0, 100),
          (try_begin),
            (this_or_next|ge, "$cheat_mode", 1),
            (this_or_next|ge, ":random_chance", ":get_caught_chance"),
            (eq, "$g_last_defeated_bandits_town", "$g_encountered_party"),
            (assign, "$g_last_defeated_bandits_town", 0),
            (assign, "$sneaked_into_town", disguise_pilgrim),
            (assign, "$town_entered", 1),
            (jump_to_menu,"mnu_sneak_into_town_suceeded"),
            (assign, "$g_mt_mode", tcm_disguised),
          (else_try),
            (jump_to_menu,"mnu_sneak_into_town_caught"),
          (try_end),
        (try_end),
        ]),
      ##diplomacy begin
      ("dplmc_riot_start_siege",
       [
           (party_slot_eq, "$g_encountered_party", slot_center_is_besieged_by, -1),
           (party_slot_eq, "$g_encountered_party", slot_village_infested_by_bandits, "trp_peasant_woman"),
           (lt, "$g_encountered_party_2", 1),
           (call_script, "script_party_count_fit_for_battle","p_main_party"),
           (gt, reg0, 5),
           (try_begin),
             (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
             (assign, reg6, 1),
           (else_try),
             (assign, reg6, 0),
           (try_end),
           ],
       "Besiege the {reg6?town:fortress} to counter the insurgency.",
       [
          #siege warfare chief We repit this here for advoid issues.
          (assign, "$g_empieza_asedio", 1), #variable to begin siege
          (party_set_slot,"$g_encountered_party",slot_center_blockaded,0),
          (party_set_slot,"$g_encountered_party",slot_center_blockaded_time,0),
          (party_set_slot, "$g_encountered_party", slot_center_mantlets_placed, 0),
          (party_set_slot,"$g_encountered_party",slot_center_ladder_time,0),
          (party_set_slot,"$g_encountered_party",slot_center_latrines,0),
          (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),
          (assign, "$g_siege_saneamiento", 0),
          (assign, "$g_traicion_interna", 0),
          (assign, "$g_infiltracion_interna", 0),
          (assign, "$g_campos_cercanos", 0),
          (assign, "$g_listos_para_asalto", 0),
          (assign, "$g_mantlets_1", 0),
          (assign, "$g_cabezas_dentro", 0), #event
          (assign, "$g_siege_method", 0),
          (assign, "$g_siege_sallied_out_once", 0),
          (assign, "$g_days_spent_starving", 0), #siege warfare, important, we use this in dialogs
          (assign, "$g_next_sally_at", 0), #sally more common siege warfare chief
          #siege warfare acaba

         (assign,"$g_player_besiege_town","$g_encountered_party"),
         (jump_to_menu, "mnu_castle_besiege"),
         ]),
       ("dplmc_riot_negotiate",
       [
           (party_slot_eq, "$g_encountered_party", slot_center_is_besieged_by, -1),
           (party_slot_eq, "$g_encountered_party", slot_village_infested_by_bandits, "trp_peasant_woman"),
           (lt, "$g_encountered_party_2", 1),
           (call_script, "script_party_count_fit_for_battle","p_main_party"),
           (gt, reg0, 5),
           (try_begin),
             (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
             (assign, reg6, 1),
           (else_try),
             (assign, reg6, 0),
           (try_end),
           ],
       "Begin negotiations.",
       [
          (jump_to_menu, "mnu_dplmc_riot_negotiate"),
        ]),

     ##diplomacy end
      ("castle_start_siege",
       [
           ##diplomacy begin
           (neg|party_slot_eq, "$g_encountered_party", slot_village_infested_by_bandits, "trp_peasant_woman"),
           ##diplomacy end
           (this_or_next|party_slot_eq, "$g_encountered_party", slot_center_is_besieged_by, -1),
           (             party_slot_eq, "$g_encountered_party", slot_center_is_besieged_by, "p_main_party"),
           (store_relation, ":reln", "$g_encountered_party_faction", "fac_player_supporters_faction"),
		(neg|faction_slot_eq, "$g_encountered_party_faction", slot_faction_player_tributary, 1),
		(this_or_next|gt, "$g_encountered_party_faction", kingdoms_end), #madsci
           (lt, ":reln", 0),
           (lt, "$g_encountered_party_2", 1),
           (call_script, "script_party_count_fit_for_battle","p_main_party"),
           (gt, reg(0), 5),
           (try_begin),
             (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
             (assign, reg6, 1),
           (else_try),
             (assign, reg6, 0),
           (try_end),
           ],
       "Besiege the {reg6?town:fortress}.",
       [

          #siege warfare chief We repit this here for advoid issues.
          (assign, "$g_empieza_asedio", 1), #variable to begin siege
          (party_set_slot,"$g_encountered_party",slot_center_blockaded,0),
          (party_set_slot,"$g_encountered_party",slot_center_blockaded_time,0),
          (party_set_slot, "$g_encountered_party", slot_center_mantlets_placed, 0),
          (party_set_slot,"$g_encountered_party",slot_center_ladder_time,0),
          (party_set_slot,"$g_encountered_party",slot_center_latrines,0),
          (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),
          (assign, "$g_siege_saneamiento", 0),
          (assign, "$g_traicion_interna", 0),
          (assign, "$g_infiltracion_interna", 0),
          (assign, "$g_campos_cercanos", 0),
          (assign, "$g_listos_para_asalto", 0),
          (assign, "$g_mantlets_1", 0),
          (assign, "$g_cabezas_dentro", 0), #event
          (assign, "$g_siege_method", 0),
          (assign, "$g_siege_sallied_out_once", 0),
          (assign, "$g_days_spent_starving", 0), #siege warfare, important, we use this in dialogs
          (assign, "$g_next_sally_at", 0), #sally more common siege warfare chief
          #siege warfare acaba

         (assign,"$g_player_besiege_town","$g_encountered_party"),
         (store_relation, ":relation", "fac_player_supporters_faction", "$g_encountered_party_faction"),
         (val_min, ":relation", -40),
         (call_script, "script_set_player_relation_with_faction", "$g_encountered_party_faction", ":relation"),
         (call_script, "script_update_all_notes"),
         (jump_to_menu, "mnu_castle_besiege"),
         ]),

      ("cheat_castle_start_siege",
       [
         (eq, "$cheat_mode", 1),
         (this_or_next|party_slot_eq, "$g_encountered_party", slot_center_is_besieged_by, -1),
         (             party_slot_eq, "$g_encountered_party", slot_center_is_besieged_by, "p_main_party"),
         (store_relation, ":reln", "$g_encountered_party_faction", "fac_player_supporters_faction"),
         (ge, ":reln", 0),
         (lt, "$g_encountered_party_2", 1),
         (call_script, "script_party_count_fit_for_battle","p_main_party"),
         (gt, reg(0), 1),
         (try_begin),
           (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
           (assign, reg6, 1),
         (else_try),
           (assign, reg6, 0),
         (try_end),
           ],
       "{!}CHEAT: Besiege the {reg6?town:fortress}...",
       [

          #siege warfare chief We repit this here for advoid issues.
          (assign, "$g_empieza_asedio", 1), #variable to begin siege
          (party_set_slot,"$g_encountered_party",slot_center_blockaded,0),
          (party_set_slot,"$g_encountered_party",slot_center_blockaded_time,0),
          (party_set_slot, "$g_encountered_party", slot_center_mantlets_placed, 0),
          (party_set_slot,"$g_encountered_party",slot_center_ladder_time,0),
          (party_set_slot,"$g_encountered_party",slot_center_latrines,0),
          (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),
          (assign, "$g_siege_saneamiento", 0),
          (assign, "$g_traicion_interna", 0),
          (assign, "$g_infiltracion_interna", 0),
          (assign, "$g_campos_cercanos", 0),
          (assign, "$g_listos_para_asalto", 0),
          (assign, "$g_mantlets_1", 0),
          (assign, "$g_cabezas_dentro", 0), #event
          (assign, "$g_siege_method", 0),
          (assign, "$g_siege_sallied_out_once", 0),
          (assign, "$g_days_spent_starving", 0), #siege warfare, important, we use this in dialogs
          (assign, "$g_next_sally_at", 0), #sally more common siege warfare chief
          #siege warfare acaba

           (assign,"$g_player_besiege_town","$g_encountered_party"),
           (jump_to_menu, "mnu_castle_besiege"),
           ]),

      ("castle_leave",[],"Leave.",[(change_screen_return,0)]),
      #SB : the three options below are covered in cheats
      ("castle_cheat", [(ge, "$cheat_mode", 1)], "{!}Use Cheats", [
        # (assign, "$sneaked_into_town", disguise_pilgrim),
        (assign, "$town_entered", 1),
        # (assign, "$g_mt_mode", tcm_disguised),
        (jump_to_menu, "mnu_town_cheats"),
      ]),

      # ("castle_cheat_interior",[(eq, "$cheat_mode", 1)], "{!}CHEAT! Interior.",[(set_jump_mission,"mt_ai_training"),
                                                       # (party_get_slot, ":castle_scene", "$current_town", slot_town_castle),
                                                       # (jump_to_scene,":castle_scene"),
                                                       # (change_screen_mission)]),
      # ("castle_cheat_exterior",[(eq, "$cheat_mode", 1)], "{!}CHEAT! Exterior.",[
# #                                                       (set_jump_mission,"mt_town_default"),
                                                       # (set_jump_mission,"mt_ai_training"),
                                                       # (party_get_slot, ":castle_scene", "$current_town", slot_castle_exterior),
                                                       # (jump_to_scene,":castle_scene"),
                                                       # (change_screen_mission)]),
      # ("castle_cheat_town_walls",[(eq, "$cheat_mode", 1),(party_slot_eq,"$current_town",slot_party_type, spt_town),], "{!}CHEAT! Town Walls.",
       # [
         # (party_get_slot, ":scene", "$current_town", slot_town_walls),
         # (set_jump_mission,"mt_ai_training"),
         # (jump_to_scene,":scene"),
         # (change_screen_mission)]),

    ]
  ),
   (
    "castle_guard",mnf_scale_picture,
    "You approach the gate. The men on the walls watch you closely.",
    "none",
    [
        (call_script, "script_set_town_picture"),
    ],
    [
      ("request_shelter",[(party_slot_eq, "$g_encountered_party",slot_party_type, spt_castle),
                          (ge, "$g_encountered_party_relation", 0)],
       "Request entry to the castle.",
       [(party_get_slot, ":castle_lord", "$g_encountered_party", slot_town_lord),
        (try_begin),
          (lt, ":castle_lord", 0),
          (jump_to_menu, "mnu_castle_entry_granted"),
        (else_try),
          (call_script, "script_troop_get_player_relation", ":castle_lord"),
          (assign, ":castle_lord_relation", reg0),
          #(troop_get_slot, ":castle_lord_relation", ":castle_lord", slot_troop_player_relation),
          (try_begin),
            (gt, ":castle_lord_relation", -15),
            (jump_to_menu, "mnu_castle_entry_granted"),
          (else_try),
            (jump_to_menu, "mnu_castle_entry_denied"),
          (try_end),
        (try_end),
       ]),
      ("request_meeting_commander",[],
       "Request a meeting with someone.",
       [
          (jump_to_menu, "mnu_castle_meeting"),
       ]),
      ("guard_leave",[],
       "Leave.",
       [(change_screen_return,0)]),
    ]
  ),
  (
    "castle_entry_granted",mnf_scale_picture,
    "After a brief wait, the guards open the gates for you and allow your party inside.",
    "none",
    [
        (call_script, "script_set_town_picture"),
    ],
    [
      ("continue",[],
       "Continue...",
       [(jump_to_menu,"mnu_town")]),
    ]
  ),

  (
    "castle_entry_denied",mnf_scale_picture,
    "The lord of this castle has forbidden you from coming inside these walls,\
 and the guard sergeant informs you that his men will fire if you attempt to come any closer.",
    "none",
    [
        (call_script, "script_set_town_picture"),
    ],
    [
      ("continue",[],
       "Continue...",
       [(jump_to_menu,"mnu_castle_guard")]),
    ]
  ),

  #SB : restructue this to call new script
  # (
    # "castle_meeting",mnf_scale_picture,
    # "With whom do you want to meet?",
    # "none",
    # [
        # (assign, "$num_castle_meeting_troops", 0),
        # (try_for_range, ":troop_no", active_npcs_begin, active_npcs_end),
          # (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
          # (call_script, "script_get_troop_attached_party", ":troop_no"),
          # (eq, "$g_encountered_party", reg0),
          # (troop_set_slot, "trp_temp_array_a", "$num_castle_meeting_troops", ":troop_no"),
          # (val_add, "$num_castle_meeting_troops", 1),
        # (try_end),
        # (call_script, "script_set_town_picture"),
    # ],
    # [
      # ("guard_meet_s5",[(gt, "$num_castle_meeting_troops", 0),(troop_get_slot, ":troop_no", "trp_temp_array_a", 0),(str_store_troop_name, s5, ":troop_no")],
       # "{s5}.",[(troop_get_slot, "$castle_meeting_selected_troop", "trp_temp_array_a", 0),(jump_to_menu,"mnu_castle_meeting_selected")]),
      # ("guard_meet_s5",[(gt, "$num_castle_meeting_troops", 1),(troop_get_slot, ":troop_no", "trp_temp_array_a", 1),(str_store_troop_name, s5, ":troop_no")],
       # "{s5}.",[(troop_get_slot, "$castle_meeting_selected_troop", "trp_temp_array_a", 1),(jump_to_menu,"mnu_castle_meeting_selected")]),
      # ("guard_meet_s5",[(gt, "$num_castle_meeting_troops", 2),(troop_get_slot, ":troop_no", "trp_temp_array_a", 2),(str_store_troop_name, s5, ":troop_no")],
       # "{s5}.",[(troop_get_slot, "$castle_meeting_selected_troop", "trp_temp_array_a", 2),(jump_to_menu,"mnu_castle_meeting_selected")]),
      # ("guard_meet_s5",[(gt, "$num_castle_meeting_troops", 3),(troop_get_slot, ":troop_no", "trp_temp_array_a", 3),(str_store_troop_name, s5, ":troop_no")],
       # "{s5}.",[(troop_get_slot, "$castle_meeting_selected_troop", "trp_temp_array_a", 3),(jump_to_menu,"mnu_castle_meeting_selected")]),
      # ("guard_meet_s5",[(gt, "$num_castle_meeting_troops", 4),(troop_get_slot, ":troop_no", "trp_temp_array_a", 4),(str_store_troop_name, s5, ":troop_no")],
       # "{s5}.",[(troop_get_slot, "$castle_meeting_selected_troop", "trp_temp_array_a", 4),(jump_to_menu,"mnu_castle_meeting_selected")]),
      # ("guard_meet_s5",[(gt, "$num_castle_meeting_troops", 5),(troop_get_slot, ":troop_no", "trp_temp_array_a", 5),(str_store_troop_name, s5, ":troop_no")],
       # "{s5}.",[(troop_get_slot, "$castle_meeting_selected_troop", "trp_temp_array_a", 5),(jump_to_menu,"mnu_castle_meeting_selected")]),
      # ("guard_meet_s5",[(gt, "$num_castle_meeting_troops", 6),(troop_get_slot, ":troop_no", "trp_temp_array_a", 6),(str_store_troop_name, s5, ":troop_no")],
       # "{s5}.",[(troop_get_slot, "$castle_meeting_selected_troop", "trp_temp_array_a", 6),(jump_to_menu,"mnu_castle_meeting_selected")]),
      # ("guard_meet_s5",[(gt, "$num_castle_meeting_troops", 7),(troop_get_slot, ":troop_no", "trp_temp_array_a", 7),(str_store_troop_name, s5, ":troop_no")],
       # "{s5}.",[(troop_get_slot, "$castle_meeting_selected_troop", "trp_temp_array_a", 7),(jump_to_menu,"mnu_castle_meeting_selected")]),
      # ("guard_meet_s5",[(gt, "$num_castle_meeting_troops", 8),(troop_get_slot, ":troop_no", "trp_temp_array_a", 8),(str_store_troop_name, s5, ":troop_no")],
       # "{s5}.",[(troop_get_slot, "$castle_meeting_selected_troop", "trp_temp_array_a", 8),(jump_to_menu,"mnu_castle_meeting_selected")]),
      # ("guard_meet_s5",[(gt, "$num_castle_meeting_troops", 9),(troop_get_slot, ":troop_no", "trp_temp_array_a", 9),(str_store_troop_name, s5, ":troop_no")],
       # "{s5}.",[(troop_get_slot, "$castle_meeting_selected_troop", "trp_temp_array_a", 9),(jump_to_menu,"mnu_castle_meeting_selected")]),

      # ("forget_it",[],
       # "Forget it.",
       # [(jump_to_menu,"mnu_castle_guard")]),
    # ]
  # ),
  # (
    # "castle_meeting_selected",0,
    # "Your request for a meeting is relayed inside, and finally {s6} appears in the courtyard to speak with you.",
    # "none",
    # [(str_store_troop_name, s6, "$castle_meeting_selected_troop")],
    # [
      # ("continue",[],
       # "Continue...",
       # [(jump_to_menu, "mnu_castle_outside"),
        # (modify_visitors_at_site,"scn_conversation_scene"),(reset_visitors),
        # (set_visitor,0,"trp_player"),
        # (set_visitor,17,"$castle_meeting_selected_troop"),
        # (set_jump_mission,"mt_conversation_encounter"),
        # (jump_to_scene,"scn_conversation_scene"),
        # (assign, "$talk_context", tc_castle_gate),
        # (change_screen_map_conversation, "$castle_meeting_selected_troop"),
        # ]),
    # ]
  # ),
  (
    "castle_meeting",mnf_scale_picture,
    "With whom do you want to meet?",
    "none",
    [   (party_clear, "p_temp_party"),
        (call_script, "script_set_town_picture"),
        (call_script, "script_get_heroes_attached_to_center_aux", "$g_encountered_party", "p_temp_party"),#recursive call
        (party_get_num_companion_stacks, "$num_castle_meeting_troops", "p_temp_party"),
        (assign, "$talk_context", tc_castle_gate), #SB : move this up here
    ],
    [ ("guard_meet_"+str(x),[
        (gt, "$num_castle_meeting_troops", x),#test this out
        (party_stack_get_troop_id, ":troop_no", "p_temp_party", x),
        (is_between, ":troop_no", active_npcs_begin, active_npcs_end),
        (str_store_troop_name, s5, ":troop_no")],
       "{s5}.",[(party_stack_get_troop_id, "$castle_meeting_selected_troop", "p_temp_party", x),
       # (party_stack_get_troop_dna, "$temp_2", "p_temp_party", x),
       (jump_to_menu,"mnu_castle_meeting_selected")])
       for x in range(0, 8)
      ]

    +[("forget_it",[], "Forget it.", [(jump_to_menu,"mnu_castle_guard")]),]
  ),
  (
    "castle_meeting_selected",0,
    "Your request for a meeting is relayed inside, and finally {s6} appears in the courtyard to speak with you.",
    "none",
    [
    (try_begin),
		(eq, "$g_leave_encounter", 1),
		(change_screen_return),
	(try_end),

    (str_store_troop_name, s6, "$castle_meeting_selected_troop")],
    [
      ("continue",[],
       "Continue...",
       [(jump_to_menu, "mnu_castle_outside"),
        #do not set context here in case we need to use another one, set tc_castle_gate from parent menu
        (call_script, "script_start_courtyard_conversation", "$castle_meeting_selected_troop", "$current_town"),
        ]),
    ]
  ),

   ( #SB : pic hotkeys
    "castle_besiege",mnf_scale_picture|mnf_enable_hot_keys,
    "You are laying siege to {s1}. {s2} {s3}",
    "none",
    [

        (set_background_mesh, "mesh_pic_siege_sighted"),
          ##diplomacy end+
        (assign, "$g_siege_force_wait", 0),
        (try_begin),
          (party_slot_eq, "$g_encountered_party", slot_center_is_besieged_by, -1),
          (party_set_slot, "$g_encountered_party", slot_center_is_besieged_by, "p_main_party"),
          (store_current_hours, ":cur_hours"),
          (party_set_slot, "$g_encountered_party", slot_center_siege_begin_hours, ":cur_hours"),
          (assign, "$g_siege_method", 0),
          (assign, "$g_siege_sallied_out_once", 0),
          # Chief siege camp around town Siege warfare icono de asedio
          #phaiak begin
          (try_begin),
            (party_set_extra_icon, "$g_encountered_party", "icon_camp_siege", 0, 0, 0, 0),
          (try_end),
          #phaiak end
          # chief siege camp acaba
          (assign, "$g_days_spent_starving", 0), #siege warfare, important, we use this in dialogs
          (assign, "$g_next_sally_at", 0), #sally more common siege warfare chief
          #SB : also add sneak variables here
          (assign, "$last_sneak_attempt_town", "$g_encountered_party"),
          (assign, "$last_sneak_attempt_time", ":cur_hours"),
        (try_end),

        (party_get_slot, ":town_food_store", "$g_encountered_party", slot_party_food_store),
        (call_script, "script_center_get_food_consumption", "$g_encountered_party"),
        (assign, ":food_consumption", reg0),
        (assign, reg7, ":food_consumption"),
        (assign, reg8, ":town_food_store"),
        (store_div, reg3, ":town_food_store", ":food_consumption"),

        (try_begin),
          (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
          (assign, reg6, 1),
        (else_try),
          (assign, reg6, 0),
        (try_end),

        (try_begin),
          (gt, reg3, 0),
          (str_store_string, s2, "@The {reg6?town's:fortress's} food stores should last for {reg3} more days."),
        (else_try),
          (str_store_string, s2, "@The {reg6?town's:fortress's} food stores have run out and the defenders are starving."),
          #siege warfare chief##############
          (try_begin),
            (gt, "$g_days_spent_starving", 6), #6 days left, deffenders tired siege.
            (jump_to_menu, "mnu_surrender_siege_defenders_starved"),
          (else_try), #defenders desesperate = sally out to break the siege
            (gt, "$g_days_spent_starving", 1), #6 days left, deffenders tired siege

            ###add days each 24 h
            (try_begin),
              (party_get_slot, ":last_starving_time", "$g_encountered_party", slot_center_starvation_time),
              (store_current_hours, ":cur_hours"),
              (store_add, ":add_starving", ":last_starving_time", 24), #x min hours enter sallys
              (ge, ":cur_hours", ":add_starving"),
              (val_add, "$g_days_spent_starving", 1), #8 days left, deffenders tired siege
              (party_set_slot, "$g_encountered_party", slot_center_starvation_time, ":cur_hours"),
              #(display_message, "@added 1 day to sally2"),
            (try_end),
            #
            # (try_begin),
              # (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
              # (party_get_slot, ":battle_scene", "$g_encountered_party", slot_town_walls),
            # (else_try),
              # (party_get_slot, ":battle_scene", "$g_encountered_party", slot_castle_exterior),
            # (try_end),
            (call_script, "script_calculate_battle_advantage"),
            (assign, ":battle_advantage", reg0),
            (val_mul, ":battle_advantage", 2),
            (val_div, ":battle_advantage", 3), #scale down the advantage a bit in sieges.
            (set_battle_advantage, ":battle_advantage"),

            (try_begin),
              (store_current_hours, "$g_sally_timer"),
              (ge, "$g_sally_timer", "$g_next_sally_at"),
              (store_random_in_range, ":hours", 22,44),
              (store_add, "$g_next_sally_at", "$g_sally_timer", ":hours"), #x min hours enter sallys
              (ge, ":hours", 28), #60% chance to deffenders sally out

              (set_party_battle_mode),
              (assign, "$g_siege_battle_state", 1),
              (try_begin),
                (set_jump_mission,"mt_castle_attack_walls_defenders_sally"),
                (assign, "$g_siege_battle_state", 0),
              (try_end),
              (assign, "$cant_talk_to_enemy", 0),
              (assign, "$g_siege_final_menu", "mnu_castle_besiege"),
              (assign, "$g_next_menu", "mnu_castle_besiege_inner_battle"),
              (assign, "$g_siege_method", 0), #reset siege timer
              (call_script, "script_setup_random_scene"),
              (jump_to_menu, "mnu_nofood_siege_defenders_sally"),
            (try_end),
          (else_try), #defenders desesperate = sally out to break the siege
            ###add days each 24 h
            (try_begin),
              (party_get_slot, ":last_starving_time", "$g_encountered_party", slot_center_starvation_time),
              (store_current_hours, ":cur_hours"),
              (store_add, ":add_starving", ":last_starving_time", 24), #x min hours enter sallys
              (ge, ":cur_hours", ":add_starving"),
              (val_add, "$g_days_spent_starving", 1), #8 days left, deffenders tired siege
              (party_set_slot, "$g_encountered_party", slot_center_starvation_time, ":cur_hours"),
              #(display_message, "@added 1 day to sally"),
            (else_try),
              (val_add, "$g_days_spent_starving", 0), #8 days left, deffenders tired siege
            (try_end),
            #
          (try_end),
          ###siege warfare end

        (try_end),

       # (str_store_string, s3, "str_empty_string"),
       # (try_begin),
       #   (ge, "$g_siege_method", 1),
       #   (store_current_hours, ":cur_hours"),
       #   (try_begin),
       #     (lt, ":cur_hours",  "$g_siege_method_finish_hours"),
       #     (store_sub, reg9, "$g_siege_method_finish_hours", ":cur_hours"),
       #     (try_begin),
       #       (eq, "$g_siege_method", 1),
       #       (str_store_string, s3, "@You're preparing to attack the walls, the work should finish in {reg9} hours."),
       #     (else_try),
       #       (eq, "$g_siege_method", 2),
       #       (str_store_string, s3, "@Your forces are building a siege tower. They estimate another {reg9} hours to complete construction."), #SB : "the build -> construction"
       #     (try_end),
       #   (else_try),
       #     (try_begin),
       #       (eq, "$g_siege_method", 1),
       #       (str_store_string, s3, "@You are ready to attack the walls at any time."),
       #     (else_try),
       #       (eq, "$g_siege_method", 2),
       #       (str_store_string, s3, "@The siege tower is built and ready to make an assault."),
       #     (try_end),
       #   (try_end),
       # (try_end),

        ####siege warfare chief

        #string para circunvalacion
        (str_store_string,s15,"str_circunvalation_none"),
        (try_begin),
          (party_slot_eq,"$g_encountered_party",slot_center_blockaded,1),
          (str_store_string, s15, "@>>Your men are building checkpoints and small camps around {s4} to prevent anyone from going in or out. "+
          "As long as the blockade is unfinished the town can refill its food supplies.^^"),
        (else_try),
          (party_slot_eq,"$g_encountered_party",slot_center_blockaded,2), #final
          (str_store_string, s15, "@>>Your perimeter control is ready. You have set a perimeter for surveillance around {s4}. No one can enter or leave without the knowledge of your men.^" +
          "The settlement can no longer refill its food supplies from outside.^^"),
        (try_end),

        (str_store_string,s16,"str_empty_string"),
        (try_begin),
          (ge, "$g_listos_para_asalto", 1),
          (str_store_string,s16,"@>>Your men are ready for assault.^^"),
        (try_end),

        ####saneamiento chief
        (str_store_string,s17,"str_empty_string"),
        (try_begin),
          (eq, "$g_siege_saneamiento", 2),
          (str_store_string,s17,"@>>As a disciplined army, your men have made latrines, pipelines, and a pond for their weekly bath. A healthy camp prevents disease.^^"),
        (try_end),

        (str_store_string,s18,"str_empty_string"),
        (try_begin),
          (eq, "$g_mantlets_1", 2),
          (str_store_string,s18,"@>>Your men have finished building mantlets. Now you can use them to protect your soldiers in the vanguard attack, and your main force for the final charge.^^"),
        (try_end),

        (str_store_string,s19,"str_empty_string"),
        (try_begin),
          (ge, "$g_siege_method", 2),
          (str_store_string,s19,"@>>Your men have finished making scaling equipment.^^"),
        (try_end),

        (str_store_string,s20,"str_empty_string"),
        (try_begin),
          (eq, "$g_traicion_interna", 3),
          (str_store_string,s20,"@>>Your attempt to find a traitor in the settlement has failed.^^"),
        (else_try),
          (eq, "$g_traicion_interna", 4),
          (str_store_string,s20,"@>>You have found a traitor within {s7} that has supported your efforts to conquer it. This will make it more receptive to surrendering.^^"),
        (try_end),

        ####strings infiltrado
        (str_store_string,s21,"str_empty_string"),
        (try_begin),
          (eq, "$g_infiltracion_interna", 3),
          (str_store_string,s21,"@>>Your attempt to have your men infiltrate {s4} has failed.^^"),
        (else_try),
          (eq, "$g_infiltracion_interna", 4),
          (str_store_string,s21,"@>>Your men have succeeded in infiltrating {s4} and damaging the enemy.^^"),
        (try_end),

        #####strings quemar campos cercanos
        (str_store_string,s22,"str_empty_string"),
        (try_begin),
          (eq, "$g_campos_cercanos", 3),
          (str_store_string,s22,"@>>You've managed to pillage the crops and farms nearby.^^"),
        (try_end),
        #siege warfare chief

        #Check if enemy leaves the castle to us...
        (try_begin),
          (eq, "$g_castle_left_to_player",1), #we come here after dialog. Empty the castle and send parties away.
          (assign, "$g_castle_left_to_player",0),
          (store_faction_of_party, ":castle_faction", "$g_encountered_party"),
          (party_set_faction,"$g_encountered_party","fac_neutral"), #temporarily erase faction so that it is not the closest town
          (party_get_num_attached_parties, ":num_attached_parties_to_castle","$g_encountered_party"),
          (try_for_range_backwards, ":iap", 0, ":num_attached_parties_to_castle"),
            (party_get_attached_party_with_rank, ":attached_party", "$g_encountered_party", ":iap"),
            (party_detach, ":attached_party"),
            (party_get_slot, ":attached_party_type", ":attached_party", slot_party_type),
            (eq, ":attached_party_type", spt_kingdom_hero_party),
            (store_faction_of_party, ":attached_party_faction", ":attached_party"),
            (call_script, "script_get_closest_walled_center_of_faction", ":attached_party", ":attached_party_faction"),
            (try_begin),
              (gt, reg0, 0),
              (call_script, "script_party_set_ai_state", ":attached_party", spai_holding_center, reg0),
            (else_try),
              (call_script, "script_party_set_ai_state", ":attached_party", spai_patrolling_around_center, "$g_encountered_party"),
            (try_end),
          (try_end),
          (call_script, "script_party_remove_all_companions", "$g_encountered_party"),
          (change_screen_return),
          (party_collect_attachments_to_party, "$g_encountered_party", "p_collective_enemy"), #recalculate so that
          (call_script, "script_party_copy", "p_encountered_party_backup", "p_collective_enemy"), #leaving troops will not be considered as captured
          (party_set_faction,"$g_encountered_party",":castle_faction"),
        (try_end),

        #Check for victory or defeat....
        (assign, "$g_enemy_party", "$g_encountered_party"),
        (assign, "$g_ally_party", -1),
        (str_store_party_name, 1,"$g_encountered_party"),
        (call_script, "script_encounter_calculate_fit"),

        (assign, reg11, "$g_enemy_fit_for_battle"),
        (assign, reg10, "$g_friend_fit_for_battle"),


        (try_begin),
          (eq, "$g_leave_encounter",1),
          (change_screen_return),
        ##diplomacy begin
        (else_try),
          (party_slot_eq, "$g_encountered_party", slot_village_infested_by_bandits, "trp_peasant_woman"),
          (call_script, "script_party_count_fit_regulars","p_collective_enemy"),
          (assign, ":enemy_finished", 0),
          (try_begin),
            (eq, "$g_battle_result", 1),
            (assign, ":enemy_finished", 1),
          (else_try),
            (le, "$g_enemy_fit_for_battle", 0),
            (ge, "$g_friend_fit_for_battle", 1),
            (assign, ":enemy_finished", 1),
          (try_end),
          (this_or_next|eq, ":enemy_finished", 1),
          (eq, "$g_enemy_surrenders", 1),
          (assign, "$g_next_menu", "mnu_dplmc_town_riot_removed"),
          (jump_to_menu, "mnu_total_victory"),
        ##diplomacy end
        (else_try),
          (call_script, "script_party_count_fit_regulars","p_collective_enemy"),
          (assign, ":enemy_finished", 0),
          (try_begin),
            (eq, "$g_battle_result", 1),
            (assign, ":enemy_finished", 1),
          (else_try),
            (le, "$g_enemy_fit_for_battle", 0),
            (ge, "$g_friend_fit_for_battle", 1),
            (assign, ":enemy_finished", 1),
          (try_end),
          (this_or_next|eq, ":enemy_finished", 1),
          (eq, "$g_enemy_surrenders", 1),

          #siege warfare chief
          (assign, "$g_empieza_asedio", 0),
          (party_set_slot,"$g_encountered_party",slot_center_blockaded,0),
          (party_set_slot,"$g_encountered_party",slot_center_blockaded_time,0),
          (party_set_slot, "$g_encountered_party", slot_center_mantlets_placed, 0),
          (party_set_slot,"$g_encountered_party",slot_center_ladder_time,0),
          (party_set_slot,"$g_encountered_party",slot_center_latrines,0),
          (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),

          (assign, "$g_siege_saneamiento", 0),
          (assign, "$g_traicion_interna", 0),
          (assign, "$g_infiltracion_interna", 0),
          (assign, "$g_campos_cercanos", 0),
          (assign, "$g_listos_para_asalto", 0),
          (assign, "$g_mantlets_1", 0),
          (assign, "$g_cabezas_dentro", 0), #event
          (assign, "$g_siege_method", 0),
          (assign, "$g_siege_sallied_out_once", 0),
          (assign, "$g_days_spent_starving", 0), #siege warfare, important, we use this in dialogs
          (assign, "$g_next_sally_at", 0), #sally more common siege warfare chief
          #siege warfare acaba

          (assign, "$g_next_menu", "mnu_castle_taken"),
          (jump_to_menu, "mnu_total_victory"),
        (else_try),
          (call_script, "script_party_count_members_with_full_health", "p_main_party"),
          (assign, ":main_party_fit_regulars", reg0),
          (eq, "$g_battle_result", -1),
          (eq, ":main_party_fit_regulars", 0), #all lost (TODO : )
          (assign, "$g_next_menu", "mnu_captivity_start_castle_defeat"),

          #siege warfare chief
          (assign, "$g_empieza_asedio", 0),
          (party_set_slot,"$g_encountered_party",slot_center_blockaded,0),
          (party_set_slot,"$g_encountered_party",slot_center_blockaded_time,0),
          (party_set_slot, "$g_encountered_party", slot_center_mantlets_placed, 0),
          (party_set_slot,"$g_encountered_party",slot_center_ladder_time,0),
          (party_set_slot,"$g_encountered_party",slot_center_latrines,0),
          (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),

          (assign, "$g_siege_saneamiento", 0),
          (assign, "$g_traicion_interna", 0),
          (assign, "$g_infiltracion_interna", 0),
          (assign, "$g_campos_cercanos", 0),
          (assign, "$g_listos_para_asalto", 0),
          (assign, "$g_mantlets_1", 0),
          (assign, "$g_cabezas_dentro", 0), #event
          (assign, "$g_siege_method", 0),
          (assign, "$g_siege_sallied_out_once", 0),
          (assign, "$g_days_spent_starving", 0), #siege warfare, important, we use this in dialogs
          (assign, "$g_next_sally_at", 0), #sally more common siege warfare chief
          #siege warfare acaba

          (jump_to_menu, "mnu_total_defeat"),
        (try_end),
    ],
    [
      ("siege_request_meeting",[(eq, "$cant_talk_to_enemy", 0)],"Call for a meeting with the castle commander.", [
          (assign, "$cant_talk_to_enemy", 1),
          (assign, "$g_enemy_surrenders",0),
          (assign, "$g_castle_left_to_player",0),
          (assign, "$talk_context", tc_castle_commander),
          (party_get_num_attached_parties, ":num_attached_parties_to_castle","$g_encountered_party"),
          #SB : use start_courtyard_conversation
          (try_begin),
            (gt, ":num_attached_parties_to_castle", 0),
            (party_get_attached_party_with_rank, ":leader_attached_party", "$g_encountered_party", 0),
            (party_stack_get_troop_id, ":leader",":leader_attached_party",0),
          (else_try),
            (party_stack_get_troop_id, ":leader","$g_encountered_party",0),
          (try_end),
          (call_script, "script_start_courtyard_conversation", ":leader", "$g_encountered_party"),
           ]),

      #########Siege Warfare chief
      ("siege_warfare_p",[],
        "Siege Warfare (Planning Siege).", [(jump_to_menu,"mnu_siege_plan"),]),
      ("siege_assault_p",[],
        "Siege Warfare (Preparing Assault).", [(jump_to_menu,"mnu_siege_assault")]),
      #########Siege warfare acaba

      ("wait_24_hours",[],"Wait until tomorrow.", [
          (assign,"$auto_besiege_town","$g_encountered_party"),
          (assign, "$g_siege_force_wait", 1),
          (store_time_of_day,":cur_time_of_day"),
          (val_add, ":cur_time_of_day", 1),
          (assign, ":time_to_wait", 31),
          (val_sub,":time_to_wait",":cur_time_of_day"),
          (val_mod,":time_to_wait",24),
          (val_add, ":time_to_wait", 1),
          (rest_for_hours_interactive, ":time_to_wait", 5, 1), #rest while attackable
          (assign, "$cant_talk_to_enemy", 0),
          (change_screen_return),
          ]),


      ("castle_lead_attack",
       [
         (neg|troop_is_wounded, "trp_player"),
         (ge, "$g_siege_method", 1),
         (gt, "$g_friend_fit_for_battle", 3),
         (store_current_hours, ":cur_hours"),
         (ge, ":cur_hours", "$g_siege_method_finish_hours"),
       ],
       "Lead your soldiers in an assault.",
       [
           (try_begin),
             (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
             (party_get_slot, ":battle_scene", "$g_encountered_party", slot_town_walls),
           (else_try),
             (party_get_slot, ":battle_scene", "$g_encountered_party", slot_castle_exterior),
           (try_end),

           (call_script, "script_calculate_renown_value"),
           (call_script, "script_calculate_battle_advantage"),
           (assign, ":battle_advantage", reg0),
           (val_mul, ":battle_advantage", 2),
           (val_div, ":battle_advantage", 3), #scale down the advantage a bit in sieges.
           (set_battle_advantage, ":battle_advantage"),
           (set_party_battle_mode),
           (assign, "$g_siege_battle_state", 1),
           (assign, ":siege_sally", 0),
           (try_begin),
             (le, ":battle_advantage", -4), #we are outnumbered, defenders sally out
             (eq, "$g_siege_sallied_out_once", 0),
             (set_jump_mission,"mt_castle_attack_walls_defenders_sally"),
             (assign, "$g_siege_battle_state", 0),
             (assign, ":siege_sally", 1),
           (else_try),
             (party_slot_eq, "$current_town", slot_center_siege_with_belfry, 1),
             (set_jump_mission,"mt_castle_attack_walls_belfry"),
           #(else_try),
           #  (party_slot_eq, "$g_encountered_party", slot_center_siege_with_belfry, 2),
           #  (set_jump_mission,"mt_castle_attack_walls_special"),
           (else_try),
             (set_jump_mission,"mt_castle_attack_walls_ladder"),
           (try_end),
           (assign, "$cant_talk_to_enemy", 0),
           (assign, "$g_siege_final_menu", "mnu_castle_besiege"),
           (assign, "$g_next_menu", "mnu_castle_besiege_inner_battle"),
           (assign, "$g_siege_method", 0), #reset siege timer
           (jump_to_scene,":battle_scene"),
           (try_begin),
             (eq, ":siege_sally", 1),
             (jump_to_menu, "mnu_siege_attack_meets_sally"),
           (else_try),
             (jump_to_menu, "mnu_battle_debrief"),
             (change_screen_mission),
           (try_end),
       ]),
      ("attack_stay_back",
       [
         (ge, "$g_siege_method", 1),
         (gt, "$g_friend_fit_for_battle", 3),
         (store_current_hours, ":cur_hours"),
         (ge, ":cur_hours",  "$g_siege_method_finish_hours"),
         ],
       "Order your soldiers to attack while you stay back...", [(assign, "$cant_talk_to_enemy", 0),(jump_to_menu,"mnu_castle_attack_walls_simulate")]),

      ("build_ladders",[(party_slot_eq, "$current_town", slot_center_siege_with_belfry, 0),(eq, "$g_siege_method", 0)],
       "Prepare ladders to attack the walls.", [(jump_to_menu,"mnu_construct_ladders")]),

      ("build_siege_tower",[(party_slot_eq, "$current_town", slot_center_siege_with_belfry, 1),(eq, "$g_siege_method", 0)],
       "Build a siege tower.", [(jump_to_menu,"mnu_construct_siege_tower")]),

      ("build_ladders_special",[(party_slot_eq, "$current_town", slot_center_siege_with_belfry, 2),(eq, "$g_siege_method", 0)],
       "Prepare ladders to attack the walls.", [(jump_to_menu,"mnu_construct_ladders")]),

      ("cheat_castle_lead_attack",[(eq, "$cheat_mode", 1),
                                   (eq, "$g_siege_method", 0)],
       "{!}CHEAT: Instant build equipments.",
       [
         (assign, "$g_siege_method", 1),
         (assign, "$g_siege_method_finish_hours", 0),
         (jump_to_menu, "mnu_castle_besiege"),
       ]),

      ("cheat_conquer_castle",[(eq, "$cheat_mode", 1),
                                   ],
       "{!}CHEAT: Instant conquer castle.",
       [
        (assign, "$g_next_menu", "mnu_castle_taken"),
        (jump_to_menu, "mnu_total_victory"),
       ]),

      ("lift_siege",[],"Abandon the siege.",
       [
         (call_script, "script_lift_siege", "$g_player_besiege_town", 0),
         (assign,"$g_player_besiege_town", -1),
         #siege warfare chief
         (assign, "$g_empieza_asedio", 0),
         (party_set_slot,"$g_encountered_party",slot_center_blockaded,0),
         (party_set_slot,"$g_encountered_party",slot_center_blockaded_time,0),
         (party_set_slot, "$g_encountered_party", slot_center_mantlets_placed, 0),
         (party_set_slot,"$g_encountered_party",slot_center_ladder_time,0),
         (party_set_slot,"$g_encountered_party",slot_center_latrines,0),
         (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),
         (assign, "$g_siege_saneamiento", 0),
         (assign, "$g_traicion_interna", 0),
         (assign, "$g_infiltracion_interna", 0),
         (assign, "$g_campos_cercanos", 0),
         (assign, "$g_listos_para_asalto", 0),
         (assign, "$g_mantlets_1", 0),
         (assign, "$g_cabezas_dentro", 0), #event
         (assign, "$g_siege_method", 0),
         (assign, "$g_siege_sallied_out_once", 0),
         (assign, "$g_days_spent_starving", 0), #siege warfare, important, we use this in dialogs
         (assign, "$g_next_sally_at", 0), #sally more common siege warfare chief
         #siege warfare acaba
         (change_screen_return)]),
    ]
  ),

  ######Siege warfare Chief
  (
    "siege_plan",0,
    "You meet with your advisers to plan the siege and try to conquer {s4} with the least possible casualties. Your strategy could be to reduce the place by famine and demoralization.^^{s15} {s17} {s18} {s19} {s20}",
    "none",
    [

      (str_store_party_name,s4,"$current_town"),

      (str_clear, s7),
      (str_clear, s15),
      (str_clear, s16),
      (str_clear, s17),
      (str_clear, s18),
      (str_clear, s19),
      (str_clear, s20),

      #string para circunvalacion
      (str_store_string,s15,"str_circunvalation_none"),
      (try_begin),
        (party_slot_eq,"$g_encountered_party",slot_center_blockaded,1),
        (str_store_string, s15, "@>>Your men are building checkpoints and small camps around {s4} to prevent anyone from going in or out.^^"),
      (else_try),
        (party_slot_eq,"$g_encountered_party",slot_center_blockaded,2), #final
        (str_store_string, s15, "@>>Your perimeter control is ready. You have set a perimeter for surveillance around {s4}. No one can enter or leave without the knowledge of your men.^" +
        "This will be beneficial especially when you have to negotiate the surrender of the fortress with its commander.^^"),
      (try_end),
      #
      ####strings traicion
      (str_store_string,s17,"str_empty_string"),
      (try_begin),
        (ge, "$g_traicion_interna", 1),
        (le, "$g_traicion_interna", 2),
        (str_store_string,s17,"@>>You have sent men to find a traitor in {s4}.^^"),
      (else_try),
        (eq, "$g_traicion_interna", 3),
        (str_store_string,s17,"@>>Your attempt to find a traitor in the settlement has failed.^^"),
      (else_try),
        (eq, "$g_traicion_interna", 4),
        (str_store_string,s17,"@>>You have found a traitor within {s4} that has supported your efforts to conquer it. This will render it more receptive to surrendering.^^"),
      (try_end),

      #####strings quemar campos cercanos
      (str_store_string,s18,"str_empty_string"),
      (try_begin),
        (eq, "$g_campos_cercanos", 3),
        (str_store_string,s18,"@>>You've managed to pillage the crops and farms nearby.^^"),
      (else_try),
        (ge, "$g_campos_cercanos", 1),
        (str_store_string,s18,"@>>Your men are taking crops and ransacking farms close to {s4} on your orders. This will render it more receptive to surrendering.^^"),
      (try_end),
      ####strings infiltrado
      (str_store_string,s19,"str_empty_string"),
      (try_begin),
        (ge, "$g_infiltracion_interna", 1),
        (le, "$g_infiltracion_interna", 2),
        (str_store_string,s19,"@>>You have sent men to infiltrate {s4}.^^"),
      (else_try),
        (eq, "$g_infiltracion_interna", 3),
        (str_store_string,s19,"@>>Your attempt to have your men infiltrate {s4} has failed.^^"),
      (else_try),
        (eq, "$g_infiltracion_interna", 4),
        (str_store_string,s19,"@>>Your men have succeeded in infiltrating {s4} and damaging the enemy.^^"),
      (try_end),
      ####saneamiento chief
      (str_store_string,s20,"str_empty_string"),
      (try_begin),
        (eq, "$g_siege_saneamiento", 0),
        (str_store_string,s20,"@>>Your camp smells horrible. The ground is muddy, your men defecate between tents, and you see rats running here and there.^^"),
      (else_try),
        (ge, "$g_siege_saneamiento", 1),
        (party_get_slot, ":last_saneamiento_time", "$g_encountered_party", slot_center_latrines),
        (store_current_hours, ":cur_hours"),
        (store_add, ":ok_time", ":last_saneamiento_time", 4),
        (gt, ":cur_hours", ":ok_time"),
        (str_store_string,s20,"@>>As a disciplined army, your men have made latrines, pipelines and a pond for their weekly bath. A healthy camp prevents disease.^^"),
        (assign, "$g_siege_saneamiento", 2), #final
      (else_try),
        (eq, "$g_siege_saneamiento", 1),
        (str_store_string,s20,"@>>Your men are digging holes for latrines and taking other measures to prevent disease.^^"),
      (try_end),

      (call_script, "script_set_town_picture"),

    ],
    [

      ###siege perimeter control(party_set_slot,"p_main_party",slot_center_blockaded,0),
      ("build_circunvalation",[
          (party_slot_eq,"$g_encountered_party",slot_center_blockaded,0),],
        "Blockade: build checkpoints around {s4}.", [

          (store_party_size_wo_prisoners, ":num_men", "p_main_party"),
          (assign, reg1, ":num_men"),
          (display_message, "@Main party size: {reg1} men"),
          (party_get_num_attached_parties, ":num_attached_parties", "p_main_party"),
          (try_begin),
            (ge, ":num_attached_parties", 1),
            (try_for_range, ":attached_party_rank", 0, ":num_attached_parties"),
              (party_get_attached_party_with_rank, ":attached_party", "p_main_party", ":attached_party_rank"),
              (store_party_size_wo_prisoners, ":size", ":attached_party"),
              (val_add, ":num_men", ":size"),
              (str_store_party_name, s1, ":attached_party"),
              (assign, reg1, ":size"),
              (display_message, "@{s1}: {reg1} men"),
            (try_end),
          (try_end),

          (try_begin),
            (gt, ":num_men", 250), # se muestra si el player tiene por lo menos 250 hombres
            (jump_to_menu,"mnu_construct_circunvalation"),
          (else_try),
            (display_message,"@You need to have more than 250 men for this job."),
          (try_end),
      ]),

      ("close_circunvalation",[
          (party_slot_eq,"$g_encountered_party",slot_center_blockaded,1),
          (party_get_slot, ":last_blockplace_time", "$g_encountered_party", slot_center_blockaded_time),
          (store_current_hours, ":cur_hours"),

          (call_script, "script_get_max_skill_of_player_party", "skl_engineer"),
          (assign, ":max_skill", reg0),
          (store_sub, reg4, 16, ":max_skill"),
          (val_mul, reg4, 4),#between 24 and 64 hours

          #      (store_random_in_range,":random_check",80,100),
          (store_add, ":ok_time", ":last_blockplace_time", reg4), #between 60 and 160 hours
          (gt, ":cur_hours", ":ok_time"),
        ],
        "Checkpoints are finished. Now order active watching.", [
          #Reduce prosperity of the center by 10
          (call_script, "script_change_center_prosperity", "$g_encountered_party", -10),
          (party_get_slot, ":food_stores", "$g_encountered_party", slot_party_food_store),
          (call_script, "script_center_get_food_store_limit", "$g_encountered_party"),
          (val_min, ":food_stores", reg0),
          (party_set_slot, "$g_encountered_party", slot_party_food_store, ":food_stores"),
          (party_set_slot,"$g_encountered_party",slot_center_blockaded, 2),
          (jump_to_menu,"mnu_siege_plan"),]),
      #####circunvalacion acaba
      #####disfrazarte para entrar en la ciudad e investigar sus defensas
      ("town_investigar",
        [
        ],
        "Investigate the defenses: try to sneak inside. (Tracking)",
        [

         #SB : apply different disguises in new system, with outcomes
        (try_begin),
          (eq, "$g_dplmc_player_disguise", 1),
          (troop_get_slot, ":player_disguise", "trp_player", slot_troop_player_disguise_sets),
          (val_max, ":player_disguise", disguise_pilgrim),
          (troop_set_slot, "trp_player", slot_troop_player_disguise_sets, ":player_disguise"),
          # (assign, "$sneaked_into_town", disguise_none), #set no disguise
          (troop_clear_inventory, "trp_random_town_sequence"), # clear items to bring

          (try_for_range, ":i_slot", 0, ek_food + 1), #dckplmc: bugfix - clear equipped items
            (troop_set_inventory_slot, "trp_random_town_sequence", ":i_slot", -1),
          (try_end),

          (store_troop_gold, ":cur_amount", "trp_random_town_sequence"),
          (troop_remove_gold, "trp_random_town_sequence", ":cur_amount"),#clear gold
          (assign, "$temp", 0),
          (assign, "$temp4_1", "mnu_siege_plan"),
          (jump_to_menu, "mnu_dplmc_choose_disguise"),
        (else_try),
          (faction_get_slot, ":player_alarm", "$g_encountered_party_faction", slot_faction_player_alarm),
          (party_get_num_companions, ":num_men", "p_main_party"),
          (party_get_num_prisoners, ":num_prisoners", "p_main_party"),
          (val_add, ":num_men", ":num_prisoners"),
          (val_mul, ":num_men", 2),
          (val_div, ":num_men", 3),
          (store_add, ":get_caught_chance", ":player_alarm", ":num_men"),
          (store_random_in_range, ":random_chance", 0, 100),
          (try_begin),
            (this_or_next|ge, "$cheat_mode", 1),
            (this_or_next|ge, ":random_chance", ":get_caught_chance"),
            (eq, "$g_last_defeated_bandits_town", "$g_encountered_party"),
            (assign, "$g_last_defeated_bandits_town", 0),
            (assign, "$sneaked_into_town", disguise_pilgrim),
            (assign, "$town_entered", 1),
            (jump_to_menu,"mnu_sneak_into_town_suceeded"),
            (assign, "$g_mt_mode", tcm_disguised),
          (else_try),
            (jump_to_menu,"mnu_sneak_into_town_caught"),
          (try_end),
        (try_end),


      ]),

      #traicion interna
      ("traicion_interna",
        [
          (party_get_slot, ":blockplace_place", "$g_encountered_party", slot_center_blockaded),
          (ge, ":blockplace_place", 1),
          (eq, "$g_traicion_interna", 0),
          (neq, "$g_infiltracion_interna", 1),
        ],
        "Find a traitor within the defenses of {s4}.",
        [
          (party_get_num_companion_stacks, ":num_stacks","p_main_party"),
          (assign, ":num_men", 0),
          (try_for_range, ":i_stack", 0, ":num_stacks"),
            (party_stack_get_size, ":stack_size","p_main_party",":i_stack"),
            (val_add, ":num_men", ":stack_size"),
          (try_end),
          (try_begin),
            (gt, ":num_men", 40), # se muestra si el player tiene por lo menos 40 hombres
            (jump_to_menu,"mnu_traicion_interna2"),
          (else_try),
            (display_message,"@You need to have at least 40 men in order to assign some of them to finding a traitor."),
          (try_end),
      ]),

      ("traicion_interna3",[           (eq, "$g_traicion_interna", 2),
        ],
        "Any news from the men sent in search of a traitor?", [
          (store_random_in_range, ":rand", 0, 6),
          (try_begin),
            (eq, ":rand", 0),
            (jump_to_menu,"mnu_traicion_resultado5"),
          (else_try),
            (eq, ":rand", 1),
            (jump_to_menu,"mnu_traicion_resultado2"),
          (else_try),
            (eq, ":rand", 2),
            (jump_to_menu,"mnu_traicion_resultado3"),
          (else_try),
            (eq, ":rand", 3),
            (jump_to_menu,"mnu_traicion_resultado4"),
          (else_try),
            (jump_to_menu,"mnu_traicion_resultado1"),
          (try_end),
      ]),

      ####maniobras de infiltracion chief
      ("infiltracion_interna",
        [
          (party_get_slot, ":blockplace_place", "$g_encountered_party", slot_center_blockaded),
          (ge, ":blockplace_place", 1),
          (eq, "$g_infiltracion_interna", 0),
          (neq, "$g_traicion_interna", 1),
        ],
        "Send some men to infiltrate the place.",
        [
          (party_get_num_companion_stacks, ":num_stacks","p_main_party"),
          (assign, ":num_men", 0),
          (try_for_range, ":i_stack", 0, ":num_stacks"),
            (party_stack_get_size, ":stack_size","p_main_party",":i_stack"),
            (val_add, ":num_men", ":stack_size"),
          (try_end),
          (try_begin),
            (gt, ":num_men", 30), # se muestra si el player tiene por lo menos 30 hombres
            (start_presentation,"prsnt_infiltrationandsabotage"),
            # (jump_to_menu,"mnu_infiltracion_interna2"),
          (else_try),
            (display_message,"@You need more than 30 men, or sending some will leave your camp somewhat unprotected."),
          (try_end),
      ]),

      ("infiltracion_interna3",[           (eq, "$g_infiltracion_interna", 2),
        ],
        "Any news from the men sent to infiltrate?", [
          (store_random_in_range, ":rand", 0, 4),
          (try_begin),
            (le, ":rand", 1),
            (try_begin),
              (party_slot_eq,"$g_encountered_party",slot_center_infiltration_type,1), #water
              (jump_to_menu,"mnu_infiltracion_resultado4_c"),
            (else_try),
              (party_slot_eq,"$g_encountered_party",slot_center_infiltration_type,2), #cattle
              (jump_to_menu,"mnu_infiltracion_resultado3_c"),
            (else_try),
              (party_slot_eq,"$g_encountered_party",slot_center_infiltration_type,3), #food
              (jump_to_menu,"mnu_infiltracion_resultado3"),
            (else_try),
              (party_slot_eq,"$g_encountered_party",slot_center_infiltration_type,4), #morale
              (jump_to_menu,"mnu_infiltracion_resultado4"),
            (else_try),
              (jump_to_menu,"mnu_infiltracion_resultado1"),
            (try_end),
          (else_try),
            (eq, ":rand", 2),
            (jump_to_menu,"mnu_infiltracion_resultado2"),
          (else_try),
            (eq, ":rand", 3),
            (jump_to_menu,"mnu_infiltracion_resultado5"),
          (else_try),
            (jump_to_menu,"mnu_infiltracion_resultado1"),
          (try_end),
      ]),
      ####maniobras de infiltracion chief acaba

      #####construir letrinas, canalizaciones para evitar acumulacion de barro con la lluvia, cavar pozos para suministro de agua
      ("build_varios",[
          #obtiene numero de hombres de el ejercito del player
          (eq, "$g_siege_saneamiento", 0),],
        "Order the construction of sanitation to prevent disease.", [
          (party_get_num_companion_stacks, ":num_stacks","p_main_party"),
          (assign, ":num_men", 0),
          (try_for_range, ":i_stack", 0, ":num_stacks"),
            (party_stack_get_size, ":stack_size","p_main_party",":i_stack"),
            (val_add, ":num_men", ":stack_size"),
          (try_end),
          (try_begin),
            (gt, ":num_men", 10), # se muestra si el player tiene por lo menos 10 hombres
            ##                (store_current_hours, ":cur_hours"),
            ##                (party_set_slot, "$g_encountered_party", slot_center_latrines, ":cur_hours"),
            (jump_to_menu,"mnu_construct_saneamiento"),
          (else_try),
            (display_message,"@You need to have more than 10 men in order to do this job."),
          (try_end),
      ]),
      ####construir chief letrinas, canalizaciones y pozos acaba
      #destruir campos cercanos para obtener comida y empobrecer a la ciudad
      ("destruir_campos_a",[
          (eq, "$g_campos_cercanos", 0),],
        "Pillage farms to replenish your stocks and harm the enemy.", [
          (party_get_num_companion_stacks, ":num_stacks","p_main_party"),
          (assign, ":num_men", 0),
          (try_for_range, ":i_stack", 0, ":num_stacks"),
            (party_stack_get_size, ":stack_size","p_main_party",":i_stack"),
            (val_add, ":num_men", ":stack_size"),
          (try_end),
          (try_begin),
            (gt, ":num_men", 80), # se muestra si el player tiene por lo menos 80 hombres
            (assign, "$g_campos_cercanos", 1),
          (else_try),
            (display_message,"@You need to have more than 80 men in order to do this."),
          (try_end),
      ]),

      ("destruir_campos_b",[
          (eq, "$g_campos_cercanos", 2),],
        "Any news from the men I sent to pillage farms?", [
          #          (store_current_month, ":cur_month"),
          (store_random_in_range, ":rand", 0, 3),
          (try_begin),
            (le, ":rand", 2),
            (try_begin),
              (this_or_next|eq, "$g_cur_month", 3),
              (this_or_next|eq, "$g_cur_month", 4),
              (eq, "$g_cur_month", 5),
              (jump_to_menu,"mnu_campos_cercanos1"),
            (else_try),
              (this_or_next|eq, "$g_cur_month", 9),
              (this_or_next|eq, "$g_cur_month", 10),
              (eq, "$g_cur_month", 11),
              (jump_to_menu,"mnu_campos_cercanos2"),
            (else_try),
              (this_or_next|eq, "$g_cur_month", 12),
              (this_or_next|eq, "$g_cur_month", 1),
              (eq, "$g_cur_month", 2),
              (jump_to_menu,"mnu_campos_cercanos3"),
            (else_try),
              (this_or_next|eq, "$g_cur_month", 6),
              (this_or_next|eq, "$g_cur_month", 7),
              (eq, "$g_cur_month", 8),
              (jump_to_menu,"mnu_campos_cercanos2_c"),
            (else_try),
              (jump_to_menu,"mnu_campos_cercanos4"),
            (try_end),
          (else_try),
            (jump_to_menu,"mnu_campos_cercanos4"),
          (try_end),
      ]),


      ("go_back",[],
        "Go back.", [(jump_to_menu,"mnu_castle_besiege")]),

      ("testing",[(ge, "$cheat_mode", 1),],
        "Test siege event.", [(jump_to_menu,"mnu_siege_event_test")]),
    ]
  ),

  ###############assault
  (
    "siege_assault",0,
    "Time is of essence, and you fear the arrival of support force for the place. Assaulting will mean heavy casualties, but you have made up your mind.^^{s17} {s18} {s19}",
    "none",
    [

      (str_store_party_name,s4,"$current_town"),

      (str_clear, s17),
      (str_clear, s18),
      (str_clear, s19),
      ####listos para asalto
      (str_store_string,s17,"str_empty_string"),
      (try_begin),
        (neq, "$g_listos_para_asalto", 1),
        (eq, "$g_siege_method", 2),
        (str_store_string,s17,"@>>The assault equipment is ready. The troops await your orders.^^"),
      (else_try),
        (eq, "$g_listos_para_asalto", 1),
        (this_or_next|eq, "$g_cur_month", 3),
        (this_or_next|eq, "$g_cur_month", 4),
        (eq, "$g_cur_month", 5),
        (str_store_string,s17,"@>>You look at {s4}. Your men are silent while they await your order to attack. Your muscles are tense, hot for battle, but your mind is cold and adrenaline fills your veins^" +
        "A man breathes deeply. 'Do you smell that?' he asks, 'That is the scent of glory.' 'Are you ready to seize it?'^^"),
      (else_try),
        (ge, "$g_listos_para_asalto", 1),
        (this_or_next|eq, "$g_cur_month", 9),
        (this_or_next|eq, "$g_cur_month", 10),
        (eq, "$g_cur_month", 11),
        (str_store_string,s17,"@>>The steel of the weapons glitters, banners sway in the wind and horns sound. The men whisper, many pray, ingratiate themselves with their god before facing the end of their lives. Up ahead there are only two things: victory or death.^" +
        "War ... war never changes.^^"),
      (else_try),
        (ge, "$g_listos_para_asalto", 1),
        (this_or_next|eq, "$g_cur_month", 12),
        (this_or_next|eq, "$g_cur_month", 1),
        (eq, "$g_cur_month", 2),
        (str_store_string,s17,"@>>Winter is the worst time to fight, but there you are in the cold months, ready to undertake the conquest of {s4}. Many people think you're a daredevil, others a madman. But this place will be yours, soon.^^"),
      (else_try),
        (ge, "$g_listos_para_asalto", 1),
        (this_or_next|eq, "$g_cur_month", 6),
        (this_or_next|eq, "$g_cur_month", 7),
        (eq, "$g_cur_month", 8),
        (str_store_string,s17,"@>>It's summer and hot -- maybe too hot -- but, at that moment, you do not feel anything. As always before a battle, you set aside time for a few inevitable memories of the past... Then you close your mind and ready it for battle, preparing for even the worst case -- death.^^"),
      (else_try),
        (ge, "$g_listos_para_asalto", 1),
        (str_store_string,s17,"@>>You look at {s4}. Your men are silent while waiting for your order to charge towards death. Your muscles are tense, hot for battle, your mind cold and adrenaline fills your veins^" +
        "A man breathes deeply. 'Do you smell that?' he asks, 'That is the scent of glory.' 'Are you ready to seize it?'^^"),
      (try_end),

      (str_store_string,s18,"str_empty_string"),
      (try_begin),
        (ge, "$g_mantlets_1", 1),
        (party_get_slot, ":last_mantles_time", "$g_encountered_party", slot_center_mantlets_placed),
        (store_current_hours, ":cur_hours"),
        (call_script, "script_get_max_skill_of_player_party", "skl_engineer"),
        (assign, ":max_skill", reg0),
        (store_sub, reg4, 16, ":max_skill"),
        (val_mul, reg4, 2),
        (store_add, ":ok_time", ":last_mantles_time", reg4),#between 12 and 32 hours
        (gt, ":cur_hours", ":ok_time"),
        (str_store_string,s18,"@>>Your men have finished building the mantlets. Now you can use them to protect your soldiers in the vanguard attack, and your main force for the final charge.^^"),
        (assign, "$g_mantlets_1", 2), #final
      (else_try),
        (eq, "$g_mantlets_1", 1),
        (str_store_string,s18,"@>>Your men are building mantlets.^^"),
      (try_end),

      (str_store_string,s19,"str_empty_string"),
      (try_begin),
        (ge, "$g_siege_method", 1),

        (party_get_slot, ":last_ladders_time", "$g_encountered_party", slot_center_ladder_time),
        (store_current_hours, ":cur_hours"),
        (call_script, "script_get_max_skill_of_player_party", "skl_engineer"),
        (assign, ":max_skill", reg0),
        (store_sub, reg4, 16, ":max_skill"),
        (val_mul, reg4, 2),

        (store_add, ":ok_time", ":last_ladders_time", reg4), #between 24 and 64 hours
        (gt, ":cur_hours", ":ok_time"),
        (str_store_string,s19,"@>>Your men have finished building the ladders.^^"),
        (assign, "$g_siege_method", 2), #final
      (else_try),
        (eq, "$g_siege_method", 1),
        (str_store_string,s19,"@>>Your men are building assault ladders.^^"),
      (try_end),

      (call_script, "script_set_town_picture"),

      #Check for victory or defeat....
      (assign, "$g_enemy_party", "$g_encountered_party"),
      (assign, "$g_ally_party", -1),
      (str_store_party_name, 1,"$g_encountered_party"),
      (call_script, "script_encounter_calculate_fit"),

      (assign, reg11, "$g_enemy_fit_for_battle"),
      (assign, reg10, "$g_friend_fit_for_battle"),


      (try_begin),
        (eq, "$g_leave_encounter",1),
        (change_screen_return),
      (else_try),
        (call_script, "script_party_count_fit_regulars","p_collective_enemy"),
        (assign, ":enemy_finished", 0),
        (try_begin),
          (eq, "$g_battle_result", 1),
          (assign, ":enemy_finished", 1),
        (else_try),
          (this_or_next|le, "$g_enemy_fit_for_battle",0),
          (le, "$g_enemy_fit_for_battle", "$num_routed_enemies"),  #we do not want routed agents to spawn again in next turn of battle.
          (ge, "$g_friend_fit_for_battle", 1),
          (assign, ":enemy_finished", 1),
        (try_end),

        (this_or_next|eq, ":enemy_finished", 1),
        (eq, "$g_enemy_surrenders", 1),
        #siege warfare chief
        (assign, "$g_empieza_asedio", 0),
        (party_set_slot,"$g_encountered_party",slot_center_blockaded,0),
        (party_set_slot,"$g_encountered_party",slot_center_blockaded_time,0),
        (party_set_slot, "$g_encountered_party", slot_center_mantlets_placed, 0),
        (party_set_slot,"$g_encountered_party",slot_center_ladder_time,0),
        (party_set_slot,"$g_encountered_party",slot_center_latrines,0),
        (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),

        (assign, "$g_siege_saneamiento", 0),
        (assign, "$g_traicion_interna", 0),
        (assign, "$g_infiltracion_interna", 0),
        (assign, "$g_campos_cercanos", 0),
        (assign, "$g_listos_para_asalto", 0),
        (assign, "$g_mantlets_1", 0),
        (assign, "$g_cabezas_dentro", 0), #event
        (assign, "$g_siege_method", 0),
        (assign, "$g_siege_sallied_out_once", 0),
        (assign, "$g_days_spent_starving", 0), #siege warfare, important, we use this in dialogs
        (assign, "$g_next_sally_at", 0), #sally more common siege warfare chief
        #siege warfare acaba

        (assign, "$g_next_menu", "mnu_castle_taken"),
        (jump_to_menu, "mnu_total_victory"),
      (else_try),
        (call_script, "script_party_count_members_with_full_health", "p_main_party"),
        (assign, ":main_party_fit_regulars", reg0),
        (eq, "$g_battle_result", -1),
        (this_or_next|eq, ":main_party_fit_regulars", 0), #all lost (TODO : )
        (le, ":main_party_fit_regulars",  "$num_routed_allies"), #we do not want routed agents to spawn again in next turn of battle.
        (assign, "$g_next_menu", "mnu_captivity_start_castle_defeat"),
        #siege warfare chief
        (assign, "$g_empieza_asedio", 0),
        (party_set_slot,"$g_encountered_party",slot_center_blockaded,0),
        (party_set_slot,"$g_encountered_party",slot_center_blockaded_time,0),
        (party_set_slot, "$g_encountered_party", slot_center_mantlets_placed, 0),
        (party_set_slot,"$g_encountered_party",slot_center_ladder_time,0),
        (party_set_slot,"$g_encountered_party",slot_center_latrines,0),
        (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),

        (assign, "$g_siege_saneamiento", 0),
        (assign, "$g_traicion_interna", 0),
        (assign, "$g_infiltracion_interna", 0),
        (assign, "$g_campos_cercanos", 0),
        (assign, "$g_listos_para_asalto", 0),
        (assign, "$g_mantlets_1", 0),
        (assign, "$g_cabezas_dentro", 0), #event
        (assign, "$g_siege_method", 0),
        (assign, "$g_siege_sallied_out_once", 0),
        (assign, "$g_days_spent_starving", 0), #siege warfare, important, we use this in dialogs
        (assign, "$g_next_sally_at", 0), #sally more common siege warfare chief
        #siege warfare acaba
        (jump_to_menu, "mnu_total_defeat"),
      (try_end),
    ],
    [
      #####scout da pinceladas
      ("scout_investigar",
        [
        ],
        "Call the scouts for a report on {s4}.",
        [
          (jump_to_menu,"mnu_informacion_ciudad"),
      ]),

      ("poniendo_elementos_mantles",
        [(eq, "$g_mantlets_1", 2),
          (neq, "$g_listos_para_asalto", 1),
          (ge, "$g_siege_method", 2),
          (gt, "$g_friend_fit_for_battle", 3),
          ##         (store_current_hours, ":cur_hours"),
          ##         (ge, ":cur_hours",  "$g_siege_method_finish_hours"),
        ],
        "Order the vanguard to place the mantlets.", [(assign, "$cant_talk_to_enemy", 0),(jump_to_menu,"mnu_poner_escaleras_mantlets")]),

      ("poniendo_elementos",
        [(neq, "$g_mantlets_1", 2),
          (neq, "$g_listos_para_asalto", 1),
          (ge, "$g_siege_method", 2),
          (gt, "$g_friend_fit_for_battle", 3),
          ##         (store_current_hours, ":cur_hours"),
          ##         (ge, ":cur_hours",  "$g_siege_method_finish_hours"),
        ],
        "Order the vanguard to prepare the assault.", [(assign, "$cant_talk_to_enemy", 0),(jump_to_menu,"mnu_poner_escaleras")]),

      ("castle_lead_attack",
        [
          (neg|troop_is_wounded, "trp_player"),
          (eq, "$g_listos_para_asalto", 1),
          (ge, "$g_siege_method", 2),
          (gt, "$g_friend_fit_for_battle", 3),
        ],
        "The hour has arrived. Lead your soldiers in assault!",
        [
          (try_begin),
            (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
            (party_get_slot, ":battle_scene", "$g_encountered_party", slot_town_walls),
          (else_try),
            (party_get_slot, ":battle_scene", "$g_encountered_party", slot_castle_exterior),
          (try_end),

          (call_script, "script_calculate_renown_value"),
          (call_script, "script_calculate_battle_advantage"),
          (assign, ":battle_advantage", reg0),
          (val_mul, ":battle_advantage", 2),
          (val_div, ":battle_advantage", 3), #scale down the advantage a bit in sieges.
          (set_battle_advantage, ":battle_advantage"),
          (set_party_battle_mode),
          (assign, "$g_siege_battle_state", 1),
          (assign, ":siege_sally", 0),
          (try_begin),
            (le, ":battle_advantage", -6), #we are outnumbered, defenders sally out
            (eq, "$g_siege_sallied_out_once", 0),
            (set_jump_mission,"mt_castle_attack_walls_defenders_sally"),
            (assign, "$g_siege_battle_state", 0),
            (assign, ":siege_sally", 1),
          (else_try),
            (assign, "$temp4", 0),
            (set_jump_mission,"mt_castle_attack_walls_ladder"),
          (try_end),
          (assign, "$cant_talk_to_enemy", 0),
          (assign, "$g_siege_final_menu", "mnu_castle_besiege"),
          (assign, "$g_next_menu", "mnu_castle_besiege_inner_battle"),
          (assign, "$g_siege_method", 0), #reset siege timer
          (try_begin),
            (eq, ":siege_sally", 1),
            (call_script, "script_setup_random_scene"),
            (jump_to_menu, "mnu_siege_attack_meets_sally"),
          (else_try),
            (jump_to_scene,":battle_scene"),
            (jump_to_menu, "mnu_battle_debrief"),
            (change_screen_mission),
          (try_end),
      ]),
      ("attack_stay_back",
        [
          (eq, "$g_listos_para_asalto", 1),
          (ge, "$g_siege_method", 2),
          (gt, "$g_friend_fit_for_battle", 3),
        ],
        "Order your soldiers to assault while you stay back...", [(assign, "$cant_talk_to_enemy", 0),(jump_to_menu,"mnu_castle_attack_walls_simulate2")]),

      ("build_mantlet",
        [           (eq, "$g_mantlets_1", 0),
          (neq, "$g_siege_method", 1),
        ],
        "Build mantlets.",
        [
          (jump_to_menu,"mnu_build_mantles2"),
          ##                        (assign, "$g_mantlets_1", 1),
          ##                (store_current_hours, ":cur_hours"),
          ##                (party_set_slot, "$g_encountered_party", slot_center_mantlets_placed, ":cur_hours"),
      ]),
      #siege warfare ram
      ("build_ladders",[
          (eq, "$g_siege_method", 0),
          (neq, "$g_mantlets_1", 1),],
        "Build equipment and clear the ground for assault.", [(jump_to_menu,"mnu_construct_ladders")]),

      ##no siege towers in dark ages
      # ("build_siege_tower",[(party_slot_eq, "$current_town", slot_center_siege_with_belfry, 1),(eq, "$g_siege_method", 0)],
        # "Build a siege tower and other equipment to assault the fortress. Assaults may result in many casualties.", [(jump_to_menu,"mnu_construct_siege_tower")]),
      ###siege warfare ram chief
      ##                   ("build_battering_ram", [(party_slot_eq, "$current_town", slot_center_siege_with_ram, 1),
      ##                             (eq, "$g_siege_method", 0)],
      ##       "Build a battering ram and equipment to prepare the assault on the fortress . Assaults are unpredictable, and may result in many casualties.", [(jump_to_menu,"mnu_battering_ram")]),
      ###siege warfare ram acaba
      ("cheat_castle_lead_attack",[(eq, "$cheat_mode", 1),
          (eq, "$g_siege_method", 0)],
        "{!}CHEAT: Instant build equipments.",
        [
          (assign, "$g_mantlets_1", 2),
          (assign, "$g_siege_method", 1),
          (assign, "$g_siege_method_finish_hours", 0),
          (jump_to_menu, "mnu_castle_besiege"),
      ]),

      ("cheat_conquer_castle",[(eq, "$cheat_mode", 1),
        ],
        "{!}CHEAT: Instant conquer fortress.",
        [
          (assign, "$g_next_menu", "mnu_castle_taken"),
          (jump_to_menu, "mnu_total_victory"),
      ]),

      ("go_back",[],
        "Go back.", [(jump_to_menu,"mnu_castle_besiege")]),
    ]
  ),

  #####Siege warfare acaba

  (
    "siege_attack_meets_sally",mnf_scale_picture,
    "The defenders sally out to meet your assault.",
    "none",
    [
        (set_background_mesh, "mesh_pic_sally_out"),
    ],
    [
      ("continue",[],
       "Continue...",
       [
             (jump_to_menu, "mnu_battle_debrief"),
             (change_screen_mission),
       ]),
    ]
  ),


  #######siege warfare
  #Low food = sally out
  (
    "nofood_siege_defenders_sally",0,
    "The lack of food forces the desperate defenders of {s4} to sally out in an attempt to break the siege.",
    "none",
    [
      (set_background_mesh, "mesh_pic_sally_out"),
      (str_store_party_name,s4,"$current_town"),
    ],
    [
      ("continue",[],
        "Continue...",
        [
          (jump_to_menu, "mnu_battle_debrief"),
          (change_screen_mission),
      ]),
    ]
  ),

  #surrender for hunger
  (
    "surrender_siege_defenders_starved",0,
    "The defenders of {s4} can hold out no longer. Lack of food has debilitated them. Already the weakest have died of starvation, and in some cases, the need has led to cannibalism.^" +
    "{s4} is ready to surrender...",
    "none",
    [
      (set_background_mesh, "mesh_pic_victory"),
      (str_store_party_name,s4,"$current_town"),
    ],
    [
      ("continue",[],
        "Continue...",
        [
          (assign, "$g_enemy_surrenders",1),
          (jump_to_menu, "mnu_castle_besiege"), #
      ]),
    ]
  ),
  ############
  ####SIEGE WARFARE CHIEF menus extras
  (
    "castle_attack_walls_simulate2",mnf_disable_all_keys, #vanguardia
    "{s4}^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none",
    [
      (set_background_mesh, "mesh_pic_siege_sighted"),

      (try_begin), ###siege warfare
        (eq, "$g_mantlets_1", 2),
        (call_script, "script_simulate_battle_with_parties", 1, "$g_enemy_party", 5, 0, 0), ###less difficult
      (else_try),
        (call_script, "script_simulate_battle_with_parties", 2, "$g_enemy_party", 7, 0, 0),
      (try_end),

      (assign, "$no_soldiers_left", 0),
      (try_begin),
        (call_script, "script_party_count_members_with_full_health", "p_main_party"),
        (le, reg0, 0), #(TODO : compare with num_routed_us)
        (assign, "$no_soldiers_left", 1),
        (str_store_string, s4, "str_attack_walls_failure"),
      (else_try),
        (call_script, "script_party_count_members_with_full_health", "p_collective_enemy"),
        (le, reg0, 0), #(TODO : compare with num_routed_enemies)
        (assign, "$no_soldiers_left", 1),
        (assign, "$g_battle_result", 1),
        (str_store_string, s4, "str_attack_walls_success"),
      (else_try),
        (str_store_string, s4, "str_attack_walls_continue"),
      (try_end),
    ],
    [
      ("continue",[],"Continue...",[(jump_to_menu,"mnu_siege_assault")]),
    ]
  ),



  (
    "sneak_into_town_suceeded2",0,
    "Disguised and under the cover of darkness, you infiltrate {s4}. It's time to scout out their defenses.",
    "none",
    [
      (str_store_party_name,s4,"$current_town"),
    ],
    [
      ("continue",[],"Continue...",
        [
          (assign, "$sneaked_into_town",1),
          (jump_to_menu,"mnu_town"),
      ]),
    ]
  ),

  #labores de saneamiento chief
  (
    "construct_saneamiento",0,
    "Sanitation is important for preventing rats and disease. It is possible to construct latrines and pipelines to prevent the accumulation of mud and filth from the rain, and dig a reservoir to have an available water supply. Do you want to do it?^" +
    "It will take 4 hours.",
    "none",
    [

    ],
    [
      ("build_saneamiento",[],
        "Do it.", [
          (assign, "$g_siege_saneamiento", 1),
          (store_current_hours, ":cur_hours"),
          (party_set_slot, "$g_encountered_party", slot_center_latrines, ":cur_hours"),
          (call_script, "script_change_player_party_morale", -3),
          (assign, "$g_siege_saneamiento", 2), #fix problem with saneamiento.
          (jump_to_menu,"mnu_siege_plan")
      ]),
      ("go_back",[],
        "Go back.", [(jump_to_menu,"mnu_siege_plan")]),
    ],
  ),
  #saneamiento acaba
  ###block place
  (
    "construct_circunvalation",0,
    "Blockading a place protects your troops during the siege, helps to avoid some enemy skirmishers, and prevents the entry of food and reinforcements. " +
    "It also lowers enemy's morale and helps you negotiate the surrender of the place.^^" +
    "As the party member with the highest Engineer skill, ({reg2}), {reg3?you estimate:{s3} estimates} that building the blockade around the place will take {reg4} hours.",
    "none",
    [
      (set_background_mesh, "mesh_pic_siege_sighted"),

      (call_script, "script_get_max_skill_of_player_party", "skl_engineer"),
      (assign, ":max_skill", reg0),
      (assign, ":max_skill_owner", reg1),
      (assign, reg2, ":max_skill"),

      (store_sub, reg4, 16, ":max_skill"),
      (val_mul, reg4, 4),#between 24 and 64 hours

      (try_begin),
        (eq, ":max_skill_owner", "trp_player"),
        (assign, reg3, 1),
      (else_try),
        (assign, reg3, 0),
        (str_store_troop_name, s3, ":max_skill_owner"),
      (try_end),
    ],
    [
      ("build_circun_cont",[],
        "Do it.", [
          (party_set_slot,"$g_encountered_party",slot_center_blockaded,1),
          (store_current_hours, ":cur_hours"),
          (party_set_slot, "$g_encountered_party", slot_center_blockaded_time, ":cur_hours"),
          (jump_to_menu,"mnu_siege_plan"),
      ]),
      ("go_back",[],
        "Go back.", [(jump_to_menu,"mnu_siege_plan")]),
    ],
  ),

  ##########
  ("traicion_interna2",0,
    "Your siege works begin to demoralize the defenders. Some of your soldiers are willing to contact the garrison or the inhabitants at {s4} and probe if someone would be willing to commit treason and facilitate the conquest. They need 500 siliquae for the job.",
    "none",
    [
      (str_store_party_name,s4,"$current_town"),
    ],
    [
      ("intentar_traicion",[],
        "Allow these men to seek out a traitor.", [
          (store_troop_gold,":money","trp_player"),
          (try_begin),
            (gt,":money",499),
            (troop_remove_gold, "trp_player", 500),
            (assign, "$g_traicion_interna", 1),
            (jump_to_menu,"mnu_siege_plan"),
          (else_try),
            (display_message,"str_no_money"),
          (try_end),
      ]),
      ("go_back",[],
        "Go back.", [(jump_to_menu,"mnu_siege_plan")]),
    ],
  ),

  ####traicion interna
  ("traicion_resultado1",0,
    "They returned without news. No one is willing to become a traitor.",
    "none", [
    ],
    [
      ("back_behind",[],"Well, bad luck.",
        [
          (assign, "$g_traicion_interna", 3),#failed
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),

  ("traicion_resultado2",0,
    "Sir! Our men have been discovered near the wall. They are fighting their way out of {s4}. Look over there at the sally port. They are trying to flee, but are surrounded...",
    "none",
    [

      (str_store_party_name,s4,"$current_town"),
    ],
    [
      ("ayudar_infiltrados",[],"Order: send an additional group of men to their aid.",
        [
          (jump_to_menu,"mnu_traicion_lucha"),
      ]),
      ("leave_men",[],"Leave the men to their fate. They knew what was coming.",
        [
          (call_script, "script_change_player_honor", -5),
          (call_script, "script_change_player_party_morale", -6),
          (assign, "$g_traicion_interna", 3), #failed
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),

  ("traicion_resultado3",0,
    "Your men have returned. A traitor within the place has set barns ablaze and will soon flee {s4} and join your army. The enemy will lose much of their food stock because of that.",
    "none", [
      (str_store_party_name,s4,"$current_town"),
    ],
    [("back_to_siege",[],"Well done.",
        [
          (party_get_slot,":cur_food","$g_encountered_party",slot_party_food_store),
          (try_begin),
            (ge,":cur_food",4),
            (store_random_in_range,":burned",40,50),
            (val_mul,":cur_food",100),
            (val_add,":burned",100),
            (val_div,":cur_food",":burned"),
            (party_set_slot,"$g_encountered_party",slot_party_food_store,":cur_food"),
            (str_store_party_name,s4,"$g_encountered_party"),
            (display_message, "@{s4} lost between 40 and 50% of its food reserves.", 0xFF0000),
          (try_end),
          (call_script, "script_change_center_prosperity", "$g_encountered_party", -5),
          (party_add_members, "p_main_party", "trp_watchman", 1),
          (assign, "$g_traicion_interna", 4), #success
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),

  ("traicion_resultado4",0,
    "Your men have returned. They report there is a traitor who knows the routines of the garrison, and he is willing to lead a small force to ambush the enemy when they come to the water supplies, a nearby stream outside the walls...",
    "none", [ ],
    [
      ("atacar_emboscada_player",[],"Go yourself with your closest companions.",
        [
          (try_begin),
            (store_troop_health, ":health", "trp_player", 0), #get relative health in 1-100 range and put it into the ":health" variable
            (lt, ":health", 30),
            (val_add, ":health", 35),               #add to it the 5%
            (troop_set_health,   "trp_player", ":health"),   #set it
          (try_end),


          (store_random_in_range, ":scene_a_usar", 0,3),
          (try_begin),
            (eq, ":scene_a_usar", 1),
            (assign, ":scene_to_use", "scn_custom_battle_plains_2"),
          (else_try),
            (eq, ":scene_a_usar", 2),
            (assign, ":scene_to_use", "scn_custom_battle_plains_5"),
          (else_try),
            (assign, ":scene_to_use", "scn_custom_battle_forest_4"),
          (try_end),

          (set_jump_mission,"mt_ambush_riversw"),
          (modify_visitors_at_site,":scene_to_use"),
          #### tropas cambiar por las del asentamiento
          (assign, "$g_traicion_interna", 4), #success
          (reset_visitors, 0),
          (set_visitor,0,"trp_player"), #player
          (assign, ":cur_entry", 1),
          (try_for_range, ":companion", companions_begin, companions_end),
            (lt, ":cur_entry", 16),
            (main_party_has_troop,":companion"),
            (set_visitor, ":cur_entry", ":companion"),
            (val_add, ":cur_entry", 1),
          (try_end),

          (assign, ":num_troops", 8),
          (try_for_range, ":unused", 0, ":num_troops"),
            (call_script, "script_cf_party_remove_random_regular_troop", "$g_encountered_party"),
            (assign, ":lost_troop", reg0),
            #(try_for_range, ":visiterator", 17, 18), #possible 17 and 31, but this add 8 enemies each 1 entry point
            (assign, ":visiterator", 17),
            (set_visitor, ":visiterator", ":lost_troop"),
            #  (try_end),
          (try_end),
          (jump_to_scene,":scene_to_use"),
          (change_screen_mission),
      ]),

      ("atacar_emboscada",[],"Order: send a group of men with the traitor to carry out the ambush.",
        [
          (store_random_in_range, ":rand", 0, 3),
          (try_begin),
            (eq, ":rand", 0),
            (jump_to_menu,"mnu_emboscada_victory"),
          (else_try),
            (eq, ":rand", 1),
            (jump_to_menu,"mnu_emboscada_lose"),
          (else_try),
            (jump_to_menu,"mnu_emboscada_nada"),
          (try_end),
      ]),
      ("leave_men",[],"It makes me uneasy. Forget about it.",
        [
          # (assign, "$g_traicion_interna", 0),
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),
  #resultado
  ("emboscada_player",0,
    "Moving through the vegetation, you have taken your enemies by surprise and have given a good account of yourselves. Now the garrison will think twice before sending men out.",
    "none", [ (set_background_mesh, "mesh_pic_mb_warrior_3"),
    ],
    [
      ("emboscada_playerok",[],"Victory!",
        [
        (leave_encounter),
        (jump_to_menu, "mnu_auto_return_to_map"),
      ]),
    ],
  ),
  #
  ("emboscada_nada",0,
    "Your men move under the cover of the vegetation, away from the watchful eyes on the wall, but when they come to the meeting point, there is nobody. The alleged traitor has been discovered or has repented. Your men return disappointed.",
    "none", [ (set_background_mesh, "mesh_pic_mb_warrior_3"),
    ],
    [
      ("emboscada_nanai",[],"Do not worry. There will be another chance.",
        [
          (assign, "$g_traicion_interna", 3), #failed
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),
  #
  ("emboscada_lose",0,
    "Alarm! Treason! The alleged traitor led your men into an ambush. They are fighting desperately, leaving many men on the field.",
    "none", [ (set_background_mesh, "mesh_pic_mb_warrior_3"),
      (store_random_in_range, ":p_leave", 8, 12),
      (assign, ":num_troops", ":p_leave"),
      (try_for_range, ":unused", 0, ":num_troops"),
        (call_script, "script_cf_party_remove_random_regular_troop", "p_main_party"),
      (try_end),
    ],
    [("regreso_lucha",[],"Your worst fears have come true.",
        [
          (assign, "$g_traicion_interna", 3), #failed
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),

  ("emboscada_victory",0,
    "The traitor leads your men through the night to a hill that controls the path to a well. Your men take up positions in the vegetation, in silence, their faces stained black. At daybreak, your men spot a large group of enemies by the water.^^A battle cry fills the valley as your soldiers fall like a tide of death on the enemy... killing many.",
    "none", [ (set_background_mesh, "mesh_pic_mb_warrior_3"),

      (store_random_in_range, ":p_leave", 8, 12),
      (assign, ":num_troops", ":p_leave"),
      (try_for_range, ":unused", 0, ":num_troops"),
        (call_script, "script_cf_party_remove_random_regular_troop", "$g_encountered_party"),
      (try_end),
    ],

    [("regreso_lucha",[],"Victory!",
        [
          (call_script, "script_change_player_party_morale", 3),
          (assign, "$g_traicion_interna", 4), #success
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),
  #
  ("traicion_resultado5",0,
    "When your men come back, they tell you they have contacted a man who is in control of rations, and he has promised to raise the price of food to his fellow citizens to sow discontent, making them more likely to abandon the fortress.",
    "none", [
    ],

    [("traicion_moral",[],"Perfect!",
        [
          (call_script, "script_change_center_prosperity", "$g_encountered_party", -5),

          (store_random_in_range, ":p_leave", 8, 22),
          (assign, ":num_troops", ":p_leave"),
          (try_for_range, ":unused", 0, ":num_troops"),
            (call_script, "script_cf_party_remove_random_regular_troop", "$g_encountered_party"),
          (try_end),
          (assign, "$g_traicion_interna", 4), #success
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),

  #traicion interna
  ("traicion_lucha",0,
    "Your men and the enemy fight to the death at the foot of the wall, where everything is unfavorable to your troops. You watch them fighting and retreating towards you. Many bodies are left behind. " +
    "^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none", [
      (call_script, "script_simulate_battle_with_parties", 11, "$g_enemy_party", 56, 0, 0),
    ],

    [("regreso_luchar",[],"Well, no one gets left behind.",
        [
          (call_script, "script_change_player_honor", 5),
          (call_script, "script_change_player_party_morale", 5),
          (assign, "$g_traicion_interna", 3), #failed
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),
  ####infiltracion interna chief
  ("infiltracion_resultado1",0,
    "They returned without news. They were unable to enter the settlement.",
    "none", [
    ],
    [
      ("back_behindi",[],"Just bad luck, I guess.",
        [
          (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),
          (assign, "$g_infiltracion_interna", 3),
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),

  ("infiltracion_resultado2",0,
    "Sir! Our men have been discovered in {s4}. Unfortunately, none have returned. They were all killed or captured.",
    "none",
    [

      (str_store_party_name,s4,"$current_town"),
    ],
    [
      ("muertos_infiltrado",[],"Terrible news.",
        [
          (call_script, "script_change_player_party_morale", -5),

          (store_random_in_range, ":p_leave", 18, 22),
          (assign, ":num_troops", ":p_leave"),
          (try_for_range, ":unused", 0, ":num_troops"),
            (call_script, "script_cf_party_remove_random_regular_troop", "p_main_party"),
            (assign, ":lost_troop", reg0),
            (store_random_in_range, ":random_no", 0, 100),
            (ge, ":random_no", 50),
            (party_add_prisoners, "$g_encountered_party", ":lost_troop", 1),
          (try_end),

          (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),
          (assign, "$g_infiltracion_interna", 3),
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),

  ("infiltracion_resultado3",0,
    "Victory! They have managed to burn several food stores. The enemy is demoralized. Perhaps it is time to request their surrender.",
    "none", [ ],

    [("back_to_siegei",[],"Well, give them a barrel of mead.",
        [
          (party_get_slot,":cur_food","$g_encountered_party",slot_party_food_store),
          (try_begin),
            (ge,":cur_food",4),
            (store_random_in_range,":burned",50,60),
            (val_mul,":cur_food",100),
            (val_add,":burned",100),
            (val_div,":cur_food",":burned"),
            (party_set_slot,"$g_encountered_party",slot_party_food_store,":cur_food"),
            (str_store_party_name,s4,"$g_encountered_party"),
            (display_message, "@{s4} lost between 50 and 60% of its food reserves.", 0xFF0000),
          (try_end),
          (call_script, "script_change_center_prosperity", "$g_encountered_party", -5),
          (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),
          (assign, "$g_infiltracion_interna", 4),
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),

  ("infiltracion_resultado3_c",0,
    "Victory! They killed many cattle and contaminated the water reserves. The enemy is demoralized and their lord has lost some renown. Perhaps it is time to request their surrender.",
    "none", [ ],

    [("back_to_siegein",[],"Well, give them a barrel of mead.",
        [
          (party_get_slot,":cur_food","$g_encountered_party",slot_party_food_store),
          (try_begin),
            (ge,":cur_food",4),
            (store_random_in_range,":burned",30,40),
            (val_mul,":cur_food",100),
            (val_add,":burned",100),
            (val_div,":cur_food",":burned"),
            (party_set_slot,"$g_encountered_party",slot_party_food_store,":cur_food"),
            (str_store_party_name,s4,"$g_encountered_party"),
            (display_message, "@{s4} lost between 30 and 40% of its food reserves.", 0xFF0000),
          (try_end),
          (party_get_slot, ":town_lord", "$g_encountered_party", slot_town_lord),
          (call_script, "script_change_troop_renown", ":town_lord", -15),
          (call_script, "script_change_center_prosperity", "$g_encountered_party", -10),
          (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),
          (assign, "$g_infiltracion_interna", 4),
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),


  ("infiltracion_resultado4",0,
    "Your men have returned. They said that some warriors are dissatisfied, and some were persuaded to switch to your side. If you agree, they will leave the city at night and join your army. Before they leave, they promise to cause unrest to facilitate the surrender of the place.",
    "none", [ ],

    [("aceptar_si",[],"They are welcome.",
        [
          (store_random_in_range, ":p_leave", 4, 12),
          (assign, ":num_troops", ":p_leave"),
          (try_for_range, ":unused", 0, ":num_troops"),
            (call_script, "script_cf_party_remove_random_regular_troop", "$g_encountered_party"),
            (assign, ":lost_troop", reg0),
            (party_add_members, "p_main_party", ":lost_troop", 1),
          (try_end),

          (party_get_slot,":cur_food","$g_encountered_party",slot_party_food_store),
          (try_begin),
            (ge,":cur_food",4),
            (store_random_in_range,":burned",10,20),
            (val_mul,":cur_food",100),
            (val_add,":burned",100),
            (val_div,":cur_food",":burned"),
            (party_set_slot,"$g_encountered_party",slot_party_food_store,":cur_food"),
            (str_store_party_name,s4,"$g_encountered_party"),
            (display_message, "@{s4} lost between 10 and 20% of its food reserves.", 0xFF0000),
          (try_end),

          (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),
          (assign, "$g_infiltracion_interna", 4),
          (jump_to_menu,"mnu_siege_plan"),
      ]),
      ("leave_men1",[],"It makes me uneasy. Forget about it.",
        [
          (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),
          (assign, "$g_infiltracion_interna", 0),
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),

  ("infiltracion_resultado4_c",0,
    "Your men have returned. They said that they poisoned the water of some wells and nearby streams. This should sicken many in the garrison.",
    "none", [ ],

    [("aceptar_oki",[],"That's good news. It will leave fewer men to defend the wall.",
        [

          (assign,":party_no","$g_encountered_party"),
          (party_get_num_companion_stacks, ":num_stacks",":party_no"),
          (party_get_slot,":party_type",":party_no",slot_party_type),
          # (assign,":max_no",60),
          (assign,":start_troop",0),
          (try_begin),
            (eq,":party_type",3), #town
            (assign,":max_no",30), #30%
            (call_script, "script_change_center_prosperity", ":party_no", -5),
          (else_try),
            #(eq,":party_type",2), #fort
            (assign,":max_no",20), #20%
            (call_script, "script_change_center_prosperity", ":party_no", -3),
          (try_end),
          (party_get_slot, ":food_stores", ":party_no", slot_party_food_store),
          (call_script, "script_center_get_food_store_limit", ":party_no"),
          (val_min, ":food_stores", reg0),
          (party_set_slot, ":party_no", slot_party_food_store, ":food_stores"),
          (try_for_range, ":stack_no", ":start_troop", ":num_stacks"),
            (party_stack_get_troop_id,":cur_troop_id",":party_no",":stack_no"),
            (party_stack_get_size,":num_troops",":party_no",":stack_no"),
            (val_mul,":num_troops",100),
            (store_random_in_range,":wounds",10,":max_no"), #10% wounds - 10 to 20 0 30 depend on center type
            (val_add,":wounds",100),
            (store_div,":damage",":num_troops",":wounds"),
            (party_wound_members,":party_no",":cur_troop_id",":damage"),
            (str_store_party_name,s4,"$g_encountered_party"),
            (display_message, "@{s4} have between 10 and 30% of its garrison sick for a few days.", 0xFF0000),
          (try_end),

          (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),
          (assign, "$g_infiltracion_interna", 4),
          (jump_to_menu,"mnu_siege_plan"),
      ]),
      ##        ("leave_men",[],"It makes me uneasy. Forget about it.",
      ##       [
      ##                          (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),
      ##                        (assign, "$g_infiltracion_interna", 0),
      ##                        (jump_to_menu,"mnu_siege_plan"),
      ##        ]),
    ],
  ),

  ("infiltracion_resultado5",0,
    "Oh, sir. The enemy has sent a bag with the heads of your men. Some of our soldiers have seen it, and fear runs through the camp.",
    "none", [
    ],

    [
      ("infiltracion_morali",[],"Cowards! How can a couple of heads sink the morale of an army? Are they cattle or men?",
        [
          (call_script, "script_change_player_party_morale", -10),

          (store_random_in_range, ":p_leave", 18, 22),
          (assign, ":num_troops", ":p_leave"),
          (try_for_range, ":unused", 0, ":num_troops"),
            (call_script, "script_cf_party_remove_random_regular_troop", "p_main_party"),
          (try_end),

          (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),
          (assign, "$g_infiltracion_interna", 0),
          (jump_to_menu,"mnu_siege_plan"),
      ]),
      ("infiltracion_morali",[],"Avenge the insult to us!",
        [
          (call_script, "script_change_player_party_morale", -5),
          (call_script, "script_change_troop_renown", "trp_player", -10),

          (store_random_in_range, ":p_leave", 18, 22),
          (assign, ":num_troops", ":p_leave"),
          (try_for_range, ":unused", 0, ":num_troops"),
            (call_script, "script_cf_party_remove_random_regular_troop", "p_main_party"),
          (try_end),

          (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),
          (assign, "$g_infiltracion_interna", 3),
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),
  ###infiltracion interna acaba


  ###recogida y siembra de cosechas
  ("campos_cercanos1",0,
    "Commander, crops and farms were burned, but since this is not the harvest season, it wasn't possible to get food.",
    "none", [ (set_background_mesh, "mesh_pic_messenger"),
    ],
    [
      ("back_behind_d",[],"Well done, do not worry.",
        [
          (assign, "$g_campos_cercanos", 3),
          (call_script, "script_change_player_honor", -5),
          (call_script, "script_change_center_prosperity", "$g_encountered_party", -3),
          (call_script, "script_change_player_relation_with_center", "$current_town", -5),
          (party_get_slot, ":food_stores", "$g_encountered_party", slot_party_food_store),
          (call_script, "script_center_get_food_store_limit", "$g_encountered_party"),
          (val_min, ":food_stores", reg0),
          (party_set_slot, "$g_encountered_party", slot_party_food_store, ":food_stores"),
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),
  ("campos_cercanos2",0,
    "Commander, crops and farms were burned, and as it is the harvest season, we found an abundance of food.",
    "none", [ (set_background_mesh, "mesh_pic_messenger"),
    ],
    [
      ("back_behind_c",[],"Well done, food is always welcome.",
        [
          (assign, "$g_campos_cercanos", 3),
          (call_script, "script_change_player_honor", -5),
          (call_script, "script_change_center_prosperity", "$g_encountered_party", -20),
          (call_script, "script_change_player_relation_with_center", "$current_town", -10),
          (troop_add_item, "trp_player","itm_grain",0),
          (troop_add_item, "trp_player","itm_grain",0),
          (troop_add_item, "trp_player","itm_grain",0),
          (troop_add_item, "trp_player","itm_grain",0),
          (troop_add_item, "trp_player","itm_grain",0),
          (troop_add_item, "trp_player","itm_cattle_meat",0),
          (party_get_slot, ":food_stores", "$g_encountered_party", slot_party_food_store),
          (call_script, "script_center_get_food_store_limit", "$g_encountered_party"),
          (val_min, ":food_stores", reg0),
          (party_set_slot, "$g_encountered_party", slot_party_food_store, ":food_stores"),
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),
  ("campos_cercanos2_c",0,
    "Commander, crops and farms were burned. The grain is still green, but edible. We found an abundance of food.",
    "none", [ (set_background_mesh, "mesh_pic_messenger"),
    ],
    [
      ("back_behind_cc",[],"Well done, food always is welcome.",
        [
          (assign, "$g_campos_cercanos", 3),
          (call_script, "script_change_player_honor", -5),
          (call_script, "script_change_center_prosperity", "$g_encountered_party", -10),
          (call_script, "script_change_player_relation_with_center", "$current_town", -10),
          (troop_add_item, "trp_player","itm_grain",0),
          (troop_add_item, "trp_player","itm_grain",0),
          (troop_add_item, "trp_player","itm_grain",0),
          (party_get_slot, ":food_stores", "$g_encountered_party", slot_party_food_store),
          (call_script, "script_center_get_food_store_limit", "$g_encountered_party"),
          (val_min, ":food_stores", reg0),
          (party_set_slot, "$g_encountered_party", slot_party_food_store, ":food_stores"),
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),
  ("campos_cercanos3",0,
    "Commander, we burned the fields, but as it is after the harvest time, there was no grain left. However, the farmers have left some of their cattle behind.",
    "none", [ (set_background_mesh, "mesh_pic_messenger"),
    ],
    [
      ("back_behind_bc",[],"Food is always welcome.",
        [
          (assign, "$g_campos_cercanos", 3),
          (call_script, "script_change_player_honor", -5),
          (call_script, "script_change_center_prosperity", "$g_encountered_party", -10),
          (call_script, "script_change_player_relation_with_center", "$current_town", -10),
          (troop_add_item, "trp_player","itm_pork",0),
          (troop_add_item, "trp_player","itm_pork",0),
          (troop_add_item, "trp_player","itm_pork",0),
          (troop_add_item, "trp_player","itm_cattle_meat",0),
          (troop_add_item, "trp_player","itm_chicken",0),
          (troop_add_item, "trp_player","itm_cattle_meat",0),
          (party_get_slot, ":food_stores", "$g_encountered_party", slot_party_food_store),
          (call_script, "script_center_get_food_store_limit", "$g_encountered_party"),
          (val_min, ":food_stores", reg0),
          (party_set_slot, "$g_encountered_party", slot_party_food_store, ":food_stores"),
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),

  ("campos_cercanos4",0,
    "We have encountered problems. The fields were burned, but the farmers struck back with support from some members of the garrison.^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none", [
      (set_background_mesh, "mesh_pic_messenger"),
      (call_script, "script_simulate_battle_with_parties", 23, "$g_enemy_party", 68, 0, 0),
    ],
    [
      ("back_behind_ac",[],"Terrible news!",
        [
          (assign, "$g_campos_cercanos", 3),
          (call_script, "script_change_player_party_morale", -5),
          (call_script, "script_change_player_honor", -5),
          (call_script, "script_change_player_relation_with_center", "$current_town", -5),
          (jump_to_menu,"mnu_siege_plan"),
      ]),
    ],
  ),

  ("poner_escaleras",0, #no mantles
    "Your vanguard advances, bringing ladders, shovels and other useful siege equipment... A display of men armed with ranged weapons goes forth, attracting the enemy's missiles. Your heart races in its bony cage. Somehow, all battles seem to be the first.^" +
    "The thrill, terror and sweat are there, always. Your men make a shield formation to protect themselves...^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none", [ (set_background_mesh, "mesh_pic_siege_sighted"),
      (call_script, "script_simulate_battle_with_parties", 25, "$g_enemy_party", 90, 0, 0),
      #
    ],
    [
      ("back_behind_esc1",[],"Your men have met the enemy. It is your turn...",
        [
          (assign, "$g_listos_para_asalto", 1),
          (jump_to_menu,"mnu_siege_assault"),
      ]),
    ],
  ),

  ("poner_escaleras_mantlets",0, #mantles
    "Your vanguard advances, bringing ladders, mantlets, shovels and other useful siege equipment... A display of men armed with ranged weapons goes forth, guarded by mantlets, attracting the enemy's missiles. Your heart races in its bony cage. Somehow, all battles seem to be the first.^" +
    "The thrill, terror and sweat are there, always. Your men make a shield formation to protect themselves, and using the mantlets saves still more lives. " +
    "^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none", [ (set_background_mesh, "mesh_pic_siege_sighted"),
      (call_script, "script_simulate_battle_with_parties", 41, "$g_enemy_party", 90, 0, 0),
    ],
    [
      ("back_behind_esc2",[],"Your men have met the enemy. It is your time...",
        [
          (assign, "$g_listos_para_asalto", 1),
          (jump_to_menu,"mnu_siege_assault"),
      ]),
    ],
  ),

  ####
  #####scout reporta datos de ciudad
("informacion_ciudad",0,#{s10} belongs to {s21}
  "A scout appears before you: '{s11}^{s12}{s1}{s5}{s17}'",
  "none",
  [
    (str_clear, s10),
    (str_clear, s21),
    (str_clear, s11),
    (str_clear, s12),
    (str_clear, s3),
    (str_clear, s16),
    (set_background_mesh, "mesh_pic_messenger"),
    #string description
    ##   (party_get_slot,":town_lord","$current_town",slot_town_lord),
    ##   (str_store_troop_name,s21,":town_lord"),
    ##        #
    ##        (str_store_party_name, s10, "$current_town"),

    (call_script, "script_game_get_center_note", "$current_town", 0),
    (str_store_string, s11, "@{!}{s0}"),
    ##    (try_begin),
    ##      (this_or_next|is_between, "$current_town", towns_begin, towns_end),
    ##      (is_between, "$current_town", castles_begin, castles_end),
    ##    (try_end),

    (party_get_slot, ":center_food_store", "$current_town", slot_party_food_store),
    (call_script, "script_center_get_food_consumption", "$current_town"),
    (assign, ":food_consumption", reg0),
    (store_div, reg6, ":center_food_store", ":food_consumption"),
    (store_party_size_wo_prisoners,reg5, "$current_town"),
    #(store_party_size, reg5, "$current_town"),
    (str_store_string, s12, "@It should have food stocks for {reg6} days.^The garrison has {reg5} men."),

    (party_get_num_attached_parties, ":num_attached_parties", "$current_town"),
    (try_begin),
      (eq, ":num_attached_parties", 0),
      (str_clear, s1),
      (str_clear, s5),

    (else_try),
        (str_store_string, s1, "@^^The following armies are currently inside:"),
        (try_for_range, ":attached_party_rank", 0, ":num_attached_parties"),
            (party_get_attached_party_with_rank, ":attached_party", "$current_town", ":attached_party_rank"),
            (str_store_party_name, s3, ":attached_party"),
            (store_party_size, reg1, ":attached_party"),
            (str_store_string, s5, "@^{s3} with {reg1} troops."),
        (try_end),
    (try_end),

      ##     (party_get_slot, ":prosperity", "$current_town", slot_town_prosperity),
      ##     (val_div, ":prosperity", 20),
      ##    (try_begin),
      ##     (eq, ":prosperity", 0),
      ##       (str_store_string, s16, "@{s10} is a very poor place that"),
      ##     (else_try),
      ##       (eq, ":prosperity", 1),
      ##       (str_store_string, s16, "@{s10} is poor place that"),
      ##     (else_try),
      ##       (eq, ":prosperity", 2),
      ##       (str_store_string, s16, "@{s10} is good place that"),
      ##     (else_try),
      ##       (eq, ":prosperity", 3),
      ##       (str_store_string, s16, "@{s10} is rich place that"),
      ##     (else_try),
      ##       (str_store_string, s16, "@{s10} is very rich place that"),
      ##     (try_end),
      ##
      ##    (call_script, "script_update_center_recon_notes", "$current_town"),

      #informacion asedio
    (str_store_string,s17,"str_empty_string"),
    (try_begin),
        (eq, "$current_town", "p_town_27"),
        (str_store_string,s17,"@^^Next to the Tigris lies the beautiful city of Ktesiphon. The mighty residence of Parthian kings."),
    (else_try),
        (eq, "$current_town", "p_town_6"),
        (str_store_string,s17,"@^^Rome! The city which shall conquer the known world. Can you conquer it?"),
    (else_try),
        (eq, "$current_town", "p_town_28"),
        (str_store_string,s17,"@^^Long time ago Carthage was as mighty as Rome and the center of mediterranean trade. But the Romans do not like rivals. They burned it to the ground and built a new Roman Carthage next to it."),
    (else_try),
        (eq, "$current_town", "p_town_20"),
        (str_store_string,s17,"@^^Alexandria was found by Alexander the Great and became the pearl of Aegypt."),
    (else_try),
        (eq, "$current_town", "p_town_19"),
        (str_store_string,s17,"@^^Hierosolyma! It is the center of the jewish faith. You feel that great trouble lies here."),
    (else_try),
        (str_store_string,s17,"@^^This place is just waiting for you to conquer it."),
    (try_end),
      #
  ],[
    ("regreso_luchain",[],"Thank you. Your information is important!",[
      (jump_to_menu,"mnu_siege_assault"),
    ]),
]),

#################menus extras acaba chief Siege Warfare


   (
    "castle_besiege_inner_battle",mnf_scale_picture,
    "{s1}",
    "none",
    [
        (set_background_mesh, "mesh_pic_sally_out"),
        (assign, ":result", "$g_battle_result"),#will be reset at script_encounter_calculate_fit
        (call_script, "script_encounter_calculate_fit"),

# TODO: To use for the future:
        (try_begin),
          (this_or_next|neq, ":result", 1),
          (this_or_next|le, "$g_friend_fit_for_battle", 0),
          (le, "$g_enemy_fit_for_battle", 0),
          (jump_to_menu, "$g_siege_final_menu"),
        (else_try),
          (call_script, "script_encounter_calculate_fit"),
          (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
          (try_begin),
            (eq, "$g_siege_battle_state", 0),
            (eq, ":result", 1),
            (assign, "$g_battle_result", 0),
            (jump_to_menu, "$g_siege_final_menu"),
          (else_try),
            (eq, "$g_siege_battle_state", 1),
            (eq, ":result", 1),
            (try_begin), #SB : siege strings
              (eq, "$g_ally_party", "$g_encountered_party"),
              (str_store_string, s1, "@You've been driven away from the walls.\
 Now the attackers are pouring into the streets. If you can defeat them, you can perhaps turn the tide and save the day."),
            (else_try),
              (str_store_string, s1, "@You've breached the town walls,\
 but the stubborn defenders continue to resist you in the streets!\
 You'll have to deal with them before you can attack the keep at the heart of the town."),
            (try_end),
          (else_try),
            (eq, "$g_siege_battle_state", 2),
            (eq, ":result", 1),
            (try_begin), #SB : siege strings
              (eq, "$g_ally_party", "$g_encountered_party"),
              (str_store_string, s1, "@As a last defensive effort, you retreat to the main hall of the keep.\
 You and your remaining soldiers will put up a desperate fight here. If you are defeated, there's no other place to fall back to."),
            (else_try),
              (str_store_string, s1, "@The town centre is yours,\
 but the remaining defenders have retreated to the castle.\
 It must fall before you can complete your victory."),
            (try_end),
          (else_try),
            (jump_to_menu, "$g_siege_final_menu"),
          (try_end),
        (else_try),
          (try_begin),
            (eq, "$g_siege_battle_state", 0),
            (eq, ":result", 1),
            (assign, "$g_battle_result", 0),
            (jump_to_menu, "$g_siege_final_menu"),
          (else_try),
            (eq, "$g_siege_battle_state", 1),
            (eq, ":result", 1),
            (str_store_string, s1, "@The remaining defenders have retreated to the castle as a last defense. You must go in and crush any remaining resistance."),
          (else_try),
            (jump_to_menu, "$g_siege_final_menu"),
          (try_end),
        (try_end),
    ],
    [
      ("continue",[],
       "Continue...",
       [
           (try_begin),
             (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
             (try_begin),
               (eq, "$g_siege_battle_state", 1),
               (party_get_slot, ":battle_scene", "$g_encountered_party", slot_town_center),
               (set_jump_mission, "mt_besiege_inner_battle_town_center"),
             (else_try),
               (party_get_slot, ":battle_scene", "$g_encountered_party", slot_town_castle),
               (set_jump_mission, "mt_besiege_inner_battle_castle"),
             (try_end),
           (else_try),
             (party_get_slot, ":battle_scene", "$g_encountered_party", slot_town_castle),
             (set_jump_mission, "mt_besiege_inner_battle_castle"),
           (try_end),
##           (call_script, "script_calculate_battle_advantage"),
##           (set_battle_advantage, reg0),
           (set_party_battle_mode),
           (jump_to_scene, ":battle_scene"),
           (val_add, "$g_siege_battle_state", 1),
           (assign, "$g_next_menu", "mnu_castle_besiege_inner_battle"),
           (jump_to_menu, "mnu_battle_debrief"),
           (change_screen_mission),
       ]),
    ]
  ),


 ####siege warfare
  (
    "build_mantles2",0,
    "The mantlets help protect your men when they have to use assault equipment. They save many lives. " +
    "As the party member with the highest Engineer skill, ({reg2}), {reg3?you estimate:{s3} estimates} that it will take " +
    "{reg4} hours to build mantlets.",
    "none",
    [(call_script, "script_get_max_skill_of_player_party", "skl_engineer"),
      (assign, ":max_skill", reg0),
      (assign, ":max_skill_owner", reg1),
      (assign, reg2, ":max_skill"),

      (store_sub, reg4, 16, ":max_skill"),
      (val_mul, reg4, 2),#between 12 and 32 hours

      (try_begin),
        (eq, ":max_skill_owner", "trp_player"),
        (assign, reg3, 1),
      (else_try),
        (assign, reg3, 0),
        (str_store_troop_name, s3, ":max_skill_owner"),
      (try_end),
      (call_script, "script_set_town_picture"),
    ],
    [
      ("build_mantles",[],
        "Do it.", [
          #(assign, "$g_siege_method", 1),
          (assign, "$g_mantlets_1", 1),
          (store_current_hours, ":cur_hours"),
          (party_set_slot, "$g_encountered_party", slot_center_mantlets_placed, ":cur_hours"),
          (jump_to_menu,"mnu_siege_assault"),
      ]),
      ("go_back",[],
        "Go back.", [(jump_to_menu,"mnu_siege_assault")]),
    ],
  ),

  (
    "construct_ladders",0,
    "As the party member with the highest Engineer skill ({reg2}), {reg3?you estimate:{s3} estimates} that it will take\
 {reg4} hours to build enough scaling ladders for the assault.",
    "none",
    [(call_script, "script_get_max_skill_of_player_party", "skl_engineer"),
     (assign, ":max_skill", reg0),
     (assign, ":max_skill_owner", reg1),
     (assign, reg2, ":max_skill"),

     (store_sub, reg4, 14, ":max_skill"),
     (val_mul, reg4, 2),
     (val_div, reg4, 3),

     (try_begin),
       (eq, ":max_skill_owner", "trp_player"),
       (assign, reg3, 1),
     (else_try),
       (assign, reg3, 0),
       (str_store_troop_name, s3, ":max_skill_owner"),
     (try_end),

    #SB : add tableau
    (set_fixed_point_multiplier, 100),
    (position_set_x, pos0, 70),
    (position_set_y, pos0, 5),
    (position_set_z, pos0, 75),
    (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", ":max_skill_owner", pos0),
    ],
    [
      ("build_ladders_cont",[],
       "Do it.", [
           (assign, "$g_siege_method", 1),
           (store_current_hours, ":cur_hours"),
           (call_script, "script_get_max_skill_of_player_party", "skl_engineer"),
           (store_sub, ":hours_takes", 14, reg0),
           (val_mul, ":hours_takes", 2),
           (val_div, ":hours_takes", 3),
           (store_add, "$g_siege_method_finish_hours",":cur_hours", ":hours_takes"),
           (assign,"$auto_besiege_town","$current_town"),
           (rest_for_hours_interactive, 96, 5, 1), #rest while attackable. A trigger will divert control when attack is ready.
           (change_screen_return),
           ]),
      ("go_back",[],
       "Go back.", [(jump_to_menu,"mnu_castle_besiege")]),
        ],
  ),


  (
    "construct_siege_tower",0,
    "As the party member with the highest Engineer skill ({reg2}), {reg3?you estimate:{s3} estimates} that building a siege tower will take\
 {reg4} hours.",
    "none",
    [(call_script, "script_get_max_skill_of_player_party", "skl_engineer"),
     (assign, ":max_skill", reg0),
     (assign, ":max_skill_owner", reg1),
     (assign, reg2, ":max_skill"),

     (store_sub, reg4, 15, ":max_skill"),
     (val_mul, reg4, 6),

     (try_begin),
       (eq, ":max_skill_owner", "trp_player"),
       (assign, reg3, 1),
     (else_try),
       (assign, reg3, 0),
       (str_store_troop_name, s3, ":max_skill_owner"),
     (try_end),

    #SB : add tableau
    (set_fixed_point_multiplier, 100),
    (position_set_x, pos0, 70),
    (position_set_y, pos0, 5),
    (position_set_z, pos0, 75),
    (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", ":max_skill_owner", pos0),
    ],
    [
      ("build_siege_tower_cont",[],
       "Start building.", [
           (assign, "$g_siege_method", 2),
           (store_current_hours, ":cur_hours"),
           (call_script, "script_get_max_skill_of_player_party", "skl_engineer"),
           (store_sub, ":hours_takes", 15, reg0),
           (val_mul, ":hours_takes", 6),
           (store_add, "$g_siege_method_finish_hours",":cur_hours", ":hours_takes"),
           (assign,"$auto_besiege_town","$current_town"),
           (rest_for_hours_interactive, 240, 5, 1), #rest while attackable. A trigger will divert control when attack is ready.
           (change_screen_return),
           ]),
      ("go_back",[],
       "Go back.", [(jump_to_menu,"mnu_castle_besiege")]),
        ],
  ),

   (
    "castle_attack_walls_simulate",mnf_scale_picture|mnf_disable_all_keys,
    "{s4}^^Your casualties:{s8}^^Enemy casualties were: {s9}",
    "none",
    [
        (try_begin),
          (set_background_mesh, "mesh_pic_siege_attack"),
        (try_end),
        ###diplomacy start+
		##If terrain advantage is on, use siege settings
        #(assign, ":save_dplmc_terrain_advantage", "$g_dplmc_terrain_advantage"),
		##(assign, "$g_dplmc_terrain_advantage", ":save_dplmc_terrain_advantage"),
		#(try_begin),
		#   (eq, "$g_dplmc_terrain_advantage", TERRAIN_ADVANTAGE_ENABLE),
		#   (assign, "$g_dplmc_terrain_advantage", TERRAIN_ADVANTAGE_FORCE_SIEGE),
		#(try_end),
		###diplomacy end+
        (call_script, "script_party_calculate_strength", "p_main_party", 1), #skip player
        (assign, ":player_party_strength", reg0),
        (val_div, ":player_party_strength", 10),

        (call_script, "script_party_calculate_strength", "$g_encountered_party", 0),
        (assign, ":enemy_party_strength", reg0),
        (val_div, ":enemy_party_strength", 4),

        (inflict_casualties_to_party_group, "p_main_party", ":enemy_party_strength", "p_temp_casualties"),
        (call_script, "script_print_casualties_to_s0", "p_temp_casualties", 0),
        (str_store_string_reg, s8, s0),

        (inflict_casualties_to_party_group, "$g_encountered_party", ":player_party_strength", "p_temp_casualties"),
        (call_script, "script_print_casualties_to_s0", "p_temp_casualties", 0),
        (str_store_string_reg, s9, s0),

        (assign, "$no_soldiers_left", 0),
        (try_begin),
          (call_script, "script_party_count_members_with_full_health","p_main_party"),
          (le, reg0, 0), #(TODO : compare with num_routed_us)
          (assign, "$no_soldiers_left", 1),
          (str_store_string, s4, "str_attack_walls_failure"),
        (else_try),
          (call_script, "script_party_count_members_with_full_health","$g_encountered_party"),
          (le, reg0, 0), #(TODO : compare with num_routed_enemies)
          (assign, "$no_soldiers_left", 1),
          (assign, "$g_battle_result", 1),
          (str_store_string, s4, "str_attack_walls_success"),
        (else_try),
          (str_store_string, s4, "str_attack_walls_continue"),
        (try_end),
		##diplomacy start+
		#Revert terrain advantage settings
		#(assign, "$g_dplmc_terrain_advantage", ":save_dplmc_terrain_advantage"),
		##diplomacy end+
     ],
    [
##      ("lead_next_wave",[(eq, "$no_soldiers_left", 0)],"Lead the next wave of attack personally.", [
##           (party_get_slot, ":battle_scene", "$g_encountered_party", slot_castle_exterior),
##           (set_party_battle_mode),
##           (set_jump_mission,"mt_castle_attack_walls"),
##           (jump_to_scene,":battle_scene"),
##           (jump_to_menu,"mnu_castle_outside"),
##           (change_screen_mission),
##       ]),
##      ("continue_attacking",[(eq, "$no_soldiers_left", 0)],"Order your soldiers to keep attacking...", [
##                                    (jump_to_menu,"mnu_castle_attack_walls_3"),
##                                    ]),
##      ("call_soldiers_back",[(eq, "$no_soldiers_left", 0)],"Call your soldiers back.",[(jump_to_menu,"mnu_castle_outside")]),
      ("continue",[],"Continue...",[(jump_to_menu,"mnu_castle_besiege")]),
    ]
  ),

   (
    "castle_attack_walls_with_allies_simulate",mnf_scale_picture|mnf_disable_all_keys,
    "{s4}^^Your casualties: {s8}^^Allies' casualties: {s9}^^Enemy casualties: {s10}",
    "none",
    [
        (try_begin),
          (set_background_mesh, "mesh_pic_siege_attack"),
        (try_end),
        ###diplomacy start+
		##If terrain advantage is on, use siege settings
        #(assign, ":save_dplmc_terrain_advantage", "$g_dplmc_terrain_advantage"),
		#(try_begin),
		#   (eq, "$g_dplmc_terrain_advantage", TERRAIN_ADVANTAGE_ENABLE),
		#   (assign, "$g_dplmc_terrain_advantage", TERRAIN_ADVANTAGE_FORCE_SIEGE),
		#(try_end),
		###diplomacy end+
        (call_script, "script_party_calculate_strength", "p_main_party", 1), #skip player
        (assign, ":player_party_strength", reg0),
        (val_div, ":player_party_strength", 10),
        (call_script, "script_party_calculate_strength", "p_collective_friends", 0),
        (assign, ":friend_party_strength", reg0),
        (val_div, ":friend_party_strength", 10),

        (val_max, ":friend_party_strength", 1),

        (call_script, "script_party_calculate_strength", "p_collective_enemy", 0),
        (assign, ":enemy_party_strength", reg0),
        (val_div, ":enemy_party_strength", 4),

##        (assign, reg0, ":player_party_strength"),
##        (assign, reg1, ":friend_party_strength"),
##        (assign, reg2, ":enemy_party_strength"),
##        (assign, reg3, "$g_enemy_party"),
##        (assign, reg4, "$g_ally_party"),
##        (display_message, "@{!}player_str={reg0} friend_str={reg1} enemy_str={reg2}"),
##        (display_message, "@{!}enemy_party={reg3} ally_party={reg4}"),

        (try_begin),
          (eq, ":friend_party_strength", 0),
          (store_div, ":enemy_party_strength_for_p", ":enemy_party_strength", 2),
        (else_try),
          (assign, ":enemy_party_strength_for_p", ":enemy_party_strength"),
          (val_mul, ":enemy_party_strength_for_p", ":player_party_strength"),
          (val_div, ":enemy_party_strength_for_p", ":friend_party_strength"),
        (try_end),

        (val_sub, ":enemy_party_strength", ":enemy_party_strength_for_p"),
        (inflict_casualties_to_party_group, "p_main_party", ":enemy_party_strength_for_p", "p_temp_casualties"),
        (call_script, "script_print_casualties_to_s0", "p_temp_casualties", 0),
        (str_store_string_reg, s8, s0),

        (inflict_casualties_to_party_group, "$g_enemy_party", ":friend_party_strength", "p_temp_casualties"),
        (call_script, "script_print_casualties_to_s0", "p_temp_casualties", 0),
        (str_store_string_reg, s10, s0),

        (call_script, "script_collect_friendly_parties"),

        (inflict_casualties_to_party_group, "$g_ally_party", ":enemy_party_strength", "p_temp_casualties"),
        (call_script, "script_print_casualties_to_s0", "p_temp_casualties", 0),
        (str_store_string_reg, s9, s0),

        (party_collect_attachments_to_party, "$g_enemy_party", "p_collective_enemy"),

        (assign, "$no_soldiers_left", 0),
        (try_begin),
          (call_script, "script_party_count_members_with_full_health", "p_main_party"),
          (le, reg0, 0), #(TODO : compare with num_routed_us)
          (assign, "$no_soldiers_left", 1),
          (str_store_string, s4, "str_attack_walls_failure"),
        (else_try),
          (call_script, "script_party_count_members_with_full_health", "p_collective_enemy"),
          (le, reg0, 0), #(TODO : compare with num_routed_enemies)
          (assign, "$no_soldiers_left", 1),
          (assign, "$g_battle_result", 1),
          (str_store_string, s4, "str_attack_walls_success"),
        (else_try),
          (str_store_string, s4, "str_attack_walls_continue"),
        (try_end),
		###diplomacy start+
		##Revert terrain advantage settings
		#(assign, "$g_dplmc_terrain_advantage", ":save_dplmc_terrain_advantage"),
		###diplomacy end+
     ],
    [
      ("continue",[],"Continue...",[(jump_to_menu,"mnu_besiegers_camp_with_allies")]),
    ]
  ),

  (
    "castle_taken_by_friends",0,
    "Nothing to see here.",
    "none",
    [
        (party_clear, "$g_encountered_party"),
        (party_stack_get_troop_id, ":leader", "$g_encountered_party_2", 0),
        (party_set_slot, "$g_encountered_party", slot_center_last_taken_by_troop, ":leader"),
        (store_troop_faction, ":faction_no", ":leader"),
        #Reduce prosperity of the center by 5
        (call_script, "script_change_center_prosperity", "$g_encountered_party", -5),
		(try_begin),
			(assign, ":damage", 20),
			(is_between, "$g_encountered_party", towns_begin, towns_end),
			(assign, ":damage", 40),
		(try_end),
		(try_begin),
			(neq, ":faction_no", "$g_encountered_party_faction"),
			(call_script, "script_faction_inflict_war_damage_on_faction", ":faction_no", "$g_encountered_party_faction", ":damage"),
		(try_end),

        (call_script, "script_give_center_to_faction", "$g_encountered_party", ":faction_no"),
        (call_script, "script_add_log_entry", logent_player_participated_in_siege, "trp_player",  "$g_encountered_party", 0, "$g_encountered_party_faction"),
##        (call_script, "script_change_troop_renown", "trp_player", 1),
        (change_screen_return),
    ],
    [
    ],
  ),

  (
    "castle_taken",mnf_disable_all_keys,
  ##diplomacy begin
    "{s3} has fallen to your troops, and you now have full control of the {reg2?town:fortress}. You can plunder spoils of war worth {reg3} siliquae.\
{reg1? You may station troops here to defend it against enemies who may try to recapture it. Also, you should select now whether you will hold the {reg2?town:fortress} yourself or give it to a faithful vassal...:}",# Only visible when castle is taken without being a vassal of a kingdom.
  ##diplomacy end
    "none",
    [
        (party_clear, "$g_encountered_party"),

        #siege warfare chief
        (assign, "$g_empieza_asedio", 0),
        (party_set_slot,"$g_encountered_party",slot_center_blockaded,0),
        (party_set_slot,"$g_encountered_party",slot_center_blockaded_time,0),
        (party_set_slot, "$g_encountered_party", slot_center_mantlets_placed, 0),
        (party_set_slot,"$g_encountered_party",slot_center_ladder_time,0),
        (party_set_slot,"$g_encountered_party",slot_center_latrines,0),
        (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),

        (assign, "$g_siege_saneamiento", 0),
        (assign, "$g_traicion_interna", 0),
        (assign, "$g_infiltracion_interna", 0),
        (assign, "$g_campos_cercanos", 0),
        (assign, "$g_listos_para_asalto", 0),
        (assign, "$g_mantlets_1", 0),
        (assign, "$g_cabezas_dentro", 0), #event
        (assign, "$g_siege_method", 0),
        (assign, "$g_siege_sallied_out_once", 0),
        (assign, "$g_days_spent_starving", 0), #siege warfare, important, we use this in dialogs
        (assign, "$g_next_sally_at", 0), #sally more common siege warfare chief
        #siege warfare acaba

        #SB : clear talk_context
        (try_begin),
          (eq, "$talk_context", tc_give_center_to_fief),
          (assign, "$talk_context", tc_town_talk),
        (try_end),
        ##diplomacy start+ Handle player is co-ruler of kingdom
        (assign, ":is_coruler", 0),
        (try_begin),
            (is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
            (call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$players_kingdom"),
            (ge, reg0, DPLMC_FACTION_STANDING_LEADER_SPOUSE),
            (assign, ":is_coruler", 1),
        (try_end),
        ##diplomacy end+
        (try_begin),
          ##diplomacy start+
          (this_or_next|eq, ":is_coruler", 1),
          ##diplomacy end+
          (eq, "$players_kingdom", "fac_player_supporters_faction"),
          (party_get_slot, ":new_owner", "$g_encountered_party", slot_town_lord),
          (neq, ":new_owner", "trp_player"),

          (try_for_range, ":unused", 0, 4),
            (call_script, "script_cf_reinforce_party", "$g_encountered_party"),
          (try_end),
        (try_end),

        (call_script, "script_lift_siege", "$g_encountered_party", 0),
        (assign, "$g_player_besiege_town", -1),

        (party_set_slot, "$g_encountered_party", slot_center_last_taken_by_troop, "trp_player"),
        ##diplomacy start+ Set last taken time
        (store_current_hours, ":cur_hours"),
        (party_set_slot, "$g_encountered_party", dplmc_slot_center_last_transfer_time, ":cur_hours"),
        ##diplomacy end+
        ##diplomacy begin
        #Reduce prosperity of the center by 5
        #(call_script, "script_change_center_prosperity", "$g_encountered_party", -5),
         (try_begin),
             (is_between, "$g_encountered_party", towns_begin, towns_end),
             (store_random_in_range, ":random", 4000, 10000),
         (else_try),
           (store_random_in_range, ":random", 1000, 8000),
         (try_end),
         (val_div, ":random", 100),
         (val_mul, ":random", 100),
         (assign, "$diplomacy_var", ":random"),
         # (assign, reg3, "$diplomacy_var"), #SB : move variable to last place
        ##diplomacy end

        (call_script, "script_change_troop_renown", "trp_player", 5),

        (assign, ":damage", 20),
        (try_begin),
            (is_between, "$g_encountered_party", towns_begin, towns_end),
            (assign, ":damage", 40),
        (try_end),
        (call_script, "script_faction_inflict_war_damage_on_faction", "$players_kingdom", "$g_encountered_party_faction", ":damage"),

        #removed, is it duplicate (useless)? See 20 lines above.
        #(call_script, "script_add_log_entry", logent_castle_captured_by_player, "trp_player", "$g_encountered_party", -1, "$g_encountered_party_faction"),

        (try_begin),
          (is_between, "$players_kingdom", kingdoms_begin, kingdoms_end),
          (neq, "$players_kingdom", "fac_player_supporters_faction"),
          (call_script, "script_give_center_to_faction", "$g_encountered_party", "$players_kingdom"),
          (call_script, "script_order_best_besieger_party_to_guard_center", "$g_encountered_party", "$players_kingdom"),
          (jump_to_menu, "mnu_castle_taken_2"),
        (else_try),
          (call_script, "script_give_center_to_faction", "$g_encountered_party", "fac_player_supporters_faction"),
          (call_script, "script_order_best_besieger_party_to_guard_center", "$g_encountered_party", "fac_player_supporters_faction"),
          (str_store_party_name, s3, "$g_encountered_party"),
          (assign, reg1, 0),
          (try_begin),
            (faction_slot_eq, "fac_player_supporters_faction", slot_faction_leader, "trp_player"),
            (assign, reg1, 1),
          (try_end),
        #(party_set_slot, "$g_encountered_party", slot_town_lord, stl_unassigned),
        (try_end),
        (assign, reg2, 0),
        (try_begin),
          (is_between, "$g_encountered_party", towns_begin, towns_end),
          (assign, reg2, 1),
        (try_end),
        (assign, reg3, "$diplomacy_var"), #SB : registers last
    ],
    [
##diplomacy begin
      ("dplmc_spoils_yourself",[],"Plunder it and keep the spoils all for yourself.",
       [
         #SB : spawn some looters
         #(call_script, "script_spawn_looters", "$g_encountered_party", 4),
         #SB : apply suggested relationship penalty
         (options_get_campaign_ai, ":penalty"),
         (val_sub, ":penalty", 6),
         (call_script, "script_change_player_relation_with_center", "$g_encountered_party", ":penalty"),
         (call_script, "script_change_center_prosperity", "$g_encountered_party", -8),
		 ##diplomacy start+
		 (assign, ":is_kingdom_leader", 0),
		 (try_begin),
			(is_between, "$players_kingdom", kingdoms_begin, kingdoms_end),
			(faction_get_slot, ":faction_leader", "$players_kingdom", slot_faction_leader),
			(ge, ":faction_leader", 0),
			(this_or_next|eq, ":faction_leader", "trp_player"),
			(this_or_next|troop_slot_eq, ":faction_leader", slot_troop_spouse, "trp_player"),
				(troop_slot_eq, "trp_player", slot_troop_spouse, ":faction_leader"),
			(assign, ":is_kingdom_leader", 1),
		 (else_try),
			(eq, "$players_kingdom", "fac_player_supporters_faction"),
			(assign, ":is_kingdom_leader", 1),
		 (try_end),
		 #Add support for promoted ladies
         #(try_for_range, ":troop_no", active_npcs_begin, active_npcs_end),
         (try_for_range, ":troop_no", heroes_begin, heroes_end),
		 ##diplomacy end+
           (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
           (store_troop_faction, ":troop_faction_no", ":troop_no"),
		   ##diplomacy start+
		   (this_or_next|eq, "$players_kingdom", ":troop_faction_no"),
			  (eq, "fac_player_supporters_faction", ":troop_faction_no"),
		   (this_or_next|eq, ":is_kingdom_leader", 1),
		   ##diplomacy end+
           (eq, "fac_player_supporters_faction", ":troop_faction_no"),
           (call_script, "script_change_player_relation_with_troop", ":troop_no", -2),
         (try_end),
         (try_begin),
           (gt, "$g_player_chamberlain", 0),
           (call_script, "script_dplmc_pay_into_treasury", "$diplomacy_var"),
         (else_try),
           (troop_add_gold, "trp_player", "$diplomacy_var"),
         (try_end),
         (call_script, "script_change_player_honor", -3),
         (assign, "$auto_enter_town", "$g_encountered_party"),
         (change_screen_return),
        ]),
      ("dplmc_spoils_accompanying_vassals",
      [
		##nested diplomacy start+
		#Add support for being the ruler or co-ruler of an original kingdom
          (is_between, "$players_kingdom", kingdoms_begin, kingdoms_end),
		  (faction_get_slot, ":faction_leader", "$players_kingdom", slot_faction_leader),
		  (this_or_next|eq, ":faction_leader", "trp_player"),
		  (this_or_next|troop_slot_eq, ":faction_leader", slot_troop_spouse, "trp_player"),
  		##nested diplomacy end+
          (eq, "$players_kingdom", "fac_player_supporters_faction"),
          (assign, ":vassal_count", 0),
		##nested diplomacy start+ add support for kingdom ladies, and the other faction options
        # (try_for_range, ":troop_no", active_npcs_begin, active_npcs_end),
		 (try_for_range, ":troop_no", heroes_begin, heroes_end),
  	    ##nested diplmacy end+
           (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
           (store_troop_faction, ":troop_faction_no", ":troop_no"),
		   ##nested diplomacy start+
		   (this_or_next|eq, "$players_kingdom", ":troop_faction_no"),
		   ##nested diplomacy end+
           (eq, "fac_player_supporters_faction", ":troop_faction_no"),
           (troop_get_slot, ":party_no", ":troop_no", slot_troop_leaded_party),
           (ge, ":party_no", 1),
           (store_distance_to_party_from_party, ":distance","p_main_party", ":party_no"),
           (le, ":distance", 25),
           (val_add, ":vassal_count", 1),
         (try_end),
		 (gt, ":vassal_count", 0),
      ],"Plunder it and share the spoils equally between the vassals accompanying you and yourself.",
       [
         (assign, ":vassal_count", 1),
		 ##nested diplomacy start+
		 ##OLD:
         #(try_for_range, ":troop_no", active_npcs_begin, active_npcs_end),
         #  (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
         #  (store_troop_faction, ":troop_faction_no", ":troop_no"),
         #  (eq, "fac_player_supporters_faction", ":troop_faction_no"),
         #  (troop_get_slot, ":party_no", ":troop_no", slot_troop_leaded_party),
         #  (ge, ":party_no", 1),
         #  (store_distance_to_party_from_party, ":distance","p_main_party", ":party_no"),
         #  (le, ":distance", 25),
         #  (val_add, ":vassal_count", 1),
         #  (call_script, "script_change_player_relation_with_troop", ":troop_no", 3),
         #(try_end),
		 #
		 #NEW:
		 #first loop through to count
		 (try_for_range, ":troop_no", heroes_begin, heroes_end),#promoted lady support
			(troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
			(store_troop_faction, ":troop_faction_no", ":troop_no"),
			(this_or_next|eq, "$players_kingdom", ":troop_faction_no"),#support for other faction arrangements
				(eq, "fac_player_supporters_faction", ":troop_faction_no"),
			(troop_get_slot, ":party_no", ":troop_no", slot_troop_leaded_party),
			(ge, ":party_no", 1),
			(store_distance_to_party_from_party, ":distance","p_main_party", ":party_no"),
			(le, ":distance", 25),
			(val_add, ":vassal_count", 1),
		 (try_end),
		 (store_div, ":gold_per_lord", "$diplomacy_var", ":vassal_count"),
		 #now loop through to add gold/relation
		 (try_for_range, ":troop_no", heroes_begin, heroes_end),#promoted lady support
			(troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
			(store_troop_faction, ":troop_faction_no", ":troop_no"),
			(this_or_next|eq, "$players_kingdom", ":troop_faction_no"),#support for other faction arrangements
				(eq, "fac_player_supporters_faction", ":troop_faction_no"),
			(troop_get_slot, ":party_no", ":troop_no", slot_troop_leaded_party),
			(ge, ":party_no", 1),
			(store_distance_to_party_from_party, ":distance","p_main_party", ":party_no"),
			(le, ":distance", 25),
			#add gold
			(call_script, "script_dplmc_distribute_gold_to_lord_and_holdings", ":gold_per_lord", ":troop_no"),
			#Relation adjustment
			(store_random_in_range, reg0, 0, 1000),
			(val_add, reg0, ":gold_per_lord"),
			(val_div, reg0, 1000),
			(gt, reg0, 0),
			(val_min, reg0, 4),
			(assign, ":relation_change", reg0),
			#Modify for personality
			(try_begin),
				#Lords who dislike raiding will be displeased by looting a town (but not a castle)
				(party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
				(call_script, "script_dplmc_get_troop_morality_value", ":troop_no", tmt_humanitarian),
				(try_begin),
					(gt, reg0, 0),#Some lords like raiding settlements less than others
					(val_sub, ":relation_change", reg0),
					(val_min, ":relation_change", -1),
				(else_try),
					(lt, reg0, 0),#Some lords like raiding settlements more than others
					(val_sub, ":relation_change", reg0),
					(val_min, ":relation_change", 5),
				(else_try),
					(this_or_next|troop_slot_eq, ":troop_no", slot_lord_reputation_type, lrep_custodian),
					(this_or_next|troop_slot_eq, ":troop_no", slot_lord_reputation_type, lrep_benefactor),
						(troop_slot_eq, ":troop_no", slot_lord_reputation_type, lrep_moralist),
					(val_sub, ":relation_change", 1),
			    (try_end),
			(try_end),
			(call_script, "script_change_player_relation_with_troop", ":troop_no", ":relation_change"),
		 (try_end),
		 ##nested diplomacy end+
         # (store_random_in_range, ":num_looters", 0, ":vassal_count"),
         # (val_max, ":num_looters", 3),
         #(call_script, "script_spawn_looters", "$g_encountered_party", 5), #SB : spawn some looters
         #SB : apply suggested relationship penalty
         (options_get_campaign_ai, ":penalty"),
         (val_sub, ":penalty", 3),
         (call_script, "script_change_player_relation_with_center", "$g_encountered_party", ":penalty"),
         (val_div, "$diplomacy_var", ":vassal_count"),
         (try_begin),
           (gt, "$g_player_chamberlain", 0),
           (call_script, "script_dplmc_pay_into_treasury", "$diplomacy_var"),
         (else_try),
           (troop_add_gold, "trp_player", "$diplomacy_var"),
         (try_end),
         (call_script, "script_change_center_prosperity", "$g_encountered_party", -8),
         (call_script, "script_change_player_honor", -1),
         (assign, "$auto_enter_town", "$g_encountered_party"),
         (change_screen_return),
        ]),
      ("dplmc_spoils_all_vassals",
        [
          (is_between, "$players_kingdom", kingdoms_begin, kingdoms_end),
          ##nested diplomacy start+
          #Support for being co-ruler of an original kingdom
          (faction_get_slot, ":faction_leader", "$players_kingdom", slot_faction_leader),
          (this_or_next|eq, ":faction_leader", "trp_player"),
          (this_or_next|troop_slot_eq, ":faction_leader", slot_troop_spouse, "trp_player"),
          ##nested diplomacy end+
          (eq, "$players_kingdom", "fac_player_supporters_faction"),
          #SB : check if we even have any vassals
          (assign, ":end", heroes_end),
          (try_for_range, ":troop_no", heroes_begin, ":end"),
            (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
            (store_troop_faction, ":troop_faction_no", ":troop_no"),
            (this_or_next|eq, ":troop_faction_no", "fac_player_supporters_faction"),
            (eq, ":troop_faction_no", "$players_kingdom"),
            (assign, ":end", heroes_begin),
          (try_end),
          (eq, ":end", heroes_begin),

      ],"Plunder it and share the spoils equally between your vassals and yourself.",
       [
         (assign, ":vassal_count", 1),
		 ##nested diplomacy start+
		 #OLD:
         #(try_for_range, ":troop_no", active_npcs_begin, active_npcs_end),
         #  (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
         #  (store_troop_faction, ":troop_faction_no", ":troop_no"),
         #  (eq, "fac_player_supporters_faction", ":troop_faction_no"),
         #  (val_add, ":vassal_count", 1),
         #  (call_script, "script_change_player_relation_with_troop", ":troop_no", 2),
         #(try_end),
		 #
		 #NEW:
		 #  1. Actually give the gold to your vassals;
		 #  2. Support kingdom ladies as vassals
		 #  3. Support being the ruler or co-ruler of an original kingdom
		 #  4. The relationship gain should not exceed 1 per 1000 gold pieces.
		 (try_for_range, ":troop_no", heroes_begin, heroes_end),
			(troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
			(store_troop_faction, ":troop_faction_no", ":troop_no"),
			(this_or_next|eq, ":troop_faction_no", "fac_player_supporters_faction"),
				(eq, ":troop_faction_no", "$players_kingdom"),
			(val_add, ":vassal_count", 1),
		 (try_end),

		 (store_div, ":gold_per_lord", "$diplomacy_var", ":vassal_count"),
		 (try_for_range, ":troop_no", heroes_begin, heroes_end),
			(troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
			(store_troop_faction, ":troop_faction_no", ":troop_no"),
			(this_or_next|eq, ":troop_faction_no", "fac_player_supporters_faction"),
				(eq, ":troop_faction_no", "$players_kingdom"),
			(call_script, "script_dplmc_distribute_gold_to_lord_and_holdings", ":gold_per_lord", ":troop_no"),
			#Relation adjustment
			(store_random_in_range, reg0, 0, 1000),
			(val_add, reg0, ":gold_per_lord"),
			(val_div, reg0, 1000),
			(gt, reg0, 0),
			(val_min, reg0, 3),
			(assign, ":relation_change", reg0),
			#Modify for personality
			(try_begin),
				#Lords who dislike raiding will be displeased by looting a town (but not a castle)
				(party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
				(call_script, "script_dplmc_get_troop_morality_value", ":troop_no", tmt_humanitarian),
				(try_begin),
					(gt, reg0, 0),#Some lords like raiding settlements less than others
					(val_sub, ":relation_change", reg0),
					(val_min, ":relation_change", -1),
				(else_try),
					(lt, reg0, 0),#Some lords like raiding settlements more than others
					(val_sub, ":relation_change", reg0),
					(val_min, ":relation_change", 4),
				(else_try),
					(this_or_next|troop_slot_eq, ":troop_no", slot_lord_reputation_type, lrep_custodian),
					(this_or_next|troop_slot_eq, ":troop_no", slot_lord_reputation_type, lrep_benefactor),
						(troop_slot_eq, ":troop_no", slot_lord_reputation_type, lrep_moralist),
					(val_sub, ":relation_change", 1),
			    (try_end),
			(call_script, "script_change_player_relation_with_troop", ":troop_no", ":relation_change"),
 		    (try_end),
		 (try_end),
		 ##nested diplomacy end+
         #(call_script, "script_spawn_looters", "$g_encountered_party", 4), #SB : spawn some looters
         (val_div, "$diplomacy_var", ":vassal_count"),
         (try_begin),
           (gt, "$g_player_chamberlain", 0),
           (call_script, "script_dplmc_pay_into_treasury", "$diplomacy_var"),
         (else_try),
           (troop_add_gold, "trp_player", "$diplomacy_var"),
         (try_end),
         (call_script, "script_change_center_prosperity", "$g_encountered_party", -8),
         (assign, "$auto_enter_town", "$g_encountered_party"),
         (change_screen_return),
        ]),
##diplomacy end
      ("continue",[],"Continue...",
       [
         ##diplomacy begin
         (call_script, "script_change_center_prosperity", "$g_encountered_party", -3),
         ##diplomacy end
         (assign, "$auto_enter_town", "$g_encountered_party"),
         (change_screen_return),
        ]),
    ],
  ),
  (
    "castle_taken_2",mnf_disable_all_keys,
    "{s3} has fallen to your troops, and you now have full control of the castle.\
 It is time to send word to {s9} about your victory. {s5}",
    "none",
    [
      #siege warfare chief
      (assign, "$g_empieza_asedio", 0),
      (party_set_slot,"$g_encountered_party",slot_center_blockaded,0),
      (party_set_slot,"$g_encountered_party",slot_center_blockaded_time,0),
      (party_set_slot, "$g_encountered_party", slot_center_mantlets_placed, 0),
      (party_set_slot,"$g_encountered_party",slot_center_ladder_time,0),
      (party_set_slot,"$g_encountered_party",slot_center_latrines,0),
      (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),

      (assign, "$g_siege_saneamiento", 0),
      (assign, "$g_traicion_interna", 0),
      (assign, "$g_infiltracion_interna", 0),
      (assign, "$g_campos_cercanos", 0),
      (assign, "$g_listos_para_asalto", 0),
      (assign, "$g_mantlets_1", 0),
      (assign, "$g_cabezas_dentro", 0), #event
      (assign, "$g_siege_method", 0),
      (assign, "$g_siege_sallied_out_once", 0),
      (assign, "$g_days_spent_starving", 0), #siege warfare, important, we use this in dialogs
      (assign, "$g_next_sally_at", 0), #sally more common siege warfare chief
      #siege warfare acaba

        (str_store_party_name, s3, "$g_encountered_party"),
        (str_clear, s5),
        (faction_get_slot, ":faction_leader", "$players_kingdom", slot_faction_leader),
        (str_store_troop_name, s9, ":faction_leader"),
        (try_begin),
          (eq, "$player_has_homage", 0),
          (assign, reg8, 0),
          (try_begin),
		    ##diplomacy start+ FIX: Inserted missing argument
            #(party_slot_eq, "$g_encountered_party", spt_town),
			(party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
			##diplomacy end+
            (assign, reg8, 1),
          (try_end),
          ##diplomacy start+ fix gender of pronoun
          (call_script, "script_dplmc_store_troop_is_female", ":faction_leader"),
          (str_store_string, s5, "@However, since you are not a sworn {man/follower} of {s9}, there is no chance {reg0?she:he} would recognize you as the {lord/lady} of this {reg8?town:fortress}."),
          ##diplomacy end+
        (try_end),
    ],
    [
        ("castle_taken_claim",[(eq, "$player_has_homage", 1)],
		"Request that {s3} be awarded to you.",
        [
        (party_set_slot, "$g_encountered_party", slot_center_last_taken_by_troop, "trp_player"),
        (assign, "$g_castle_requested_by_player", "$current_town"),
		(assign, "$g_castle_requested_for_troop", "trp_player"),
        (assign, "$auto_enter_town", "$g_encountered_party"),
        (change_screen_return),
        ]),

		("castle_taken_claim_2",[
		(troop_get_slot, ":spouse", "trp_player", slot_troop_spouse),
		(is_between, ":spouse", active_npcs_begin, active_npcs_end),
		(troop_slot_eq, ":spouse", slot_troop_occupation, slto_kingdom_hero),
		(store_faction_of_troop, ":spouse_faction", ":spouse"),
		(eq, ":spouse_faction", "$players_kingdom"),
		],
		"Request that {s3} be awarded to your {wife/husband}.",
        [
        (party_set_slot, "$g_encountered_party", slot_center_last_taken_by_troop, "trp_player"),
        (assign, "$g_castle_requested_by_player", "$current_town"),
		(troop_get_slot, ":spouse", "trp_player", slot_troop_spouse),
		(assign, "$g_castle_requested_for_troop", ":spouse"),
        (assign, "$auto_enter_town", "$g_encountered_party"),
        (change_screen_return),
        ]),



      ("castle_taken_no_claim",[],"Ask no rewards.",
       [
        (party_set_slot, "$g_encountered_party", slot_center_last_taken_by_troop, -1),
        (assign, "$auto_enter_town", "$g_encountered_party"),
        (change_screen_return),
#        (jump_to_menu, "mnu_town"),
        ]),
    ],
  ),

(
    "requested_castle_granted_to_player",mnf_scale_picture,
    "You receive a message from your liege, {s3}.^^\
 {reg4?She:He} has decided to grant {s2}{reg3? and the nearby village of {s4}:} to you, with all due incomes and titles, to hold in {reg4?her:his} name for as long as you maintain your oath of homage..",
    "none",
    [
		(set_background_mesh, "mesh_pic_messenger"),
		(faction_get_slot, ":faction_leader", "$players_kingdom", slot_faction_leader),
		(str_store_troop_name, s3, ":faction_leader"),
		(str_store_party_name, s2, "$g_center_to_give_to_player"),
		(try_begin),
			(party_slot_eq, "$g_center_to_give_to_player", slot_party_type, spt_castle),
			(assign, reg3, 1),
			(try_for_range, ":cur_village", villages_begin, villages_end),
				(party_slot_eq, ":cur_village", slot_village_bound_center, "$g_center_to_give_to_player"),
				(str_store_party_name, s4, ":cur_village"),
			(try_end),
		(else_try),
			(assign, reg3, 0),
		(try_end),
		##diplomacy start+ use script for gender
		#(troop_get_type, reg4, ":faction_leader"),#<- OLD
		(call_script, "script_dplmc_store_troop_is_female_reg", ":faction_leader", 4),
		##diplomacy end+
   ],
    [
		("continue",[],"Continue.",
			[
			(call_script, "script_give_center_to_lord", "$g_center_to_give_to_player", "trp_player", 0),
			(jump_to_menu, "mnu_give_center_to_player_2"),
			],
		),
	]
),



(
    "requested_castle_granted_to_player_husband", mnf_scale_picture,
    "You receive a message from your liege, {s3}.^^\
 {reg4?She:He} has decided to grant {s2}{reg3? and the nearby village of {s4}:} to your husband, {s7}.",
    "none",
    [
		(set_background_mesh, "mesh_pic_messenger"),
		(faction_get_slot, ":faction_leader", "$players_kingdom", slot_faction_leader),
		(str_store_troop_name, s3, ":faction_leader"),
		(str_store_party_name, s2, "$g_center_to_give_to_player"),
		(try_begin),
			(party_slot_eq, "$g_center_to_give_to_player", slot_party_type, spt_castle),
			(assign, reg3, 1),
			(try_for_range, ":cur_village", villages_begin, villages_end),
				(party_slot_eq, ":cur_village", slot_village_bound_center, "$g_center_to_give_to_player"),
				(str_store_party_name, s4, ":cur_village"),
			(try_end),
		(else_try),
			(assign, reg3, 0),
		(try_end),
		##diplomacy start+ use script for gender
		#(troop_get_type, reg4, ":faction_leader"),#<- OLD
		(call_script, "script_dplmc_store_troop_is_female_reg", ":faction_leader", 4),
		##diplomacy end+

		(troop_get_slot, ":spouse", "trp_player", slot_troop_spouse),
		(str_store_troop_name, s11, ":spouse"),
		(str_store_string, s7, "str_to_your_husband_s11"),
    ],
    [
		("continue",[],"Continue.",
			[
			(troop_get_slot, ":spouse", "trp_player", slot_troop_spouse),
			(call_script, "script_give_center_to_lord", "$g_center_to_give_to_player", ":spouse", 0),
			],
		),
	]
),







(
    "requested_castle_granted_to_another",mnf_scale_picture,
    "You receive a message from your monarch, {s3}.^^\
 'I was most pleased to hear of your valiant efforts in the capture of {s2}. Your victory has gladdened all our hearts.\
 You also requested me to give you ownership of the castle, but that is a favor which I fear I cannot grant,\
 as you already hold significant estates in my realm.\
 Instead I have sent you {reg6} siliquae to cover the expenses of your campaign, but {s2} I give to {s5}.'\
 ",
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),
     (faction_get_slot, ":faction_leader", "$players_kingdom", slot_faction_leader),
     (str_store_troop_name, s3, ":faction_leader"),
     (str_store_party_name, s2, "$g_center_to_give_to_player"),
     (party_get_slot, ":new_owner", "$g_center_to_give_to_player", slot_town_lord),
     (str_store_troop_name, s5, ":new_owner"),
     (assign, reg6, 900),

	 (assign, "$g_castle_requested_by_player", -1),
	 (assign, "$g_castle_requested_for_troop", -1),

    ],
    [
      ("accept_decision",[],"Accept the decision.",
       [
       (call_script, "script_troop_add_gold", "trp_player", reg6),
        ##diplomacy start+ Remove gold spent by liege
        (faction_get_slot, ":faction_leader", "$players_kingdom", slot_faction_leader),
        (try_begin),
            (gt, ":faction_leader", 0),
            (neq, ":faction_leader", "trp_kingdom_heroes_including_player_begin"),
            (call_script, "script_dplmc_remove_gold_from_lord_and_holdings", reg6, ":faction_leader"),
        (try_end),
        ##diplomacy end+
       (change_screen_return),
       ]),

       ("leave_faction",[],"You have been wronged! Renounce your oath to your liege! ",
       [
         ##diplomacy start+ Remove gold spent by liege
         (faction_get_slot, ":faction_leader", "$players_kingdom", slot_faction_leader),
         (try_begin),
            (gt, ":faction_leader", 0),
            (neq, ":faction_leader", "trp_kingdom_heroes_including_player_begin"),
            (call_script, "script_dplmc_remove_gold_from_lord_and_holdings", reg6, ":faction_leader"),
         (try_end),
         ##diplomacy end+
         (jump_to_menu, "mnu_leave_faction"),
         (call_script, "script_troop_add_gold", "trp_player", reg6),
        ]),
     ],
  ),


(
    "requested_castle_granted_to_another_female",mnf_scale_picture,
##diplomacy start+ make gender correct
    "You receive a message from your monarch, {s3}.^^\
 'I was most pleased to hear of your valiant efforts in the capture of {s2}. Your victory has gladdened all our hearts.\
 You also requested me to give ownership of the castle to your {wife/husband}, but that is a favor which I fear I cannot grant,\
 as {she/he} already holds significant estates in my realm.\
 Instead I have sent you {reg6} siliquae to cover the expenses of your campaign, but {s2} I give to {s5}.'\
 ",
##diplomacy end+
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),
     (faction_get_slot, ":faction_leader", "$players_kingdom", slot_faction_leader),
     (str_store_troop_name, s3, ":faction_leader"),
     (str_store_party_name, s2, "$g_center_to_give_to_player"),
     (party_get_slot, ":new_owner", "$g_center_to_give_to_player", slot_town_lord),
     (str_store_troop_name, s5, ":new_owner"),
     (assign, reg6, 900),

	 (assign, "$g_castle_requested_by_player", -1),
	 (assign, "$g_castle_requested_for_troop", -1),
    ],

    [
		("accept_decision",[],"Accept the decision.",
        [
        (call_script, "script_troop_add_gold", "trp_player", reg6),
        (change_screen_return),
        ]),
    ],
),




  (
    "leave_faction",0,
    "Renouncing your oath is a grave act. Your lord may condemn you and confiscate your lands and holdings.\
 However, if you return them of your own free will, he may let the betrayal go without a fight.",
    "none",
    [
    ],
    [
      ("leave_faction_give_back", [], "Renounce your oath and give up your holdings.",
       [
#Troop commentary changes begin
#        (call_script, "script_add_log_entry", logent_renounced_allegiance,   "trp_player",  -1, "$g_talk_troop", "$g_talk_troop_faction"),
#Troop commentary changes end
        (call_script, "script_player_leave_faction", 1), #1 means give back fiefs
        (change_screen_return),
        ]),
      ("leave_faction_hold", [
          (str_store_party_name, s2, "$g_center_to_give_to_player"),
          ], "Renounce your oath and rule your lands, including {s2}, in your own name.",
       [
        (call_script, "script_give_center_to_lord", "$g_center_to_give_to_player", "trp_player", 0), #this should activate the player faction (it does not)
        (call_script, "script_player_leave_faction", 0), #"1" would mean give back fiefs
		(call_script, "script_activate_player_faction", "trp_player"), #Activating player faction should now work
        (change_screen_return),
        ]),
      ("leave_faction_cancel", [], "Remain loyal and accept the decision.",
       [
        (change_screen_return),
        ]),
    ],
  ),

  (
    "give_center_to_player",mnf_scale_picture,
##diplomacy start+ fix gender of pronoun
    "Your lord offers to extend your fiefs!\
 {s1} sends word that {reg4?she:he} is willing to grant {s2} to you in payment for your loyal service,\
 adding it to your holdings. What is your answer?",
##diplomacy end+
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),
     (store_faction_of_party, ":center_faction", "$g_center_to_give_to_player"),
     (faction_get_slot, ":faction_leader", ":center_faction", slot_faction_leader),
     ##diplomacy start+ put king's gender in reg4
     (call_script, "script_dplmc_store_troop_is_female_reg", ":faction_leader", 4),
     ##diplomacy end+
     (str_store_troop_name, s1, ":faction_leader"),
     (str_store_party_name, s2, "$g_center_to_give_to_player"),
    ],
    [
      ("give_center_to_player_accept",[],"Accept the offer.",
       [(call_script, "script_give_center_to_lord", "$g_center_to_give_to_player", "trp_player", 0),
        (jump_to_menu, "mnu_give_center_to_player_2"),
        ]),
      ("give_center_to_player_reject",[],"Reject. You have no interest in holding {s2}.",
       [(party_set_slot, "$g_center_to_give_to_player", slot_town_lord, stl_rejected_by_player),
        (change_screen_return),
        ]),
    ],
  ),

  (
    "give_center_to_player_2",0,
    "With a brief ceremony, you are officially confirmed as the new lord of {s2}{reg3? and its bound village {s4}:}.\
 {reg3?They:It} will make a fine part of your fiefdom.\
 You can now claim the rents and revenues from your personal estates there, draft soldiers from the populace,\
 and manage the lands as you see fit.\
 However, you are also expected to defend your fief and your people from harm,\
 as well as maintaining the rule of law and order.",
    "none",
    [
      (str_store_party_name, s2, "$g_center_to_give_to_player"),
      (assign, reg3, 0),
      (try_begin),
        (party_slot_eq, "$g_center_to_give_to_player", slot_party_type, spt_castle),
        (try_for_range, ":cur_village", villages_begin, villages_end),
          (party_slot_eq, ":cur_village", slot_village_bound_center, "$g_center_to_give_to_player"),
          (str_store_party_name, s4, ":cur_village"),
          (assign, reg3, 1),
        (try_end),
      (try_end),
    ],
    [
      ("continue",[],"Continue...",
       [(change_screen_return),
        ]),
    ],
  ),


  (
    "oath_fulfilled",0,
##diplomacy start+ fix gender of pronoun
    "You had a contract with {s1} to serve {reg4?her:him} for a certain duration.\
 Your contract has now expired. What will you do?",
##diplomacy end+
    "none",
    [
      (faction_get_slot, ":faction_leader", "$players_kingdom", slot_faction_leader),
      ##diplomacy start+ load king's gender into reg4
      (call_script, "script_dplmc_store_troop_is_female", ":faction_leader"),
      (assign, reg4, reg0),
      ##diplomacy end+
      (str_store_troop_name, s1, ":faction_leader"),
     ],
    [
      ("renew_oath",[(faction_get_slot, ":faction_leader", "$players_kingdom", slot_faction_leader),
                     (str_store_troop_name, s1, ":faction_leader")], "Renew your contract with {s1} for another month.",
       [
         (store_current_day, ":cur_day"),
         (store_add, "$mercenary_service_next_renew_day", ":cur_day", 30),
         (change_screen_return),
         ]),
      ("dont_renew_oath",[],"Become free of your bond.",
       [
         (call_script, "script_player_leave_faction", 1), #1 means give back fiefs
         (change_screen_return),
         ]),
    ]
  ),


##  (
##    "castle_garrison_stationed",0,
###    "The rest of the castle garrison recognizes that their situation is hopeless and surrenders. {s1} is at your mercy now. What do you want to do with this castle?",
##    "_",
##    "none",
##    [
##        (jump_to_menu, "mnu_town"),
##    ],
##    [],
##  ),

##  (
##    "castle_choose_captain",0,
##    "You will need to assign one of your companions as the castellan. Who will it be?",
##    "none",
##    [
##        (try_for_range, ":slot_no", 0, 20),
##          (troop_set_slot, "trp_temp_troop", ":slot_no", 0),
##        (try_end),
##        (assign, ":num_captains", 0),
##        (party_clear, "p_temp_party"),
##        (party_get_num_companion_stacks, ":num_stacks", "p_main_party"),
##        (try_for_range, ":i_s", 1,":num_stacks"),
##          (party_stack_get_troop_id, ":companion","p_main_party", ":i_s"),
##          (troop_slot_eq, ":companion", slot_troop_occupation, slto_player_companion),
##          (troop_set_slot, "trp_temp_troop", ":num_captains", ":companion"),
##        (try_end),
##    ],
##    [
##      ("castellan_candidate",  [(troop_get_slot, ":captain", "trp_temp_troop", 0),(gt,":captain",0),(str_store_troop_name, s5,":captain")],
##         "{s5}",    [(troop_get_slot, "$selected_castellan", "trp_temp_troop", 0),(jump_to_menu,"mnu_castle_captain_chosen")]),
##      ("castellan_candidate",  [(troop_get_slot, ":captain", "trp_temp_troop", 1),(gt,":captain",0),(str_store_troop_name, s5,":captain")],
##         "{s5}",    [(troop_get_slot, "$selected_castellan", "trp_temp_troop", 1),(jump_to_menu,"mnu_castle_captain_chosen")]),
##      ("castellan_candidate",  [(troop_get_slot, ":captain", "trp_temp_troop", 2),(gt,":captain",0),(str_store_troop_name, s5,":captain")],
##         "{s5}",    [(troop_get_slot, "$selected_castellan", "trp_temp_troop", 2),(jump_to_menu,"mnu_castle_captain_chosen")]),
##      ("castellan_candidate",  [(troop_get_slot, ":captain", "trp_temp_troop", 3),(gt,":captain",0),(str_store_troop_name, s5,":captain")],
##         "{s5}",    [(troop_get_slot, "$selected_castellan", "trp_temp_troop", 3),(jump_to_menu,"mnu_castle_captain_chosen")]),
##      ("castellan_candidate",  [(troop_get_slot, ":captain", "trp_temp_troop", 4),(gt,":captain",0),(str_store_troop_name, s5,":captain")],
##         "{s5}",    [(troop_get_slot, "$selected_castellan", "trp_temp_troop", 4),(jump_to_menu,"mnu_castle_captain_chosen")]),
##      ("castellan_candidate",  [(troop_get_slot, ":captain", "trp_temp_troop", 5),(gt,":captain",0),(str_store_troop_name, s5,":captain")],
##         "{s5}",    [(troop_get_slot, "$selected_castellan", "trp_temp_troop", 5),(jump_to_menu,"mnu_castle_captain_chosen")]),
##      ("castellan_candidate",  [(troop_get_slot, ":captain", "trp_temp_troop", 6),(gt,":captain",0),(str_store_troop_name, s5,":captain")],
##         "{s5}",    [(troop_get_slot, "$selected_castellan", "trp_temp_troop", 6),(jump_to_menu,"mnu_castle_captain_chosen")]),
##      ("castellan_candidate",  [(troop_get_slot, ":captain", "trp_temp_troop", 7),(gt,":captain",0),(str_store_troop_name, s5,":captain")],
##         "{s5}",    [(troop_get_slot, "$selected_castellan", "trp_temp_troop", 7),(jump_to_menu,"mnu_castle_captain_chosen")]),
##      ("castellan_candidate",  [(troop_get_slot, ":captain", "trp_temp_troop", 8),(gt,":captain",0),(str_store_troop_name, s5,":captain")],
##         "{s5}",    [(troop_get_slot, "$selected_castellan", "trp_temp_troop", 8),(jump_to_menu,"mnu_castle_captain_chosen")]),
##      ("castellan_candidate",  [(troop_get_slot, ":captain", "trp_temp_troop", 9),(gt,":captain",0),(str_store_troop_name, s5,":captain")],
##         "{s5}",    [(troop_get_slot, "$selected_castellan", "trp_temp_troop", 9),(jump_to_menu,"mnu_castle_captain_chosen")]),
##      ("castellan_candidate",  [(troop_get_slot, ":captain", "trp_temp_troop", 10),(gt,":captain",0),(str_store_troop_name, s5,":captain")],
##         "{s5}",    [(troop_get_slot, "$selected_castellan", "trp_temp_troop", 10),(jump_to_menu,"mnu_castle_captain_chosen")]),
##      ("castellan_candidate",  [(troop_get_slot, ":captain", "trp_temp_troop", 11),(gt,":captain",0),(str_store_troop_name, s5,":captain")],
##         "{s5}",    [(troop_get_slot, "$selected_castellan", "trp_temp_troop", 11),(jump_to_menu,"mnu_castle_captain_chosen")]),
##      ("castellan_candidate",  [(troop_get_slot, ":captain", "trp_temp_troop", 12),(gt,":captain",0),(str_store_troop_name, s5,":captain")],
##         "{s5}",    [(troop_get_slot, "$selected_castellan", "trp_temp_troop", 12),(jump_to_menu,"mnu_castle_captain_chosen")]),
##      ("castellan_candidate",  [(troop_get_slot, ":captain", "trp_temp_troop", 13),(gt,":captain",0),(str_store_troop_name, s5,":captain")],
##         "{s5}",    [(troop_get_slot, "$selected_castellan", "trp_temp_troop", 13),(jump_to_menu,"mnu_castle_captain_chosen")]),
##      ("castellan_candidate",  [(troop_get_slot, ":captain", "trp_temp_troop", 14),(gt,":captain",0),(str_store_troop_name, s5,":captain")],
##         "{s5}",    [(troop_get_slot, "$selected_castellan", "trp_temp_troop", 14),(jump_to_menu,"mnu_castle_captain_chosen")]),
##      ("castellan_candidate",  [(troop_get_slot, ":captain", "trp_temp_troop", 15),(gt,":captain",0),(str_store_troop_name, s5,":captain")],
##         "{s5}",    [(troop_get_slot, "$selected_castellan", "trp_temp_troop", 15),(jump_to_menu,"mnu_castle_captain_chosen")]),
##
##      ("cancel",[],
##         "Cancel...",
##         [(jump_to_menu, "mnu_town")]),
##    ],
##  ),
##  (
##    "castle_captain_chosen",0,
##    "h this castle?",
##    "none",
##    [
##        (party_add_leader, "$g_encountered_party",  "$selected_castellan"),
##        (party_remove_members, "p_main_party", "$selected_castellan",1),
##        (party_set_slot, "$g_encountered_party", slot_town_lord, "trp_player"),
##        (party_set_faction, "$g_encountered_party", "fac_player_supporters_faction"),
##        (try_for_range, ":slot_no", 0, 20), #clear temp troop slots just in case
##          (troop_set_slot, "trp_temp_troop", ":slot_no", 0),
##        (try_end),
##        (jump_to_menu, "mnu_town"),
##        (change_screen_exchange_members,0),
##    ],
##    [],
##  ),

##  (
##    "under_siege_attacked_continue",0,
##    "Nothing to see here.",
##    "none",
##    [
##        (assign, "$g_enemy_party", "$g_encountered_party_2"),
##        (assign, "$g_ally_party", "$g_encountered_party"),
##        (party_set_next_battle_simulation_time, "$g_encountered_party", 0),
##        (call_script, "script_encounter_calculate_fit"),
##        (try_begin),
##          (call_script, "script_party_count_fit_regulars", "p_collective_enemy"),
##          (assign, ":num_enemy_regulars_remaining", reg(0)),
##          (assign, ":enemy_finished",0),
##          (try_begin),
##            (eq, "$g_battle_result", 1),
##            (eq, ":num_enemy_regulars_remaining", 0), #battle won
##            (assign, ":enemy_finished",1),
##          (else_try),
##            (eq, "$g_engaged_enemy", 1),
##            (le, "$g_enemy_fit_for_battle",0),
##            (ge, "$g_friend_fit_for_battle",1),
##            (assign, ":enemy_finished",1),
##          (try_end),
##          (this_or_next|eq, ":enemy_finished",1),
##          (eq,"$g_enemy_surrenders",1),
####          (assign, "$g_center_under_siege_battle", 0),
##          (assign, "$g_next_menu", -1),
##          (jump_to_menu, "mnu_total_victory"),
##        (else_try),
##          (assign, ":battle_lost", 0),
##          (try_begin),
##            (eq, "$g_battle_result", -1),
##            (assign, ":battle_lost",1),
##          (try_end),
##          (this_or_next|eq, ":battle_lost",1),
##          (eq,"$g_player_surrenders",1),
####          (assign, "$g_center_under_siege_battle", 0),
##          (assign, "$g_next_menu", "mnu_captivity_start_under_siege_defeat"),
##          (jump_to_menu, "mnu_total_defeat"),
##        (else_try),
##    # Ordinary victory.
##          (try_begin),
##          #check whether enemy retreats
##            (eq, "$g_battle_result", 1),
##            (store_mul, ":min_enemy_str", "$g_enemy_fit_for_battle", 2),
##            (lt, ":min_enemy_str", "$g_friend_fit_for_battle"),
##            (party_set_slot, "$g_enemy_party", slot_party_retreat_flag, 1),
##
##            (try_for_range, ":troop_no", kingdom_heroes_begin, kingdom_heroes_end),
##              (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
##              (troop_slot_eq, ":troop_no", slot_troop_is_prisoner, 0),
##              (troop_get_slot, ":party_no", ":troop_no", slot_troop_leaded_party),
##              (gt, ":party_no", 0),
##              (party_slot_eq, ":party_no", slot_party_ai_state, spai_besieging_center),
##              (party_slot_eq, ":party_no", slot_party_ai_object, "$g_encountered_party"),
##              (party_slot_eq, ":party_no", slot_party_ai_substate, 1),
##              (call_script, "script_party_set_ai_state", ":party_no", spai_undefined, -1),
##              (call_script, "script_party_set_ai_state", ":party_no", spai_besieging_center, ":center_no"),
##            (try_end),
##            (display_message, "@{!}TODO: Enemy retreated. The assault has ended, siege continues."),
##            (change_screen_return),
##          (try_end),
####          (assign, "$g_center_under_siege_battle", 0),
##        (try_end),
##        ],
##    [
##    ]
##  ),


  ( #SB : pic hotkeys
    "siege_started_defender",mnf_enable_hot_keys,
    "{s1} is launching an assault against the walls of {s2}. You have {reg10} troops fit for battle against the enemy's {reg11}. You decide to...",
    "none",
    [
        (select_enemy,1),
        (assign, "$g_enemy_party", "$g_encountered_party_2"),
        (assign, "$g_ally_party", "$g_encountered_party"),
        (str_store_party_name, s1, "$g_enemy_party"),
        (str_store_party_name, s2, "$g_ally_party"),
        (call_script, "script_encounter_calculate_fit"),
        (try_begin),
          (eq, "$g_siege_first_encounter", 1),
          (call_script, "script_let_nearby_parties_join_current_battle", 0, 1),
		  ###diplomacy start+
		  ##If terrain advantage is on, use siege settings
          #(assign, ":save_dplmc_terrain_advantage", "$g_dplmc_terrain_advantage"),
		  #(try_begin),
		  #   (eq, "$g_dplmc_terrain_advantage", TERRAIN_ADVANTAGE_ENABLE),
		  #   (assign, "$g_dplmc_terrain_advantage", TERRAIN_ADVANTAGE_FORCE_SIEGE),
		  #(try_end),
		  ###diplomacy end+
          (call_script, "script_encounter_init_variables"),
		  ###diplomacy start+
		  ##Revert terrain advantage settings
		  #(assign, "$g_dplmc_terrain_advantage", ":save_dplmc_terrain_advantage"),
		  ###diplmacy end+
        (try_end),

        (try_begin),
          (eq, "$g_siege_first_encounter", 0),
          (try_begin),
            (call_script, "script_party_count_members_with_full_health", "p_collective_enemy"),
            (assign, ":num_enemy_regulars_remaining", reg0),
            (call_script, "script_party_count_members_with_full_health", "p_collective_friends"),
            (assign, ":num_ally_regulars_remaining", reg0),
            (assign, ":enemy_finished", 0),
            (try_begin),
              (eq, "$g_battle_result", 1),
              (eq, ":num_enemy_regulars_remaining", 0), #battle won (TODO : compare with num_routed_us)
              (assign, ":enemy_finished",1),
            (else_try),
              (eq, "$g_engaged_enemy", 1),
              (le, "$g_enemy_fit_for_battle",0),
              (ge, "$g_friend_fit_for_battle",1),
              (assign, ":enemy_finished",1),
            (try_end),
            (this_or_next|eq, ":enemy_finished",1),
            (eq,"$g_enemy_surrenders",1),
            (assign, "$g_next_menu", -1),
            (jump_to_menu, "mnu_total_victory"),
          (else_try),
            (assign, ":battle_lost", 0),
            (try_begin),
              (this_or_next|eq, "$g_battle_result", -1),
              (troop_is_wounded,  "trp_player"),
              (eq, ":num_ally_regulars_remaining", 0), #(TODO : compare with num_routed_allies)
              (assign, ":battle_lost",1),
            (try_end),
            (this_or_next|eq, ":battle_lost",1),
            (eq,"$g_player_surrenders",1),
            (assign, "$g_next_menu", "mnu_captivity_start_under_siege_defeat"),
            (jump_to_menu, "mnu_total_defeat"),
          (else_try),
            # Ordinary victory/defeat.
            (assign, ":attackers_retreat", 0),
            (try_begin),
            #check whether enemy retreats
              (eq, "$g_battle_result", 1),
  ##            (store_mul, ":min_enemy_str", "$g_enemy_fit_for_battle", 2),
  ##            (lt, ":min_enemy_str", "$g_friend_fit_for_battle"),
              (assign, ":attackers_retreat", 1),
            (else_try),
              (eq, "$g_battle_result", 0),
              (store_div, ":min_enemy_str", "$g_enemy_fit_for_battle", 3),
              (lt, ":min_enemy_str", "$g_friend_fit_for_battle"),
              (assign, ":attackers_retreat", 1),
            (else_try),
              (store_random_in_range, ":random_no", 0, 100),
              (store_mul, ":num_ally_regulars_remaining_multiplied", ":num_ally_regulars_remaining", 13),
              (val_div, ":num_ally_regulars_remaining_multiplied", 10),
              (ge, ":num_ally_regulars_remaining_multiplied", ":num_enemy_regulars_remaining"),
              (lt, ":random_no", 10),
              (neq, "$new_encounter", 1),
              (assign, ":attackers_retreat", 1),
            (try_end),
            (try_begin),
              (eq, ":attackers_retreat", 1),
              (party_get_slot, ":siege_hardness", "$g_encountered_party", slot_center_siege_hardness),
              (val_add, ":siege_hardness", 100),
              (party_set_slot, "$g_encountered_party", slot_center_siege_hardness, ":siege_hardness"),
              (party_set_slot, "$g_enemy_party", slot_party_retreat_flag, 1),

              (try_for_range, ":troop_no", active_npcs_begin, active_npcs_end),
                (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
                #(troop_slot_eq, ":troop_no", slot_troop_is_prisoner, 0),
                (neg|troop_slot_ge, ":troop_no", slot_troop_prisoner_of_party, 0),
                (troop_get_slot, ":party_no", ":troop_no", slot_troop_leaded_party),
                (gt, ":party_no", 0),
                (party_slot_eq, ":party_no", slot_party_ai_state, spai_besieging_center),
                (party_slot_eq, ":party_no", slot_party_ai_object, "$g_encountered_party"),
                (party_slot_eq, ":party_no", slot_party_ai_substate, 1),
                (call_script, "script_party_set_ai_state", ":party_no", spai_undefined, -1),
                (call_script, "script_party_set_ai_state", ":party_no", spai_besieging_center, "$g_encountered_party"),
              (try_end),
              (display_message, "@The enemy has been forced to retreat. The assault is over, but the siege continues."),
              (assign, "$g_battle_simulation_cancel_for_party", "$g_encountered_party"),
              (leave_encounter),
              (change_screen_return),
              (assign, "$g_battle_simulation_auto_enter_town_after_battle", "$g_encountered_party"),
            (try_end),
          (try_end),
        (try_end),
        (assign, "$g_siege_first_encounter", 0),
        (assign, "$new_encounter", 0),
        ],
    [
     ##diplomacy begin
      ("dplmc_negotiate_with_besieger",
      [
      #(neq, "$freelancer_state", 1),  #+freelancer chief
        (party_slot_eq, "$current_town", slot_town_lord, "trp_player"),
        (party_slot_ge, "$current_town", slot_center_is_besieged_by, 1),
      ]
       ,"Negotiate with the besieger.",
       [
        (jump_to_menu, "mnu_dplmc_negotiate_besieger"),
        ]),
     ##diplomacy end
      ("siege_defender_join_battle",
       [
         (neg|troop_is_wounded, "trp_player"),
         ],
          "Join the battle.",[
              (party_set_next_battle_simulation_time, "$g_encountered_party", -1),
              (assign, "$g_battle_result", 0),
              (try_begin),
                (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
                (party_get_slot, ":battle_scene", "$g_encountered_party", slot_town_walls),
              (else_try),
                (party_get_slot, ":battle_scene", "$g_encountered_party", slot_castle_exterior),
              (try_end),
              (call_script, "script_calculate_battle_advantage"),
              (val_mul, reg0, 2),
              (val_div, reg0, 3), #scale down the advantage a bit.
              (set_battle_advantage, reg0),
              (set_party_battle_mode),
              (try_begin),
                (party_slot_eq, "$current_town", slot_center_siege_with_belfry, 1),
                (set_jump_mission,"mt_castle_attack_walls_belfry"),
              #(else_try),
              #  (party_slot_eq, "$g_encountered_party", slot_center_siege_with_belfry, 2),
              #  (set_jump_mission,"mt_castle_attack_walls_special"),
              (else_try),
                (set_jump_mission,"mt_castle_attack_walls_ladder"),
              (try_end),
              (jump_to_scene,":battle_scene"),
              (assign, "$g_next_menu", "mnu_siege_started_defender"),
              (jump_to_menu, "mnu_battle_debrief"),
              (change_screen_mission)]),
      ("siege_defender_troops_join_battle",[
      #(neq, "$freelancer_state", 1),  #+freelancer chief
        (call_script, "script_party_count_members_with_full_health", "p_main_party"),
                                            (this_or_next|troop_is_wounded,  "trp_player"),
                                            (ge, reg0, 3)],
          "Order your men to join the battle without you.",[
              (party_set_next_battle_simulation_time, "$g_encountered_party", -1),
              (select_enemy,1),
              (assign,"$g_enemy_party","$g_encountered_party_2"),
              (assign,"$g_ally_party","$g_encountered_party"),
              (assign,"$g_siege_join", 1),
              (jump_to_menu,"mnu_siege_join_defense")]),

      #SB : add garrison management, maybe penalties if player disbands prisoners
      ("siege_defender_manage_troops",[
        (assign, ":player_can_draw_from_garrison", 0),
        (str_clear, s10),
        (party_get_slot, ":town_lord", "$g_encountered_party", slot_town_lord),

        (store_party_size_wo_prisoners, ":party_size", "$g_encountered_party"),
        (gt, ":party_size", 0),
        (try_begin), #option 1 - player is town lord
          (eq, ":town_lord", "trp_player"),
          (assign, ":player_can_draw_from_garrison", 1),
        (else_try), #option 2 - town is unassigned and part of the player faction
          (store_faction_of_party, ":faction", "$g_encountered_party"),
          (eq, ":faction", "fac_player_supporters_faction"),
          (neg|party_slot_ge, "$g_encountered_party", slot_town_lord, active_npcs_begin), #ie, zero or -1

          (assign, ":player_can_draw_from_garrison", 1),
        (else_try), #option 3 - town was captured by player
          (lt, ":town_lord", 0), #ie, unassigned
          (store_faction_of_party, ":castle_faction", "$g_encountered_party"),
          (eq, "$players_kingdom", ":castle_faction"),

          (eq, "$g_encountered_party", "$g_castle_requested_by_player"),

          (str_store_string, s10, "str_retrieve_garrison_warning"),
          (assign, ":player_can_draw_from_garrison", 1),
        # (else_try),
          # (lt, ":town_lord", 0), #ie, unassigned
          # (store_faction_of_party, ":castle_faction", "$g_encountered_party"),
          # (eq, "$players_kingdom", ":castle_faction"),

          # (store_party_size_wo_prisoners, ":party_size", "$g_encountered_party"),
          # (eq, ":party_size", 0),

          # (str_store_string, s10, "str_retrieve_garrison_warning"),
          # (assign, ":player_can_draw_from_garrison", 1),
        (else_try),
          (party_slot_ge, "$g_encountered_party", slot_town_lord, active_npcs_begin),
          (store_faction_of_party, ":castle_faction", "$g_encountered_party"),
          (eq, "$players_kingdom", ":castle_faction"),
          ##diplomacy start+ can arise if using this to represent polygamy
          (this_or_next|troop_slot_eq, ":town_lord", slot_troop_spouse, "trp_player"),
             (troop_slot_eq, "trp_player", slot_troop_spouse, ":town_lord"),
          (this_or_next|is_between, ":town_lord", heroes_begin, heroes_end),
          ##diplomacy end+
          (troop_slot_eq, "trp_player", slot_troop_spouse, ":town_lord"),

          (assign, ":player_can_draw_from_garrison", 1),
        (try_end),

        (eq, ":player_can_draw_from_garrison", 1),
      ],
          "Manage the garrison {s10}.",[
              (change_screen_exchange_members,1),]),
    ]
  ),

  (
    "siege_join_defense",mnf_disable_all_keys,
    "{s4}^^Your casualties: {s8}^^Allies' casualties: {s9}^^Enemy casualties: {s10}",
    "none",
    [
	    ###diplomacy start+
		##If terrain advantage is on, use siege settings
        #(assign, ":save_dplmc_terrain_advantage", "$g_dplmc_terrain_advantage"),
		##(assign, "$g_dplmc_terrain_advantage", ":save_dplmc_terrain_advantage"),
		#(try_begin),
		#   (eq, "$g_dplmc_terrain_advantage", TERRAIN_ADVANTAGE_ENABLE),
		#   (assign, "$g_dplmc_terrain_advantage", TERRAIN_ADVANTAGE_FORCE_SIEGE),
		#(try_end),
		###diplomacy end+
        (try_begin),
          (eq, "$g_siege_join", 1),
          (call_script, "script_party_calculate_strength", "p_main_party", 1), #skip player
          (assign, ":player_party_strength", reg0),
          (val_div, ":player_party_strength", 5),
        (else_try),
          (assign, ":player_party_strength", 0),
        (try_end),

        (call_script, "script_party_calculate_strength", "p_collective_ally", 0),
        (assign, ":ally_party_strength", reg0),
        (val_div, ":ally_party_strength", 5),
        (call_script, "script_party_calculate_strength", "p_collective_enemy", 0),
        (assign, ":enemy_party_strength", reg0),
        (val_div, ":enemy_party_strength", 10),

        (store_add, ":friend_party_strength", ":player_party_strength", ":ally_party_strength"),
        (try_begin),
          (eq, ":friend_party_strength", 0),
          (store_div, ":enemy_party_strength_for_p", ":enemy_party_strength", 2),
        (else_try),
          (assign, ":enemy_party_strength_for_p", ":enemy_party_strength"),
          (val_mul, ":enemy_party_strength_for_p", ":player_party_strength"),
          (val_div, ":enemy_party_strength_for_p", ":friend_party_strength"),
        (try_end),

        (val_sub, ":enemy_party_strength", ":enemy_party_strength_for_p"),
        (inflict_casualties_to_party_group, "p_main_party", ":enemy_party_strength_for_p", "p_temp_casualties"),
        (call_script, "script_print_casualties_to_s0", "p_temp_casualties", 0),
        (str_store_string_reg, s8, s0),

        (inflict_casualties_to_party_group, "$g_ally_party", ":enemy_party_strength", "p_temp_casualties"),
        (call_script, "script_print_casualties_to_s0", "p_temp_casualties", 0),
        (str_store_string_reg, s9, s0),
        (party_collect_attachments_to_party, "$g_ally_party", "p_collective_ally"),

        (inflict_casualties_to_party_group, "$g_enemy_party", ":friend_party_strength", "p_temp_casualties"),
        (call_script, "script_print_casualties_to_s0", "p_temp_casualties", 0),
        (str_store_string_reg, s10, s0),
        (party_collect_attachments_to_party, "$g_enemy_party", "p_collective_enemy"),

        (try_begin),
          (call_script, "script_party_count_members_with_full_health","p_main_party"),
          (le, reg0, 0),
          (str_store_string, s4, "str_siege_defender_order_attack_failure"),
        (else_try),
          (call_script, "script_party_count_members_with_full_health","p_collective_enemy"),
          (le, reg0, 0),
          (assign, "$g_battle_result", 1),
          (str_store_string, s4, "str_siege_defender_order_attack_success"),
        (else_try),
          (str_store_string, s4, "str_siege_defender_order_attack_continue"),
        (try_end),
		###diplomacy start+
		##Revert terrain advantage settings
		#(assign, "$g_dplmc_terrain_advantage", ":save_dplmc_terrain_advantage"),
		###diplomacy end+
    ],
    [
      ("continue",[],"Continue...",[
          (jump_to_menu,"mnu_siege_started_defender"),
          ]),
    ]
  ),

  (
    "enter_your_own_castle",0,
    "{s10}",
    "none",
    [
      (try_begin),
	  ##diplomacy start+ Add support for the player as co-ruler of an NPC faction
	    (is_between, "$players_kingdom", kingdoms_begin, kingdoms_end),
		(neg|is_between, "$supported_pretender", pretenders_begin, pretenders_end), #SB : exception for honorific
		(call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$players_kingdom"),
		(ge, reg0, DPLMC_FACTION_STANDING_LEADER_SPOUSE),
		(try_begin),
			(eq, "$character_gender", tf_female),
			(call_script, "script_dplmc_print_cultural_word_to_sreg", "trp_player", DPLMC_CULTURAL_TERM_KING_FEMALE, s10),
		(else_try),
			(call_script, "script_dplmc_print_cultural_word_to_sreg", "trp_player", DPLMC_CULTURAL_TERM_KING, s10),
		(try_end),
		(str_store_string, s10, "@As you approach, you are spotted by the castle guards, who welcome you and open the gates for their {s10}."),
	  (else_try),
	  ##diplomacy end+
        (neg|is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
        (faction_get_slot, ":faction_leader", "fac_player_supporters_faction", slot_faction_leader),
        (eq, ":faction_leader", "trp_player"),
        (str_store_string, s10, "@As you approach, you are spotted by the castle guards, who welcome you and open the gates for their {king/queen}."),
      (else_try),
        (str_store_string, s10, "@As you approach, you are spotted by the castle guards, who welcome you and open the gates for their {lord/lady}."),
      (try_end),

      (str_store_party_name, s2, "$current_town"),
    ],
    [
      ("continue",[],"Continue...",
       [ (jump_to_menu,"mnu_town"),
        ]),
    ],
  ),

  (
    "village",mnf_enable_hot_keys,
    "{s10} {s12}^{s11}^{s6}{s7}^{s35}",
    "none",
    [
        (assign, "$current_town", "$g_encountered_party"),
	(stop_all_sounds, 1), #madsci bug fix to ambient sounds that dont stop

        (try_begin),
          (party_get_slot, ":center_lord", "$current_town", slot_town_lord),
          (ge, ":center_lord", 0),
          (set_fixed_point_multiplier, 100),
          (position_set_x, pos0, 70),
          (position_set_y, pos0, 5),
          (position_set_z, pos0, 75),
          (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", ":center_lord", pos0),
        (try_end),

        (call_script, "script_update_center_recon_notes", "$current_town"),

        (assign, "$g_defending_against_siege", 0), #required for bandit check
        (assign, "$g_battle_result", 0),
        (assign, "$qst_collect_taxes_currently_collecting", 0),
        (assign, "$qst_train_peasants_against_bandits_currently_training", 0),

        (try_begin),
          (gt, "$auto_enter_menu_in_center", 0),
          (jump_to_menu, "$auto_enter_menu_in_center"),
          (assign, "$auto_enter_menu_in_center", 0),
        (try_end),

        (try_begin),
          (neq, "$g_player_raiding_village",  "$current_town"),
          (assign, "$g_player_raiding_village", 0),
        (else_try),
          (jump_to_menu, "mnu_village_loot_continue"),
        (try_end),

        (try_begin),#Fix for collecting taxes
          (eq, "$g_town_visit_after_rest", 1),
          (assign, "$g_town_visit_after_rest", 0),
        (try_end),

        (str_store_party_name,s2, "$current_town"),
        (party_get_slot, ":center_lord", "$current_town", slot_town_lord),
        (store_faction_of_party, ":center_faction", "$current_town"),
        (str_store_faction_name,s9,":center_faction"),

      #Religion of the various villages
      (try_begin),
        (neg|party_slot_eq, "$current_town", slot_village_state, svs_looted),
        (neg|party_slot_eq, "$current_town", slot_village_state, svs_being_raided),
        (neg|party_slot_ge, "$current_town", slot_village_infested_by_bandits, 1),
        #(troop_get_slot, ":religion_player","trp_player", slot_troop_religion),
        (party_get_slot, ":religion_center", "$current_town", slot_center_religion),
        (try_begin),
          (eq, ":religion_center", slot_religion_christian_chalcedonian),
          (str_store_string, s35, "@^This is a Chalcedonian Christian village."),
        (else_try),
          (eq, ":religion_center", slot_religion_christian_arian),
          (str_store_string, s35, "@^This is an Arian Christian village."),
        (else_try),
          (eq, ":religion_center", slot_religion_christian_miaphysite),
          (str_store_string, s35, "@^This is a Miaphysite Christian village."),
        (else_try),
          (eq, ":religion_center", slot_religion_christian_nestorian),
          (str_store_string, s35, "@^This is a Nestorian Christian village."),
        (else_try),
          (eq, ":religion_center", slot_religion_christian_donatist),
          (str_store_string, s35, "@^This is a Donatist Christian village."),
        (else_try),
          (eq, ":religion_center", slot_religion_paganism),
          (str_store_string, s35, "@^This is a Pagan village."),
        (else_try),
          (eq, ":religion_center", slot_religion_zoroastrianism),
          (str_store_string, s35, "@^This is a Mazdaist Zoroastrian village."),
        (else_try),
          (eq, ":religion_center", slot_religion_zurvanism),
          (str_store_string, s35, "@^This is a Zurvanist Zoroastrian village."),
        (else_try),
          (eq, ":religion_center", slot_religion_roman_paganism),
          (str_store_string, s35, "@^This is a Roman Pagan village."),
        (else_try),
          (eq, ":religion_center", slot_religion_judaism),
          (str_store_string, s35, "@^This is a Jewish village."),
        (else_try),
          (str_store_string, s35, "@^This village has no known religion."),
        (try_end),
      (try_end),
      #Village Religions end

        (try_begin),
          (ge, ":center_lord", 0),
          (str_store_troop_name,s8,":center_lord"),
          (str_store_string,s7,"@{s8} of {s9}"),
        (try_end),

        (str_clear, s10),
        (str_clear, s12),

        (try_begin),
          (neg|party_slot_eq, "$current_town", slot_village_state, svs_looted),
          (str_store_string, s60, s2),

          (party_get_slot, ":prosperity", "$current_town", slot_town_prosperity),
		  (try_begin),
			(eq, "$cheat_mode", 1),
			(assign, reg4, ":prosperity",),
			(display_message, "@{!}Prosperity: {reg4}"),
		  (try_end),

		  #(val_add, ":prosperity", 5),
          (store_div, ":str_id", ":prosperity", 10),
		  (val_min, ":str_id", 9),
		  (val_add, ":str_id", "str_village_prosperity_0"),
          (str_store_string, s10, ":str_id"),


          (store_div, ":str_id", ":prosperity", 20),
		  (val_min, ":str_id", 4),
          (party_get_current_terrain, ":terrain", "$current_town"),
		  (try_begin),
            (this_or_next|eq, ":terrain", rt_desert),
            (eq, ":terrain", rt_desert_forest),
		 	(val_add, ":str_id", "str_oasis_village_alt_prosperity_0"),
		  (else_try),
			(val_add, ":str_id", "str_village_alt_prosperity_0"),
		  (try_end),

          (str_store_string, s12, ":str_id"),
        (try_end),

        (str_clear, s11),
        ##diplomacy start+
		(assign, ":save_reg0", reg0),#save variables
		(assign, ":save_reg4", reg4),
		(assign, reg0, 0),
		(assign, reg4, 0),
		(try_begin),#If there's a relation of some kind, write it to s11 (which we'll overwrite below)
			(lt, ":center_lord", 1),
		(else_try),
			#your relative
			(call_script, "script_troop_get_family_relation_to_troop", ":center_lord", "trp_player"),#outputs to s11, reg0, and reg4
			(ge, reg0, 1),#Fall through if this not a relative
		(else_try),
			#your current liege
			(eq, ":center_faction", "$players_kingdom"),
			(is_between, ":center_faction", kingdoms_begin, kingdoms_end),#include fac_player_supporters_faction for claimant quest
			(faction_slot_eq, ":center_faction", slot_faction_leader, ":center_lord"),
			(str_store_string, s11, "@liege"),
			(assign, reg0, 1),
		(else_try),
			#your former liege if you renounced a kingdom
			(eq, ":center_faction", "$players_oath_renounced_against_kingdom"),
			(is_between, ":center_faction", npc_kingdoms_begin, npc_kingdoms_end),
			(faction_slot_eq, ":center_faction", slot_faction_leader, ":center_lord"),
			(str_store_string, s11, "@former liege"),
			(assign, reg0, 1),
		(else_try),
			#stop here for lords you haven't met, or non-hero troops
			(this_or_next|neg|troop_is_hero, ":center_lord"),
			(troop_slot_eq, ":center_lord", slot_troop_met, 0),
		(else_try),
			#check for affiliates
			(call_script, "script_dplmc_is_affiliated_family_member", ":center_lord"),
			(ge, reg0, 1),
			(try_begin),
				(ge, "$g_encountered_party_relation", 0),#don't say "ally" when you might fight them, as that's confusing
				(str_store_string, s11, "str_dplmc_ally"),
			(else_try),
				(str_store_string, s11, "@affiliate"),
			(try_end),
		(else_try),
			#check for former companions
			(call_script, "script_troop_get_player_relation", ":center_lord"),
			(is_between, ":center_lord", companions_begin, companions_end),
			(neg|troop_slot_eq, ":center_lord", slot_troop_playerparty_history, dplmc_pp_history_nonplayer_entry),
			(try_begin),
			   (ge, "$g_encountered_party_relation", 0),#don't say "ally" when you might fight them, as that's confusing
			   (ge, reg0, 50),
			   (str_store_string, s11, "str_dplmc_ally"),
			(else_try),
				(ge, "$g_encountered_party_relation", 0),
				(ge, reg0, 20),
				(str_store_string, s11, "str_dplmc_friend"),
			(else_try),
				(str_store_string, s11, "@former companion"),
			(try_end),
			(assign, reg0, 1),
		(else_try),
			#don't print "friend" if you might fight them
			(lt, "$g_encountered_party_relation", 0),
			(assign, reg0, 0),
		(else_try), #SB : local instead of reg
			#check for friends
            (call_script, "script_troop_get_player_relation", ":center_lord"),
			(store_div, ":relation", reg0, 50),#right now reg0 holds the relation with the player
			(gt, ":relation", 1),
			(str_store_string, s11, "str_dplmc_friend"),
            (assign, reg0, 1),
		(else_try),
			#check for marshall
			(eq, ":center_faction", "$players_kingdom"),
			(faction_slot_eq, ":center_faction", slot_faction_marshall, ":center_lord"),
			(str_store_string, s11, "@marshall"),
		(else_try),
			#check for vassal of player if nothing else to say
			(call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", ":center_faction"),
			(val_add, reg0, 1),
			(val_sub, reg0, DPLMC_FACTION_STANDING_LEADER_SPOUSE),
			(ge, reg0, 1),
			(str_store_string, s11, "@vassal"),
		(else_try),
			(assign, reg0, 0),
		(try_end),
		##diplomacy end+
        (try_begin),
          # (party_slot_eq, "$current_town", slot_village_state, svs_looted),
          # #SB : cancel string clear
          # (str_clear, s11),
        # (else_try),
          (eq, ":center_lord", "trp_player"),
          (str_store_string,s11,"@ This village and the surrounding lands belong to you."),
		##diplomacy start+ If reg0 > 0, a relation string has been written into s11
		(else_try),
		  (ge, reg0, 1),
		  (str_store_string,s11,"@ You remember that this village and the surrounding lands belong to your {s11} {s7}."),
		##diplomacy end+
        (else_try),
          (ge, ":center_lord", 0),
          (str_store_string,s11,"@ You remember that this village and the surrounding lands belong to {s7}."),
        (else_try),
          (str_store_string,s11,"@ These lands belong to no one."),
        (try_end),
		##diplomacy start+
		(assign, reg0, ":save_reg0"),#revert registers
		(assign, reg4, ":save_reg4"),
		##diplomacy end+

        (str_clear, s7),
        (try_begin),
          (neg|party_slot_eq, "$current_town", slot_village_state, svs_looted),
          (party_get_slot, ":center_relation", "$current_town", slot_center_player_relation),
          (call_script, "script_describe_center_relation_to_s3", ":center_relation"),
          (assign, reg9, ":center_relation"),
          (str_store_string, s7, "@{!} {s3} ({reg9})."),
        (try_end),
        (str_clear, s6),
        (try_begin),
          (party_slot_ge, "$current_town", slot_village_infested_by_bandits, 1),
          (party_get_slot, ":bandit_troop", "$current_town", slot_village_infested_by_bandits),
          (store_character_level, ":player_level", "trp_player"),
          (val_min, ":player_level", 63),
          ## SB : adjust bandit levels to manageable levels, reinforcements based on party size
          (store_add, "$qst_eliminate_bandits_infesting_village_num_bandits", ":player_level", 10),
          (val_div, "$qst_eliminate_bandits_infesting_village_num_bandits", 2),
          (faction_get_slot, ":limit", ":center_faction", dplmc_slot_faction_serfdom),
          (options_get_campaign_ai, ":reduced"),
          (val_mul, ":reduced", 3), #poor ai = more base bandits
          (val_sub, ":reduced", ":limit"),
          (val_add, "$qst_eliminate_bandits_infesting_village_num_bandits", ":reduced"),
          (val_mul, "$qst_eliminate_bandits_infesting_village_num_bandits", 120),
          (val_div, "$qst_eliminate_bandits_infesting_village_num_bandits", 100),
          (val_max, "$qst_eliminate_bandits_infesting_village_num_bandits", 1),

          # (party_get_num_companions, ":party_size", "$current_town"), #ideal size is 50
          (call_script, "script_party_count_fit_regulars", "$current_town"),
          (assign, ":party_size", reg0),
          (store_div, ":lower_size", ":party_size", 3), #about 2/3rd stay back
          (store_div, ":limit", ":center_relation", 5),
          (val_add, ":limit", 60),
          (store_random_in_range, "$qst_eliminate_bandits_infesting_village_num_villagers", ":lower_size", ":limit"),
          (val_min, "$qst_eliminate_bandits_infesting_village_num_villagers", ":party_size"),
          (assign, reg8, "$qst_eliminate_bandits_infesting_village_num_bandits"),
          (str_store_troop_name_by_count, s35, ":bandit_troop", "$qst_eliminate_bandits_infesting_village_num_bandits"),
          (str_store_string, s6, "@ The village is infested by {reg8} {s35}."),

          (assign, "$g_enemy_party", -1), #new, no known enemy party while saving village from bandits
          (assign, "$g_ally_party", -1), #new, no known enemy party while saving village from bandits

          ## SB : adjust meshes as well
          (try_begin),
            (eq, ":bandit_troop", "trp_forest_bandit"),
            (set_background_mesh, "mesh_pic_forest_bandits"),
          (else_try),
            (this_or_next|eq, ":bandit_troop", "trp_steppe_bandit"),
            (eq, ":bandit_troop", "trp_desert_bandit"),
            (set_background_mesh, "mesh_pic_steppe_bandits"),
          (else_try),
            (this_or_next|eq, ":bandit_troop", "trp_steppe_bandit"),
            (eq, ":bandit_troop", "trp_taiga_bandit"),
            (set_background_mesh, "mesh_pic_mountain_bandits"),
          (else_try),
            (eq, ":bandit_troop", "trp_sea_raider"),
            (set_background_mesh, "mesh_pic_sea_raiders"),
          (else_try),
            (store_faction_of_troop, ":faction_no", ":bandit_troop"),
            (this_or_next|is_between, ":faction_no", kingdoms_begin, kingdoms_end),
            (eq, ":faction_no", "fac_deserters"),
            (set_background_mesh, "mesh_pic_deserters"),
          (else_try),
           ##diplmacy begin
            (eq, ":bandit_troop", "trp_peasant_woman"),
            #SB : preview actual amount of mercs
            (party_get_num_companions, reg8, "$current_town"),
            (party_count_members_of_type, ":amount", "$current_town", "trp_farmer"),
            (val_sub, reg8, ":amount"),
            (party_count_members_of_type, ":amount", "$current_town", "trp_peasant_woman"),
            (val_sub, reg8, ":amount"),
            (str_store_string, s6, "@ The peasants {reg8?hired {reg8} mercenaries and :}are rebelling against you."),
            (set_background_mesh, "mesh_pic_villageriot"),
          (else_try),
           ##diplomacy end
            (set_background_mesh, "mesh_pic_bandits"),
          (try_end),
        (else_try),
          (this_or_next|party_slot_eq, "$current_town", slot_village_state, svs_looted),
          (party_slot_eq, "$current_town", slot_village_state, svs_deserted),
          (str_store_string, s6, "@ The village has been looted. A handful of souls scatter as you pass through the burnt out houses."),
          (try_begin),
            (neq, "$g_player_raid_complete", 1),
            (play_track, "track_empty_village", 1),
          (try_end),
          (set_background_mesh, "mesh_pic_looted_village"),
        (else_try),
          (party_slot_eq, "$current_town", slot_village_state, svs_being_raided),
          (str_store_string, s6, "@ The village is being raided."),
        (else_try), #SB : script call
          (call_script, "script_set_town_picture"),
        (try_end),

        (try_begin),
          (eq, "$g_player_raid_complete", 1),
          (try_begin), #SB : branching menu
            (party_slot_eq, "$current_town", slot_village_state, svs_looted),
            (jump_to_menu, "mnu_village_loot_complete"),
          (else_try), #stay on this menu
            (party_slot_eq, "$current_town", slot_village_state, svs_deserted),
            (jump_to_menu, "mnu_village_enslave_complete"),
          (try_end),
          (assign, "$g_player_raid_complete", 0),
          #SB : reinforce quest state
          (try_begin),
            (check_quest_active, "qst_hunt_down_fugitive"),
            (quest_slot_eq, "qst_hunt_down_fugitive", slot_quest_target_center, "$current_town"),
            (quest_set_slot, "qst_hunt_down_fugitive", slot_quest_current_state, 3),
          (try_end),
        (else_try),
          (party_get_slot, ":raider_party", "$current_town", slot_village_raided_by),
          (gt, ":raider_party", 0),
        # Process here...
        (try_end),

        (try_begin),
          (eq,"$g_leave_town",1),
          (assign,"$g_leave_town",0),
          (change_screen_return),
        (try_end),

        (try_begin),
          (store_time_of_day, ":cur_hour"),
          (ge, ":cur_hour", 5),
          (lt, ":cur_hour", 21),
          (assign, "$town_nighttime", 0),
        (else_try),
          (assign, "$town_nighttime", 1),
        (try_end),
    ],
    [
      ("village_manage",
      [
        (call_script, "script_cf_village_normal_cond", "$current_town"), #SB : script condition
        (assign, reg0, 0),
        (try_begin),
          (store_faction_of_party, ":fac", "$current_town"),
          (faction_slot_eq, ":fac", slot_faction_leader, "trp_player"),
          (faction_slot_ge, ":fac", dplmc_slot_faction_centralization, 1),
          (assign, reg0, 1),
        (else_try),
          (party_slot_eq, "$current_town", slot_town_lord, "trp_player"),
          (assign, reg0, 1),
        (try_end),
        (eq, reg0, 1),        ]
       ,"Manage this village.",
       [
        (assign, "$g_next_menu", "mnu_village"),
        (assign, reg63, 1),
        (jump_to_menu, "mnu_center_manage_2"),
        ]),
      ("recruit_volunteers",
      [
        (call_script, "script_cf_village_recruit_volunteers_cond"),
        (neq, "$freelancer_state", 1), #can't recruit troops while in freelancer
       ]
       ,"Recruit Volunteers.",
       [
        (try_begin), #chief anadido
          (troop_slot_ge, "trp_player", slot_troop_renown, 35), #higher renown cost to recruit troops to form an army - more realistic for the period
          (try_begin),
            (call_script, "script_cf_enter_center_location_bandit_check"),
          (else_try),
            (jump_to_menu, "mnu_recruit_volunteers"),
          (try_end),
        (else_try), #chief anadido
          (display_message,"@You need more renown or to ask the Village Elder for help.",0xFFFFAAAA), #chief anadido
        (try_end), #chief anadido
        ]),
      ("village_center",[(call_script, "script_cf_village_normal_cond", "$current_town"), #SB : script condition
       ]
       ,"Go to the village center.",
       [
          (try_begin),
            (call_script, "script_cf_enter_center_location_bandit_check"),
          (else_try),
            (party_get_slot, ":village_scene", "$current_town", slot_castle_exterior),
            (modify_visitors_at_site,":village_scene"),
            (reset_visitors),
            (party_get_slot, ":village_elder_troop", "$current_town",slot_town_elder),
		(try_begin),
		(le, ":village_elder_troop", 0),
		(assign, ":village_elder_troop", "trp_manhunter"), #madsci failsafe
		(try_end),
            (set_visitor, 11, ":village_elder_troop"),
            ##diplomacy begin
            (try_begin),
              (gt, "$g_player_chamberlain", 0),
              (call_script, "script_dplmc_appoint_chamberlain"),  #fix for wrong troops after update
              (party_get_slot, ":town_lord", "$current_town", slot_town_lord),
              (eq, ":town_lord", "trp_player"),
              (set_visitor, 9, "$g_player_chamberlain"),
            (try_end),
            ##diplomacy end


           (call_script, "script_init_town_walkers"),

            (try_begin),
              (eq, "$current_town", "p_village_150"),
              (is_between,"$g_aurelian_hint",0,6),
              (set_visitors, 8, "trp_aurelian_fanatic", 1),
            (try_end),

           (try_begin),
             (check_quest_active, "qst_hunt_down_fugitive"),
             (neg|is_currently_night),
             (quest_slot_eq, "qst_hunt_down_fugitive", slot_quest_target_center, "$current_town"),
             (neg|check_quest_concluded, "qst_hunt_down_fugitive"), #SB : other condition
             (neg|check_quest_succeeded, "qst_hunt_down_fugitive"),
             (neg|check_quest_failed, "qst_hunt_down_fugitive"),
             (set_visitor, 45, "trp_fugitive"),
           (try_end),

           (set_jump_mission,"mt_village_center"),
           (jump_to_scene,":village_scene"),
           (change_screen_mission),
         (try_end),
        ],"Door to the village center."),
       ##diplomacy begin
      ("dplmc_village_elder_meeting",[
         (call_script, "script_cf_village_normal_cond", "$current_town"), #SB : conditional check
	   ##diplomacy start+
		#rubik had a good idea: only enable this after having met the village elder
		(party_get_slot, ":village_elder_troop", "$current_town",slot_town_elder),
		(gt, ":village_elder_troop", 0),
		(this_or_next|eq, "$cheat_mode", 1),#Always can jump to village elder in cheat mode
		(this_or_next|eq, "$players_kingdom", "$g_encountered_party_faction"), #allow when member
        (troop_slot_ge,":village_elder_troop", slot_troop_met, 1),
		##diplomacy end+
       ]
       ,"Meet the Village Elder.",
       [
         (try_begin),
           (call_script, "script_cf_enter_center_location_bandit_check"),
         (else_try),
           (party_get_slot, ":village_scene", "$current_town", slot_castle_exterior),
	   (party_get_slot, ":village_elder_troop", "$current_town",slot_town_elder),
           (modify_visitors_at_site,":village_scene"),
           (reset_visitors),
           (set_visitor, 11, ":village_elder_troop"),
           (try_begin), #SB : supporting village_elder_found_chamberlain dialog option
              (party_slot_eq, "$current_town", slot_town_lord, "trp_player"),
              (eq, "$g_player_chamberlain", "trp_dplmc_chamberlain"),
              (set_visitor, 9, "$g_player_chamberlain"),
           (try_end),

           (set_jump_mission,"mt_village_center"),
           (jump_to_scene,":village_scene"),
           (change_screen_map_conversation, ":village_elder_troop"),
         (try_end),
        ]),
      ##diplomacy end
	##diplomacy start+
	#If you can't jump to the village elder, explain why
    ("dplmc_village_elder_meeting_denied",
	[
		#Only show this when the player would get the rest of the village menus
        (call_script, "script_cf_village_normal_cond", "$current_town"), #SB : script condition
	    #There is a valid village elder, and you haven't met him,
		#and there isn't another condition that enables the jump.
		(party_get_slot, ":village_elder_troop", "$current_town",slot_town_elder),
		(gt, ":village_elder_troop", 0),
		(eq, "$cheat_mode", 0),
		(troop_slot_eq, ":village_elder_troop", slot_troop_met, 0),
		(disable_menu_option),
		],
       "You have not met the village elder yet.",
       [
     ]),
	 ##diplomacy end+
      ("village_buy_food",[(party_slot_eq, "$current_town", slot_village_state, svs_normal),
                           (neg|party_slot_ge, "$current_town", slot_village_infested_by_bandits, 1),
				(party_get_slot, ":merchant_troop", "$current_town", slot_town_elder),
				(gt, ":merchant_troop", 0), #madsci
                           ],"Buy supplies from the peasants.",
       [
         (try_begin),
           (call_script, "script_cf_enter_center_location_bandit_check"),
         (else_try),
           (party_get_slot, ":merchant_troop", "$current_town", slot_town_elder),

      #(try_for_range, ":cur_goods", trade_goods_begin, trade_goods_end),
        #(store_sub, ":cur_good_price_slot", ":cur_goods", trade_goods_begin),
        #(val_add, ":cur_good_price_slot", slot_town_trade_good_prices_begin),
		#(party_get_slot, ":cur_price", "$current_town", ":cur_good_price_slot"),
	    #(call_script, "script_center_get_production", "$current_town", ":cur_goods"),
        #(assign, reg13, reg0),
	    #(call_script, "script_center_get_consumption", "$current_town", ":cur_goods"),
        #(str_store_party_name, s1, "$current_town"),
        #(str_store_item_name, s2, ":cur_goods"),
		#(assign, reg16, ":cur_price"),
        #(display_log_message, "@DEBUG:{s1}-{s2}, prd: {reg13}, con: {reg0}, raw: {reg1}, cns: {reg2}, fee: {reg16}"),
	  #(try_end),
	(assign, "$g_talk_troop", ":merchant_troop"), #madsci
           (change_screen_trade, ":merchant_troop"),
         (try_end),
         ]),
##diplomacy start+
#Import rubik's Auto-Sell options from Custom Commander
      ("dplmc_village_auto_sell",
        [
        (party_slot_eq, "$current_town", slot_village_state, svs_normal),
        (neg|party_slot_ge, "$current_town", slot_village_infested_by_bandits, 1),
        (party_get_slot, ":village_elder_troop", "$current_town", slot_town_elder),
        (gt, ":village_elder_troop", 0),
        ],
       "Sell items automatically.",
       [
          (assign, "$g_next_menu", "mnu_village"),
          (jump_to_menu,"mnu_dplmc_trade_auto_sell_begin"),
        ]),

      ("dplmc_village_auto_buy_food",
        [
        (party_slot_eq, "$current_town", slot_village_state, svs_normal),
        (neg|party_slot_ge, "$current_town", slot_village_infested_by_bandits, 1),
        (party_get_slot, ":village_elder_troop", "$current_town", slot_town_elder),
        (gt, ":village_elder_troop", 0),
        ],
       "Buy food automatically.",
       [
          (assign, "$g_next_menu", "mnu_village"),
          (jump_to_menu,"mnu_dplmc_trade_auto_buy_food_begin"),
        ]),
##diplomacy end+
      ("village_attack_bandits",[
        (party_slot_ge, "$current_town", slot_village_infested_by_bandits, 1),
        ##diplomacy begin
        (neg|party_slot_eq, "$current_town", slot_village_infested_by_bandits, "trp_peasant_woman"),
        ##diplmacy end
        ],
       "Attack the bandits.",
       [(party_get_slot, ":bandit_troop", "$current_town", slot_village_infested_by_bandits),
		(try_begin),
		(le, ":bandit_troop", 0),
		(assign, ":bandit_troop", "trp_bandit"),
		(try_end),
        (party_get_slot, ":scene_to_use", "$current_town", slot_castle_exterior),
        (modify_visitors_at_site,":scene_to_use"),
        (reset_visitors),
        (set_visitors, 0, ":bandit_troop", "$qst_eliminate_bandits_infesting_village_num_bandits"),
        (set_visitors, 2, "trp_farmer", "$qst_eliminate_bandits_infesting_village_num_villagers"),
        (set_party_battle_mode),
        (set_battle_advantage, 0),
        (assign, "$g_battle_result", 0),
        (set_jump_mission,"mt_village_attack_bandits"),
        (jump_to_scene, ":scene_to_use"),
        (assign, "$g_next_menu", "mnu_village_infest_bandits_result"),
        (jump_to_menu, "mnu_battle_debrief"),
        (assign, "$g_mt_mode", vba_normal),
        (change_screen_mission),
        ]),

      ("village_wait",
       [(party_slot_eq, "$current_town", slot_center_has_manor, 1),
        (party_slot_eq, "$current_town", slot_town_lord, "trp_player"),
        ],
         "Wait here for some time.",
         [
           (assign,"$auto_enter_town","$current_town"),
           (assign, "$g_last_rest_center", "$current_town"),

           (try_begin),
             (party_is_active, "p_main_party"),
             (party_get_current_terrain, ":cur_terrain", "p_main_party"),
             (try_begin),
               (eq, ":cur_terrain", rt_desert),
               (unlock_achievement, ACHIEVEMENT_SARRANIDIAN_NIGHTS),
             (try_end),
           (try_end),

           (rest_for_hours_interactive, 24 * 7, 5, 1), #rest while attackable

           (change_screen_return),
          ]),

       ##diplomacy begin
      ("dplmc_village_counter_insurgency",[
        (party_slot_eq, "$current_town", slot_village_infested_by_bandits, "trp_peasant_woman"),
        ],
       "Counter the insurgency.",
       [
          (store_random_in_range, ":enmity", -10, -5),
          (call_script, "script_change_player_relation_with_center", "$current_town", ":enmity"),
          (call_script, "script_calculate_battle_advantage"),
          (set_battle_advantage, reg0),
          (set_party_battle_mode),
          (assign, "$g_battle_result", 0),
          (assign, "$g_village_raid_evil", 1), #check
          (set_jump_mission,"mt_village_raid"),
          (party_get_slot, ":scene_to_use", "$current_town", slot_castle_exterior),
          (jump_to_scene, ":scene_to_use"),
          (assign, "$g_next_menu", "mnu_dplmc_village_riot_result"),

          # (call_script, "script_objectionable_action", tmt_humanitarian, "str_loot_village"),
          #SB : more appropriate message for tax rebels
          (call_script, "script_objectionable_action", tmt_humanitarian, "str_repress_farmers"),
          (jump_to_menu, "mnu_battle_debrief"),
          (change_screen_mission),
        ]),

      ("dplmc_village_negotiate",[
        (party_slot_eq, "$current_town", slot_village_infested_by_bandits, "trp_peasant_woman"),
        ],
       "Begin negotiations.",
       [
          (jump_to_menu, "mnu_dplmc_riot_negotiate"),
        ]),
        ##diplomacy end

      ("collect_taxes_qst",[(party_slot_eq, "$current_town", slot_village_state, svs_normal),
                            (neg|party_slot_ge, "$current_town", slot_village_infested_by_bandits, 1),
                            (check_quest_active, "qst_collect_taxes"),
                            (quest_get_slot, ":quest_giver_troop", "qst_collect_taxes", slot_quest_giver_troop),
                            (quest_slot_eq, "qst_collect_taxes", slot_quest_target_center, "$current_town"),
                            #SB : add ownership/faction check here
                            (party_slot_eq, "$current_town", slot_town_lord, ":quest_giver_troop"),
                            (neg|quest_slot_eq, "qst_collect_taxes", slot_quest_current_state, 4),
                            (str_store_troop_name, s1, ":quest_giver_troop"),
                            (quest_get_slot, reg5, "qst_collect_taxes", slot_quest_current_state),
                            ], "{reg5?Continue collecting taxes:Collect taxes} due to {s1}.",
       [(jump_to_menu, "mnu_collect_taxes"),]),

      ("train_peasants_against_bandits_qst",
       [
         (party_slot_eq, "$current_town", slot_village_state, svs_normal),
         (check_quest_active, "qst_train_peasants_against_bandits"),
         (neg|check_quest_concluded, "qst_train_peasants_against_bandits"),
         (quest_slot_eq, "qst_train_peasants_against_bandits", slot_quest_target_center, "$current_town"),
         ], "Train the peasants.",
       [(jump_to_menu, "mnu_train_peasants_against_bandits"),]),

      ("village_hostile_action",[(party_slot_eq, "$current_town", slot_village_state, svs_normal),
                                 (neg|party_slot_ge, "$current_town", slot_village_infested_by_bandits, 1),
                                 (party_slot_ge, "$current_town", slot_center_player_relation, -1), #relationship check, non-negative
                                 (check_quest_active, "qst_hunt_down_fugitive"),
                                 (quest_slot_eq, "qst_hunt_down_fugitive", slot_quest_target_center, "$current_town"),
                                 (neg|check_quest_concluded, "qst_hunt_down_fugitive"), #SB : other condition
                                 (neg|check_quest_succeeded, "qst_hunt_down_fugitive"),
                                 (neg|check_quest_failed, "qst_hunt_down_fugitive"),
                                 (quest_get_slot, ":quest_target_dna", "qst_hunt_down_fugitive", slot_quest_target_dna),
                                 (call_script, "script_get_name_from_dna_to_s50", ":quest_target_dna"),
								 ], "Demand to meet the family of {s50}.",
       [
       (call_script, "script_get_max_skill_of_player_party", "skl_persuasion"),
       (store_random_in_range, ":random_no", reg0, 100),
       #persuasion instead of straight out murdering everyone
       (call_script, "script_party_count_members_with_full_health","p_main_party"),
       (assign, ":player_party_size", reg0),
       (call_script, "script_party_count_members_with_full_health","$current_town"),
       (store_mul, ":villagers_party_size", reg0, 2), #twice the effective size
       (try_begin),
         (this_or_next|gt, ":random_no", 40),
         (gt, ":player_party_size", ":villagers_party_size"),
         (jump_to_menu, "mnu_village_hunt_down_fugitive_persuaded"),
       (else_try),
         (jump_to_menu,"mnu_village_start_attack"),
       (try_end),
           ]),

      ("village_hostile_action",[(party_slot_eq, "$current_town", slot_village_state, svs_normal),
                                 (neg|party_slot_ge, "$current_town", slot_village_infested_by_bandits, 1),
								 (neq, "$players_kingdom", "$g_encountered_party_faction"),
								 ], "Take a hostile action.",
       [(jump_to_menu,"mnu_village_hostile_action"),
           ]),

      # ("village_reports",[(eq, "$cheat_mode", 1),], "{!}CHEAT! Show reports.",
       # [(jump_to_menu,"mnu_center_reports"),
           # ]),
      ("village_leave",[],"Leave...",[(change_screen_return,0),
	  ##diplomacy start+
	  ##Importing auto-purchase of food from rubik's Custom Commander
	  (try_begin),
		 (party_slot_eq, "$current_town", slot_village_state, svs_normal),
		 (neg|party_slot_ge, "$current_town", slot_village_infested_by_bandits, 1),
		 (party_get_slot, ":merchant_troop", "$current_town",slot_town_elder),
		 (gt, ":merchant_troop", 0),
		 (call_script, "script_dplmc_initialize_autoloot", 0),#argument "0" means this does nothing if deemed unnecessary
		 (try_begin),
			(eq, "$g_dplmc_buy_food_when_leaving", 1),
			(call_script, "script_dplmc_auto_buy_food", "trp_player", ":merchant_troop"),
		 (try_end),
		 (try_begin),
			(eq, "$g_dplmc_sell_items_when_leaving", 1),
			(call_script, "script_dplmc_auto_sell", "trp_player", ":merchant_troop", "$g_dplmc_auto_sell_price_limit", all_items_begin, all_items_end, 2),
		 (try_end),
	  (try_end),
	  ##diplomacy end+
	  ]),
      #SB : consolidated cheats
      ("village_cheat", [(ge, "$cheat_mode", 1),],
      "Use cheats.",
      [(jump_to_menu, "mnu_town_cheats"),
      ]),
    ],
  ),

  (
    "village_hostile_action",0,
    "What action do you have in mind?",
    "none",
    [],
    [
      ("village_take_food",[
          (party_slot_eq, "$current_town", slot_village_state, svs_normal),
          (neg|party_slot_ge, "$current_town", slot_village_infested_by_bandits, 1),
          (party_get_slot, ":merchant_troop", "$current_town", slot_town_elder),
	(gt, ":merchant_troop", 0), #madsci
          #SB : loop break
          (assign, ":town_stores_not_empty", max_inventory_items + num_equipment_kinds),
          (try_for_range, ":slot_no", num_equipment_kinds, ":town_stores_not_empty"),
            (troop_get_inventory_slot, ":slot_item", ":merchant_troop", ":slot_no"),
            (ge, ":slot_item", 0),
            (assign, ":town_stores_not_empty", -1),
          (try_end),
          (eq, ":town_stores_not_empty", -1),
          ],"Force the peasants to give you supplies.",
       [
           (jump_to_menu, "mnu_village_take_food_confirm")
        ]),
      ("village_steal_cattle",
       [
          (party_slot_eq, "$current_town", slot_village_state, svs_normal),
          (party_slot_eq, "$current_town", slot_village_player_can_not_steal_cattle, 0),
          (neg|party_slot_ge, "$current_town", slot_village_infested_by_bandits, 1),
          (party_get_slot, ":num_cattle", "$current_town", slot_village_number_of_cattle),
          (neg|party_slot_eq, "$current_town", slot_town_lord, "trp_player"),
          (gt, ":num_cattle", 0),
          ],"Steal cattle.",
       [
           (jump_to_menu, "mnu_village_steal_cattle_confirm")
        ]),
      ("village_loot",[(party_slot_eq, "$current_town", slot_village_state, svs_normal),
                       (neg|party_slot_ge, "$current_town", slot_village_infested_by_bandits, 1),
                       (store_faction_of_party, ":center_faction", "$current_town"),
                       (store_relation, ":reln", "fac_player_supporters_faction", ":center_faction"),
                       (lt, ":reln", 0),
                       ],
       "Loot and burn this village.",
       [
#           (party_clear, "$current_town"),
#           (party_add_template, "$current_town", "pt_villagers_in_raid"),
           (jump_to_menu, "mnu_village_start_attack"),
           ]),
      ("forget_it",[],
      "Forget it.",[(jump_to_menu,"mnu_village")]),
    ],
  ),

  (
    "recruit_volunteers",0,
    "{s18}",
    "none",
    [(party_get_slot, ":volunteer_troop", "$current_town", slot_center_volunteer_troop_type),
     (party_get_slot, ":volunteer_amount", "$current_town", slot_center_volunteer_troop_amount),
     (party_get_free_companions_capacity, ":free_capacity", "p_main_party"),
     (store_troop_gold, ":gold", "trp_player"),
     (call_script, "script_game_get_join_cost", ":volunteer_troop"), #checks the value of the troop being recruited
     (assign, reg41, reg0),
     (val_div, reg41, 2), #hiring troops in villages will be cheaper

     #(store_div, ":gold_capacity", ":gold", 10),#10 siliquae per man
     (store_div, ":gold_capacity", ":gold", reg41),
     (assign, ":party_capacity", ":free_capacity"),
     (val_min, ":party_capacity", ":gold_capacity"),
     (try_begin),
       (gt, ":party_capacity", 0),
       (val_min, ":volunteer_amount", ":party_capacity"),
     (try_end),
     (assign, reg5, ":volunteer_amount"),
     (assign, reg7, 0),
     (try_begin),
       (gt, ":volunteer_amount", ":gold_capacity"),
       (assign, reg7, 1), #not enough money
     (try_end),
     (try_begin),
       (eq, ":volunteer_amount", 0),
       (str_store_string, s18, "@No one here seems to be willing to join your party."),
     (else_try),
       (store_mul, reg6, ":volunteer_amount", reg41),
       (str_store_troop_name_by_count, s3, ":volunteer_troop", ":volunteer_amount"),
       (try_begin),
         (eq, reg5, 1),
         (str_store_string, s18, "@One {s3} volunteers to follow you."),
       (else_try),
         (str_store_string, s18, "@{reg5} {s3} volunteer to follow you."),
       (try_end),
       (set_background_mesh, "mesh_pic_recruits"),
     (try_end),
    ],
    [


      ("continue",
      [
        (eq, reg7, 0),
        (eq, reg5, 0),
      ], #noone willing to join
      "Continue...",
      [
        (party_set_slot, "$current_town", slot_center_volunteer_troop_amount, -1),
        (jump_to_menu,"mnu_village"),
      ]),

      ("recruit_them",
      [
        (eq, reg7, 0),
        (gt, reg5, 0),
      ],
      "Recruit them ({reg6} siliquae).",
      [
        (call_script, "script_village_recruit_volunteers_recruit"),

        (jump_to_menu,"mnu_village"),
      ]),

      #SB : disable_menu_option
      ("continue_not_enough_gold",
      [
        (eq, reg7, 1),
        (disable_menu_option),
      ],
      "I don't have enough money...",
      [
        (jump_to_menu,"mnu_village"),
      ]),

      ("forget_it",
      [
      #SB : conditions now not applied
        # (eq, reg7, 0),
        # (gt, reg5, 0),
      ],
      "Forget it.",
      [
        (jump_to_menu,"mnu_village"),
      ]),
    ],
  ),

  (
    "village_hunt_down_fugitive_defeated",0,
    "A heavy blow from the fugitive sends you to the ground, and your vision spins and goes dark.\
 Time passes. When you open your eyes again you find yourself battered and bloody,\
 but luckily none of the wounds appear to be lethal.",
    "none",
    [
      (call_script, "script_fail_quest", "qst_hunt_down_fugitive"),
    ],
    [
      ("continue",[],"Continue...",[(jump_to_menu, "mnu_village"),
      #SB : renown loss for single target
      (call_script, "script_change_troop_renown", "trp_player", -2),
      # (party_remove_members, "$current_town", "trp_fugitive", 1),
      ]),
    ],
  ),

  (
    "village_hunt_down_fugitive_persuaded",0,
 "As the party member with the highest persuasion, {reg3?you:{s3}} managed to cajole the location of {s50} from his tight-lipped relatives. Backed with superior force of arms, your just argument seemed to take effect and the villagers grudgingly participate in the manhunt for the fugitive.\
 {reg4?But word of you arrival has reached the fugitive and he appears to have taken his own life:Within the hour, you've secured the fugitive on behalf of {s4}}.",
    "none",
    [   (call_script, "script_get_max_skill_of_player_party", "skl_persuasion"),
        (assign, ":max_skill_owner", reg1),
        (quest_get_slot, ":quest_target_dna", "qst_hunt_down_fugitive", slot_quest_target_dna),
        (call_script, "script_get_name_from_dna_to_s50", ":quest_target_dna"),

         #SB : tableau at bottom
         (try_begin),
           (eq, ":max_skill_owner", "trp_player"),
           (assign, reg3, 1),
         (else_try),
           (assign, reg3, 0),
           (str_store_troop_name, s3, ":max_skill_owner"),
           (call_script, "script_change_troop_renown", ":max_skill_owner", dplmc_companion_skill_renown),
         (try_end),

        (set_fixed_point_multiplier, 100),
        (position_set_x, pos0, 70),
        (position_set_y, pos0, 5),
        (position_set_z, pos0, 75),
        (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", ":max_skill_owner", pos0),
        (store_random_in_range, reg4, 0, 2), #TODO add some conditions, renown, time of day, etc
        (try_begin),
          (eq, reg4, 0),
          (party_force_add_prisoners, "p_main_party", "trp_fugitive", 1),
          (quest_get_slot, ":quest_giver_troop", "qst_hunt_down_fugitive", slot_quest_giver_troop),
          (str_store_troop_name, s4, ":quest_giver_troop"),
          (quest_set_slot, "qst_hunt_down_fugitive", slot_quest_current_state, 2),
        (else_try), #killed, player can claim credit
          (quest_set_slot, "qst_hunt_down_fugitive", slot_quest_current_state, 1),
        (try_end),
    ],

    [
      ("continue",[],"Continue...",[
        (call_script, "script_succeed_quest", "qst_hunt_down_fugitive"),
        (jump_to_menu, "mnu_village"),

      ]),
    ],
  ),

  (
    "village_infest_bandits_result",mnf_scale_picture,
    "{s9}",
    "none",
    [(try_begin),
       (eq, "$g_battle_result", 1),
       (jump_to_menu, "mnu_village_infestation_removed"),
     (else_try),
       (str_store_string, s9, "@Try as you might, you could not defeat the bandits.\
 Infuriated, they raze the village to the ground to punish the peasants,\
 and then leave the burning wasteland behind to find greener pastures to plunder."),
       (set_background_mesh, "mesh_pic_looted_village"),
     (try_end),
    ],
    [
      ("continue",[],"Continue...",
       [(party_set_slot, "$g_encountered_party", slot_village_infested_by_bandits, 0),
        (call_script, "script_village_set_state",  "$current_town", svs_looted),
        (party_set_slot, "$current_town", slot_village_raid_progress, 0),
        (party_set_slot, "$current_town", slot_village_recover_progress, 0),
        (try_begin),
          (check_quest_active, "qst_eliminate_bandits_infesting_village"),
          (quest_slot_eq, "qst_eliminate_bandits_infesting_village", slot_quest_target_center, "$g_encountered_party"),
          (call_script, "script_change_player_relation_with_center", "$g_encountered_party", -5),
          (call_script, "script_fail_quest", "qst_eliminate_bandits_infesting_village"),
          (call_script, "script_end_quest", "qst_eliminate_bandits_infesting_village"),
        (else_try),
          (check_quest_active, "qst_deal_with_bandits_at_lords_village"),
          (quest_slot_eq, "qst_deal_with_bandits_at_lords_village", slot_quest_target_center, "$g_encountered_party"),
          (call_script, "script_change_player_relation_with_center", "$g_encountered_party", -4),
          (call_script, "script_fail_quest", "qst_deal_with_bandits_at_lords_village"),
          (call_script, "script_end_quest", "qst_deal_with_bandits_at_lords_village"),
        (else_try),
          (call_script, "script_change_player_relation_with_center", "$g_encountered_party", -3),
        (try_end),
        (jump_to_menu, "mnu_village"),]),
    ],
  ),


  (
    "village_infestation_removed",mnf_disable_all_keys,
    "In a battle worthy of song, you and your men drive the bandits out of the village, making it safe once more.\
 The villagers have little left in the way of wealth after their ordeal, but they offer you {reg10?all they can find:a few heads of cattle}.",
    "none",
    [(party_get_slot, ":bandit_troop", "$g_encountered_party", slot_village_infested_by_bandits),
	(try_begin),
	(le, ":bandit_troop", 0),
	(assign, ":bandit_troop", "trp_bandit"),
	(try_end),
     (party_set_slot, "$g_encountered_party", slot_village_infested_by_bandits, 0),
     (party_clear, "p_temp_party"),
     (party_add_members, "p_temp_party", ":bandit_troop", "$qst_eliminate_bandits_infesting_village_num_bandits"),
     #todo actually give out some loot from the bandits
     #SB : tweaked player contribution by whether village is the same faction
     (try_begin),
       (eq, "$players_kingdom", "$g_encountered_party_faction"),
       (assign, "$g_strength_contribution_of_player", 65),
     (else_try),
       (assign, "$g_strength_contribution_of_player", 50),
     (try_end),
     (call_script, "script_party_give_xp_and_gold", "p_temp_party"),

     (assign, "$g_train_peasants_against_bandits_training_succeeded", 0), #SB : use to track before ending quest
     (party_get_slot, ":merchant_troop", "$current_town", slot_town_elder),
	(try_begin),
	(le, ":merchant_troop", 0), #madsci failsafe
	(assign, ":merchant_troop", "trp_temp_troop"),
	(troop_clear_inventory, "trp_temp_troop"),
	(try_end),
     (try_begin),
       (check_quest_active, "qst_eliminate_bandits_infesting_village"),
       (quest_slot_eq, "qst_eliminate_bandits_infesting_village", slot_quest_target_center, "$g_encountered_party"),
       (call_script, "script_end_quest", "qst_eliminate_bandits_infesting_village"),
       #Add quest reward
       (call_script, "script_change_player_relation_with_center", "$g_encountered_party", 5),
       #SB : back up elder inventory
       (call_script, "script_dplmc_copy_inventory", ":merchant_troop", "trp_temp_troop"),
       (assign, "$g_train_peasants_against_bandits_training_succeeded", 1),
       (assign, ":merchant_troop", "trp_temp_troop"),
     (else_try),
       (check_quest_active, "qst_deal_with_bandits_at_lords_village"),
       (quest_slot_eq, "qst_deal_with_bandits_at_lords_village", slot_quest_target_center, "$g_encountered_party"),
       (call_script, "script_succeed_quest", "qst_deal_with_bandits_at_lords_village"),
       (call_script, "script_change_player_relation_with_center", "$g_encountered_party", 3),
     (else_try),
     #Add normal reward
       (call_script, "script_change_player_relation_with_center", "$g_encountered_party", 4),
     (try_end),

     #SB : calculate amount of merchandise remaining
     (assign, ":num_items", 0),
     (try_for_range, ":slot_no", num_equipment_kinds, max_inventory_items + num_equipment_kinds),
        (store_random_in_range, ":rand", 0, 100),
        (lt, ":rand", 70),
        (troop_set_inventory_slot, ":merchant_troop", ":slot_no", -1),
     (else_try),
        (troop_get_inventory_slot, ":item_no", ":merchant_troop", ":slot_no"),
        (gt, ":item_no", 0),
        (item_get_type, ":itp", ":item_no"),
        (eq, ":itp", itp_type_goods),
        (val_add, ":num_items", 1),
     (try_end),
     #SB : check before we disappoint the player
       # (store_free_inventory_capacity, ":capacity", ":merchant_troop"),
       # (eq, ":capacity", max_inventory_items),
     (assign, reg10, ":num_items"),
     #SB : background mesh
     (set_background_mesh, "mesh_pic_mb_warrior_3"),
    ],
    [
      ("village_bandits_defeated_accept",[],"Take it as your just due.",[
	(jump_to_menu, "mnu_village"),
	(party_get_slot, ":merchant_troop", "$current_town", slot_town_elder),
		(try_begin),
		(le, ":merchant_troop", 0), #madsci failsafe
		(assign, ":merchant_troop", "trp_temp_troop"),
		(try_end),
	(troop_sort_inventory, ":merchant_troop"),
		(try_begin),
		(gt, reg10, 0),
			(try_begin), #normal village
			(eq, "$g_train_peasants_against_bandits_training_succeeded", 0),
			(change_screen_loot, ":merchant_troop"),
			(else_try), #quest village
			(eq, "$g_train_peasants_against_bandits_training_succeeded", 1),
			(change_screen_loot, "trp_temp_troop"),
			(try_end),
		(else_try), #arbitrary amount
		(store_random_in_range, reg10, 2, 5),
		(call_script, "script_create_cattle_herd", "$current_town", reg10),
		(try_end),
                                                                       ]),

      #SB : string for other option
      ("village_bandits_defeated_cont",[],  "Refuse, stating that they need these {reg10?items:livestock} more than you do.",
      [
        (call_script, "script_change_player_relation_with_center", "$g_encountered_party", 3),
        (call_script, "script_change_player_honor", 1),
        (jump_to_menu, "mnu_village")]),
    ],
  ),

  # (
    # "center_manage",0,
    # "{s19}^{reg6?^^You are\
 # currently building {s7}. The building will be completed after {reg8} day{reg9?s:}.:}",
    # "none",
    # [(assign, ":num_improvements", 0),
     # (str_clear, s18),
     # #SB : spt strings
     # (try_begin),
       # (party_slot_eq, "$g_encountered_party", slot_party_type, spt_village),
       # (assign, ":begin", village_improvements_begin),
       # (assign, ":end", village_improvements_end),
       # (str_store_string, s17, "@village"),
     # (else_try),
       # (assign, ":begin", walled_center_improvements_begin),
       # (assign, ":end", walled_center_improvements_end),
       # (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
       # (str_store_string, s17, "@town"),
     # (else_try),
       # (str_store_string, s17, "@castle"),
     # (try_end),

     # (try_for_range, ":improvement_no", ":begin", ":end"),
       # (party_slot_ge, "$g_encountered_party", ":improvement_no", 1),
       # (val_add,  ":num_improvements", 1),
       # (call_script, "script_get_improvement_details", ":improvement_no"),
       # (try_begin),
         # (eq,  ":num_improvements", 1),
         # (str_store_string_reg, s18, s0),
       # (else_try),
         # (str_store_string, s18, "@{!}{s18}, {s0}"),
       # (try_end),
     # (try_end),

     # (try_begin),
       # (eq,  ":num_improvements", 0),
       # (str_store_string, s19, "@The {s17} has no improvements."),
     # (else_try),
       # (str_store_string, s19, "@The {s17} has the following improvements:{s18}."),
     # (try_end),

     # (assign, reg6, 0),
     # (try_begin),
       # (party_get_slot, ":cur_improvement", "$g_encountered_party", slot_center_current_improvement),
       # (gt, ":cur_improvement", 0),
       # (call_script, "script_get_improvement_details", ":cur_improvement"),
       # (str_store_string, s7, s0),
       # (assign, reg6, 1),
       # (store_current_hours, ":cur_hours"),
       # (party_get_slot, ":finish_time", "$g_encountered_party", slot_center_improvement_end_hour),
       # (val_sub, ":finish_time", ":cur_hours"),
       # (store_div, reg8, ":finish_time", 24),
       # (val_max, reg8, 1),
       # (store_sub, reg9, reg8, 1),
     # (try_end),
    # ],
    # [
      # ("center_build_manor",[(eq, reg6, 0),
                             # (party_slot_eq, "$g_encountered_party", slot_party_type, spt_village),
                             # (party_slot_eq, "$g_encountered_party", slot_center_has_manor, 0),
                                  # ],
       # "Build a villa.",[(assign, "$g_improvement_type", slot_center_has_manor),
                         # (jump_to_menu, "mnu_center_improve"),]),
      # ("center_build_fish_pond",[(eq, reg6, 0),
                                 # (party_slot_eq, "$g_encountered_party", slot_party_type, spt_village),
                                 # (party_slot_eq, "$g_encountered_party", slot_center_has_fish_pond, 0),
                                  # ],
       # "Build a mill.",[(assign, "$g_improvement_type", slot_center_has_fish_pond),
                             # (jump_to_menu, "mnu_center_improve"),]),
      # ("center_build_watch_tower",[(eq, reg6, 0),
                                   # (party_slot_eq, "$g_encountered_party", slot_party_type, spt_village),
                                   # (party_slot_eq, "$g_encountered_party", slot_center_has_watch_tower, 0),
                                  # ],
       # "Build a watch tower.",[(assign, "$g_improvement_type", slot_center_has_watch_tower),
                               # (jump_to_menu, "mnu_center_improve"),]),
      # ("center_build_school",[(eq, reg6, 0),
                              # (party_slot_eq, "$g_encountered_party", slot_party_type, spt_village),
                              # (party_slot_eq, "$g_encountered_party", slot_center_has_school, 0),
                                  # ],
       # "Build a school.",[(assign, "$g_improvement_type", slot_center_has_school),
                          # (jump_to_menu, "mnu_center_improve"),]),
      # ("center_build_messenger_post",[(eq, reg6, 0),
                                      # (party_slot_eq, "$g_encountered_party", slot_center_has_messenger_post, 0),
                                       # ],
       # "Build a messenger post.",[(assign, "$g_improvement_type", slot_center_has_messenger_post),
                                  # (jump_to_menu, "mnu_center_improve"),]),
      # ("center_build_prisoner_tower",[(eq, reg6, 0),
                                      # (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
                                      # (party_slot_eq, "$g_encountered_party", slot_party_type, spt_castle),
                                      # (party_slot_eq, "$g_encountered_party", slot_center_has_prisoner_tower, 0),
                                       # ],
       # "Build a prisoner tower.",[(assign, "$g_improvement_type", slot_center_has_prisoner_tower),
                                  # (jump_to_menu, "mnu_center_improve"),]),
      # #religous conversion locations - villages first
      # ("center_build_religion1",[(eq, reg6, 0),
          # (eq, "$g_player_faith", 1), #is roman christian
          # (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
          # (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_castle),
          # (party_slot_eq, "$g_encountered_party", slot_party_type, spt_village),
          # (party_slot_eq, "$g_encountered_party", slot_center_has_temple1, 0),
        # ],
        # "Build a Chalcedonian Basilica.",[
          # (assign, "$g_improvement_type", slot_center_has_temple1),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple2, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple3, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple4, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple5, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple6, 0),
          # (jump_to_menu, "mnu_center_improve"),]),

      # ("center_build_religion2",[(eq, reg6, 0),
          # (eq, "$g_player_faith", 2), #is a pagan
          # (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
          # (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_castle),
          # (party_slot_eq, "$g_encountered_party", slot_party_type, spt_village),
          # (party_slot_eq, "$g_encountered_party", slot_center_has_temple2, 0),
        # ],
        # "Build a Pagan Shrine.",[
          # (assign, "$g_improvement_type", slot_center_has_temple2),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple1, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple3, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple4, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple5, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple6, 0),
          # (jump_to_menu, "mnu_center_improve"), ]),

      # ("center_build_religion3",[(eq, reg6, 0),
          # (eq, "$g_player_faith", 3), #is arian christian
          # (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
          # (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_castle),
          # (party_slot_eq, "$g_encountered_party", slot_party_type, spt_village),
          # (party_slot_eq, "$g_encountered_party", slot_center_has_temple3, 0),
        # ],
        # "Build an Arian Basilica.",[
          # (assign, "$g_improvement_type", slot_center_has_temple3),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple1, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple2, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple4, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple5, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple6, 0),
          # (jump_to_menu, "mnu_center_improve"),]),

      # ("center_build_religion4",[(eq, reg6, 0),
          # (eq, "$g_player_faith", 4), #is zoroastrian
          # (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
          # (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_castle),
          # (party_slot_eq, "$g_encountered_party", slot_party_type, spt_village),
          # (party_slot_eq, "$g_encountered_party", slot_center_has_temple4, 0),
        # ],
        # "Build a Zoroastrian Temple.",[
          # (assign, "$g_improvement_type", slot_center_has_temple4),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple1, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple2, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple3, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple5, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple6, 0),
          # (jump_to_menu, "mnu_center_improve"),]),

      # ("center_build_religion5",[(eq, reg6, 0),
          # (eq, "$g_player_faith", 5), #is coptic christian
          # (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
          # (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_castle),
          # (party_slot_eq, "$g_encountered_party", slot_party_type, spt_village),
          # (party_slot_eq, "$g_encountered_party", slot_center_has_temple5, 0),
        # ],
        # "Build a Miaphysite Basilica.",[
          # (assign, "$g_improvement_type", slot_center_has_temple5),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple1, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple2, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple3, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple4, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple6, 0),
          # (jump_to_menu, "mnu_center_improve"),]),
      # #religious conversion locations - towns
      # ("center_build_religion6",[(eq, reg6, 0),
          # (eq, "$g_player_faith", 6), #is roman pagan
          # (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
          # (this_or_next|party_slot_eq, "$g_encountered_party", slot_party_type, spt_castle),
          # (party_slot_eq, "$g_encountered_party", slot_party_type, spt_village),
          # (party_slot_eq, "$g_encountered_party", slot_center_has_temple5, 0),
        # ],
        # "Build a Roman Pagan Temple.",[
          # (assign, "$g_improvement_type", slot_center_has_temple6),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple1, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple2, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple3, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple4, 0),
          # (party_set_slot, "$g_encountered_party", slot_center_has_temple5, 0),
          # (jump_to_menu, "mnu_center_improve"),]),


      # #SB: cancel current improvement
      # ("center_cancel_build",[(eq, reg6, 1),],
      # "Cancel building the {s7}.",[
        # (call_script, "script_change_center_prosperity", "$current_town", -4),
        # (call_script, "script_change_player_relation_with_center", "$current_town", -2),
        # (party_set_slot, "$current_town", slot_center_current_improvement, 0),
        # (party_set_slot, "$current_town", slot_village_recover_progress, 0),
        # (party_get_slot, ":hours_left", "$current_town", slot_center_improvement_end_hour),

        # #reinvest in economy, not household possessions
        # # (party_get_slot, ":cur_wealth", "$current_town", slot_town_wealth),
        # (try_begin),
          # (is_between, "$current_town", towns_begin, towns_end),
          # (party_get_slot, ":merchant_troop", "$current_town", slot_town_merchant),
          # (troop_add_gold, ":merchant_troop", ":hours_left"),
        # (else_try),
          # (is_between, "$current_town", villages_begin, villages_end),
          # (party_get_slot, ":merchant_troop", "$current_town", slot_town_elder),
        # (else_try),
          # (assign, ":merchant_troop", -1),
        # (try_end),

        # (store_current_hours, ":cur_hours"),
        # (val_sub, ":hours_left", ":cur_hours"),
        # (val_mul, ":hours_left", 15), #a paltry sum
        # (try_begin),
          # (gt, ":merchant_troop", 0),
          # (troop_add_gold, ":merchant_troop", ":hours_left"),
        # (else_try), #castle has no seneschal
          # (party_get_slot, ":cur_gold", "$current_town", slot_center_accumulated_tariffs),
          # (val_add, ":cur_gold", ":hours_left"),
          # (party_set_slot, "$current_town", slot_center_accumulated_tariffs, ":cur_gold"),
        # (try_end),
        # (jump_to_menu, "$g_next_menu"),
        # ]),
      # ("go_back_dot",[],"Go back.",[(jump_to_menu, "$g_next_menu")]),
    # ],
  # ),
  (
    "center_extort_reaction",0,
    "{s10} "+"^{s40}",
    "none",
    [
	(store_faction_of_party, ":fac", "$current_town"),
	(faction_get_slot, ":king", ":fac", slot_faction_leader),
	(str_store_troop_name, s11, ":king"),
	(set_background_mesh, "mesh_pic_townriot"),
	(try_begin),
		(eq, ":king", "trp_player"),
		(str_store_string, s40, "@But who cares about an angry commoner?"),
	(else_try),
		(str_store_string, s40, "@The town counsel threatens you to write to {s11} about your tyrannic behavior to try to convince him to dismiss you as governor. "+"But you know that {s11} never replays on such requests."),
	(try_end),
	(try_begin),
		(eq, "$temp", extort_tax),##tax
		(str_store_string, s10, "@Argueing that the money is needed for the good of the realm, you start to collect the tax. As expected the citizens are outraged about your greedy action."),
		(party_get_slot, ":relation", "$current_town", slot_center_player_relation),
		(try_begin),
			(ge, ":relation", 50),
			(store_random_in_range, ":r", 10, 20),
			(val_mul, ":r", -1),
		(else_try),
			(ge, ":relation", 0),
			(store_random_in_range, ":r", 5, 10),
			(val_mul, ":r", -1),
		(else_try),
			(ge, ":relation", -50),
			(store_random_in_range, ":r", 2, 6),
			(val_mul, ":r", -1),
		(else_try),
			(store_random_in_range, ":r", 1, 5),
			(val_mul, ":r", -1),
		(try_end),
		(call_script, "script_change_player_relation_with_center", "$current_town", ":r"),
		(call_script, "script_change_center_prosperity", "$current_town", -15),
		(party_get_slot, ":capital", "$current_town", slot_center_capital),
		(val_sub, ":capital", "$temp2"),
		(party_set_slot, "$current_town", slot_center_capital, ":capital"),
	(else_try),
		(eq, "$temp", extort_toll),##toll
		(str_store_string, s10, "@Argueing that the money is needed for the good of the realm, you start to collect the toll. As expected the merchants are outraged about your greedy action."),
		(party_get_slot, ":relation", "$current_town", slot_center_player_relation),
		(try_begin),
			(ge, ":relation", 50),
			(store_random_in_range, ":r", 7, 15),
			(val_mul, ":r", -1),
		(else_try),
			(ge, ":relation", 0),
			(store_random_in_range, ":r", 5, 9),
			(val_mul, ":r", -1),
		(else_try),
			(ge, ":relation", -50),
			(store_random_in_range, ":r", 1, 6),
			(val_mul, ":r", -1),
		(else_try),
			(store_random_in_range, ":r", 1, 5),
			(val_mul, ":r", -1),
		(try_end),
		(call_script, "script_change_player_relation_with_center", "$current_town", ":r"),
		(try_for_range, ":village", villages_begin, villages_end),
			(party_slot_eq, ":village", slot_village_bound_center, "$current_town"),
			(store_random_in_range, ":r", 1, 3),
			(val_mul, ":r", -1),
			(call_script, "script_change_player_relation_with_center", ":village", ":r"),
		(try_end),
		(call_script, "script_change_center_prosperity", "$current_town", -10),
		(party_get_slot, ":capital", "$current_town", slot_center_capital),
		(val_sub, ":capital", "$temp2"),
		(party_set_slot, "$current_town", slot_center_capital, ":capital"),
	(else_try),
		(eq, "$temp", extort_concile),##town counsel
		(str_store_string, s10, "@You march with your troops to the town counsel. Argueing that the counsels treasury is needed to defend the realm you order your troops to take over it.\
		As expected the citizens are outraged about your greedy action."),
		(store_random_in_range, ":r", 3, 9),
		(val_mul, ":r", -1),
		(call_script, "script_change_player_relation_with_center", "$current_town", ":r"),
		(call_script, "script_change_center_prosperity", "$current_town", -5),
		(party_set_slot, "$current_town", slot_town_wealth, 0),
	(try_end),
    ],
    [
      ("go_back_dot",[],"Continue...",[
        (call_script, "script_change_player_honor", -5),
        (call_script, "script_change_troop_renown", "trp_player", -15),
        (call_script, "script_troop_add_gold", "trp_player", "$temp2"),
        (rest_for_hours, "$temp3", 8, 0),
        (try_begin),
            (party_get_slot, ":lord", "$current_town", slot_town_lord),
            (neq, ":lord", "trp_player"),
            (call_script, "script_change_player_relation_with_troop", ":lord", -10),
            (str_store_troop_name, s40, ":lord"),
            (display_message, "@{s40} is not amused to hear about your tyrannical tax collection in his town!"),
        (try_end),
        (change_screen_map),]),
    ],
  ),


  (
    "repopulate",0,
    "You can order your soldiers to kill anyone older than 14. Then you would grant the acquired land to the families of your soldiers. "+"^But you should note that such an extreme act will have a bad impact on your reputation.",
    "none",
    [
	(str_store_party_name, s39, "$g_encountered_party"),
	(set_background_mesh, "mesh_pic_charge"),
    ],
    [


      ("special_tax",[],"Kill them all. They deserve it.",[
        (party_slot_eq, "$current_town", slot_party_type, spt_village),
        (party_get_slot, ":capital", "$current_town", slot_center_capital),
        (troop_add_gold, "trp_player", ":capital"),

        (party_set_slot, "$current_town", slot_center_player_relation, 0), #relation to 0
        (party_set_slot, "$current_town", slot_center_capital, 0),
        (party_set_slot, "$current_town", slot_center_accumulated_rents, 0),
        (troop_get_slot, ":culture", "trp_player", slot_troop_culture),
        (party_set_slot, "$current_town", slot_center_culture, ":culture"),

        (troop_get_slot, ":religion", "trp_player", slot_troop_religion),
        (party_set_slot, "$current_town", slot_center_religion, ":religion"),

        (call_script, "script_change_player_honor", -30),
        (val_sub, "$piety", 30),
        (party_get_slot, ":prosperity_change", "$current_town", slot_town_prosperity),
        (val_mul, ":prosperity_change", -9),
        (val_div, ":prosperity_change", 10),
        (call_script, "script_change_center_prosperity", "$current_town", ":prosperity_change"),

        (party_get_slot, ":food_stores", "$current_town", slot_party_food_store),
        (call_script, "script_center_get_food_store_limit", "$current_town"),
        (val_min, ":food_stores", reg0),
        (party_set_slot, "$current_town", slot_party_food_store, ":food_stores"),
        (try_for_range, ":walker_no", 0, num_town_walkers),
          (call_script, "script_center_set_walker_to_type", "$current_town", ":walker_no", walkert_default),
        (try_end),

        (str_store_party_name, s4, "$current_town"),
        #####
        (str_clear,s1),
        (display_message, "@Mercilessly your men kill anyone that crosses their way, then enter the houses, killing all men over 14 years of age. The fame of your cruelty travels as the wind. " +
        "Fear seizes all who talk about you. Now {s4} is pacified, but the cost has been very high."),
        (jump_to_menu, "mnu_repopulate_complete"),

	  ]),

      ("go_back_dot",[],"Go back.",[(jump_to_menu, "mnu_center_manage_2")]),
    ],
  ),
  (
    "repopulate_complete",0,
    "Mercilessly your men kill anyone that crosses their way, then enter the houses, killing all men over 14 years of age. The fame of your cruelty travels as the wind. " +
        "Fear seizes all who talk about you. Now {s4} is pacified, but the cost has been very high.",
    "none",
    [
	(str_store_party_name, s4, "$g_encountered_party"),
	(set_background_mesh, "mesh_pic_charge"),
    ],
    [
    ("go_back_dot",[],"Continue.",[
    (jump_to_menu, "mnu_auto_return_to_map"),
    ]),
    ],
  ),


  (
    "garrison_management",mnf_disable_all_keys,
    "You can exchange troops with the garrison. Size of the garrison: {reg31}. Number of prisoners: {reg30}^^{s22}",
    "none",
    [
    (party_set_flags, "$g_encountered_party", pf_limit_members, 0),#clear flag later on
    (assign, reg66, 0),

    (party_get_num_prisoners, reg30, "$g_encountered_party"),
    (store_party_size_wo_prisoners, reg31, "$g_encountered_party"),
    (str_clear, s22),
    (try_begin),
        (party_slot_eq, "$g_encountered_party", slot_party_type, spt_village),
        (call_script,"script_cf_fix_party_size_village","$g_encountered_party",1),
        (str_store_string, s22, "@If you place prisoners in your village they will work on the fields and in the mines and generate additional rents."),
    (try_end),
    ],
    [
      ("exchange",[(eq, reg63, 1),],"Exchange.",[

    (change_screen_exchange_members,1),
      ]),

    ("exchange",[ (eq, reg63, 0),],"Review garrison and prisoners.",[

    (call_script, "script_view_party_members","$g_encountered_party"),]),

    ("add_prisoners",[
    (eq, reg63, 1),
    (party_get_num_prisoners, ":prisoners", "p_main_party"),
    (ge, ":prisoners", 1),],"Drop off all non-hero prisoners.",[
    (assign, "$g_move_heroes", 0),
    (call_script, "script_party_prisoners_add_party_prisoners", "$g_encountered_party", "p_main_party"),
    (call_script, "script_party_remove_all_prisoners", "p_main_party"),
    ]),

    ("add_members",[
    (eq, reg63, 1),
    (store_party_size_wo_prisoners, ":men", "p_main_party"),
    (ge, ":men", 1),],"Drop off all your non-hero party members.",[
    (assign, "$g_move_heroes", 0),
    (call_script, "script_party_add_party_companions", "$g_encountered_party", "p_main_party"),
    (call_script, "script_party_remove_all_companions", "p_main_party"),
    ]),
      # ("slaves_0",[
    # (party_slot_eq, "$g_encountered_party", slot_town_lord, "trp_player"),
      # ],"Buy 25 slaves. (25,000 denars)",[
    # (try_begin),
        # (store_troop_gold, ":gold", "trp_household_possessions"),
        # (ge, ":gold", 25000),
        # (party_add_prisoners, "$g_encountered_party", "trp_slave", 25),
        # (call_script, "script_dplmc_withdraw_from_treasury", 25000),
    # (else_try),
        # (store_troop_gold, ":gold", "trp_player"),
        # (ge, ":gold", 25000),
        # (party_add_prisoners, "$g_encountered_party", "trp_slave", 25),
        # (troop_remove_gold, "trp_player", 25000),
    # (try_end),
      # ]),
      # ("slaves_1",[
    # (party_slot_eq, "$g_encountered_party", slot_town_lord, "trp_player"),
      # ],"Buy 50 slaves. (50,000 denars)",[
    # (try_begin),
        # (store_troop_gold, ":gold", "trp_household_possessions"),
        # (ge, ":gold", 50000),
        # (party_add_prisoners, "$g_encountered_party", "trp_slave", 50),
        # (call_script, "script_dplmc_withdraw_from_treasury", 50000),
    # (else_try),
        # (store_troop_gold, ":gold", "trp_player"),
        # (ge, ":gold", 50000),
        # (party_add_prisoners, "$g_encountered_party", "trp_slave", 50),
        # (troop_remove_gold, "trp_player", 50000),
    # (try_end),
      # ]),
    # ("slaves_2",[
    # (party_slot_eq, "$g_encountered_party", slot_town_lord, "trp_player"),
      # ],"Buy 100 slaves. (100,000 denars)",[
    # (try_begin),
        # (store_troop_gold, ":gold", "trp_household_possessions"),
        # (ge, ":gold", 100000),
        # (party_add_prisoners, "$g_encountered_party", "trp_slave", 100),
        # (call_script, "script_dplmc_withdraw_from_treasury", 100000),
    # (else_try),
        # (store_troop_gold, ":gold", "trp_player"),
        # (ge, ":gold", 100000),
        # (party_add_prisoners, "$g_encountered_party", "trp_slave", 100),
        # (troop_remove_gold, "trp_player", 100000),
    # (try_end),
      # ]),

      ("continue",[],"Go back.",[
    (jump_to_menu, "mnu_center_manage_2"),
      ]),
    ],
  ),

  (
    "center_manage_2",0,
    "{s39} has a prosperity rating of {reg51} and a accumulated capital of {reg29} siliquae, which can be taxed. The taxrate is {s11}.^^{s44}",
    "none",
    [
    #set variables
    (try_for_range, ":slot",0,500),
        (troop_set_slot, "trp_zendar_chest", ":slot", 0),
    (try_end),
    (assign, "$g_improvement_type", 0),
    (assign, "$temp", 0),
    (assign, "$temp2", 0),
    (assign, "$temp3", 0),
    (assign, "$g_presentation_next_presentation", 0),
    (modify_visitors_at_site, "scn_meeting_scene_plain"),
    (reset_visitors),
    (set_visitor, 0, "trp_player"),
    (set_jump_mission, "mt_center_management"),
    (jump_to_scene, "scn_meeting_scene_plain"),
    (change_screen_mission),
	],[],),
  # (
    # "center_improve",0,
    # "{s19} As the party member with the highest engineer skill ({reg2}), {reg3?you reckon:{s3} reckons} that building the {s4} will cost you\
 # {reg5} siliquae and will take {reg6} days.",
    # "none",
    # [#SB : town pictures
     # (call_script, "script_set_town_picture"),
     # (call_script, "script_get_improvement_details", "$g_improvement_type"),
     # (assign, ":improvement_cost", reg0),
     # (str_store_string, s4, s0),
     # (str_store_string, s19, s1),
     # (call_script, "script_get_max_skill_of_player_party", "skl_engineer"),
     # (assign, ":max_skill", reg0),
     # (assign, ":max_skill_owner", reg1),
     # (assign, reg2, ":max_skill"),

     # (store_sub, ":multiplier", 20, ":max_skill"),
     # (val_mul, ":improvement_cost", ":multiplier"),
     # (val_div, ":improvement_cost", 20),

     # (store_div, ":improvement_time", ":improvement_cost", 100),
     # (val_add, ":improvement_time", 3),

     # (assign, reg5, ":improvement_cost"),
     # (assign, reg6, ":improvement_time"),

     # #SB : tableau at bottom
     # (try_begin),
       # (eq, ":max_skill_owner", "trp_player"),
       # (assign, reg3, 1),
     # (else_try),
       # (assign, reg3, 0),
       # (str_store_troop_name, s3, ":max_skill_owner"),
     # (try_end),

    # #SB : assign globals to be safe
    # (assign, "$diplomacy_var", ":improvement_cost"),
    # (assign, "$diplomacy_var2", ":improvement_time"),
    # (assign, "$lord_selected", ":max_skill_owner"),
    # (set_fixed_point_multiplier, 100),
    # (position_set_x, pos0, 70),
    # (position_set_y, pos0, 5),
    # (position_set_z, pos0, 75),
    # (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", ":max_skill_owner", pos0),
    # ],
    # [
      # ##diplomacy begin
      # ("dplmc_improve_cont",
      # [
        # (gt, "$g_player_chamberlain", 0),
        # (store_troop_gold, ":cur_gold", "trp_household_possessions"),
        # (ge, ":cur_gold", "$diplomacy_var"),
      # ], "Go on. (Pay from treasury)",
        # [
          # (call_script, "script_dplmc_withdraw_from_treasury", "$diplomacy_var"),
          # # (call_script, "script_get_max_skill_of_player_party", "skl_engineer"), #SB : re-fetch skill
          # (call_script, "script_improve_center", "$g_encountered_party", "$lord_selected", "$diplomacy_var2"),
          # (jump_to_menu,"mnu_center_manage"),
         # ]
      # ),
      # ("improve_not_enough_gold",[(gt, "$g_player_chamberlain", 0),
                                  # (store_troop_gold, ":cur_gold", "trp_household_possessions"),
                                  # (lt, ":cur_gold", "$diplomacy_var"),
                                  # #SB : disable_menu_option
                                  # (disable_menu_option)],
       # "Insufficient fund in the treasury.", []),
      # ##diplomacy end

      # ("improve_cont",[(store_troop_gold, ":cur_gold", "trp_player"),
                       # (ge, ":cur_gold", "$diplomacy_var")],
       # "Go on.", [
                  # (try_begin), #fast build
                    # (ge, "$cheat_mode", 1),
                    # (assign, "$diplomacy_var2", 0),
                  # (else_try),
                    # (troop_remove_gold, "trp_player", "$diplomacy_var"),
                  # (try_end),
                  # (call_script, "script_improve_center", "$g_encountered_party", "$lord_selected", "$diplomacy_var2"),
                  # #(try_begin),
                  # #  (this_or_next|eq, "$g_improvement_type", slot_center_has_temple1),
                  # #  (this_or_next|eq, "$g_improvement_type", slot_center_has_temple2),
                  # #  (this_or_next|eq, "$g_improvement_type", slot_center_has_temple3),
                  # #  (this_or_next|eq, "$g_improvement_type", slot_center_has_temple4),
                  # #  (eq, "$g_improvement_type", slot_center_has_temple5),
                  # #  (troop_get_slot, ":religion_player","trp_player", slot_troop_religion),
                  # #  (party_set_slot,"$g_encountered_party",slot_center_religion, ":religion_player"),
                  # #(try_end),
                  # (jump_to_menu,"mnu_center_manage"),
                  # ]),
      # ("improve_not_enough_gold",[(store_troop_gold, ":cur_gold", "trp_player"),
                                  # (lt, ":cur_gold", "$diplomacy_var"),
                                  # #SB : disable_menu_option
                                  # (disable_menu_option)],
       # "I don't have enough money for that.", []),
      # ("forget_it",[], "Forget it.", [(jump_to_menu,"mnu_center_manage")]),

    # ],
  # ),

  (
    "town_bandits_failed",mnf_disable_all_keys,
    "{s4} {s5}",
    "none",
    [
#      (call_script, "script_loot_player_items", 0),
      (store_troop_gold, ":total_gold", "trp_player"),
      (store_div, ":gold_loss", ":total_gold", 30),
      (store_random_in_range, ":random_loss", 40, 100),
      (val_add, ":gold_loss", ":random_loss"),
      (val_min, ":gold_loss", ":total_gold"),
      (troop_remove_gold, "trp_player",":gold_loss"),
      (party_set_slot, "$current_town", slot_center_has_bandits, 0),
      (party_get_num_companions, ":num_companions", "p_main_party"),
      (str_store_string, s4, "@The assasins beat you down and leave you for dead. ."),
      (str_store_string, s4, "@You have fallen. The bandits quickly search your body for every coin they can find,\
 then vanish into the night. They have left you alive, if only barely."),
      (try_begin),
        (gt, ":num_companions", 2),
        (str_store_string, s5, "@Luckily some of your companions come to search for you when you do not return, and find you lying by the side of the road. They hurry you to safety and dress your wounds."),
      (else_try),
        (str_store_string, s5, "@Luckily some passing townspeople find you lying by the side of the road, and recognise you as something other than a simple beggar. They carry you to the nearest inn and dress your wounds."),
      (try_end),
    ],
    [
      ("continue",[],"Continue...",[(change_screen_return),
      #SB : lose renown for easy encounters
      (call_script, "script_change_troop_renown", "trp_player", -2),
      ]),
    ],
  ),

  (
    "town_bandits_succeeded",mnf_disable_all_keys,
    "The {s4} fall before you as wheat to a scythe! Soon you stand alone in the streets\
 while {reg4?most of your attackers: the bandit} lie unconscious, dead or dying.\
 Searching the {reg4?bodies:body}, you find a purse which must have belonged to a previous victim of {reg4?these brute:this lowlife}.\
 Or perhaps, it was {reg4?given to them:provided} by someone who wanted to arrange a suitable ending to your life.",
    "none",
    [
      # (party_set_slot, "$current_town", slot_center_has_bandits, 0), #we need this
      (party_get_slot, ":bandit_troop", "$current_town", slot_center_has_bandits),
	(try_begin),
	(le, ":bandit_troop", 0),
	(assign, ":bandit_troop", "trp_bandit"),
	(try_end),
      (assign, "$g_last_defeated_bandits_town", "$g_encountered_party"),
      (try_begin),
        (check_quest_active, "qst_deal_with_night_bandits"),
        (neg|check_quest_succeeded, "qst_deal_with_night_bandits"),
        (quest_slot_eq, "qst_deal_with_night_bandits", slot_quest_target_center, "$g_encountered_party"),
        (call_script, "script_succeed_quest", "qst_deal_with_night_bandits"),
      (try_end),
      #SB : variable rewards, since we have different bandits in play
      (call_script, "script_game_get_join_cost", ":bandit_troop"),
      (store_mul, ":xp_reward", "$num_center_bandits", reg0),
      (try_begin), #reduce bonus exp, since town missions troops don't use horses
        (troop_is_mounted, ":bandit_troop"),
        (val_div, ":xp_reward", 2),
      (try_end),
      (add_xp_to_troop, ":xp_reward", "trp_player"),
      (call_script, "script_game_get_upgrade_cost", ":bandit_troop"), #20, 40, 80
      (store_mul, ":gold_reward", "$num_center_bandits", reg0),
      (call_script, "script_troop_add_gold", "trp_player", ":gold_reward"),
      #SB : string setup
      (str_store_troop_name_by_count,s4, ":bandit_troop", "$num_center_bandits"),
      (store_sub, reg4, "$num_center_bandits", 1),
    ],
    [
      ("continue",[],"Continue...",[
        (party_set_slot, "$current_town", slot_center_has_bandits, 0),
        (change_screen_return),
      ]),
    ],
  ),

   (
    "village_steal_cattle_confirm",0,
    "As the party member with the highest looting skill ({reg2}), {reg3?you reckon:{s1} reckons} that you can steal as many as {reg4} heads of village's cattle.",
    "none",
    [
      (call_script, "script_get_max_skill_of_player_party", "skl_looting"),
      (assign, reg2, reg0),
      (assign, ":max_skill_owner", reg1),
      (try_begin),
        (eq, ":max_skill_owner", "trp_player"),
        (assign, reg3, 1),
      (else_try),
        (assign, reg3, 0),
        (str_store_troop_name, s1, ":max_skill_owner"),
      (try_end),
      (call_script, "script_calculate_amount_of_cattle_can_be_stolen", "$current_town"),
      (assign, reg4, reg0),
      ],
    [
      ("village_steal_cattle_confirm",[],"Go on.",
       [
         (rest_for_hours_interactive, 3, 5, 1), #rest while attackable
         (assign, "$auto_menu", "mnu_village_steal_cattle"),
         (change_screen_return),
       ]),
      ("forget_it",[],"Forget it.",[(change_screen_return)]),
    ],
  ),

  (
    "village_steal_cattle",mnf_disable_all_keys,
    "{s1}",
    "none",
    [
      (call_script, "script_calculate_amount_of_cattle_can_be_stolen", "$current_town"),
      (assign, ":max_value", reg0),
      (val_add, ":max_value", 1),
      (store_random_in_range, ":random_value", 0, ":max_value"),
      (party_set_slot, "$current_town", slot_village_player_can_not_steal_cattle, 1),
      (party_get_slot, ":lord", "$current_town", slot_town_lord),
      (try_begin),
        (le, ":random_value", 0),
        (call_script, "script_change_player_relation_with_center", "$current_town", -3),
        (str_store_string, s1, "@You fail to steal any cattle."),
      (else_try),
        (assign, reg17, ":random_value"),
        (store_sub, reg12, ":random_value", 1),
        (try_begin),
          (gt, ":lord", 0),
          (call_script, "script_change_player_relation_with_troop", ":lord", -3),
          (call_script, "script_add_log_entry", logent_player_stole_cattles_from_village, "trp_player",  "$current_town", ":lord", "$g_encountered_party_faction"),
        (try_end),
        (call_script, "script_change_player_relation_with_center", "$current_town", -5),
        (str_store_string, s1, "@You drive away {reg17} {reg12?heads:head} of cattle from the village's herd."),

        (try_begin),
          (eq, ":random_value", 3),
          (unlock_achievement, ACHIEVEMENT_GOT_MILK),
        (try_end),

        (call_script, "script_create_cattle_herd", "$current_town", ":random_value"),
        (party_get_slot, ":num_cattle", "$current_town", slot_village_number_of_cattle),
        (val_sub, ":num_cattle", ":random_value"),
        (party_set_slot, "$current_town", slot_village_number_of_cattle, ":num_cattle"),

        #SB : add lesser renown bonus
        (try_begin),
          (call_script, "script_get_max_skill_of_player_party", "skl_looting"),
          (neq, reg1, "trp_player"),
          (call_script, "script_change_troop_renown", reg1, dplmc_companion_skill_renown / 2),
        (try_end),

        (try_begin), #SB : very minor war dmg
          (is_between, "$players_kingdom", kingdoms_begin, kingdoms_end),
          (call_script, "script_faction_inflict_war_damage_on_faction", "$players_kingdom", "$g_encountered_party_faction", 1),
        (try_end),
      (try_end),
    ],
    [
      ("continue",[],"Continue...",
       [
         (change_screen_return),
         ]),
    ],
  ),


   (
    "village_take_food_confirm",0,
    "It will be difficult to force and threaten the peasants into giving their precious supplies. You think you will need at least one hour.",
    #TODO: mention looting skill?
    "none",
    [],
    [
      ("village_take_food_confirm",[],"Go ahead.",
       [
         (rest_for_hours_interactive, 1, 5, 0), #rest while not attackable
         (assign, "$auto_enter_town", "$current_town"),
         (assign, "$g_town_visit_after_rest", 1),
         (assign, "$auto_enter_menu_in_center", "mnu_village_take_food"),
         (change_screen_return),
         ]),
      ("forget_it",[],"Forget it.",[(jump_to_menu, "mnu_village_hostile_action")]),
    ],
  ),

  (
    "village_take_food",0,
    "The villagers grudgingly bring out what they have for you.",
    "none",
    [
       (call_script, "script_party_count_members_with_full_health","p_main_party"),
       (assign, ":player_party_size", reg0),
       (call_script, "script_party_count_members_with_full_health","$current_town"),
       (assign, ":villagers_party_size", reg0),
       (try_begin),
         (lt, ":player_party_size", 6),
         (ge, ":villagers_party_size", 40),
         (neg|party_slot_eq, "$current_town", slot_town_lord, "trp_player"),
         (jump_to_menu, "mnu_village_start_attack"),
       (try_end),
    ],
    [
      ("take_supplies",[],"Take the supplies.",
       [
         (try_begin),
           (party_slot_ge, "$current_town", slot_center_player_relation, -55),
           (try_begin),
             (party_slot_eq, "$current_town", slot_town_lord, "trp_player"),
             (call_script, "script_change_player_relation_with_center", "$current_town", -1),
           (else_try),
             (call_script, "script_change_player_relation_with_center", "$current_town", -3),
           (try_end),
         (try_end),
         (party_get_slot, ":village_lord", "$current_town", slot_town_lord),
         (try_begin),
           (gt,  ":village_lord", 1),
           (call_script, "script_change_player_relation_with_troop", ":village_lord", -1),
          (try_end),
         (party_get_slot, ":merchant_troop", "$current_town", slot_town_elder),
		(try_begin),
		(le, ":merchant_troop", 0), #madsci failsafe
		(assign, ":merchant_troop", "trp_temp_troop"),
		(troop_clear_inventory, "trp_temp_troop"),
		(try_end),
         (party_get_skill_level, ":player_party_looting", "p_main_party", "skl_looting"),
         (val_mul, ":player_party_looting", 3),
         (store_sub, ":random_chance", 70, ":player_party_looting"), #Increases the chance of looting by 3% per skill level
         (try_for_range, ":slot_no", num_equipment_kinds ,max_inventory_items + num_equipment_kinds),
           (store_random_in_range, ":rand", 0, 100),
           (lt, ":rand", ":random_chance"),
           (troop_set_inventory_slot, ":merchant_troop", ":slot_no", -1),
         (try_end),

###NPC companion changes begin
         (call_script, "script_objectionable_action", tmt_humanitarian, "str_steal_from_villagers"),
#NPC companion changes end
#Troop commentary changes begin
          (call_script, "script_add_log_entry", logent_village_extorted, "trp_player",  "$current_town", -1, -1),
          (store_faction_of_party,":village_faction",  "$current_town"),
          #SB : this war penalty should be lower for accosting farmers instead of raiding outright
          (try_begin),
            (is_between, "$players_kingdom", kingdoms_begin, kingdoms_end),
            (call_script, "script_faction_inflict_war_damage_on_faction", "$players_kingdom", ":village_faction", 2),
          (try_end),
#Troop commentary changes end

         #SB : sometimes this will actually be empty
         (jump_to_menu, "mnu_village"),
         (troop_sort_inventory, ":merchant_troop"),
         (change_screen_loot, ":merchant_troop"),
         ]),
      ("let_them_keep_it",[],"Let them keep it.",[(jump_to_menu, "mnu_village")]),
    ],
  ),


  ( #SB : added fugitive related strings
    "village_start_attack",mnf_disable_all_keys|mnf_scale_picture,
    "Some of the angry villagers grab their tools and prepare to resist you.\
 It looks like you'll have a fight on your hands if you continue.{s1}",
    "none",
    [
       (set_background_mesh, "mesh_pic_villageriot"),
       (call_script, "script_party_count_members_with_full_health","p_main_party"),
       (assign, ":player_party_size", reg0),
       (call_script, "script_party_count_members_with_full_health","$current_town"),
       (assign, ":villagers_party_size", reg0),

       (try_begin), #SB : tweak fight avoidance parameters
         #also if we lost but reduced their numbers, don't allow this condition to be true
         (neq, "$g_battle_result", -1),
         (this_or_next|le, ":villagers_party_size", 30),
         (gt, ":player_party_size", ":villagers_party_size"),
         (jump_to_menu, "mnu_village_loot_no_resist"),
       (else_try),
         (this_or_next|eq, ":villagers_party_size", 0),
         (eq, "$g_battle_result", 1),
         (try_begin),
           (eq, "$g_battle_result", 1),
           (store_random_in_range, ":enmity", -30, -15),
           (call_script, "script_change_player_relation_with_center", "$current_town", ":enmity"),
           (party_get_slot, ":town_lord", "$current_town", slot_town_lord),
           (gt, ":town_lord", 0),
           (call_script, "script_change_player_relation_with_troop", ":town_lord", -3),
         (try_end),
         (jump_to_menu, "mnu_village_loot_no_resist"),
       (else_try),
         (eq, "$g_battle_result", -1),
         (try_begin), #if we did not knock him out or kill him, he escapes
           (check_quest_active, "qst_hunt_down_fugitive"),
           (quest_slot_eq, "qst_hunt_down_fugitive", slot_quest_target_center, "$current_town"),
           (neg|check_quest_succeeded, "qst_hunt_down_fugitive"),
           (jump_to_menu, "mnu_village_hunt_down_fugitive_defeated"),
         (else_try),
           (jump_to_menu, "mnu_village_loot_defeat"),
         (try_end),
       (try_end),

       #SB : display string indicating fugitive is here
      (try_begin), #if we did not knock him out or kill him, he escapes
        (check_quest_active, "qst_hunt_down_fugitive"),
        (quest_slot_eq, "qst_hunt_down_fugitive", slot_quest_target_center, "$current_town"),
        (neg|check_quest_succeeded, "qst_hunt_down_fugitive"),
        (quest_get_slot, ":quest_target_dna", "qst_hunt_down_fugitive", slot_quest_target_dna),
        (call_script, "script_get_name_from_dna_to_s50", ":quest_target_dna"),
        (str_store_string, s1, "@ From your vantage point you see a man matching the description of {s50} arming himself with a sword during the commotion. If you do not press on the fugitive will slip away!"),
      (else_try),
        (str_clear, s1),
      (try_end),
    ],
    [
      ("village_raid_attack",[],"Charge them.",[
          (store_random_in_range, ":enmity", -10, -5),
          (call_script, "script_change_player_relation_with_center", "$current_town", ":enmity"),
          (try_begin),
            (party_get_slot, ":town_lord", "$current_town", slot_town_lord),
            (gt, ":town_lord", 0),
            (call_script, "script_change_player_relation_with_troop", ":town_lord", -3),
          (try_end),
          #SB : add fugitive as defender here
          (try_begin),
            (check_quest_active, "qst_hunt_down_fugitive"),
            (quest_slot_eq, "qst_hunt_down_fugitive", slot_quest_target_center, "$current_town"),
            (neg|check_quest_succeeded, "qst_hunt_down_fugitive"),
            (neg|check_quest_failed, "qst_hunt_down_fugitive"),
            (quest_set_slot, "qst_hunt_down_fugitive", slot_quest_current_state, 1), #normally this is activated in dialogs
            (party_add_members, "$current_town", "trp_fugitive", 1),
          (try_end),
          (call_script, "script_calculate_battle_advantage"),
          (set_battle_advantage, reg0),
          (set_party_battle_mode),
          (assign, "$g_battle_result", 0),
          (assign, "$g_village_raid_evil", 1),
          (set_jump_mission,"mt_village_raid"),
          (party_get_slot, ":scene_to_use", "$current_town", slot_castle_exterior),
          (jump_to_scene, ":scene_to_use"),
          (assign, "$g_next_menu", "mnu_village_start_attack"),

          (call_script, "script_diplomacy_party_attacks_neutral", "p_main_party", "$g_encountered_party"),
###NPC companion changes begin
          # (call_script, "script_objectionable_action", tmt_humanitarian, "str_loot_village"), #SB : rolled into above script
#NPC companion changes end

          (jump_to_menu, "mnu_battle_debrief"),
          (change_screen_mission),
          ]),
      ("village_raid_leave",[],"Leave this village alone.",[(change_screen_return),
      #SB : fail fugitive quest if player backs away from demands
      (try_begin),
        (check_quest_active, "qst_hunt_down_fugitive"),
        (quest_slot_eq, "qst_hunt_down_fugitive", slot_quest_target_center, "$current_town"),
        (neg|check_quest_concluded, "qst_hunt_down_fugitive"),
        (call_script, "script_fail_quest", "qst_hunt_down_fugitive"),
      (try_end),

      ]),
    ],
  ),

  (
    "village_loot_no_resist",0,
    "The villagers here are few and frightened, and they quickly scatter and run before you. "+
 "The village is at your mercy.",
    "none",
    [
    #SB : if we just wanted to steal food, return to doing that instead of plundering
    (try_begin),
      (eq, "$auto_enter_menu_in_center", "mnu_village_take_food"),
      (jump_to_menu, "$auto_enter_menu_in_center"),
    (try_end),

    ],
    [
      ("village_loot",[], "Plunder the village, then raze it.",
        [
          (call_script, "script_village_set_state", "$current_town", svs_being_raided),
          (party_set_slot, "$current_town", slot_village_raided_by, "p_main_party"),
          (assign,"$g_player_raiding_village","$current_town"),

          (try_begin),
            (store_faction_of_party, ":village_faction", "$current_town"),
            (store_relation, ":relation", "$players_kingdom", ":village_faction"),
            (ge, ":relation", 0),
            (call_script, "script_diplomacy_party_attacks_neutral", "p_main_party", "$current_town"),
          (try_end),

(try_begin), #madsci the village's lord comes investigate if he is nearby
(party_get_slot, ":cur_lord", "$current_town", slot_town_lord),
(gt, ":cur_lord", 0),
(troop_get_slot, ":party_no", ":cur_lord", slot_troop_leaded_party),
(gt, ":party_no", 0),
(party_is_active, ":party_no"),
(neg|party_slot_eq, ":party_no", slot_party_ai_state, spai_besieging_center),
(store_distance_to_party_from_party, ":dist", ":party_no", "$current_town"),
(lt, ":dist", 40),
(call_script, "script_party_set_ai_state", ":party_no",  spai_patrolling_around_center, "$current_town"),
(party_set_ai_initiative, ":party_no", 100),
(try_end),

          (rest_for_hours, 3, 5, 1), #rest while attackable (3 hours will be extended by the trigger)
          (party_set_slot, "$current_town", slot_town_last_nearby_fire_time, 1), #raiding mode
          # (assign, "$g_village_raid_evil", 1), #SB : to differentiate between raiding
          (change_screen_return),
        ]),

        #SB : alternative option if that's your thing
      ("village_enslave", [
          (party_get_num_companions, ":amount", "$current_town"),
          (gt, ":amount", 0), #if we haven't killed them all in the first charge
          # (party_get_free_prisoners_capacity, ":capacity", "p_main_party"), #be slightly wary of this operation
          # (gt, ":capacity", 0), #if we have room
          (troops_can_join_as_prisoner, 1),
        ], "Chase after the remaining villagers and enslave them.",
        [
          (call_script, "script_village_set_state", "$current_town", svs_being_raided), #target is deserted, not looted
          (party_set_slot, "$current_town", slot_village_raided_by, "p_main_party"),
          (assign,"$g_player_raiding_village","$current_town"),

          (try_begin),
            (store_faction_of_party, ":village_faction", "$current_town"),
            (store_relation, ":relation", "$players_kingdom", ":village_faction"),
            (ge, ":relation", 0),
            (call_script, "script_diplomacy_party_attacks_neutral", "p_main_party", "$current_town"),
          (try_end),

(try_begin), #madsci the village's lord comes investigate if he is nearby
(party_get_slot, ":cur_lord", "$current_town", slot_town_lord),
(gt, ":cur_lord", 0),
(troop_get_slot, ":party_no", ":cur_lord", slot_troop_leaded_party),
(gt, ":party_no", 0),
(party_is_active, ":party_no"),
(neg|party_slot_eq, ":party_no", slot_party_ai_state, spai_besieging_center),
(store_distance_to_party_from_party, ":dist", ":party_no", "$current_town"),
(lt, ":dist", 40),
(call_script, "script_party_set_ai_state", ":party_no",  spai_patrolling_around_center, "$current_town"),
(party_set_ai_initiative, ":party_no", 100),
(try_end),

          #add a party template to represent hiding villagers so we don't go empty-handed
          (party_add_template, "$current_town", "pt_village_defenders"),
          #add some smoke right away
          # (party_add_particle_system, "$current_town", "psys_map_village_fire"),

          (rest_for_hours_interactive, 3, 5, 1), #rest while attackable
          # (assign, "$g_village_raid_evil", 2),
          (party_set_slot, "$current_town", slot_town_last_nearby_fire_time, 2), #enslavement mode
          (assign, "$qst_eliminate_bandits_infesting_village_num_villagers", 0),
          (change_screen_return),
        ]),
      ("village_raid_leave",[],"Leave this village alone.",[(change_screen_return)]),
    ],
  ),
  (
    "village_loot_complete",mnf_disable_all_keys,
    "On your orders your troops sack {s22}, pillaging everything of any value,\
 and then put the buildings to the torch. From the coins and valuables that are found, you get your share of {reg23} siliquae.",
    "none",
    [
    (str_store_party_name, s22, "$current_town"),
    (try_begin), #religion
        (val_sub, "$piety", 3),
        (party_get_slot, ":religion_center", "$current_town", slot_center_religion),
        (try_begin),
            (eq, ":religion_center", slot_religion_christian_chalcedonian),
            (call_script, "script_change_player_relation_with_faction", "fac_roman_christians", -5),
        (else_try),
            (eq, ":religion_center", slot_religion_paganism),
            (call_script, "script_change_player_relation_with_faction", "fac_pagans", -5),
        (else_try),
            (eq, ":religion_center", slot_religion_christian_arian),
            (call_script, "script_change_player_relation_with_faction", "fac_arian_christians", -5),
        (else_try),
            (eq, ":religion_center", slot_religion_zoroastrianism),
            (call_script, "script_change_player_relation_with_faction", "fac_zoroastrians", -5),
        (else_try),
            (eq, ":religion_center", slot_religion_christian_miaphysite),
            (call_script, "script_change_player_relation_with_faction", "fac_coptic_christians", -5),
        (else_try),
            (eq, ":religion_center", slot_religion_roman_paganism),
            (call_script, "script_change_player_relation_with_faction", "fac_roman_pagans", -5),
        (else_try),
            (eq, ":religion_center", slot_religion_christian_nestorian),
            (call_script, "script_change_player_relation_with_faction", "fac_nestorian_christians", -5),
        (else_try),
            (eq, ":religion_center", slot_religion_christian_donatist),
            (call_script, "script_change_player_relation_with_faction", "fac_donatist_christians", -5),
        (else_try),
            (eq, ":religion_center", slot_religion_zurvanism),
            (call_script, "script_change_player_relation_with_faction", "fac_zurvanism", -5),
        (else_try),
            (eq, ":religion_center", slot_religion_judaism),
            (call_script, "script_change_player_relation_with_faction", "fac_jews", -5),
        (try_end),
    (try_end),

    (party_get_slot, ":village_lord", "$current_town", slot_town_lord),
    (try_begin),
        (gt,  ":village_lord", 0),
        (call_script, "script_change_player_relation_with_troop", ":village_lord", -5),
    (try_end),
    (store_random_in_range, ":enmity", -35, -25),
    (call_script, "script_change_player_relation_with_center", "$current_town", ":enmity"),

    (store_faction_of_party, ":village_faction", "$current_town"),
    (store_relation, ":relation", ":village_faction", "fac_player_supporters_faction"),
    (try_begin),
        (lt, ":relation", 0),
        (call_script, "script_change_player_relation_with_faction", ":village_faction", -3),
    (try_end),

    (party_get_slot, ":village_elder", "$current_town",slot_town_elder),
    (try_begin),
        (gt, ":village_elder", 0),
        (store_troop_gold, ":money_gained", ":village_elder"),
        (troop_remove_gold, ":village_elder", ":money_gained"),
    (else_try),
        (assign, ":money_gained", 50),
    (try_end),
    (party_get_slot, ":prosperity", "$current_town", slot_town_prosperity),
    # (assign, reg22, ":prosperity"),
    # (display_message, "@Prosperity: {reg22}"),#
    (val_add, ":prosperity", 60),
    (val_mul, ":prosperity", 5),
    (val_add, ":money_gained", ":prosperity"),
    (call_script, "script_troop_add_gold", "trp_player", ":money_gained"),
    (assign, reg23, ":money_gained"),

    (assign, ":morale_increase", 3),
    (store_div, ":money_gained_div_100", ":money_gained", 100),
    (val_add, ":morale_increase", ":money_gained_div_100"),
    (call_script, "script_change_player_party_morale", ":morale_increase"),

    # (faction_get_slot, ":faction_morale", ":village_faction",  slot_faction_morale_of_player_troops),
    (store_mul, ":morale_decrease", ":morale_increase", -200),
    (call_script, "script_change_faction_troop_morale", ":village_faction", ":morale_decrease", 1), #SB : script call
    # (val_sub, ":faction_morale", ":morale_increase_mul_2"),
    # (faction_set_slot, ":village_faction",  slot_faction_morale_of_player_troops, ":faction_morale"),

#NPC companion changes begin
    (call_script, "script_objectionable_action", tmt_humanitarian, "str_loot_village"),
#NPC companion changes end

      ],
    [
      ("continue",[], "Continue...",
       [
    #steal cattle
    (jump_to_menu, "mnu_close"),
    (call_script, "script_calculate_amount_of_cattle_can_be_stolen", "$current_town"),
    (assign, ":max_cattle", reg0),
    (val_mul, ":max_cattle", 3),
    (val_div, ":max_cattle", 2),
    (party_get_slot, ":num_cattle", "$current_town", slot_village_number_of_cattle),
    (val_min, ":max_cattle", ":num_cattle"),
    (val_add, ":max_cattle", 1),
    (store_random_in_range, ":random_value", 0, ":max_cattle"),
    (try_begin),
        (gt, ":random_value", 0),
        (call_script, "script_create_cattle_herd", "$current_town", ":random_value"),
        (val_sub, ":num_cattle", ":random_value"),
        (party_set_slot, "$current_town", slot_village_number_of_cattle, ":num_cattle"),
    (try_end),

    #loot items
    (troop_clear_inventory, "trp_temp_troop"),

    #begin of changes
    # (party_get_slot, ":bound_town", "$current_town", slot_village_bound_center),
    #the above line is the culprit for divide by zero
    # (store_sub, ":item_to_price_slot", slot_town_trade_good_prices_begin, trade_goods_begin),
    (assign, ":item_to_price_slot", slot_town_trade_good_prices_begin),
    (reset_item_probabilities,100),
    (assign, ":total_probability", 1), #SB  : possible div/0 if slots are reset

    (try_for_range, ":cur_goods", trade_goods_begin, trade_goods_end),
        (party_get_slot, ":cur_price", "$current_town", ":item_to_price_slot"),
        (val_add, ":item_to_price_slot", 1),
        (call_script, "script_center_get_production", "$current_town", ":cur_goods"),
        # (str_store_item_name, s22, ":cur_goods"),
        # (display_message, "@{s22}: production {reg0}"),
        (assign, ":cur_probability", reg1),#use base production
        (call_script, "script_center_get_consumption", "$current_town", ":cur_goods"),
        (str_store_item_name, s22, ":cur_goods"),
        (display_message, "@{s22}: consumption {reg0}"),
        (assign, ":cur_consumption", reg0),
        (val_div, ":cur_consumption", 3),
        (val_add, ":cur_probability", ":cur_consumption"),
        (val_mul, ":cur_probability", 4),
        (try_begin),
            (eq, ":cur_price", 0),
            (val_add, ":cur_price", 1),
        (try_end),

        (val_mul, ":cur_probability", average_price_factor),
        (val_div, ":cur_probability", ":cur_price"), #divide by zero error here
        #first only simulation
        #(set_item_probability_in_merchandise,":cur_goods",":cur_probability"),
        (val_add, ":total_probability", ":cur_probability"),
        # (assign, reg1, ":total_probability"),
        # (assign, reg2, ":cur_price"),
        # (assign, reg3, ":cur_probability"),
        # (assign, reg4, ":item_to_price_slot"),
        # (str_store_item_name, s1, ":cur_goods"),
        # (display_message, "@{s1} price : {reg2} in slot {reg4}, probability: {reg3};{reg1} total"),
    (try_end),

    (assign, ":item_to_price_slot", slot_town_trade_good_prices_begin),
    (try_for_range, ":cur_goods", trade_goods_begin, trade_goods_end),
        (party_get_slot, ":cur_price", "$current_town", ":item_to_price_slot"),
        (val_add, ":item_to_price_slot", 1),
        (call_script, "script_center_get_production", "$current_town", ":cur_goods"),
        (assign, ":cur_probability", reg1),#use base production
        (call_script, "script_center_get_consumption", "$current_town", ":cur_goods"),
        (assign, ":cur_consumption", reg0),
        (val_div, ":cur_consumption", 3),
        (val_add, ":cur_probability", ":cur_consumption"),
        (val_mul, ":cur_probability", 4),
        (try_begin),
            (eq, ":cur_price", 0),
            (val_add, ":cur_price", 1),
        (try_end),

        (val_mul, ":cur_probability", average_price_factor),
        (val_div, ":cur_probability", ":cur_price"), #divide by zero error here

        (val_mul, ":cur_probability", num_merchandise_goods),
        (try_begin),
            (neq, ":total_probability", 0),
            (val_mul, ":cur_probability", 100),
            (val_div, ":cur_probability", ":total_probability"),
            #(else_try),
            #	(assign, ":cur_probability", 0),
        (try_end),

        (assign, reg22, ":cur_probability"),
        # (str_store_item_name, s22, ":cur_goods"),
        # (display_message, "@{s22}: {reg22}"),
        (set_item_probability_in_merchandise,":cur_goods",":cur_probability"),
    (try_end),
    #end of changes
    (party_get_skill_level, ":looting_skill", "p_main_party", "skl_looting"),
    (val_mul, ":looting_skill", 3),
    (val_add, ":looting_skill", 5),
    (troop_add_merchandise,"trp_temp_troop",itp_type_goods,":looting_skill"),
    (troop_sort_inventory, "trp_temp_troop"),
    (change_screen_loot, "trp_temp_troop"),

        ]),
    ],
  ),

  (
    "village_enslave_complete",mnf_disable_all_keys,
    "On your orders your troops rampage through the village, dragging peasants from their hovels and stripping them of all possessions.\
 In the span of a few hours you've rounded up {reg1} prisoners, leaving the infirm and the younglings behind. As you march the trussed-up villagers away from the cooling ember of their broken hearths, you hear a distant howl...",
    "none",
    [
        (get_achievement_stat, ":number_of_village_raids", ACHIEVEMENT_THE_BANDIT, 0),
        (get_achievement_stat, ":number_of_caravan_raids", ACHIEVEMENT_THE_BANDIT, 1),
        (val_add, ":number_of_village_raids", 1),
        (set_achievement_stat, ACHIEVEMENT_THE_BANDIT, 0, ":number_of_village_raids"),

        (try_begin),
          (ge, ":number_of_village_raids", 3),
          (ge, ":number_of_caravan_raids", 3),
          (unlock_achievement, ACHIEVEMENT_THE_BANDIT),
        (try_end),

        (set_background_mesh, "mesh_pic_prisoner_wilderness"),
        (call_script, "script_objectionable_action", tmt_humanitarian, "str_sell_slavery"),

        # (party_get_slot, ":village_lord", "$current_town", slot_town_lord),
        # (try_begin),
          # (gt,  ":village_lord", 0),
          # (call_script, "script_change_player_relation_with_troop", ":village_lord", -5),
        # (try_end),
        (store_random_in_range, ":enmity", -35, -25),
        (call_script, "script_change_player_relation_with_center", "$current_town", ":enmity"),

        (party_add_particle_system, "$current_town", "psys_map_village_looted_smoke"),
        (store_faction_of_party, ":village_faction", "$current_town"),
        (store_relation, ":relation", ":village_faction", "fac_player_supporters_faction"),
        (try_begin),
          (lt, ":relation", 0),
          (call_script, "script_change_player_relation_with_faction", ":village_faction", -2),
        (try_end),

        (store_mul, ":morale_decrease", "$qst_eliminate_bandits_infesting_village_num_villagers", -75),
        (val_max, ":morale_decrease", "$qst_eliminate_bandits_infesting_village_num_villagers", -2000), #capped at -20 per loot
        (call_script, "script_change_faction_troop_morale", ":village_faction", ":morale_decrease", 1), #SB : script call
        (assign, reg1, "$qst_eliminate_bandits_infesting_village_num_villagers"),

      ],
    [
      ("continue",[], "Continue...",
       [
            (assign, "$g_leave_town", 1),
            (jump_to_menu, "mnu_village"),
        ]),
    ],
  ),

  (
    "village_loot_defeat",mnf_scale_picture,
    "Fighting with courage and determination, the villagers manage to hold together and drive off your forces.",
    "none",
    [
        (set_background_mesh, "mesh_pic_villageriot"),
    ],
    [
      ("continue",[],"Continue...",[(change_screen_return),
      #SB : renown loss
      (call_script, "script_change_troop_renown", "trp_player", -3),
      ]),
    ],
  ),

  (
    "village_loot_continue",0,
    "Do you wish to continue looting this village?",
    "none",
    [
    (set_background_mesh, "mesh_pic_looted_village"),
    ],
    [
      ("loot_yes",[],"Yes.",[ (rest_for_hours, 3, 5, 1), #rest while attackable (3 hours will be extended by the trigger)
                              #SB : resume hostilities
                              (call_script, "script_diplomacy_party_attacks_neutral", "p_main_party", "$current_town"),
                              (change_screen_return),
                              ]),
      ("loot_no",[],"No.",[(call_script, "script_village_set_state", "$current_town", 0),
                            (party_set_slot, "$current_town", slot_village_raided_by, -1),
                            (assign, "$g_player_raiding_village", 0),
                            (assign, "$g_village_raid_evil", 0), #SB : reset global
                            (party_set_slot, "$current_town", slot_town_last_nearby_fire_time, 0),
                            (change_screen_return)]),
    ],
  ),

  (
    "close",0,
    "Nothing.",
    "none",
    [
        (change_screen_return),
      ],
    [],
  ),

  (
    "town",mnf_enable_hot_keys|mnf_scale_picture,
    "{s10} {s14}^{s11}{s12}{s13}^{s16}^{s35}",
    "none",
    [
	(stop_all_sounds, 1), #madsci bug fix to ambient sounds that dont stop
        (try_begin),
          (gt, "$sneaked_into_town", disguise_none),
          (call_script, "script_music_set_situation_with_culture", mtf_sit_town_infiltrate),
        (else_try),
          (call_script, "script_music_set_situation_with_culture", mtf_sit_travel),
        (try_end),
        (store_encountered_party, "$current_town"),
	(assign, "$g_player_is_captive", 0), #freelancer fix where this can be untrue

        #Who's in the hall? {s16} + Dj_FRedy
        (call_script, "script_whos_in_the_hall", "$current_town"),
        #Who's in the hall? - Dj_FRedy

        (try_begin),
          (party_get_slot, ":center_lord", "$current_town", slot_town_lord),
          (ge, ":center_lord", 0),
          (set_fixed_point_multiplier, 100),
          (position_set_x, pos0, 70),
          (position_set_y, pos0, 5),
          (position_set_z, pos0, 75),
          (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", ":center_lord", pos0),
        (try_end),

        (try_begin),
          (is_between, "$g_encountered_party", towns_begin, towns_end),
          (store_sub, ":encountered_town_no", "$g_encountered_party", towns_begin),
          (set_achievement_stat, ACHIEVEMENT_MIGRATING_COCONUTS, ":encountered_town_no", 1),

          (assign, ":there_are_villages_not_visited", 0),
          (try_for_range, ":cur_town", towns_begin, towns_end),
            (store_sub, ":encountered_town_no", ":cur_town", towns_begin),
            (get_achievement_stat, ":town_is_visited", ACHIEVEMENT_MIGRATING_COCONUTS, ":encountered_town_no"),
            (eq, ":town_is_visited", 0),
            (assign, ":there_are_villages_not_visited", 1),
          (try_end),

          (try_begin),
            (eq, ":there_are_villages_not_visited", 0),
            (unlock_achievement, ACHIEVEMENT_MIGRATING_COCONUTS),
          (try_end),
        (try_end),


    #notes
    (call_script, "script_update_center_recon_notes", "$current_town"),
    #if siege
    (assign, "$g_defending_against_siege", 0),
    (str_clear, s3),
    (party_get_battle_opponent, ":besieger_party", "$current_town"),
    (store_faction_of_party, ":encountered_faction", "$g_encountered_party"),
    (store_relation, ":faction_relation", ":encountered_faction", "fac_player_supporters_faction"),
    (try_begin),
        (gt, ":besieger_party", 0),
        (ge, ":faction_relation", 0),
        (store_faction_of_party, ":besieger_party_faction", ":besieger_party"),

        (store_relation, ":besieger_party_relation", ":besieger_party_faction", "fac_player_supporters_faction"),
        (lt, ":besieger_party_relation", 0),

        (assign, "$g_defending_against_siege", 1),
        (assign, "$g_siege_first_encounter", 1),
        (jump_to_menu, "mnu_siege_started_defender"),
    (try_end),

        #Quest menus

        (assign, "$qst_collect_taxes_currently_collecting", 0),

        (try_begin),
          (gt, "$quest_auto_menu", 0),
          (jump_to_menu, "$quest_auto_menu"),
          (assign, "$quest_auto_menu", 0),
        (try_end),

        (try_begin),
##          (eq, "$g_center_under_siege_battle", 1),
##          (jump_to_menu,"mnu_siege_started_defender"),
##        (else_try),
          (eq, "$g_town_assess_trade_goods_after_rest", "$current_town"), #SB : loop fix
          (assign, "$g_town_assess_trade_goods_after_rest", 0),
          (jump_to_menu,"mnu_town_trade_assessment"),
        (try_end),

        (assign, "$talk_context", 0),
        (assign,"$all_doors_locked",0),

        (try_begin),
          (eq, "$g_town_visit_after_rest", 1),
          (assign, "$g_town_visit_after_rest", 0),
          (assign, "$town_entered", 1),
        (try_end),

        (try_begin),
          (eq,"$g_leave_town",1),
          (assign,"$g_leave_town",0),
          (assign,"$g_permitted_to_center",0),

          #SB : handle disguise removal here or in trigger


          (leave_encounter),
          (change_screen_return),
        (try_end),

        (str_store_party_name, s2, "$current_town"),
        (party_get_slot, ":center_lord", "$current_town", slot_town_lord),
        (store_faction_of_party, ":center_faction", "$current_town"),
        (str_store_faction_name, s9, ":center_faction"),

        (party_get_slot, ":religion_center", "$current_town", slot_center_religion),
        (str_clear, s35),
        (try_begin),
          (eq, ":religion_center", slot_religion_christian_chalcedonian),
          (str_store_string, s35, "@^This is a Chalcedonian Christian settlement."),
        (else_try),
          (eq, ":religion_center", slot_religion_christian_arian),
          (str_store_string, s35, "@^This is an Arian Christian settlement."),
        (else_try),
          (eq, ":religion_center", slot_religion_christian_miaphysite),
          (str_store_string, s35, "@^This is a Miaphysite Christian settlement."),
        (else_try),
          (eq, ":religion_center", slot_religion_christian_nestorian),
          (str_store_string, s35, "@^This is a Nestorian Christian settlement."),
        (else_try),
          (eq, ":religion_center", slot_religion_christian_donatist),
          (str_store_string, s35, "@^This is a Donatist Christian settlement."),
        (else_try),
          (eq, ":religion_center", slot_religion_paganism),
          (str_store_string, s35, "@^This is a Pagan settlement."),
        (else_try),
          (eq, ":religion_center", slot_religion_zoroastrianism),
          (str_store_string, s35, "@^This is a Mazdaist Zoroastrian settlement."),
        (else_try),
          (eq, ":religion_center", slot_religion_zurvanism),
          (str_store_string, s35, "@^This is a Zurvanist Zoroastrian settlement."),
        (else_try),
          (eq, ":religion_center", slot_religion_roman_paganism),
          (str_store_string, s35, "@^This is a Roman Pagan settlement."),
        (else_try),
          (eq, ":religion_center", slot_religion_judaism),
          (str_store_string, s35, "@^This is a Jewish settlement."),
	(else_try),
          (str_store_string, s35, "@^This settlement has no known religion."),
        (try_end),

        (try_begin),
          (ge, ":center_lord", 0),
          (str_store_troop_name,s8,":center_lord"),
          (str_store_string,s7,"@{s8} of {s9}"),
        (try_end),

        (try_begin),
          (party_slot_eq,"$current_town",slot_party_type, spt_town),

          (str_store_string, s60, s2),

          (party_get_slot, ":prosperity", "$current_town", slot_town_prosperity),
          (try_begin),
            (ge, "$cheat_mode", 1),
            (assign, reg4, ":prosperity",),
            (display_message, "@{!}DEBUG -- Prosperity: {reg4}"),
          (try_end),

     #          (val_add, ":prosperity", 5),
          (store_div, ":str_id", ":prosperity", 10),
          (val_min, ":str_id", 9),
          (val_add, ":str_id", "str_town_prosperity_0"),
          (str_store_string, s10, ":str_id"),

          (store_div, ":str_id", ":prosperity", 20),
          (val_min, ":str_id", 4),
          (val_add, ":str_id", "str_town_alt_prosperity_0"),

          (str_store_string, s14, ":str_id"),


        (else_try),
          (str_clear, s14),
          (str_store_string,s10,"@You are at {s2}."),
        (try_end),
        ##diplomacy start+
        (assign, ":save_reg0", reg0),#save variables
        (assign, ":save_reg4", reg4),
        (assign, reg0, 0),
        (assign, reg4, 0),
        (try_begin),#If there's a relation of some kind, write it to s11 (which we'll overwrite below)
            (lt, ":center_lord", 1),
        (else_try),
            #your relative
            (call_script, "script_troop_get_family_relation_to_troop", ":center_lord", "trp_player"),#outputs to s11, reg0, and reg4
            (ge, reg0, 1),#Fall through if this not a relative
        (else_try),
            #your current liege
            (eq, ":center_faction", "$players_kingdom"),
            (is_between, ":center_faction", kingdoms_begin, kingdoms_end),#include fac_player_supporters_faction for claimant quest
            (faction_slot_eq, ":center_faction", slot_faction_leader, ":center_lord"),
            (str_store_string, s11, "@liege"),
            (assign, reg0, 1),
        (else_try),
            #your former liege if you renounced a kingdom
            (eq, ":center_faction", "$players_oath_renounced_against_kingdom"),
            (is_between, ":center_faction", npc_kingdoms_begin, npc_kingdoms_end),
            (faction_slot_eq, ":center_faction", slot_faction_leader, ":center_lord"),
            (str_store_string, s11, "@former liege"),
            (assign, reg0, 1),
        (else_try),
            #stop here for lords you haven't met, or non-hero troops
            (this_or_next|neg|troop_is_hero, ":center_lord"),
            (troop_slot_eq, ":center_lord", slot_troop_met, 0),
        (else_try),
            #check for affiliates
            (call_script, "script_dplmc_is_affiliated_family_member", ":center_lord"),
            (ge, reg0, 1),
            (try_begin),
                (ge, "$g_encountered_party_relation", 0),#don't say "ally" when you might fight them, as that's confusing
                (str_store_string, s11, "str_dplmc_ally"),
            (else_try),
                (str_store_string, s11, "@affiliate"),
            (try_end),
        (else_try),
            #check for former companions
            (call_script, "script_troop_get_player_relation", ":center_lord"),
            (is_between, ":center_lord", companions_begin, companions_end),
            (neg|troop_slot_eq, ":center_lord", slot_troop_playerparty_history, dplmc_pp_history_nonplayer_entry),
            (try_begin),
               (ge, "$g_encountered_party_relation", 0),#don't say "ally" when you might fight them, as that's confusing
               (ge, reg0, 50),
               (str_store_string, s11, "str_dplmc_ally"),
            (else_try),
                (ge, "$g_encountered_party_relation", 0),
                (ge, reg0, 20),
                (str_store_string, s11, "str_dplmc_friend"),
            (else_try),
                (str_store_string, s11, "@former companion"),
            (try_end),
            (assign, reg0, 1),
        (else_try),
            #don't print "friend" if you might fight them
            (lt, "$g_encountered_party_relation", 0),
            (assign, reg0, 0),
        (else_try),
            #check for friends
            (val_div, reg0, 50),#right now reg0 holds the relation with the player
            (ge, reg0, 1),
            (str_store_string, s11, "str_dplmc_friend"),
        (else_try),
            #check for marshall
            (eq, ":center_faction", "$players_kingdom"),
            (faction_slot_eq, ":center_faction", slot_faction_marshall, ":center_lord"),
            (str_store_string, s11, "@marshall"),
        (else_try),
            #check for vassal of player if nothing else to say
            (call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", ":center_faction"),
            (val_add, reg0, 1),
            (val_sub, reg0, DPLMC_FACTION_STANDING_LEADER_SPOUSE),
            (ge, reg0, 1),
            (str_store_string, s11, "@vassal"),
        (else_try),
            (assign, reg0, 0),
        (try_end),
        ##diplomacy end+
        (try_begin),
          (party_slot_eq,"$current_town",slot_party_type, spt_castle),
          (try_begin),
            (eq, ":center_lord", "trp_player"),
            (str_store_string,s11,"@ Your own banner flies over the castle gate."),
          ##diplomacy start+ If reg0 > 0, a relation string was written to {s11} above
          (else_try),
            (ge, reg0, 1),
            (str_store_string, s11, "@ You see the banner of your {s11} {s7} over the castle gate."),
          ##diplomacy end+
          (else_try),
            (gt, ":center_lord", -1),
            (troop_slot_eq, ":center_lord", slot_troop_spouse, "trp_player"),
            (str_store_string,s11,"str__you_see_the_banner_of_your_wifehusband_s7_over_the_castle_gate"),
          (else_try),
            (ge, ":center_lord", 0),
            (str_store_string,s11,"@ You see the banner of {s7} over the castle gate."),
          (else_try),
    ##            (str_store_string,s11,"@ This castle seems to belong to no one."),
            (str_store_string,s11,"@ This castle has no garrison."),
          (try_end),
        (else_try),
          (try_begin),
            (eq, ":center_lord", "trp_player"),
            (str_store_string,s11,"@ Your own banner flies over the town gates."),
          ##diplomacy start+ If reg0 > 0, a relation string was written to {s11} above
          (else_try),
            (ge, reg0, 1),
            (str_store_string, s11, "@ The banner of your {s11} {s7} flies over the town gates."),
          ##diplomacy end+
          (else_try),
            (gt, ":center_lord", -1),
            (troop_slot_eq, ":center_lord", slot_troop_spouse, "trp_player"),
            (str_store_string,s11,"str__the_banner_of_your_wifehusband_s7_flies_over_the_town_gates"),
          (else_try),
            (ge, ":center_lord", 0),
            (str_store_string,s11,"@ You see the banner of {s7} over the town gates."),
          (else_try),
    ##            (str_store_string,s11,"@ The townsfolk here have declared their independence."),
            (str_store_string,s11,"@ This town has no garrison."),
          (try_end),
        (try_end),
        ##diplomacy start+
        (assign, reg0, ":save_reg0"),#revert variables
        (assign, reg4, ":save_reg4"),
        ##diplomacy end+

        (str_clear, s12),
        (try_begin),
          (party_slot_eq,"$current_town",slot_party_type, spt_town),
          (party_get_slot, ":center_relation", "$current_town", slot_center_player_relation),
          (call_script, "script_describe_center_relation_to_s3", ":center_relation"),
          (assign, reg9, ":center_relation"),
          (str_store_string, s12, "@{!} {s3} ({reg9})."),
        (try_end),

        (str_clear, s13),
        (try_begin),
          (gt,"$entry_to_town_forbidden",0),
          (str_store_string, s13, "@ You have successfully sneaked in."),
        (else_try),
          (faction_slot_eq, ":center_faction", slot_faction_ai_state, sfai_feast),
          (faction_slot_eq, ":center_faction", slot_faction_ai_object, "$current_town"),

          (str_store_string, s13, "str__the_lord_is_currently_holding_a_feast_in_his_hall"),
        (else_try), #SB : we use this incidental information to reflect on the player's residence/court
          (troop_get_slot, ":player_spouse", "trp_player", slot_troop_spouse),
          (try_begin),
            (lt, ":player_spouse", 0), #to make registers work
            (assign, ":player_spouse", 0),
          (else_try),
            (neg|troop_slot_eq, ":player_spouse", slot_troop_occupation, slto_kingdom_lady),
            (neg|troop_slot_eq, ":player_spouse", slot_troop_cur_center, "$current_town"),
            (assign, ":player_spouse", 0),
          (try_end),
          (try_begin),
            (eq, "$g_player_court", "$current_town"),
            (assign, reg0, ":player_spouse"),
            (store_and, reg1, "$players_kingdom_name_set", rename_center), #check if it's "court" or "capital"
            (str_store_troop_name, s0, ":player_spouse"),
            (str_store_string, s13, "@ Your {reg1?capital is:court can be found} here{reg0? with your spouse, {s0} in residence:}."),
          (else_try),
            (neq, "$g_player_court", "$current_town"),
            (gt, ":player_spouse", 0),
            (troop_slot_eq, ":player_spouse", slot_troop_cur_center, "$current_town"),
            (str_store_string, s13, "@ Your household can be found here."),
          (try_end),
        (try_end),

        #forbidden to enter?
        (try_begin),
          (store_time_of_day,reg(12)),
          (ge,reg(12),5),
          (lt,reg(12),21),
          (assign,"$town_nighttime",0),
        (else_try),
          (assign,"$town_nighttime",1),
          (party_slot_eq,"$current_town",slot_party_type, spt_town),
          (str_store_string, s13, "str_town_nighttime"),
        (try_end),

        (try_begin),
          (party_slot_ge, "$current_town", slot_town_has_tournament, 1),
          (neg|is_currently_night),
          (party_set_slot, "$current_town", slot_town_has_tournament, 1),
          (str_store_string, s13, "@{s13} A tournament will be held here soon."),
        (try_end),

        (assign,"$castle_undefended",0),
        (party_get_num_companions, ":castle_garrison_size", "p_collective_enemy"),
        (try_begin),
          (eq,":castle_garrison_size",0),
          (assign,"$castle_undefended",1),
        (try_end),

        (call_script, "script_set_town_picture"),

#		(str_clear, s5), #alert player that there are new rumors
#		(try_begin),
#			(eq, 1, 0),
#			(neg|is_currently_night),
#			(str_store_string, s5, "@^The buzz of excited voices as you come near the gate suggests to you that news of some import is circulating among the townsfolk."),
#			(lt, "$last_town_log_entry_checked", "$num_log_entries"),
#			(assign, "$g_town_rumor_log_entry", 0),
#			(try_for_range, ":log_entry", "$last_town_log_entry_checked", "$num_log_entries"),
#				(eq, ":log_entry", 4123), #placeholder to avoid having unused variable error message
#			(try_end),
#			(assign, "$last_town_log_entry_checked", "$num_log_entries"),
#		(try_end),
        ],
    [
      ("castle_castle",
      [
        (party_slot_eq,"$current_town",slot_party_type, spt_castle),
        (eq, "$sneaked_into_town", disguise_none),

        (str_clear, s1),
        (try_begin),
          (store_faction_of_party, ":center_faction", "$current_town"),
          (faction_slot_eq, ":center_faction", slot_faction_ai_state, sfai_feast),
          (faction_slot_eq, ":center_faction", slot_faction_ai_object, "$current_town"),
          (str_store_string, s1, "str__join_the_feast"),
        (try_end),
        #SB : some gender string tweaks
        (try_begin),
          (party_get_slot, ":town_lord", "$current_town", slot_town_lord),
          (lt, ":town_lord", 0),
          (assign, reg4, 0), #default to lord
        (else_try),
          (call_script, "script_dplmc_store_troop_is_female_reg", ":town_lord", 4),
        (try_end),
        #possibly replace "the" with "your"
        ],"Go to the {reg4?Lady:Lord}'s hall{s1}.",
       [

           (try_begin),
             (this_or_next|eq, "$all_doors_locked", 1),
             (gt, "$sneaked_into_town", disguise_none),
             (display_message,"str_door_locked",message_locked),
           (else_try),
		(neq, "$cheat_mode", 1), #madsci let the player join feasts if cheats are enabled for testing purposes
             (this_or_next|neq, "$players_kingdom", "$g_encountered_party_faction"),
             (neg|troop_slot_ge, "trp_player", slot_troop_renown, 50),
             (neg|troop_slot_ge, "trp_player", slot_troop_renown, 125),
             (neq, "$g_player_eligible_feast_center_no", "$current_town"),

             (faction_slot_eq, "$g_encountered_party_faction", slot_faction_ai_state, sfai_feast),
             (faction_slot_eq, "$g_encountered_party_faction", slot_faction_ai_object, "$g_encountered_party"),

             (neg|check_quest_active, "qst_wed_betrothed"),
             (neg|check_quest_active, "qst_wed_betrothed_female"),

             (neg|troop_slot_ge, "trp_player", slot_troop_spouse, active_npcs_begin), #Married players always make the cut

             (jump_to_menu, "mnu_cannot_enter_court"),
           (else_try),
             (assign, "$town_entered", 1),
             (call_script, "script_enter_court", "$current_town"),
             (party_set_slot, "$current_town", slot_party_temp_slot_1, 0), #SB : visit filter
           (try_end),

        ], "Door to the castle."),



      ("join_tournament", [
        (neg|is_currently_night),
        (party_slot_ge, "$current_town", slot_town_has_tournament, 1),
        (eq,"$entry_to_town_forbidden",0), #SB : can't participate while disguised
        ]
       ,"Join the competition.",
       [
           (call_script, "script_fill_tournament_participants_troop", "$current_town", 1),
           (assign, "$g_tournament_cur_tier", 0),
           (assign, "$g_tournament_player_team_won", -1),
           (assign, "$g_tournament_bet_placed", 0),
           (assign, "$g_tournament_bet_win_amount", 0),
           (assign, "$g_tournament_last_bet_tier", -1),
           (assign, "$g_tournament_next_num_teams", 0),
           (assign, "$g_tournament_next_team_size", 0),
           (jump_to_menu, "mnu_town_tournament"),
        ]),

      ("town_castle",[
          (party_slot_eq,"$current_town",slot_party_type, spt_town),
          (eq,"$entry_to_town_forbidden",0),
          (str_clear, s1),
          (try_begin),
            (store_faction_of_party, ":center_faction", "$current_town"),
            (faction_slot_eq, ":center_faction", slot_faction_ai_state, sfai_feast),
            (faction_slot_eq, ":center_faction", slot_faction_ai_object, "$current_town"),
            (str_store_string, s1, "str__join_the_feast"),
          (try_end),

          ],"Go to the palace{s1}.",
       [
           (try_begin),
             (this_or_next|eq, "$all_doors_locked", 1),
             (gt, "$sneaked_into_town", disguise_none),
             (display_message,"str_door_locked",message_locked),
           (else_try),
             (this_or_next|neq, "$players_kingdom", "$g_encountered_party_faction"),
             (neg|troop_slot_ge, "trp_player", slot_troop_renown, 50),
             (neg|troop_slot_ge, "trp_player", slot_troop_renown, 125),
             (neq, "$g_player_eligible_feast_center_no", "$current_town"),

             (faction_slot_eq, "$g_encountered_party_faction", slot_faction_ai_state, sfai_feast),
             (faction_slot_eq, "$g_encountered_party_faction", slot_faction_ai_object, "$g_encountered_party"),

             (neg|check_quest_active, "qst_wed_betrothed"),
             (neg|check_quest_active, "qst_wed_betrothed_female"),

             (neg|troop_slot_ge, "trp_player", slot_troop_spouse, active_npcs_begin), #Married players always make the cut

             (jump_to_menu, "mnu_cannot_enter_court"),
            (else_try),
              (assign, "$town_entered", 1),
              (call_script, "script_enter_court", "$current_town"),
              (party_set_slot, "$current_town", slot_party_temp_slot_1, 0), #SB : visit filter
           (try_end),
        ], "Door to the castle."),

      ("town_center",
      [
        (party_slot_eq, "$current_town", slot_party_type, spt_town),
        (this_or_next|eq,"$entry_to_town_forbidden",0),
        (gt, "$sneaked_into_town", disguise_none), #SB : condition for disguise
           (party_get_slot, ":town_scene", "$current_town", slot_town_center),
	(gt, ":town_scene", 0), #madsci require valid scene
      ],
      "Take a walk around the streets.",
       [
         #If the player is fighting his or her way out
         (try_begin),
           (eq, "$talk_context", tc_prison_break),
           (assign, "$talk_context", tc_escape),
           (assign, "$g_mt_mode", tcm_escape),
           (store_faction_of_party, ":town_faction", "$current_town"),
           (try_begin), #SB : this really shouldn't be happening but we'll check player faction center anyway
             (neg|is_between, ":town_faction", npc_kingdoms_begin, kingdoms_end),
             (party_get_slot, ":town_faction", "$current_town", slot_center_original_faction),
           (try_end),
           (faction_get_slot, ":tier_2_troop", ":town_faction", slot_faction_tier_3_troop),
           (faction_get_slot, ":tier_3_troop", ":town_faction", slot_faction_tier_3_troop),
           (faction_get_slot, ":tier_4_troop", ":town_faction", slot_faction_tier_4_troop),
	(try_begin), #madsci failsafe
	(le, ":tier_2_troop", 0),
	(assign, ":tier_2_troop", "trp_manhunter"),
	(try_end),
	(try_begin),
	(le, ":tier_3_troop", 0),
	(assign, ":tier_3_troop", "trp_manhunter"),
	(try_end),
	(try_begin),
	(le, ":tier_4_troop", 0),
	(assign, ":tier_4_troop", "trp_manhunter"),
	(try_end),
           (party_get_slot, ":town_scene", "$current_town", slot_town_center),
           (modify_visitors_at_site, ":town_scene"),
           (reset_visitors),
           #SB : TODO : take account slot_center_has_prisoner_tower
           #ideally we could alarm troops at locations
           (try_begin),
            #if guards have not gone to some other important happening at nearby villages, then spawn 4 guards. (example : fire)
             (party_get_slot, ":last_nearby_fire_time", "$current_town", slot_town_last_nearby_fire_time),
             (store_current_hours, ":cur_time"),
             (store_add, ":fire_finish_time", ":last_nearby_fire_time", fire_duration),

             (neg|is_between, ":cur_time", ":last_nearby_fire_time", ":fire_finish_time"),
             (store_time_of_day, ":cur_day_hour"),
             (try_begin), #there are 6 guards at day time (no fire ext)
               (ge, ":cur_day_hour", 6),
               (lt, ":cur_day_hour", 22),
               (set_visitors, 25, ":tier_2_troop", 2),
               (set_visitors, 26, ":tier_2_troop", 1),
               (set_visitors, 27, ":tier_3_troop", 2),
               (set_visitors, 28, ":tier_4_troop", 1),
             (else_try),  #only 4 guards because of night
               (set_visitors, 25, ":tier_2_troop", 1),
               (set_visitors, 26, ":tier_2_troop", 1),
               (set_visitors, 27, ":tier_3_troop", 1),
               (set_visitors, 28, ":tier_4_troop", 1),
             (try_end),
           (else_try),
            #if guards have gone to some other important happening at nearby villages, then spawn only 1 guard. (example : fire)
             (store_time_of_day, ":cur_day_hour"),
             (try_begin), #only 2 guard because there is a fire at one owned village
               (ge, ":cur_day_hour", 6),
               (lt, ":cur_day_hour", 22),
               (set_visitors, 25, ":tier_2_troop", 1),
               (set_visitors, 26, ":tier_2_troop", 0),
               (set_visitors, 27, ":tier_3_troop", 1),
               (set_visitors, 28, ":tier_4_troop", 0),
             (else_try), #only 1 guard because both night and there is a fire at one owned village
               (set_visitors, 25, ":tier_2_troop", 1),
               (set_visitors, 26, ":tier_2_troop", 0),
               (set_visitors, 27, ":tier_3_troop", 0),
               (set_visitors, 28, ":tier_4_troop", 0),
             (try_end),
           (try_end),
           (set_jump_mission,"mt_town_center"),
           (try_begin),
             (gt, "$sneaked_into_town", disguise_none), #setup disguise
             (assign, ":override_state", af_override_everything),

             #SB : override disguise and set flags for entries
             (eq, "$g_dplmc_player_disguise", 1),
             (try_for_range, ":entry_no", 0, 8),
               (mission_tpl_entry_set_override_flags, "mt_town_center", ":entry_no", ":override_state"),
               (call_script, "script_set_disguise_override_items", "mt_town_center", ":entry_no", 1),
             (try_end),
           (try_end),
           (jump_to_scene, ":town_scene"),
           (change_screen_mission),
            #If you're already at escape, then talk context will reset
         (else_try),
           (assign, "$talk_context", 0),
           (call_script, "script_cf_enter_center_location_bandit_check"),
           #All other circumstances...
         (else_try),
           (party_get_slot, ":town_scene", "$current_town", slot_town_center),
           (modify_visitors_at_site, ":town_scene"),
           (reset_visitors),
           (assign, "$g_mt_mode", tcm_default),
           #SB : redo guard troops with fallbacks
           (assign, ":town_faction", "$g_encountered_party_faction"),
           (assign, ":troop_prison_guard", -1),
           (assign, ":troop_castle_guard", -1),
           (assign, ":tier_2_troop", -1),
           (assign, ":tier_3_troop", -1),
           	(try_begin),
             	(faction_get_slot, ":culture", ":town_faction", slot_faction_culture),
		(gt, ":culture", 0),
           	(else_try), #fallback
             	(party_get_slot, ":town_faction", "$current_town", slot_center_original_faction),
             	(faction_get_slot, ":culture", ":town_faction", slot_faction_culture),
		(gt, ":culture", 0),
           	(try_end),
	(faction_get_slot, ":troop_prison_guard", ":town_faction", slot_faction_prison_guard_troop),
	(faction_get_slot, ":troop_castle_guard", ":town_faction", slot_faction_castle_guard_troop),
           (try_begin),
             (le, ":troop_prison_guard", 0),
             (faction_get_slot, ":troop_prison_guard", ":town_faction", slot_faction_prison_guard_troop),
		(gt, ":troop_prison_guard", 0),
		(else_try),
		(assign,  ":troop_prison_guard", "trp_gothic_prison_guard"), #madsci failsafe
           (try_end),
           (try_begin),
             (le, ":troop_castle_guard", 0),
             (faction_get_slot, ":troop_castle_guard", ":town_faction", slot_faction_castle_guard_troop),
		(gt, ":troop_castle_guard", 0),
		(else_try),
		(assign, ":troop_castle_guard","trp_gothic_castle_guard"), #madsci failsafe
           (try_end),
           (try_begin),
             (le, ":tier_2_troop", 0),
             (faction_get_slot, ":tier_2_troop", ":town_faction", slot_faction_tier_2_troop),
	(gt, ":tier_2_troop", 0),
	(else_try),
	(assign, ":tier_2_troop", "trp_manhunter"),
           (try_end),
           (try_begin),
             (le, ":tier_3_troop", 0),
             (faction_get_slot, ":tier_3_troop", ":town_faction", slot_faction_tier_3_troop),
	(gt, ":tier_3_troop", 0),
	(else_try),
	(assign, ":tier_3_troop", "trp_manhunter"),
           (try_end),
           (try_begin), #think about this, should castle guard have to go nearby fire too? If he do not go, killing 2 armored guard is too hard for player. For now he goes too.
             #if guards have not gone to some other important happening at nearby villages, then spawn 4 guards. (example : fire)
             (party_get_slot, ":last_nearby_fire_time", "$current_town", slot_town_last_nearby_fire_time),
             (store_current_hours, ":cur_time"),
             (store_add, ":fire_finish_time", ":last_nearby_fire_time", fire_duration),

             (neg|is_between, ":cur_time", ":last_nearby_fire_time", ":fire_finish_time"),
             (set_visitor, 23, ":troop_castle_guard"),
           (try_end),
           (set_visitor, 24, ":troop_prison_guard"),

           (try_begin),
             (gt,":tier_2_troop", 0),
             (assign,reg0,":tier_3_troop"),
             (assign,reg1,":tier_3_troop"),
             (assign,reg2,":tier_2_troop"),
             (assign,reg3,":tier_2_troop"),
           (else_try), #SB : wtf is this
             (assign,reg0,"trp_tiro"),
             (assign,reg1,"trp_tiro"),
             (assign,reg2,"trp_sagittarius"),
             (assign,reg3,"trp_pedes"),
           (try_end),
           (shuffle_range,0,4),

           (try_begin),
             #if guards have not gone to some other important happening at nearby villages, then spawn 4 guards. (example : fire)
             (party_get_slot, ":last_nearby_fire_time", "$current_town", slot_town_last_nearby_fire_time),
             (store_current_hours, ":cur_time"),
             (store_add, ":fire_finish_time", ":last_nearby_fire_time", fire_duration),

             (neg|is_between, ":cur_time", ":last_nearby_fire_time", ":fire_finish_time"),
             (set_visitor,25,reg0),
             (set_visitor,26,reg1),
             (set_visitor,27,reg2),
             (set_visitor,28,reg3),
           (try_end),

          (try_begin),
            (eq, "$current_town", "p_town_8"),
            (set_visitors, 8, "trp_antiquarian", 1),
            (set_visitors, 13, "trp_chudjak", 1),
            (try_begin),
              (eq, "$g_nero_quest", 3),
	      (neg|troop_slot_eq, "trp_nero_larper", slot_troop_occupation, dplmc_slto_dead),
              (set_visitors, 50, "trp_nero_larper", 1),
            (try_end),
          (try_end),

          (try_begin),
            (eq, "$current_town", "p_town_10"), #sirmium
            (check_quest_active,"qst_black_river"),
            (quest_slot_ge,"qst_black_river",slot_quest_current_state, 1),
            (set_visitors, 8, "trp_br_gerontius", 1),
            (set_visitors, 13, "trp_roman_marine", 1),
          (try_end),

          (try_begin),
            (eq, "$current_town", "p_town_12"),
	    (neg|main_party_has_troop, "trp_npc20"),
            (try_begin),
              (check_quest_active,"qst_sword_of_mars"),
              (quest_slot_ge,"qst_sword_of_mars",slot_quest_current_state, 6),
              (set_visitors, 8, "trp_ildico", 1), #for the quest
            (else_try),
              (eq, "$ildico_companion", 1),
              (set_visitors, 8, "trp_ildico", 1), #after the quest
            (try_end),
          (try_end),

          (try_begin),
            (eq, "$current_town", "p_town_13"),
            (set_visitors, 8, "trp_pilos_cultist", 1),
          (try_end),

          (try_begin),
            (eq, "$current_town", "p_town_36"),
            (set_visitors, 8, "trp_caius_cosades", 1),
          (try_end),

(try_begin), #madsci rebellion stuff
(eq, "$current_town", "p_town_22"),
(neq, "$talk_context", tc_prison_break),
(neq, "$talk_context", tc_escape),
(eq, "$jewish_rebellion", 1),
(eq, "$freelancer_state", 0),
(neg|is_currently_night),
(neg|troop_slot_eq, "trp_jewish_agitator", slot_troop_occupation, dplmc_slto_dead),
(set_visitor, 30, "trp_jewish_agitator"),
(else_try),
(eq, "$current_town", "p_town_45"),
(neq, "$talk_context", tc_prison_break),
(neq, "$talk_context", tc_escape),
(eq, "$armenian_rebellion", 1),
(eq, "$freelancer_state", 0),
(neg|is_currently_night),
(neg|faction_slot_eq, "fac_kingdom_31", slot_faction_state, sfs_active),
(neg|troop_slot_eq, "trp_armenian_agitator", slot_troop_occupation, dplmc_slto_dead),
(set_visitor, 30, "trp_armenian_agitator"),
(try_end),

           (party_get_slot, ":spawned_troop", "$current_town", slot_town_armorer),
           (set_visitor, 9, ":spawned_troop"),
           (party_get_slot, ":spawned_troop", "$current_town", slot_town_weaponsmith),
           (set_visitor, 10, ":spawned_troop"),
           (party_get_slot, ":spawned_troop", "$current_town", slot_town_elder),
           (set_visitor, 11, ":spawned_troop"),
           (party_get_slot, ":spawned_troop", "$current_town", slot_town_horse_merchant),
           (set_visitor, 12, ":spawned_troop"),
           (call_script, "script_init_town_walkers"),
           (set_jump_mission,"mt_town_center"),
           # (assign, ":override_state", af_override_horse), #SB : dynamic entry conditions

           (try_begin), #1 is first entrance, allow horses
             (eq, "$town_entered", 0),
             (assign, "$town_entered", 1),
             (eq, "$town_nighttime", 0),
             (set_jump_entry, 1),
             (assign, ":override_state", 0),
           (else_try),
             (assign, ":override_state", af_override_horse),
           (try_end),
           (try_begin),
             (gt, "$sneaked_into_town", disguise_none), #setup disguise
             (assign, ":override_state", af_override_everything),
           (try_end),
           #SB : override disguise and set flags for entries, moved block down
           (try_for_range, ":entry_no", 0, 8),
             (mission_tpl_entry_set_override_flags, "mt_town_center", ":entry_no", ":override_state"),
             (call_script, "script_set_disguise_override_items", "mt_town_center", ":entry_no", 1),
           (try_end),
           (jump_to_scene, ":town_scene"),
           (change_screen_mission),
         (try_end),
      ],"Door to the town center."),

      ("town_tavern",[
          (party_slot_eq,"$current_town",slot_party_type, spt_town),
          (this_or_next|eq,"$entry_to_town_forbidden",0),
          (gt, "$sneaked_into_town", disguise_none),
             (party_get_slot, ":cur_scene", "$current_town", slot_town_tavern),
		(gt, ":cur_scene", 0), #madsci require valid scene
          ]
       ,"Visit the tavern.",
       [
           (try_begin),
             (eq,"$all_doors_locked",1),
             (display_message,"str_door_locked",message_locked),
           (else_try),
             (call_script, "script_cf_enter_center_location_bandit_check"),
           (else_try),
             (assign, "$town_entered", 1),
             (set_jump_mission, "mt_town_default"),
             (mission_tpl_entry_set_override_flags, "mt_town_default", 0, af_override_horse),
             (try_begin), #SB : adjust sneaking overrides
               (gt, "$sneaked_into_town", disguise_none),
               (mission_tpl_entry_set_override_flags, "mt_town_default", 0, af_override_everything),
               (call_script, "script_set_disguise_override_items", "mt_town_default", 0, 1), #need weaposn for tavern fights
             (try_end),
             (party_get_slot, ":cur_scene", "$current_town", slot_town_tavern),
             (jump_to_scene, ":cur_scene"),
             (scene_set_slot, ":cur_scene", slot_scene_visited, 1),

             (assign, "$talk_context", tc_tavern_talk),
             (call_script, "script_initialize_tavern_variables"),

             (store_random_in_range, ":randomize_attacker_placement", 0, 4),

             (modify_visitors_at_site, ":cur_scene"),
             (reset_visitors),

             (assign, ":cur_entry", 17),

			 #this is just a cheat right now
             #(troop_set_slot, "trp_belligerent_drunk", slot_troop_cur_center, "$g_encountered_party"),
			 (try_begin),
				(eq, "$cheat_mode", 1),
				(troop_get_slot, ":drunk_location", "trp_belligerent_drunk", slot_troop_cur_center),
				(try_begin),
					(eq, "$cheat_mode", 0),
				(else_try),
					(is_between, ":drunk_location", centers_begin, centers_end),
					(str_store_party_name, s4, ":drunk_location"),
					(display_message, "str_belligerent_drunk_in_s4"),
			    (else_try),
					(display_message, "str_belligerent_drunk_not_found"),
				(try_end),

				# (troop_get_slot, ":promoter_location", "trp_fight_promoter", slot_troop_cur_center),
				# (try_begin),
					# (eq, "$cheat_mode", 0),
				# (else_try),
					# (is_between, ":promoter_location", centers_begin, centers_end),
					# (str_store_party_name, s4, ":promoter_location"),
					# (display_message, "str_roughlooking_character_in_s4"),
			    # (else_try),
					# (display_message, "str_roughlooking_character_not_found"),
				# (try_end),
			 (try_end),

			 #this determines whether or not a lord who dislikes you will commission an assassin
			 (try_begin),
				(store_current_hours, ":hours"),
				(store_sub, ":hours_since_last_attempt", ":hours", "$g_last_assassination_attempt_time"),
				(gt, ":hours_since_last_attempt", 168),
				##diplomacy start+ Support ladies owning fiefs
				#(try_for_range, ":lord", active_npcs_begin, active_npcs_end),
				(try_for_range, ":lord", heroes_begin, heroes_end),
					(this_or_next|is_between, ":lord", active_npcs_begin, active_npcs_end),
						(troop_slot_eq, ":lord", slot_troop_occupation, slto_kingdom_hero),
					#Make sure they're not retired or dead
					(neg|troop_slot_ge, ":lord", slot_troop_occupation, slto_retirement),
					#add support for non-noble personalities
					(this_or_next|troop_slot_eq, ":lord", slot_lord_reputation_type, lrep_ambitious),#"Lady MacBeth"
					(this_or_next|troop_slot_eq, ":lord", slot_lord_reputation_type, lrep_roguish),
					##diplomacy end+
					(troop_slot_eq, ":lord", slot_lord_reputation_type, lrep_debauched),
					(troop_get_slot, ":led_party", ":lord", slot_troop_leaded_party),
					(party_is_active, ":led_party"),
					(party_get_attached_to, ":led_party_attached", ":led_party"),
					(eq, ":led_party_attached", "$g_encountered_party"),
					(call_script, "script_troop_get_relation_with_troop", "trp_player", ":lord"),
					(lt, reg0, -20),
					(assign, "$g_last_assassination_attempt_time", ":hours"),
#					(assign, "$g_last_assassination_attempt_location", "$g_encountered_party"),
#					(assign, "$g_last_assassination_attempt_perpetrator", ":lord"),

					(troop_set_slot, "trp_hired_assassin", slot_troop_cur_center, "$g_encountered_party"),
				(try_end),
				##diplomacy start+
				#"Lady MacBeth" noblewomen will also attempt to have people killed on their husbands' behalf.
				(lt, "$g_last_assassination_attempt_time", ":hours"),
				(neg|troop_slot_eq, "trp_hired_assassin", slot_troop_cur_center, "$g_encountered_party"),
				(try_for_range, ":lady", kingdom_ladies_begin, kingdom_ladies_end),
					(troop_slot_eq, ":lady", slot_troop_cur_center, "$g_encountered_party"),
					(troop_slot_eq, ":lady", slot_lord_reputation_type, lrep_ambitious),#"Lady MacBeth"
					(troop_slot_eq, ":lady", slot_troop_occupation, slto_kingdom_lady),

					(call_script, "script_troop_get_player_relation", ":lady"),
					(lt, reg0, 1),
					#Will send an assassin if she doesn't like the player, and either she or her husband
					#is at -20 or worse with the player.
					(try_begin),
						(ge, reg0, -20),
						(troop_slot_ge, ":lady", slot_troop_spouse, 1),
						(troop_get_slot, reg0, ":lady", slot_troop_spouse),
						(call_script, "script_troop_get_player_relation", reg0),
					(try_end),
					(lt, reg0, -20),

					(assign, "$g_last_assassination_attempt_time", ":hours"),
					(troop_set_slot, "trp_hired_assassin", slot_troop_cur_center, "$g_encountered_party"),
				(try_end),
				##diplomacy end+
			 (try_end),

			 (try_begin),
				 (eq, ":randomize_attacker_placement", 0),
				 (call_script, "script_setup_tavern_attacker", ":cur_entry"),

				 (val_add, ":cur_entry", 1),
			 (try_end),

			 # (try_begin),
				# (eq, 1, 0),
				# (troop_slot_eq, "trp_fight_promoter", slot_troop_cur_center, "$current_town"),
                # (set_visitor, ":cur_entry", "trp_fight_promoter"),

                # (val_add, ":cur_entry", 1),
			 # (try_end),

	(try_begin), #madsci quest troop spawns go here
	(eq, "$current_town", "p_town_8"),
	(neg|quest_slot_eq, "qst_mithras_quest", slot_quest_current_state, 0),
        (set_visitor, ":cur_entry", "trp_mithraist_iniate"),
        (val_add, ":cur_entry", 1),
	(try_end),

	(try_begin), #madsci quest troop spawns go here
	(eq, "$current_town", "p_town_8"),
	(neq, "$amatus_left", 1),
        (set_visitor, ":cur_entry", "trp_br_amatus"),
        (val_add, ":cur_entry", 1),
	(try_end),

	(try_begin), #madsci quest troop spawns go here
	(eq, "$current_town", "p_town_25"),
	(neq, "$corrupt_priest_left", 1),
        (set_visitor, ":cur_entry", "trp_corrupt_priest"),
        (val_add, ":cur_entry", 1),
	(try_end),

	(try_begin), #madsci quest troop spawns go here
	(eq, "$current_town", "p_town_17"),
	(neq, "$zamb_man_left", 1),
        (set_visitor, ":cur_entry", "trp_zamb_man"),
        (val_add, ":cur_entry", 1),
	(try_end),

	(try_begin), #madsci quest troop spawns go here
	(eq, "$current_town", "p_town_24"),
	(check_quest_active, "qst_wayland_quest"),
        (set_visitor, ":cur_entry", "trp_gold_merchant"),
        (val_add, ":cur_entry", 1),
	(try_end),


	(try_begin), #madsci quest troop spawns go here
	(eq, "$current_town", "p_town_22"),
	(eq, "$jewish_rebellion", 0),
	(this_or_next|troop_slot_eq, "trp_player", slot_troop_culture, "fac_culture_18"),
	(troop_slot_eq, "trp_player", slot_troop_religion, slot_religion_judaism),
	(neg|troop_slot_eq, "trp_jewish_agitator", slot_troop_occupation, dplmc_slto_dead),
        (set_visitor, ":cur_entry", "trp_jewish_agitator"),
        (val_add, ":cur_entry", 1),
	(try_end),

	(try_begin), #madsci quest troop spawns go here
	(eq, "$current_town", "p_town_45"),
	(eq, "$jewish_rebellion", 0),
	(troop_slot_eq, "trp_player", slot_troop_culture, "fac_culture_17"),
	(neg|faction_slot_eq, "fac_kingdom_31", slot_faction_state, sfs_active),
	(neg|troop_slot_eq, "trp_armenian_agitator", slot_troop_occupation, dplmc_slto_dead),
        (set_visitor, ":cur_entry", "trp_armenian_agitator"),
        (val_add, ":cur_entry", 1),
	(try_end),

	(try_begin), #madsci quest troop spawns go here
	(eq, "$current_town", "p_town_21"),
	(eq, "$roman_pagan_quest_started", 1),
        (set_visitor, ":cur_entry", "trp_roman_pagan_quest_npc_1"),
        (val_add, ":cur_entry", 1),
	(try_end),

             (party_get_slot, ":mercenary_troop", "$current_town", slot_center_mercenary_troop_type),
             (party_get_slot, ":mercenary_amount", "$current_town", slot_center_mercenary_troop_amount),
             (try_begin),
		(neq, "$freelancer_state", 1), #madsci dont let the player recruit when freelancering
               (gt, ":mercenary_troop", 0),
               (gt, ":mercenary_amount", 0),
               (set_visitor, ":cur_entry", ":mercenary_troop"),
               (val_add, ":cur_entry", 1),
             (try_end),

			 (try_begin),
				 (eq, ":randomize_attacker_placement", 1),
				 (call_script, "script_setup_tavern_attacker", ":cur_entry"),
				 (val_add, ":cur_entry", 1),
			 (try_end),

             #(try_for_range, ":companion_candidate", companions_begin, companions_end),
             #  (troop_slot_eq, ":companion_candidate", slot_troop_occupation, 0),
             #  (troop_slot_eq, ":companion_candidate", slot_troop_cur_center, "$current_town"),
             #  (neg|troop_slot_ge, ":companion_candidate", slot_troop_prisoner_of_party, centers_begin),
             #  (set_visitor, ":cur_entry", ":companion_candidate"),
             #  (val_add, ":cur_entry", 1),
             #(try_end),

            (try_for_range, ":companion_candidate", companions_begin, companions_end),
		(neq, "$freelancer_state", 1), #madsci dont let the player recruit when freelancering
               (troop_slot_eq, ":companion_candidate", slot_troop_occupation, 0),
               (troop_slot_eq, ":companion_candidate", slot_troop_cur_center, "$current_town"),
               (neg|troop_slot_ge, ":companion_candidate", slot_troop_prisoner_of_party, centers_begin),
               (try_begin),
                    (eq, ":companion_candidate", "trp_npc20"),   #tocan: companion troop
                    (eq, "$ildico_companion", 0),     #tocan: call it how you want
               (else_try),
                    (set_visitor, ":cur_entry", ":companion_candidate"),
                    (val_add, ":cur_entry", 1),
               (try_end),
             (try_end),

			 (try_begin),
				 (eq, ":randomize_attacker_placement", 2),
				 (call_script, "script_setup_tavern_attacker", ":cur_entry"),
				 (val_add, ":cur_entry", 1),
			 (try_end),

             (try_begin), #this doubles the incidence of ransom brokers and (below) minstrels
               (party_get_slot, ":ransom_broker", "$current_town", slot_center_ransom_broker),
               (gt, ":ransom_broker", 0),

               # (assign, reg0, ":ransom_broker"),
               # (assign, reg1, "$current_town"),

               (set_visitor, ":cur_entry", ":ransom_broker"),
               (val_add, ":cur_entry", 1),
             (else_try), #SB : move to script call
               # (is_between, "$g_talk_troop", ransom_brokers_begin, ransom_brokers_end), #wtf is this
               (call_script, "script_cf_find_alternative_town_for_taverngoers", "$current_town", 9),
               (assign, ":alternative_town", reg0),

               (party_get_slot, ":ransom_broker", ":alternative_town", slot_center_ransom_broker),
               (is_between, ":ransom_broker", ransom_brokers_begin, ransom_brokers_end), #prevent ramun and galeas from spawning other towns

               (set_visitor, ":cur_entry", ":ransom_broker"),
               (val_add, ":cur_entry", 1),
             (try_end),

             (try_begin),
               (party_get_slot, ":tavern_traveler", "$current_town", slot_center_tavern_traveler),
               (is_between, ":tavern_traveler", tavern_travelers_begin, tavern_travelers_end), #SB : range check
               (set_visitor, ":cur_entry", ":tavern_traveler"),
               (val_add, ":cur_entry", 1),
             (try_end),

             (assign,":bard",0),#dedal
             (try_begin),
               (party_get_slot, ":tavern_minstrel", "$current_town", slot_center_tavern_minstrel),
               (gt, ":tavern_minstrel", 0),
               (assign,":bard",1),#dedal
               (set_visitor, ":cur_entry", ":tavern_minstrel"),
               (val_add, ":cur_entry", 1),
           (else_try),
            (store_add, ":alternative_town", "$current_town", 9),
            (try_begin),
           (ge, ":alternative_town", towns_end),
           (val_sub, ":alternative_town", 22),
             (try_end),
               (party_get_slot, ":tavern_minstrel", ":alternative_town", slot_center_tavern_minstrel),
               (gt, ":tavern_minstrel", 0),
              (assign,":bard",1),#dedal
               (set_visitor, ":cur_entry", ":tavern_minstrel"),
               (val_add, ":cur_entry", 1),
             (try_end),

             (try_begin),
               (party_get_slot, ":tavern_bookseller", "$current_town", slot_center_tavern_bookseller),
               (is_between, ":tavern_bookseller", tavern_booksellers_begin, tavern_booksellers_end),
               (set_visitor, ":cur_entry", ":tavern_bookseller"),
               (val_add, ":cur_entry", 1),
             (try_end),

             (try_begin),
                 (eq, ":randomize_attacker_placement", 3),
                 (call_script, "script_setup_tavern_attacker", ":cur_entry"),
                 (val_add, ":cur_entry", 1),
             (try_end),

             (try_begin),
               (neg|check_quest_active, "qst_eliminate_bandits_infesting_village"),
               (neg|check_quest_active, "qst_deal_with_bandits_at_lords_village"),
               (assign, ":end_cond", villages_end),
               (try_for_range, ":cur_village", villages_begin, ":end_cond"),
                 (party_slot_eq, ":cur_village", slot_village_bound_center, "$current_town"),
                 (party_slot_ge, ":cur_village", slot_village_infested_by_bandits, 1),
                 (neg|party_slot_eq, ":cur_village", slot_town_lord, "trp_player"),
                 (set_visitor, ":cur_entry", "trp_farmer_from_bandit_village"),
                 (val_add, ":cur_entry", 1),
                 (assign, ":end_cond", 0),
               (try_end),
             (try_end),

             #(try_begin),
             #  (eq, "$g_starting_town", "$current_town"),

             #  (this_or_next|neg|check_quest_finished, "qst_collect_men"),
             #  (this_or_next|neg|check_quest_finished, "qst_learn_where_merchant_brother_is"),
             #  (this_or_next|neg|check_quest_finished, "qst_save_relative_of_merchant"),
             #  (this_or_next|neg|check_quest_finished, "qst_save_town_from_bandits"),
             #  (eq,  "$g_do_one_more_meeting_with_merchant", 1),

               #SB : offset for merchant troop
             #  (call_script, "script_get_troop_of_merchant"),
             #  (set_visitor, ":cur_entry", reg0),
             #  (val_add, ":cur_entry", 1),
             #(try_end),

      (try_for_range,":entry",32,41),
          (store_random_in_range,":r",0,100),
          (gt,":r",50),#random chance of spawning
          (try_begin),
            (eq,":bard",0),
            (store_random_in_range,":r",0,15),
            (gt,":r",13),
            (mission_tpl_entry_clear_override_items,"mt_town_default",":entry"),
            (store_random_in_range,":r",0,2),
            (try_begin),
              (eq,":r",0),
              (mission_tpl_entry_add_override_item,"mt_town_default",":entry","itm_dedal_lutnia"),
            (else_try),
              (mission_tpl_entry_add_override_item,"mt_town_default",":entry","itm_dedal_lira"),
            (try_end),
            (store_random_in_range,":dna",0,1000),
            (store_random_in_range,":troop","trp_musican_male","trp_musicans_end"),
            (set_visitor,":entry",":troop",":dna"),
            (assign,":bard",1),
          (else_try),
            ####JustStan changes begin
            (store_faction_of_party, ":current_town_faction", "$current_town"),
            (faction_get_slot, ":current_town_culture", ":current_town_faction", slot_faction_culture),
            (store_random_in_range, ":walker_slot", 0, 4),
            (val_add, ":walker_slot", slot_faction_town_walker_male_troop),
            (faction_get_slot, ":town_walker", ":current_town_culture", ":walker_slot"),
		(gt, ":town_walker", 0),
          ####JustStan changes end
            (mission_tpl_entry_clear_override_items,"mt_town_default",":entry"),
            (store_random_in_range,":r",0,10),
            (try_begin),
              (gt,":r",2),
              (mission_tpl_entry_add_override_item,"mt_town_default",":entry","itm_tavern_cup"),
            (try_end),
            (set_visitor,":entry",":town_walker"),
          (try_end),
        (try_end),
      #dedal end
        (change_screen_mission),
      (try_end),
    ],"Door to the tavern."),

#      ("town_smithy",[
#          (eq,"$entry_to_town_forbidden",0),
#          (eq,"$town_nighttime",0),
#          ],
#       "Visit the smithy.",
#       [
#           (set_jump_mission,"mt_town_default"),
#           (jump_to_scene,"$pout_scn_smithy"),
#           (change_screen_mission,0),
#        ]),


      ("town_merchant",
       [(party_slot_eq,"$current_town",slot_party_type, spt_town),
           (eq, 1, 0),
           (eq,"$town_nighttime",0),
           (this_or_next|eq,"$entry_to_town_forbidden",0),
           (gt, "$sneaked_into_town", disguise_none), #SB : disguise const
#           (party_get_slot, ":scene", "$current_town", slot_town_store),
#           (scene_slot_eq, ":scene", slot_scene_visited, 1), #check if scene has been visited before to allow entry from menu. Otherwise scene will only be accessible from the town center.
           ],
       "Speak with the merchant.",
       [
           (try_begin),
             (this_or_next|eq,"$all_doors_locked",1),
             (eq,"$town_nighttime",1),
             (display_message,"str_door_locked",message_locked),
           (else_try),
             (assign, "$town_entered", 1),
             (set_jump_mission, "mt_town_default"),
             (mission_tpl_entry_set_override_flags, "mt_town_default", 0, af_override_horse),
             (try_begin),
               (gt, "$sneaked_into_town", disguise_none),
               (mission_tpl_entry_set_override_flags, "mt_town_default", 0, af_override_all),
               (call_script, "script_set_disguise_override_items", "mt_town_default", 0, 1), #dckplmc: need weaposn for tavern fights

             (try_end),
             (party_get_slot, ":cur_scene", "$current_town", slot_town_store),
             (jump_to_scene, ":cur_scene"),
             (scene_set_slot, ":cur_scene", slot_scene_visited, 1),
             (change_screen_mission),
           (try_end),
        ],"Door to the shop."),

      ("town_arena",
       [(party_slot_eq,"$current_town",slot_party_type, spt_town),
        (eq, "$sneaked_into_town", disguise_none),  #SB : disguise const
#           (party_get_slot, ":scene", "$current_town", slot_town_arena),
#           (scene_slot_eq,  ":scene", slot_scene_visited, 1), #check if scene has been visited before to allow entry from menu. Otherwise scene will only be accessible from the town center.
           ],
       "Enter the arena.",
       [
           (try_begin),
             (this_or_next|eq,"$all_doors_locked",1),
             (eq,"$town_nighttime",1),
             (display_message,"str_door_locked",message_locked),
           (else_try),
             (assign, "$g_mt_mode", abm_visit),
             (assign, "$town_entered", 1),
             (set_jump_mission, "mt_arena_melee_fight"),
             (party_get_slot, ":arena_scene", "$current_town", slot_town_arena),
             (modify_visitors_at_site, ":arena_scene"),
             (reset_visitors),
             (set_visitor, 43, "trp_veteran_fighter"),
             (set_visitor, 44, "trp_hired_blade"),
             (set_jump_entry, 50),
             (jump_to_scene, ":arena_scene"),
             (scene_set_slot, ":arena_scene", slot_scene_visited, 1),
             (change_screen_mission),
           (try_end),
        ],"Door to the arena."),
      ("town_dungeon",
       [(eq, 1, 0)],
       "Never: Enter the prison.",
       [
           (try_begin),
		    (eq, "$talk_context", tc_prison_break),
			(gt, "$g_main_attacker_agent", 0),

		   	(neg|agent_is_alive, "$g_main_attacker_agent"),

			(agent_get_troop_id, ":agent_type", "$g_main_attacker_agent"),
			  (assign, ":prison_guard_faction", "$g_encountered_party_faction"),
			(this_or_next|eq, ":agent_type", "trp_gothic_prison_guard"), #failsafe set elsewhere
			(faction_slot_eq, ":prison_guard_faction", slot_faction_prison_guard_troop, ":agent_type"),

			(call_script, "script_deduct_casualties_from_garrison"),
            (call_script, "script_enter_dungeon", "$current_town", "mt_visit_town_castle"),

		   (else_try),
             (eq,"$all_doors_locked",1),
             (display_message,"str_door_locked",message_locked),
           (else_try),
             (this_or_next|party_slot_eq, "$current_town", slot_town_lord, "trp_player"),
             (eq, "$g_encountered_party_faction", "$players_kingdom"),
             (assign, "$town_entered", 1),
             (call_script, "script_enter_dungeon", "$current_town", "mt_visit_town_castle"),
           (else_try),
             (display_message,"str_door_locked",message_locked),
           (try_end),
        ],"Door to the dungeon."),

      ("castle_inspect",
      [
         (party_slot_eq,"$current_town",slot_party_type, spt_castle),
      ],
       "Take a walk around the courtyard.",
       [
         (try_begin),
           (eq, "$talk_context", tc_prison_break),
           (assign, "$talk_context", tc_escape),

           (party_get_slot, ":cur_castle_exterior", "$current_town", slot_castle_exterior),
           (modify_visitors_at_site, ":cur_castle_exterior"),
           (reset_visitors),

          (assign, ":guard_no", 40),

          (party_get_num_companion_stacks, ":num_stacks", "$g_encountered_party"),
          (try_for_range, ":troop_iterator", 0, ":num_stacks"),
            #nearby fire condition start
            (party_get_slot, ":last_nearby_fire_time", "$current_town", slot_town_last_nearby_fire_time),
            (store_current_hours, ":cur_time"),
            (store_add, ":fire_finish_time", ":last_nearby_fire_time", fire_duration),
            (neg | is_between, ":cur_time", ":fire_finish_time", ":last_nearby_fire_time"),

            (lt, ":guard_no", 47),
            (party_stack_get_troop_id, ":cur_troop_id", "$g_encountered_party", ":troop_iterator"),
            (neg | troop_is_hero, ":cur_troop_id"),
            (party_stack_get_size, ":stack_size","$g_encountered_party",":troop_iterator"),
            (party_stack_get_num_wounded, ":num_wounded","$g_encountered_party",":troop_iterator"),
            (val_sub, ":stack_size", ":num_wounded"),
            (gt, ":stack_size", 0),
            ##Nero BEGIN:
            # (party_stack_get_troop_dna,":troop_dna","$g_encountered_party",":troop_iterator"),
            (assign, ":spawn_amount", 3),           ##spawn more guards
            (val_min, ":spawn_amount", ":stack_size"),##spawn more guards
            (set_visitors, ":guard_no", ":cur_troop_id", ":spawn_amount"),##spawn more guards
            ##Nero END
            (val_add, ":guard_no", 1),
          (try_end),
           #(set_jump_entry, 1),
           (set_visitor, 7, "trp_player"), #SB : g_player_troop back to trp_player

           (set_jump_mission,"mt_castle_visit"),
           (try_begin),
             (gt, "$sneaked_into_town", disguise_none), #setup disguise
             (assign, ":override_state", af_override_everything),
             #SB : override disguise and set flags for entries
             (eq, "$g_dplmc_player_disguise", 1),
             (try_for_range, ":entry_no", 0, 8),
               (mission_tpl_entry_set_override_flags, "mt_castle_visit", ":entry_no", af_override_everything),
               (call_script, "script_set_disguise_override_items", "mt_castle_visit", ":entry_no", 1),
             (try_end),
           (try_end),

           (jump_to_scene, ":cur_castle_exterior"),
           (change_screen_mission),
            #If you're already at escape, then talk context will reset
         (else_try),
           (assign, "$talk_context", tc_town_talk),

           (assign, "$g_mt_mode", tcm_default),

           (party_get_slot, ":cur_castle_exterior", "$current_town", slot_castle_exterior),
           (modify_visitors_at_site,":cur_castle_exterior"),
           (reset_visitors),

           	(try_begin),
             	(faction_get_slot, ":troop_prison_guard", "$g_encountered_party_faction", slot_faction_prison_guard_troop),
		(gt, ":troop_prison_guard", 0),
		(else_try),
		(assign, ":troop_prison_guard", "trp_gothic_prison_guard"), #madsci failsafe
           	(try_end),
           (set_visitor, 24, ":troop_prison_guard"),

           (assign, ":guard_no", 40),

           (party_get_num_companion_stacks, ":num_stacks", "$g_encountered_party"),
           (try_for_range, ":troop_iterator", 0, ":num_stacks"),
             #nearby fire condition start
             (party_get_slot, ":last_nearby_fire_time", "$current_town", slot_town_last_nearby_fire_time),
             (store_current_hours, ":cur_time"),
             (store_add, ":fire_finish_time", ":last_nearby_fire_time", fire_duration),
             (neg|is_between, ":cur_time", ":fire_finish_time", ":last_nearby_fire_time"),

             (lt, ":guard_no", 47),
             (party_stack_get_troop_id, ":cur_troop_id", "$g_encountered_party", ":troop_iterator"),
             (neg|troop_is_hero, ":cur_troop_id"),
             (party_stack_get_size, ":stack_size","$g_encountered_party",":troop_iterator"),
             (party_stack_get_num_wounded, ":num_wounded","$g_encountered_party",":troop_iterator"),
             (val_sub, ":stack_size", ":num_wounded"),
             (gt, ":stack_size", 0),
             (party_stack_get_troop_dna,":troop_dna","$g_encountered_party",":troop_iterator"),
             (set_visitor, ":guard_no", ":cur_troop_id", ":troop_dna"),

             (val_add, ":guard_no", 1),
           (try_end),

           (try_begin),
             (eq, "$town_entered", 0),
             (assign, "$town_entered", 1),
           (try_end),
           (set_jump_entry, 1),

           (assign, ":override_state", af_override_horse),
           (try_begin),
             (gt, "$sneaked_into_town", disguise_none), #setup disguise
             (assign, ":override_state", af_override_everything),
           (try_end),
           (set_jump_mission, "mt_castle_visit"),

           #SB : populate disguise and set flags for entries
           (try_for_range, ":entry_no", 0, 8),
             (mission_tpl_entry_set_override_flags, "mt_castle_visit", ":entry_no", ":override_state"),
             (call_script, "script_set_disguise_override_items", "mt_castle_visit", ":entry_no", 1),
           (try_end),
           # (mission_tpl_entry_set_override_flags, "mt_castle_visit", 0, ":override_state"),
           # (mission_tpl_entry_set_override_flags, "mt_castle_visit", 1, ":override_state"),
           # (mission_tpl_entry_set_override_flags, "mt_castle_visit", 2, ":override_state"),
           # (mission_tpl_entry_set_override_flags, "mt_castle_visit", 3, ":override_state"),
           # (mission_tpl_entry_set_override_flags, "mt_castle_visit", 4, ":override_state"),
           # (mission_tpl_entry_set_override_flags, "mt_castle_visit", 5, ":override_state"),
           # (mission_tpl_entry_set_override_flags, "mt_castle_visit", 6, ":override_state"),
           # (mission_tpl_entry_set_override_flags, "mt_castle_visit", 7, ":override_state"),

           (jump_to_scene, ":cur_castle_exterior"),
           (change_screen_mission),
         (try_end),
        ], "To the castle courtyard."),

    ("visit_dungen",
      [
		(eq, 0, 1),
      ],
      "Door to the catacombs.",
      [
    (set_passage_menu,"mnu_town"),
    (assign, "$temp", 1),
    (set_jump_mission, "mt_visit_rome_secrets"),
    (modify_visitors_at_site,"scn_church"),
    (reset_visitors),
    (set_visitor, 0, "trp_player"),
    (jump_to_scene, "scn_church"),
    (change_screen_mission),
      ], "Door to the catacombs"),

     ("visit_garden_secret",
      [
		(eq, 0, 1),
      ],
      "Door to the stream.",
      [
    (set_passage_menu,"mnu_town"),
    (try_begin),
        (jump_to_menu, "mnu_visit_nero"),
        (finish_mission),
    (else_try),
        (display_message, "@The shaft collapsed. It is impossible to pass."),
    (try_end),
      ], "Door"),

     ("town_enterprise",
      [
        (party_slot_eq,"$current_town",slot_party_type, spt_town),
        (party_get_slot, ":item_produced", "$current_town", slot_center_player_enterprise),
		(gt, ":item_produced", 1),
        (eq,"$entry_to_town_forbidden",0),
		(call_script, "script_get_enterprise_name", ":item_produced"),
		(str_store_string, s3, reg0),
      ],
      "Visit your {s3}.",
      [
        (store_sub, ":town_order", "$current_town", towns_begin),
		(store_add, ":master_craftsman", craftsman_begin, ":town_order"), #SB : range const
        (party_get_slot, ":item_produced", "$current_town", slot_center_player_enterprise),
		(assign, ":enterprise_scene", "scn_enterprise_mill"),
		(try_begin),
			(eq, ":item_produced", "itm_bread"),
			(assign, ":enterprise_scene", "scn_enterprise_mill"),
		(else_try),
			(eq, ":item_produced", "itm_ale"),
			(assign, ":enterprise_scene", "scn_enterprise_brewery"),
		(else_try),
			(eq, ":item_produced", "itm_oil"),
			(assign, ":enterprise_scene", "scn_enterprise_oil_press"),
		(else_try),
			(eq, ":item_produced", "itm_wine"),
			(assign, ":enterprise_scene", "scn_enterprise_winery"),
		(else_try),
			(eq, ":item_produced", "itm_leatherwork"),
			(assign, ":enterprise_scene", "scn_enterprise_tannery"),
		(else_try),
			(eq, ":item_produced", "itm_wool_cloth"),
			(assign, ":enterprise_scene", "scn_enterprise_wool_weavery"),
		(else_try),
			(eq, ":item_produced", "itm_linen"),
			(assign, ":enterprise_scene", "scn_enterprise_linen_weavery"),
		(else_try),
			(eq, ":item_produced", "itm_velvet"),
			(assign, ":enterprise_scene", "scn_enterprise_dyeworks"),
		(else_try),
			(eq, ":item_produced", "itm_tools"),
			(assign, ":enterprise_scene", "scn_enterprise_smithy"),
		(try_end),
        (modify_visitors_at_site,":enterprise_scene"),
		(reset_visitors),
        (set_visitor,0,"trp_player"),
        (set_visitor,17,":master_craftsman"),
        (set_jump_mission,"mt_town_default"),
        (jump_to_scene,":enterprise_scene"),
        (try_begin),
          (this_or_next|key_is_down, key_left_shift),
          (key_is_down, key_right_shift),
          (change_screen_map_conversation, ":master_craftsman"), #SB : change_screen_map_conversation
        (else_try),
          (change_screen_mission),
        (try_end),

      ],"Door to your enterprise."),

    ("visit_lady",
	[

	(neg|troop_slot_ge, "trp_player", slot_troop_spouse, kingdom_ladies_begin),

	(assign, "$love_interest_in_town", 0),
	(assign, "$love_interest_in_town_2", 0),
	(assign, "$love_interest_in_town_3", 0),
	(assign, "$love_interest_in_town_4", 0),
	(assign, "$love_interest_in_town_5", 0),
	(assign, "$love_interest_in_town_6", 0),
	(assign, "$love_interest_in_town_7", 0),
	(assign, "$love_interest_in_town_8", 0),

	(try_for_range, ":lady_no", kingdom_ladies_begin, kingdom_ladies_end),
		(troop_slot_eq, ":lady_no", slot_troop_cur_center, "$current_town"),
		(call_script, "script_get_kingdom_lady_social_determinants", ":lady_no"),
		(assign, ":lady_guardian", reg0),

		(troop_slot_eq, ":lady_no", slot_troop_spouse, -1),
		(ge, ":lady_guardian", 0), #not sure when this would not be the case


		#must have spoken to either father or lady
		(this_or_next|troop_slot_ge, ":lady_no", slot_troop_met, 2),
			(troop_slot_eq, ":lady_guardian", slot_lord_granted_courtship_permission, 1),

		(neg|troop_slot_eq, ":lady_no", slot_troop_met, 4),

		#must have approached father
#		(this_or_next|troop_slot_eq, ":lady_guardian", slot_lord_granted_courtship_permission, 1),
#			(troop_slot_eq, ":lady_guardian", slot_lord_granted_courtship_permission, -1),


		(try_begin),
			(eq, "$love_interest_in_town", 0),
			(assign, "$love_interest_in_town", ":lady_no"),
		(else_try),
			(eq, "$love_interest_in_town_2", 0),
			(assign, "$love_interest_in_town_2", ":lady_no"),
		(else_try),
			(eq, "$love_interest_in_town_3", 0),
			(assign, "$love_interest_in_town_3", ":lady_no"),
		(else_try),
			(eq, "$love_interest_in_town_4", 0),
			(assign, "$love_interest_in_town_4", ":lady_no"),
		(else_try),
			(eq, "$love_interest_in_town_5", 0),
			(assign, "$love_interest_in_town_5", ":lady_no"),
		(else_try),
			(eq, "$love_interest_in_town_6", 0),
			(assign, "$love_interest_in_town_6", ":lady_no"),
		(else_try),
			(eq, "$love_interest_in_town_7", 0),
			(assign, "$love_interest_in_town_7", ":lady_no"),
		(else_try),
			(eq, "$love_interest_in_town_8", 0),
			(assign, "$love_interest_in_town_8", ":lady_no"),
		(try_end),
	(try_end),

	(gt, "$love_interest_in_town", 0),
	],
	  "Attempt to visit a lady",
       [
        (jump_to_menu, "mnu_lady_visit"),
        ], "Door to the garden."),

      ("trade_with_merchants",
       [
           (party_slot_eq,"$current_town",slot_party_type, spt_town)
        ],
         "Go to the marketplace.",
         [
           (try_begin),
             (call_script, "script_cf_enter_center_location_bandit_check"),
           (else_try),
             (jump_to_menu,"mnu_town_trade"),
           (try_end),
          ]),

      ("walled_center_manage",
      [
        (neg|party_slot_eq, "$current_town", slot_village_state, svs_under_siege),
        (assign, reg1, 0),
        (try_begin),
            (store_faction_of_party, ":fac", "$current_town"),
            (faction_slot_eq, ":fac", slot_faction_leader, "trp_player"),
            (faction_slot_ge, ":fac", dplmc_slot_faction_centralization, 1),
            (assign, reg1, 1),
        (else_try),
            (party_slot_eq, "$current_town", slot_town_lord, "trp_player"),
            (assign, reg1, 1),
        (try_end),
        (eq, reg1, 1),
        #(assign, reg0, 1),
        (try_begin),
            (party_slot_eq, "$current_town", slot_party_type, spt_castle),
            (assign, reg0, 0),
        (try_end),
       ],
       "Manage this {reg0?town:fortress}.",
       [
           (assign, "$g_next_menu", "mnu_town"),
           (assign, reg63, 1),
           (jump_to_menu, "mnu_center_manage_2"),
       ]),

      ("walled_center_move_court",
      [ #SB : move conditions around
        (neg|party_slot_eq, "$current_town", slot_village_state, svs_under_siege),
        (party_slot_eq, "$current_town", slot_town_lord, "trp_player"),
        (eq, "$g_encountered_party_faction", "$players_kingdom"),
        (neq, "$g_player_court", "$current_town"),
        ##diplomacy start+ Handle player is co-ruler of kingdom
        (assign, ":is_coruler", 0),
        (try_begin),
          (is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
          (call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$players_kingdom"),
          (ge, reg0, DPLMC_FACTION_STANDING_LEADER_SPOUSE),
          (assign, ":is_coruler", 1),
        (else_try),
          (faction_slot_eq, "fac_player_supporters_faction", slot_faction_leader, "trp_player"),
          (eq, "$g_encountered_party_faction", "fac_player_supporters_faction"),
          (assign, ":is_coruler", 1),
        (try_end),
        (eq, ":is_coruler", 1),
        #SB : capital not named yet
        (store_and, ":name_set", "$players_kingdom_name_set", rename_center),
        (neq, ":name_set", rename_center), #
      ],
      "Move your court here.",
      [
        (jump_to_menu, "mnu_establish_court"),
      ]),

      # ("castle_station_troops",
      # [
		# (party_get_slot, ":town_lord", "$current_town", slot_town_lord),
	    # (str_clear, s10),

	    # (assign, ":player_can_draw_from_garrison", 0),
		# (try_begin), #option 1 - player is town lord
		  # (eq, ":town_lord", "trp_player"),
		  # (assign, ":player_can_draw_from_garrison", 1),
		# (else_try), #option 2 - town is unassigned and part of the player faction
		  # (store_faction_of_party, ":faction", "$g_encountered_party"),
		  # (eq, ":faction", "fac_player_supporters_faction"),
		  # (neg|party_slot_ge, "$g_encountered_party", slot_town_lord, active_npcs_begin), #ie, zero or -1

		  # (assign, ":player_can_draw_from_garrison", 1),
		# (else_try), #option 3 - town was captured by player
		  # (lt, ":town_lord", 0), #ie, unassigned
		  # (store_faction_of_party, ":castle_faction", "$g_encountered_party"),
		  # (eq, "$players_kingdom", ":castle_faction"),

		  # (eq, "$g_encountered_party", "$g_castle_requested_by_player"),

		  # (str_store_string, s10, "str_retrieve_garrison_warning"),
		  # (assign, ":player_can_draw_from_garrison", 1),
		# (else_try),
		  # (lt, ":town_lord", 0), #ie, unassigned
		  # (store_faction_of_party, ":castle_faction", "$g_encountered_party"),
		  # (eq, "$players_kingdom", ":castle_faction"),

		  # (store_party_size_wo_prisoners, ":party_size", "$g_encountered_party"),
		  # (eq, ":party_size", 0),

		  # (str_store_string, s10, "str_retrieve_garrison_warning"),
		  # (assign, ":player_can_draw_from_garrison", 1),
		# (else_try),
		  # (party_slot_ge, "$g_encountered_party", slot_town_lord, active_npcs_begin),
		  # (store_faction_of_party, ":castle_faction", "$g_encountered_party"),
		  # (eq, "$players_kingdom", ":castle_faction"),
		  # ##diplomacy start+ can arise if using this to represent polygamy
		  # (this_or_next|troop_slot_eq, ":town_lord", slot_troop_spouse, "trp_player"),
		     # (troop_slot_eq, "trp_player", slot_troop_spouse, ":town_lord"),
		  # (this_or_next|is_between, ":town_lord", heroes_begin, heroes_end),
		  # ##diplomacy end+
		  # (troop_slot_eq, "trp_player", slot_troop_spouse, ":town_lord"),

		  # (assign, ":player_can_draw_from_garrison", 1),
		# (try_end),

        # (eq, ":player_can_draw_from_garrison", 1),
      # ],
      # "Manage the garrison {s10}",
      # [
        # (change_screen_exchange_members,1),
      # ]),
	  ##diplomacy start+
	  #Other option to add troops to garrison
      ("dplmc_castle_give_troops",
      [
        (party_get_slot, ":town_lord", "$current_town", slot_town_lord),
        (is_between, "$g_encountered_party_faction", kingdoms_begin, kingdoms_end),

        #The player can add troops but not remove them:
        #Not owned by the player
        (neq, ":town_lord", "trp_player"),

        #But nevertheless the owner will accept troops
        (assign, reg1, 0),
        (try_begin),
            (gt, ":town_lord", 1),
            (neg|troop_slot_eq, ":town_lord", slot_troop_spouse, "trp_player"),
            (neg|troop_slot_eq, "trp_player", slot_troop_spouse, ":town_lord"),
            (call_script, "script_dplmc_player_can_give_troops_to_troop", ":town_lord"),
            (ge, reg0, 1),
            (assign, reg1, 1),
        (else_try),
            (le, ":town_lord", -1),
            (assign, reg1, 1),
        (try_end),
        (eq, reg1, 1),
      ],
      "Give troops to the garrison (cannot remove)",
      [
        (change_screen_give_members, "$current_town"),
      ]),
      ##diplomacy end+

      ("castle_wait",
      [
        #(party_slot_eq,"$current_town",slot_party_type, spt_castle),
        (this_or_next|ge, "$g_encountered_party_relation", 0),
        (eq,"$castle_undefended",1),
        (assign, ":can_rest", 1),
        (str_clear, s1),
        (try_begin),
          (neg|party_slot_eq, "$current_town", slot_town_lord, "trp_player"),
          (troop_get_slot, ":player_spouse", "trp_player", slot_troop_spouse),
          (neg|party_slot_eq, "$current_town", slot_town_lord, ":player_spouse"),

          (party_slot_ge, "$current_town", slot_town_lord, "trp_player"), #can rest for free in castles and towns with unassigned lords
          (store_faction_of_party, ":current_town_faction", "$current_town"),
          (neq, ":current_town_faction", "fac_player_supporters_faction"),
          (party_get_num_companions, ":num_men", "p_main_party"),
          (store_div, reg1, ":num_men", 4),
          (val_add, reg1, 1),
          (str_store_string, s1, "@ ({reg1} siliquae per night)"),
          (store_troop_gold, ":gold", "trp_player"),
          (lt, ":gold", reg1),
          (assign, ":can_rest", 0),
        (try_end),
        (eq, ":can_rest", 1),
      ],
      "Wait here for some time{s1}.",
      [
        (assign, "$auto_enter_town", "$current_town"),
        (assign, "$g_town_visit_after_rest", 1),
        (assign, "$g_last_rest_center", "$current_town"),
        (assign, "$g_last_rest_payment_until", -1),

        (try_begin),
          (party_is_active, "p_main_party"),
          (party_get_current_terrain, ":cur_terrain", "p_main_party"),
          (try_begin),
            (eq, ":cur_terrain", rt_desert),
            (unlock_achievement, ACHIEVEMENT_SARRANIDIAN_NIGHTS),
          (try_end),
        (try_end),

        #SB : moved this to only display once
        (party_get_slot, ":town_lord", "$g_last_rest_center", slot_town_lord),
        (try_begin),
          (is_between, ":town_lord", lords_begin, kingdom_ladies_end),
          (call_script, "script_dplmc_is_affiliated_family_member", ":town_lord"),
          (neq, reg0, 0),
          (display_message, "@You are within the walls of an affiliated family member and don't have to pay for accommodation."),
        (try_end),
        (rest_for_hours_interactive, 24 * 7, 5, 0), #rest while not attackable
        (change_screen_return),
      ]),

##      ("rest_until_morning",
##       [
##           (this_or_next|ge, "$g_encountered_party_relation", 0),
##           (eq,"$castle_undefended",1),
##           (store_time_of_day,reg(1)),(neg|is_between,reg(1), 5, 18),
##           (eq, "$g_defending_against_siege", 0),
##        ],
##         "Rest until morning.",
##         [
##           (store_time_of_day,reg(1)),
##           (assign, reg(2), 30),
##           (val_sub,reg(2),reg(1)),
##           (val_mod,reg(2),24),
##           (assign,"$auto_enter_town","$current_town"),
##           (assign, "$g_town_visit_after_rest", 1),
##           (rest_for_hours_interactive, reg(2)),
##           (change_screen_return),
##          ]),
##
##      ("rest_until_evening",
##       [
##           (this_or_next|ge, "$g_encountered_party_relation", 0),
##           (eq,"$castle_undefended",1),
##           (store_time_of_day,reg(1)), (is_between,reg(1), 5, 18),
##           (eq, "$g_defending_against_siege", 0),
##        ],
##         "Rest until evening.",
##         [
##           (store_time_of_day,reg(1)),
##           (assign, reg(2), 20),
##           (val_sub,reg(2),reg(1)),
##           (assign,"$auto_enter_town","$current_town"),
##           (assign, "$g_town_visit_after_rest", 1),
##           (rest_for_hours_interactive, reg(2)),
##           (change_screen_return),
##          ]),
      # ("town_alley",
      # [
        # (party_slot_eq,"$current_town",slot_party_type, spt_town),
        # (eq, "$cheat_mode", 1),
      # ],
      # "{!}CHEAT: Go to the alley.",
      # [
        # (party_get_slot, reg11, "$current_town", slot_town_alley),
        # (set_jump_mission, "mt_ai_training"),
        # (jump_to_scene, reg11),
        # (change_screen_mission),
      # ]),

      ("collect_taxes_qst",
      [
        (check_quest_active, "qst_collect_taxes"),
        (quest_slot_eq, "qst_collect_taxes", slot_quest_target_center, "$current_town"),
        (neg|quest_slot_eq, "qst_collect_taxes", slot_quest_current_state, 4),
        (quest_get_slot, ":quest_giver_troop", "qst_collect_taxes", slot_quest_giver_troop),
        (str_store_troop_name, s1, ":quest_giver_troop"),
        (quest_get_slot, reg5, "qst_collect_taxes", slot_quest_current_state),
      ],
      "{reg5?Continue collecting taxes:Collect taxes} due to {s1}.",
      [
        (jump_to_menu, "mnu_collect_taxes"),
      ]),
      ##diplomacy begin
      ("dplmc_guild_master_meeting",
       [(party_slot_eq,"$current_town",slot_party_type, spt_town),
	    ##nested diplomacy start+
		#rubik had a good idea: only enable this after meeting the guild master
		(assign, ":can_meet_guild_master", 0),
		(try_begin),
			#Always can jump to guild master in cheat mode.
			(eq, "$cheat_mode", 1),
			(assign, ":can_meet_guild_master", 1),
		(else_try),
			#SB : can jump when part of faction
			(eq, "$players_kingdom", "$g_encountered_party_faction"),
			(assign, ":can_meet_guild_master", 1),
		(else_try),
			#Can jump to guild master after meeting him once.
			(party_get_slot, ":guild_master_troop", "$current_town",slot_town_elder),
			(ge, ":guild_master_troop", 1),
			(neg|troop_slot_eq, ":guild_master_troop", slot_troop_met, 0),
			(assign, ":can_meet_guild_master", 1),
		(else_try),
			#Always enable this in Praven for the sake of playability, since
			#the guild master there is weirdly hard to find.
			(this_or_next|eq, "$current_town", "p_town_6"),
			#Also enable in the starting town, to avoid confusing players into
			#thinking the menu item doesn't exist.
			(eq, "$g_starting_town", "$current_town"),
			(assign, ":can_meet_guild_master", 1),
		(try_end),
		(neq, ":can_meet_guild_master", 0),
		##nested diplomacy end+
        (this_or_next|eq,"$entry_to_town_forbidden",0),
        (gt, "$sneaked_into_town", disguise_none),
		],
       "Meet the Guild Master.",
        [
          (try_begin),
            (call_script, "script_cf_enter_center_location_bandit_check"),
          (else_try), #SB : unified script call
            (call_script, "script_start_town_conversation", slot_town_elder, 11),
           # (party_get_slot, ":town_scene", "$current_town", slot_town_center),
           # (modify_visitors_at_site, ":town_scene"),
           # (reset_visitors),

           # (party_get_slot, ":guild_master_troop", "$current_town",slot_town_elder),
           # (set_visitor,11,":guild_master_troop"),

           # (set_jump_mission,"mt_town_center"),
           # (jump_to_scene, ":town_scene"),
           # (change_screen_map_conversation, ":guild_master_troop"),
          (try_end),
     ]),
	##nested diplomacy start+
	#If you can't jump to the guild master, explain why
    ("dplmc_guild_master_meeting_denied",
	[
		#Only show this when the player would get the rest of the town menu
		(party_slot_eq,"$current_town",slot_party_type, spt_town),
		(this_or_next|eq,"$entry_to_town_forbidden",0),
        (gt, "$sneaked_into_town", disguise_none),
	    #There is a valid guild master, and you haven't met him,
		#and there isn't another condition that enables the jump.
		(party_get_slot, ":guild_master_troop", "$current_town",slot_town_elder),
		(gt, ":guild_master_troop", 0),
		(eq, "$cheat_mode", 0),
		(neq, "$g_starting_town", "$current_town"),
		(neq, "$current_town", "p_town_6"),
		(troop_slot_eq, ":guild_master_troop", slot_troop_met, 0),
		(neq, "$players_kingdom", "$g_encountered_party_faction"),
		(disable_menu_option),
		],
       "You have not met the Guild Master yet.",
       [
     ]),
	 ##nested diplomacy end+

    #("recruit_nobles",[(is_between, "$current_town",
    #    castles_begin, castles_end),      (call_script,
    #   "script_cf_town_castle_recruit_volunteers_cond"),]
    #   ,"Recruit Veterans.",
    #   [
    #
    #        (try_begin),
    #(troop_slot_ge, "trp_player", slot_troop_renown, 200), #need high renown to hire noble troops
    #     (try_begin),
    #       (call_script, "script_cf_enter_center_location_bandit_check"),
    #     (else_try),
    #       (jump_to_menu, "mnu_recruit_volunteers_town_3"),
    #     (try_end),
    #   (else_try),
    #         (display_message,"@You need more renown to hire noble troops.",0xFFFFAAAA),
    #       (try_end),
    #    ]),

    #("recruit_volunteers_town_1",[(is_between, "$current_town",
    #    towns_begin, towns_end),      (call_script,
    #   "script_cf_town_recruit_volunteers_cond"),]
    #   ,"Recruit Volunteers.",
    #   [

    #    (try_begin),
    #      (troop_slot_ge, "trp_player", slot_troop_renown, 70), #need high renown to hire noble troops
    #     (try_begin),
    #       (call_script, "script_cf_enter_center_location_bandit_check"),
    #     (else_try),
    #       (jump_to_menu, "mnu_recruit_volunteers_town_2"),
    #     (try_end),
    #    (else_try),
    #         (display_message,"@You need more renown to hire troops from here.",0xFFFFAAAA),
    #       (try_end),
    #    ]),

    ("recruit_volunteers_town_1",[
(eq, "$freelancer_state", 0),
(eq, "$sneaked_into_town", disguise_none),]
       ,"Recruit Volunteers.",
       [

        (try_begin),
        (eq, "$freelancer_state", 1), #can't recruit troops while in freelancer
	(display_message,"@Can't recruit troops while serving in a lord's army.",0xFFFFAAAA),
	(else_try),
	(troop_slot_ge, "trp_player", slot_troop_renown, 100), #need high renown to hire troops
		(try_begin),
		(call_script, "script_cf_enter_center_location_bandit_check"),
		(else_try),
		(assign, "$temp_troop", -1),
		(assign, reg43, 1),
		(assign, "$temp4", 1),
		(start_presentation, "prsnt_barracks"),
		(try_end),
        (else_try),
	(display_message,"@You need more renown to hire troops from here.",0xFFFFAAAA),
        (try_end),
        ]),

      #mithras quest
      ("mithras_quest_villa",[ (check_quest_active,"qst_mithras_statue_quest"),(eq,"$g_mithras_statue_quest",1),(eq, "$current_town", "p_town_8"),
        ],"Visit Gnaeus Turibius's Villa.",
        [
          (try_begin),
            (store_troop_health, ":health", "trp_player", 0), #get relative health in 1-100 range and put it into the ":health" variable
            (lt, ":health", 30),
            (val_add, ":health", 35),               #add to it the 5%
            (troop_set_health,   "trp_player", ":health"),   #set it
          (try_end),

          (set_jump_mission,"mt_mithras_quest_villa"),
          (modify_visitors_at_site,"scn_roman_villa_city"),
          (reset_visitors),
          #(try_begin),
          #  (main_party_has_troop,"trp_morrigan_npc"),
          #  (set_visitor, 1, "trp_morrigan_npc"),
          #(try_end),
          (assign, ":cur_entry", 1), #entry points 1 to 6
          (try_for_range, ":companion", companions_begin, companions_end),
            (le, ":cur_entry", 6),
            (main_party_has_troop,":companion"),
            (set_visitor, ":cur_entry", ":companion"),
            (val_add, ":cur_entry", 1),
          (try_end),

          (set_visitor,9,"trp_roman_landowner"), #Gnaeus Turibius
          (set_visitor,15,"trp_roman_landowner_wife"), #Gnaeus Turibius's nagging wife

          (set_visitor,10,"trp_bucellarius"), #his bodyguards - mainly bucellarii
          (set_visitor,11,"trp_bucellarius"),
          (set_visitor,8,"trp_bucellarius"),
          (set_visitor,12,"trp_bucellarius"),
          (set_visitor,14,"trp_bucellarius"),

          (set_jump_entry, 0),
          (scene_set_slot, "scn_roman_villa_city", slot_scene_visited, 1),

          (jump_to_scene,"scn_roman_villa_city"),
          (change_screen_mission),
      ]),

	  ##diplomacy end
      ("town_leave",[],"Leave...",
      [
        (assign, "$g_permitted_to_center",0),
        (change_screen_return,0),
		##diplomacy start+
		#Porting rubik's autobuy/autosell from Custom Commander
		(try_begin),
		  (eq, "$sneaked_into_town", disguise_none), #SB : disable while disguised
		  (neg|party_slot_ge, "$current_town", slot_village_infested_by_bandits, 1),
		  (call_script, "script_dplmc_initialize_autoloot", 0),#argument "0" means this does nothing if deemed unnecessary
		  (try_begin),
			(eq, "$g_dplmc_buy_food_when_leaving", 1),
			(party_get_slot, ":merchant_troop", "$current_town", slot_town_merchant),
			(gt, ":merchant_troop", 0),
			(call_script, "script_dplmc_auto_buy_food", "trp_player", ":merchant_troop"),
		  (try_end),
		  (try_begin),
			(eq, "$g_dplmc_sell_items_when_leaving", 1),
			(call_script, "script_dplmc_player_auto_sell_at_center", "$current_town"),
		  (try_end),
		(else_try), #SB : process leaving town guard check
          (gt, "$sneaked_into_town", disguise_none),
        (try_end),
		##diplomacy end+
      ],"Leave Area."),

      #SB : consolidated cheat options
      ("town_cheat", [(ge, "$cheat_mode", 1),],
      "Use cheats.",
      [(jump_to_menu, "mnu_town_cheats"),
      ]),
      # ("castle_cheat_interior",
      # [
        # (eq, "$cheat_mode", 1),
      # ],
      # "{!}CHEAT! Interior.",
      # [
        # (set_jump_mission,"mt_ai_training"),
        # (party_get_slot, ":castle_scene", "$current_town", slot_town_castle),
        # (jump_to_scene,":castle_scene"),
        # (change_screen_mission),
      # ]),

      # ("castle_cheat_town_exterior",
      # [
        # (eq, "$cheat_mode", 1),
      # ],
      # "{!}CHEAT! Exterior.",
      # [
        # (try_begin),
          # (party_slot_eq, "$current_town",slot_party_type, spt_castle),
          # (party_get_slot, ":scene", "$current_town", slot_castle_exterior),
        # (else_try),
          # (party_get_slot, ":scene", "$current_town", slot_town_center),
        # (try_end),
        # (set_jump_mission,"mt_ai_training"),
        # (jump_to_scene,":scene"),
        # (change_screen_mission),
      # ]),

      # ("castle_cheat_dungeon",
      # [
        # (eq, "$cheat_mode", 1),
      # ],
      # "{!}CHEAT! Prison.",
      # [
        # (set_jump_mission,"mt_ai_training"),
        # (party_get_slot, ":castle_scene", "$current_town", slot_town_prison),
        # (jump_to_scene,":castle_scene"),
        # (change_screen_mission),
      # ]),

      # ("castle_cheat_town_walls",
      # [
        # (eq, "$cheat_mode", 1),
        # (party_slot_eq,"$current_town",slot_party_type, spt_town),
      # ],
      # "{!}CHEAT! Town Walls.",
      # [
        # (party_get_slot, ":scene", "$current_town", slot_town_walls),
        # (set_jump_mission,"mt_ai_training"),
        # (jump_to_scene,":scene"),
        # (change_screen_mission),
      # ]),

      # ("cheat_town_start_siege",
      # [
        # (eq, "$cheat_mode", 1),
        # (party_slot_eq, "$g_encountered_party", slot_center_is_besieged_by, -1),
        # (lt, "$g_encountered_party_2", 1),
        # (call_script, "script_party_count_fit_for_battle","p_main_party"),
        # (gt, reg(0), 1),
        # (try_begin),
          # (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
          # (assign, reg6, 1),
        # (else_try),
          # (assign, reg6, 0),
        # (try_end),
      # ],
      # "{!}CHEAT: Besiege the {reg6?town:fortress}...",
      # [
        # (assign,"$g_player_besiege_town","$g_encountered_party"),
        # (jump_to_menu, "mnu_castle_besiege"),
      # ]),

      # ("center_reports",
      # [
        # (eq, "$cheat_mode", 1),
      # ],
      # "{!}CHEAT! Show reports.",
      # [
        # (jump_to_menu,"mnu_center_reports"),
      # ]),

      # ("sail_from_port",
      # [
        # (party_slot_eq,"$current_town",slot_party_type, spt_town),
        # (eq, "$cheat_mode", 1),
        # #(party_slot_eq,"$current_town",slot_town_near_shore, 1),
      # ],
      # "{!}CHEAT: Sail from port.",
      # [
        # (assign, "$g_player_icon_state", pis_ship),
        # (party_set_flags, "p_main_party", pf_is_ship, 1),
        # (party_get_position, pos1, "p_main_party"),
        # (map_get_water_position_around_position, pos2, pos1, 6),
        # (party_set_position, "p_main_party", pos2),
        # (assign, "$g_main_ship_party", -1),
        # (change_screen_return),
      # ]),

    ]
   ),



  (
    "cannot_enter_court",0,
    "There is a feast in progress in the lord's hall, but you are not of sufficient status to be invited inside. Perhaps increasing your renown would win you admittance -- or you might also try distinguishing yourself at a competition while the feast is in progress...",
    "none",
    [],
    [
    ("continue", [],"Continue",
       [
        (jump_to_menu, "mnu_town"),
        ]),
    ]),


  (
    "lady_visit",0,
    "Whom do you wish to visit?",
    "none",
    [],
    [

	("visit_lady_1", [
	(gt, "$love_interest_in_town", 0),
	(str_store_troop_name, s12, "$love_interest_in_town"),
	],
	  "Visit {s12}",
       [
	    (assign, "$love_interest_in_town", "$love_interest_in_town"),
        (jump_to_menu, "mnu_garden"),
        ]),



	("visit_lady_2", [
	(gt, "$love_interest_in_town_2", 0),
	(str_store_troop_name, s12, "$love_interest_in_town_2"),
	],
	  "Visit {s12}",
       [
	    (assign, "$love_interest_in_town", "$love_interest_in_town_2"),
        (jump_to_menu, "mnu_garden"),
        ]),

	("visit_lady_3", [
	(gt, "$love_interest_in_town_3", 0),
	(str_store_troop_name, s12, "$love_interest_in_town_3"),
	],
	  "Visit {s12}",
       [
	    (assign, "$love_interest_in_town", "$love_interest_in_town_3"),
        (jump_to_menu, "mnu_garden")], "Door to the garden."),


	("visit_lady_4", [(gt, "$love_interest_in_town_4", 0),(str_store_troop_name, s12, "$love_interest_in_town_4"),],
	"Visit {s12}",[(assign, "$love_interest_in_town", "$love_interest_in_town_4"),(jump_to_menu, "mnu_garden"),]),

	("visit_lady_5", [(gt, "$love_interest_in_town_5", 0),(str_store_troop_name, s12, "$love_interest_in_town_5"),],
	"Visit {s12}",[(assign, "$love_interest_in_town", "$love_interest_in_town_5"),(jump_to_menu, "mnu_garden"),]),

	("visit_lady_6",[(gt, "$love_interest_in_town_6", 0),(str_store_troop_name, s12, "$love_interest_in_town_6"),],
	"Visit {s12}",[(assign, "$love_interest_in_town", "$love_interest_in_town_6"),(jump_to_menu, "mnu_garden"),]),

	("visit_lady_7",[(gt, "$love_interest_in_town_7", 0),(str_store_troop_name, s12, "$love_interest_in_town_7"),],
	"Visit {s12}",[(assign, "$love_interest_in_town", "$love_interest_in_town_7"),(jump_to_menu, "mnu_garden"),]),

	("visit_lady_8",[(gt, "$love_interest_in_town_8", 0),(str_store_troop_name, s12, "$love_interest_in_town_8"),],
	"Visit {s12}",[(assign, "$love_interest_in_town", "$love_interest_in_town_8"),(jump_to_menu, "mnu_garden"),]),


	("leave",[], "Leave",[(jump_to_menu, "mnu_town")]),

    ]
	),


  (
    "town_tournament_lost",0,
    "You have been eliminated from the competition.{s8}",
    "none",
    [
	(str_clear, s8),
	(try_begin),
		(this_or_next|neq, "$players_kingdom", "$g_encountered_party_faction"),
			(neg|troop_slot_ge, "trp_player", slot_troop_renown, 50),
		(neg|troop_slot_ge, "trp_player", slot_troop_renown, 125),
		(gt, "$g_player_tournament_placement", 4),
		(faction_slot_eq, "$g_encountered_party_faction", slot_faction_ai_state, sfai_feast),
		(faction_slot_eq, "$g_encountered_party_faction", slot_faction_ai_object, "$g_encountered_party"),
		(str_store_string, s8, "str__however_you_have_sufficiently_distinguished_yourself_to_be_invited_to_attend_the_ongoing_feast_in_the_lords_castle"),
	(try_end),

        ],
    [
      ("continue", [], "Continue...",
       [(jump_to_menu, "mnu_town_tournament_won_by_another"),
        ]),
    ]
  ),

  (
    "town_tournament_won",mnf_disable_all_keys,
    "You have won the competition of {s3}! You are filled with pride as the crowd cheers your name.\
 In addition to honour, fame and glory, you earn a prize of {reg9} siliquae. {s8}",
    "none",
    [
        (str_store_party_name, s3, "$current_town"),
        (call_script, "script_change_troop_renown", "trp_player", 20),
          (store_random_in_range, ":rand", 0, 20),
            (try_begin),
              (eq, ":rand", 0),
                  (try_begin), #romans to start
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_18"),
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_3"),
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_empire"),
                    (troop_add_item, "trp_player", "itm_nisean_roman_1", 0),
                    (display_message, "@You have been gifted a horse for your victory.", 0xFF0000),
                  (else_try), #huns, alans
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_12"),
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_16"),
                    (troop_add_item, "trp_player", "itm_hun_rich_horse_nobard_2", 0),
                    (display_message, "@You have been gifted a horse for your victory.", 0xFF0000),
                  (else_try), #caucasians, sassanids
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_17"),
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_6"),
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_8"),
                    (troop_add_item, "trp_player", "itm_niseansas_2", 0),
                    (display_message, "@You have been gifted a horse for your victory.", 0xFF0000),
                  (else_try), #nubians
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_15"),
                    (troop_add_item, "trp_player", "itm_dongola_bard_5", 0),
                    (display_message, "@You have been gifted a horse for your victory.", 0xFF0000),
                  (else_try), #mauri
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_11"),
                    (troop_add_item, "trp_player", "itm_barb_cham_1", 0),
                    (display_message, "@You have been gifted a horse for your victory.", 0xFF0000),
                  (else_try), #goths + eastern germs
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_1"),
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_2"),
                    (troop_add_item, "trp_player", "itm_east_germ_warhorse_1", 0), #Quality horse
                    (display_message, "@You have been gifted a horse for your victory.", 0xFF0000),
                  (else_try), #western germs
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_1"),
                    (troop_add_item, "trp_player", "itm_westger_warhorse_2", 0), #Quality horse
                    (display_message, "@You have been gifted a horse for your victory.", 0xFF0000),
                  (else_try), #northern germs
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_4"),
                    (troop_add_item, "trp_player", "itm_westger_warhorse_2", 0), #Quality horse
                    (display_message, "@You have been gifted a horse for your victory.", 0xFF0000),
                  (else_try), #others
                    (troop_add_item, "trp_player", "itm_camargue_roman_3", 0), #Quality horse
                    (display_message, "@You have been gifted a horse for your victory.", 0xFF0000),
                  (try_end),
            (else_try),
              (eq, ":rand", 1),
                  (troop_add_item, "trp_player", "itm_gold_jewelry", 0), #Jewelry gift
                  (display_message, "@You have been gifted expensive jewelry for your victory.", 0xFF0000),
            (else_try), #armor
              (eq, ":rand", 2),
                  (try_begin), #germanic, gothic, etc
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_1"),
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_2"),
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_4"),
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_7"),
                    (troop_add_item, "trp_player", "itm_common_mail_short_6", 0),#mail
                    (display_message, "@You have been gifted a coat of mail for your victory.", 0xFF0000),
                  (else_try), #roman
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_18"),
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_3"),
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_empire"),
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_11"),
                    (troop_add_item, "trp_player", "itm_common_mail_short_1", 0),#mail
                    (display_message, "@You have been gifted a coat of mail for your victory.", 0xFF0000),
                  (else_try), #sassanid - caucasian
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_17"),
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_6"),
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_8"),
                    (troop_add_item, "trp_player", "itm_sassanid_mail_2", 0),#mail
                    (display_message, "@You have been gifted a coat of mail for your victory.", 0xFF0000),
                  (else_try), #hunnic - alan
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_12"),
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_16"),
                    (troop_add_item, "trp_player", "itm_kaftan_lamellar_1", 0),#lamellar
                    (display_message, "@You have been gifted a lamellar vest for your victory.", 0xFF0000),
                  (else_try), #nubian
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_15"),
                    (troop_add_item, "trp_player", "itm_battered_mail_1", 0),#mail
                    (display_message, "@You have been gifted an imported Roman mail shirt for your victory.", 0xFF0000),
                  (else_try), #pictish
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_5"),
                    (troop_add_item, "trp_player", "itm_pictish_mail_5", 0),#mail
                    (display_message, "@You have been gifted an imported Roman mail shirt for your victory.", 0xFF0000),
                  (try_end),
            (else_try),
              (eq, ":rand", 3), #spatha
                  (try_begin), #germanic, gothic, etc
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_1"),
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_2"),
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_7"),
                    (troop_add_item, "trp_player", "itm_samson_spatha_2_rich", 0),
                    (display_message, "@You have been gifted a quality spatha for your victory.", 0xFF0000),
                  (else_try), #northern germanic
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_4"),
                    (troop_add_item, "trp_player", "itm_sword_viking_c_long", 0),
                    (display_message, "@You have been gifted a quality spatha for your victory.", 0xFF0000),
                  (else_try), #roman
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_18"),
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_3"),
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_empire"),
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_11"),
                    (troop_add_item, "trp_player", "itm_indesheim_spatha_rich", 0),
                    (display_message, "@You have been gifted a quality spatha for your victory.", 0xFF0000),
                  (else_try), #sassanid - caucasian
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_17"),
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_6"),
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_8"),
                    (troop_add_item, "trp_player", "itm_ingushetia_spatha", 0),
                    (display_message, "@You have been gifted a quality spatha for your victory.", 0xFF0000),
                  (else_try), #hunnic
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_12"),
                    (troop_add_item, "trp_player", "itm_pannonhalma_spatha", 0),
                    (display_message, "@You have been gifted a quality spatha for your victory.", 0xFF0000),
                  (else_try), #alan
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_16"),
                    (troop_add_item, "trp_player", "itm_klin_yar_spatha", 0),
                    (display_message, "@You have been gifted a quality spatha for your victory.", 0xFF0000),
                  (else_try), #nubian
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_15"),
                    (troop_add_item, "trp_player", "itm_sword_khergit_4", 0),
                    (display_message, "@You have been gifted a quality Roman spatha for your victory.", 0xFF0000),
                  (else_try), #pictish
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_5"),
                    (troop_add_item, "trp_player", "itm_sword_viking_2_small", 0),
                    (display_message, "@You have been gifted a quality spatha for your victory.", 0xFF0000),
                  (try_end),
            (else_try),
              (eq, ":rand", 4), #helmet
                  (try_begin), #germanic, gothic, etc
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_1"),
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_2"),
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_4"),
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_7"),
                    (troop_add_item, "trp_player", "itm_fernpass_helmet_1", 0),
                    (display_message, "@You have been gifted a new helmet for your victory.", 0xFF0000),
                  (else_try), #roman
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_18"),
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_3"),
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_empire"),
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_11"),
                    (troop_add_item, "trp_player", "itm_iatrus_1", 0),
                    (display_message, "@You have been gifted a new Roman helmet for your victory.", 0xFF0000),
                  (else_try), #sassanid
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_6"),
                    (troop_add_item, "trp_player", "itm_sassanid_helmet_mail_1", 0),
                    (display_message, "@You have been gifted a new Sassanid helmet for your victory.", 0xFF0000),
                  (else_try), #caucasian
                    (this_or_next|party_slot_eq, "$current_town", slot_center_culture, "fac_culture_17"),
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_8"),
                    (troop_add_item, "trp_player", "itm_batumi_helmet_aventail", 0),
                    (display_message, "@You have been gifted a new helmet for your victory.", 0xFF0000),
                  (else_try), #hunnic
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_12"),
                    (troop_add_item, "trp_player", "itm_kalhkni_helmet_1", 0),
                    (display_message, "@You have been gifted a new helmet for your victory.", 0xFF0000),
                  (else_try), #alan
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_16"),
                    (troop_add_item, "trp_player", "itm_kishpek_helmet_mail", 0),
                    (display_message, "@You have been gifted a new helmet for your victory.", 0xFF0000),
                  (else_try), #nubian
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_15"),
                    (troop_add_item, "trp_player", "itm_haditha_1", 0),
                    (display_message, "@You have been gifted a new Roman helmet for your victory.", 0xFF0000),
                  (else_try), #pictish
                    (party_slot_eq, "$current_town", slot_center_culture, "fac_culture_5"),
                    (troop_add_item, "trp_player", "itm_burgh_helmet_1", 0),
                    (display_message, "@You have been gifted a new Roman helmet for your victory.", 0xFF0000),
                  (try_end),
            (else_try),
              (eq, ":rand", 5),
                (troop_add_item, "trp_player", "itm_cow_1", 0), #cow!
                (display_message, "@You are awarded the fattest cow in the city for your victory.", 0xFF0000),
            (else_try),
              (eq, ":rand", 6),
                (troop_add_item, "trp_player", "itm_ivory", 0), #ivory
                (display_message, "@You are awarded with some expensive ivory for your victory.", 0xFF0000),
            (else_try),
                (display_message, "@They appreciate your participation in the competition and place a wreath of laurel on your head.", 0xFF0000),
          (try_end),

        (call_script, "script_change_player_relation_with_center", "$current_town", 5),
        (try_begin), #SB : slight scaling reward
          (ge, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_MEDIUM),
          # (store_faction_of_party, ":center_faction", "$current_town"),
          (call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$g_encountered_party_faction"),
          (store_mul, ":reward", reg0, 20), #1200 for leader, 600 for lord etc
          (val_add, ":reward", 150),
          (try_begin), #this is halved if it's the player's own center to prevent quest abuse?
            (party_slot_eq, "$current_town", slot_town_lord, "trp_player"),
            (val_mul, ":reward", 2),
            (val_div, ":reward", 3),
          (try_end),
        (else_try),
          (assign, ":reward", 500),
        (try_end),
        (assign, reg9, ":reward"),
        (troop_add_gold, "trp_player", ":reward"),
        (add_xp_to_troop, 250, "trp_player"),
        (str_clear, s8),
        (store_add, ":total_win", "$g_tournament_bet_placed", "$g_tournament_bet_win_amount"),
        (try_begin),
          (gt, "$g_tournament_bet_win_amount", 0),
          (assign, reg8, ":total_win"),
          (str_store_string, s8, "@Moreover, you earn {reg8} siliquae from the clever bets you placed on yourself..."),
        (try_end),
		(try_begin),
			(this_or_next|neq, "$players_kingdom", "$g_encountered_party_faction"),
				(neg|troop_slot_ge, "trp_player", slot_troop_renown, 70),
			(neg|troop_slot_ge, "trp_player", slot_troop_renown, 145),

			(faction_slot_eq, "$g_encountered_party_faction", slot_faction_ai_state, sfai_feast),
			(faction_slot_eq, "$g_encountered_party_faction", slot_faction_ai_object, "$g_encountered_party"),
			(str_store_string, s8, "str_s8_you_are_also_invited_to_attend_the_ongoing_feast_in_the_castle"),
		(try_end),
        (troop_add_gold, "trp_player", ":total_win"),
        (assign, ":player_odds_sub", 0),
        (store_div, ":player_odds_sub", "$g_tournament_bet_win_amount", 5),
        (party_get_slot, ":player_odds", "$current_town", slot_town_player_odds),
        (val_sub, ":player_odds", ":player_odds_sub"),
        (val_max, ":player_odds", 250),

        (party_set_slot, "$current_town", slot_town_player_odds, ":player_odds"),
        (call_script, "script_play_victorious_sound"),

        (unlock_achievement, ACHIEVEMENT_MEDIEVAL_TIMES),
        #SB : stop arena loop sound if it leaks here
        (stop_all_sounds, 0),
        #also add background
        (set_background_mesh, "mesh_pic_payment"),
        #also gives bonus faction morale
        (call_script, "script_change_faction_troop_morale", "$g_encountered_party_faction", ":player_odds", 1),
        ],
    [
      ("continue", [], "Continue...",
       [(jump_to_menu, "mnu_town"),
        ]),
    ]
  ),

  (
    "town_tournament_won_by_another",mnf_disable_all_keys,
    "As the only {reg3?fighter:man} to remain undefeated this day, {s1} wins the lists and the glory of this competition.",
    "none",
    [
      (call_script, "script_get_num_tournament_participants"),
      (store_sub, ":needed_to_remove_randomly", reg0, 1),
      (try_begin),
        (troop_slot_eq, "trp_tournament_participants", 0, 0), #delete player from the participants
        (troop_set_slot, "trp_tournament_participants", 0, -1),
        (val_sub, ":needed_to_remove_randomly", 1),
      (try_end),
        (call_script, "script_remove_tournament_participants_randomly", ":needed_to_remove_randomly"),
        (call_script, "script_sort_tournament_participant_troops"),
        (troop_get_slot, ":winner_troop", "trp_tournament_participants", 0),
        (str_store_troop_name, s1, ":winner_troop"),
          (set_fixed_point_multiplier, 100), #madsci show the winner
          (position_set_x, pos0, 70),
          (position_set_y, pos0, 5),
          (position_set_z, pos0, 75),
          (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", ":winner_troop", pos0),
        (try_begin),
          (troop_is_hero, ":winner_troop"),
          (call_script, "script_change_troop_renown", ":winner_troop", 20),
          (try_begin),
            (troop_slot_eq, ":winner_troop", slot_troop_occupation, slto_kingdom_hero),
            (ge, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_MEDIUM),
            # (call_script, "script_dplmc_distribute_gold_to_lord_and_holdings", 200, ":troop_no"),
            (call_script, "script_dplmc_get_troop_standing_in_faction", ":winner_troop", "$g_encountered_party_faction"),
            (store_mul, ":reward", reg0, 20), #1200 for leader, 600 for lord etc
            (val_add, ":reward", 150),
            (call_script, "script_dplmc_distribute_gold_to_lord_and_holdings", ":reward", ":winner_troop"), #add some wealth
          (try_end),
        (try_end),
		  ##diplomacy start+ use script for gender
        #(troop_get_type, reg3, ":winner_troop"),#<- OLD
		(call_script, "script_dplmc_store_troop_is_female_reg", ":winner_troop", 3),
		  ##diplomacy end+
        #SB : stop arena sound if it leaks here
        (stop_all_sounds, 0),
        (set_background_mesh, "mesh_pic_payment"),
        ],
    [
      ("continue", [], "Continue...",
       [(jump_to_menu, "mnu_town"),
        ]),
    ]
  ),

  (
    "town_tournament",mnf_disable_all_keys,
    "{s1}You are at tier {reg0} of the competition, with {reg1} participants remaining. In the next round, there will be {reg2} teams with {reg3} {reg4?fighters:fighter} each.",
    "none",
    [
        (party_set_slot, "$current_town", slot_town_has_tournament, 0), #No way to return back if this menu is left
        (call_script, "script_sort_tournament_participant_troops"),#Moving trp_player to the top of the list
        (call_script, "script_get_num_tournament_participants"),
        (assign, ":num_participants", reg0),
        (try_begin),
          (neg|troop_slot_eq, "trp_tournament_participants", 0, 0),#Player is defeated

          (assign, ":player_odds_add", 0),
          (store_div, ":player_odds_add", "$g_tournament_bet_placed", 5),
          (party_get_slot, ":player_odds", "$current_town", slot_town_player_odds),
          (val_add, ":player_odds", ":player_odds_add"),
          (val_min, ":player_odds", 4000),
          (party_set_slot, "$current_town", slot_town_player_odds, ":player_odds"),

          (jump_to_menu, "mnu_town_tournament_lost"),
        (else_try),
          (eq, ":num_participants", 1),#Tournament won
          (jump_to_menu, "mnu_town_tournament_won"),
        (else_try),
          (try_begin),
            (le, "$g_tournament_next_num_teams", 0),
            (call_script, "script_get_random_tournament_team_amount_and_size"),
            (assign, "$g_tournament_next_num_teams", reg0),
            (assign, "$g_tournament_next_team_size", reg1),
          (try_end),
          (assign, reg2, "$g_tournament_next_num_teams"),
          (assign, reg3, "$g_tournament_next_team_size"),
          (store_sub, reg4, reg3, 1),
          (str_clear, s1),
          (try_begin),
            (eq, "$g_tournament_player_team_won", 1),
            (str_store_string, s1, "@Victory is yours! You have won this melee, but now you must prepare yourself for the next round. "),
          (else_try),
            (eq, "$g_tournament_player_team_won", 0),
            (str_store_string, s1, "@You have been bested in this melee, but the master of ceremonies declares a recognition of your skill and bravery, allowing you to take part in the next round. "),
          (try_end),
          (assign, reg1, ":num_participants"),
          (store_add, reg0, "$g_tournament_cur_tier", 1),
        (try_end),
        ],
    [
      ("host_tournament",
      [(ge, "$cheat_mode", 1),],
      "{!}Cheat : Win tournament",
      [
           (jump_to_menu, "mnu_town_tournament_won"),
           (assign, "$g_player_eligible_feast_center_no", "$current_town"),
		   (assign, "$g_player_tournament_placement", 100),
      ]),
      ("tournament_view_participants", [], "View participants.",
       [(jump_to_menu, "mnu_tournament_participants"),
        ]),
      ("tournament_bet", [(neq, "$g_tournament_cur_tier", "$g_tournament_last_bet_tier")], "Place a bet on yourself.",
       [(jump_to_menu, "mnu_tournament_bet"),
        ]),
      ("tournament_join_next_fight", [], "Fight in the next round.",
       [
            (party_get_slot, ":arena_scene", "$current_town", slot_town_arena),
            (modify_visitors_at_site, ":arena_scene"),
            (reset_visitors),

            (set_jump_mission, "mt_arena_melee_fight"),
            (try_for_range, ":entry", 0, 55),
                (mission_tpl_entry_set_override_flags, "mt_arena_melee_fight", ":entry", 0),
                (mission_tpl_entry_clear_override_items, "mt_arena_melee_fight", ":entry"),
            (try_end),
           #Assuming that there are enough participants for the teams
		   (assign, "$g_player_tournament_placement", "$g_tournament_cur_tier"),
		   (try_begin),
		     (gt, "$g_player_tournament_placement", 4),
		     (assign, "$g_player_eligible_feast_center_no", "$current_town"),
		   (try_end),
           (val_add, "$g_tournament_cur_tier", 1),

           (store_mul, "$g_tournament_num_participants_for_fight", "$g_tournament_next_num_teams", "$g_tournament_next_team_size"),
           (troop_set_slot, "trp_tournament_participants", 0, -1),#Removing trp_player from the list
           (troop_set_slot, "trp_temp_array_a", 0, "trp_player"),
           (try_for_range, ":slot_no", 1, "$g_tournament_num_participants_for_fight"),
             (call_script, "script_get_random_tournament_participant"),
             (troop_set_slot, "trp_temp_array_a", ":slot_no", reg0),
           (try_end),
           (call_script, "script_shuffle_troop_slots", "trp_temp_array_a", 0, "$g_tournament_num_participants_for_fight"),


           (try_for_range, ":slot_no", 0, 4),#shuffle teams
             (troop_set_slot, "trp_temp_array_b", ":slot_no", ":slot_no"),
           (try_end),
           (call_script, "script_shuffle_troop_slots", "trp_temp_array_b", 0, 4),

           (assign, ":cur_slot", 0),
           (assign, ":player_slot", -1), #SB : find player's slot
           (try_for_range, ":cur_team_offset", 0, "$g_tournament_next_num_teams"),
             (troop_get_slot, ":cur_team", "trp_temp_array_b", ":cur_team_offset"),

             (try_for_range, ":slot_no", 0, 8),#shuffle entry_points
               (troop_set_slot, "trp_temp_array_c", ":slot_no", ":slot_no"),
             (try_end),
             (call_script, "script_shuffle_troop_slots", "trp_temp_array_c", 0, 8),

             (try_for_range, ":cur_index", 0, "$g_tournament_next_team_size"),
               (store_mul, ":cur_entry_point", ":cur_team", 8),
               (troop_get_slot, ":entry_offset", "trp_temp_array_c", ":cur_index"),
               (val_add, ":cur_entry_point", ":entry_offset"),
               (troop_get_slot, ":troop_no", "trp_temp_array_a", ":cur_slot"),
               (set_visitor, ":cur_entry_point", ":troop_no"),
               (try_begin), #SB : set player's slot
                 (eq, ":troop_no", "trp_player"),
                 (assign, ":player_slot", ":cur_entry_point"),
               (try_end),
               (val_add, ":cur_slot", 1),
             (try_end),
           (try_end),

           (assign, "$g_tournament_next_num_teams", 0),
           (assign, "$g_tournament_next_team_size", 0),

           (assign, "$g_mt_mode", abm_tournament),
           #SB : pass on as global
           (try_begin),
             (call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$g_encountered_party_faction"),
             (this_or_next|ge, reg0, DPLMC_FACTION_STANDING_MEMBER),
             (party_slot_ge, "$current_town", slot_center_player_relation, 15),
             (assign, "$g_player_entry_point", ":player_slot"),
           (else_try),
             (assign, "$g_player_entry_point", -1),
           (try_end),


            (jump_to_scene, ":arena_scene"),
            (change_screen_mission),

        ]),
      ("leave_tournament",[],"Withdraw from the tournament.",
       [
           (jump_to_menu, "mnu_tournament_withdraw_verify"),
        ]),
    ]
  ),

  (
    "tournament_withdraw_verify",0,
    "Are you sure you want to withdraw from the tournament?",
    "none",
    [],
    [
      ("tournament_withdraw_yes", [], "Yes. This is a pointless affectation.",
       [(jump_to_menu, "mnu_town_tournament_won_by_another"),
        ]),
      ("tournament_withdraw_no", [], "No, not as long as there is a chance of victory!",
       [(jump_to_menu, "mnu_town_tournament"),
        ]),
    ]
  ),

  (
    "tournament_bet",0,
    "The odds against you are {reg5} to {reg6}.{reg1? You have already bet {reg1} siliquae on yourself, and if you win, you will earn {reg2} siliquae.:} How much do you want to bet?",
    "none",
    [
      (assign, reg1, "$g_tournament_bet_placed"),
      (store_add, reg2, "$g_tournament_bet_win_amount", "$g_tournament_bet_placed"),
      (call_script, "script_get_win_amount_for_tournament_bet"),
      (assign, ":player_odds", reg0),
      (assign, ":min_dif", 100000),
      (assign, ":min_dif_divisor", 1),
      (assign, ":min_dif_multiplier", 1),
      (try_for_range, ":cur_multiplier", 1, 50),
        (try_for_range, ":cur_divisor", 1, 50),
          (store_mul, ":result", 100, ":cur_multiplier"),
          (val_div, ":result", ":cur_divisor"),
          (store_sub, ":difference", ":player_odds", ":result"),
          (val_abs, ":difference"),
          (lt, ":difference", ":min_dif"),
          (assign, ":min_dif", ":difference"),
          (assign, ":min_dif_divisor", ":cur_divisor"),
          (assign, ":min_dif_multiplier", ":cur_multiplier"),
        (try_end),
      (try_end),
      (assign, reg5, ":min_dif_multiplier"),
      (assign, reg6, ":min_dif_divisor"),
      ],
    [
      ("bet_100_denars", [(store_troop_gold, ":gold", "trp_player"),
                          (ge, ":gold", 100)
                          ],
       "100 siliquae.",
       [
         (assign, "$temp", 100),
         (jump_to_menu, "mnu_tournament_bet_confirm"),
        ]),
      ("bet_50_denars", [(store_troop_gold, ":gold", "trp_player"),
                         (ge, ":gold", 50)
                         ],
       "50 siliquae.",
       [
         (assign, "$temp", 50),
         (jump_to_menu, "mnu_tournament_bet_confirm"),
        ]),
      ("bet_20_denars", [(store_troop_gold, ":gold", "trp_player"),
                         (ge, ":gold", 20)
                         ],
       "20 siliquae.",
       [
         (assign, "$temp", 20),
         (jump_to_menu, "mnu_tournament_bet_confirm"),
        ]),
      ("bet_10_denars", [(store_troop_gold, ":gold", "trp_player"),
                         (ge, ":gold", 10)
                         ],
       "10 siliquae.",
       [
         (assign, "$temp", 10),
         (jump_to_menu, "mnu_tournament_bet_confirm"),
        ]),
      ("bet_5_denars", [(store_troop_gold, ":gold", "trp_player"),
                        (ge, ":gold", 5)
                        ],
       "5 siliquae.",
       [
         (assign, "$temp", 5),
         (jump_to_menu, "mnu_tournament_bet_confirm"),
        ]),
      ("go_back_dot", [], "Go back.",
       [
         (jump_to_menu, "mnu_town_tournament"),
        ]),
    ]
  ),

  (
    "tournament_bet_confirm",0,
    "If you bet {reg1} siliquae, you will earn {reg2} siliquae if you win the tournament. Is that all right?",
    "none",
    [
      (call_script, "script_get_win_amount_for_tournament_bet"),
      (assign, ":win_amount", reg0),
      (val_mul, ":win_amount", "$temp"),
      (val_div, ":win_amount", 100),
      (assign, reg1, "$temp"),
      (assign, reg2, ":win_amount"),
      ],
    [
      ("tournament_bet_accept", [],
       "Go ahead.",
       [
         (call_script, "script_tournament_place_bet", "$temp"),
         (jump_to_menu, "mnu_town_tournament"),
         ]),
      ("tournament_bet_cancel", [],
       "Forget it.",
       [
         (jump_to_menu, "mnu_tournament_bet"),
         ]),
    ]
  ),

  (
    "tournament_participants",0,
    "You ask one of the criers for the names of the tournament participants. They are:^{s11}",
    "none",
    [
        (str_clear, s11),
        (call_script, "script_sort_tournament_participant_troops"),
        (call_script, "script_get_num_tournament_participants"),
        (assign, ":num_participants", reg0),
        (try_for_range, ":cur_slot", 0, ":num_participants"),
          (troop_get_slot, ":troop_no", "trp_tournament_participants", ":cur_slot"),
          (str_store_troop_name, s12, ":troop_no"),
          (str_store_string, s11, "@{!}{s11}^{s12}"),
        (try_end),
        ],
    [
      ("go_back_dot", [], "Go back.",
       [(jump_to_menu, "mnu_town_tournament"),
        ]),
    ]
  ),


  (
    "collect_taxes",mnf_disable_all_keys,
    "As the party member with the highest trade skill ({reg2}), {reg3?you expect:{s1} expects} that collecting taxes from here will take {reg4} days...",
    "none",
    [(call_script, "script_get_max_skill_of_player_party", "skl_trade"),
     (assign, ":max_skill", reg0),
     (assign, reg2, reg0),
     (assign, ":max_skill_owner", reg1),
     (try_begin),
       (eq, ":max_skill_owner", "trp_player"),
       (assign, reg3, 1),
     (else_try),
       (assign, reg3, 0),
       (str_store_troop_name, s1, ":max_skill_owner"),
     (try_end),
     (assign, ":tax_quest_expected_revenue", 3000),
     (try_begin),
       (party_slot_eq, "$current_town", slot_party_type, spt_town),
       (assign, ":tax_quest_expected_revenue", 6000),
     (try_end),

     (try_begin),
       (quest_slot_eq, "qst_collect_taxes", slot_quest_current_state, 0),
       (store_add, ":max_skill_plus_thirty", ":max_skill", 30),
       (try_begin),
         (party_slot_eq, "$current_town", slot_party_type, spt_town),
         (store_div, "$qst_collect_taxes_total_hours", 24* 7 * 30, ":max_skill_plus_thirty"),
       (else_try),
         #Village
         (store_div, "$qst_collect_taxes_total_hours", 24 * 3 * 30, ":max_skill_plus_thirty"),
       (try_end),

       (call_script, "script_party_count_fit_for_battle", "p_main_party"),
       (val_add, reg0, 20),
       (val_mul, "$qst_collect_taxes_total_hours", 20),
       (val_div, "$qst_collect_taxes_total_hours", reg0),


       (quest_set_slot, "qst_collect_taxes", slot_quest_target_amount, "$qst_collect_taxes_total_hours"),
       (store_div, ":menu_begin_time", "$qst_collect_taxes_total_hours", 20),#between %5-%25
       (store_div, ":menu_end_time", "$qst_collect_taxes_total_hours", 4),
       (assign, ":unrest_begin_time", ":menu_end_time"),#between %25-%75
       (store_mul, ":unrest_end_time", "$qst_collect_taxes_total_hours", 3),
       (val_div, ":unrest_end_time", 4),

       (val_mul, ":tax_quest_expected_revenue", 2),
       (store_div, "$qst_collect_taxes_hourly_income", ":tax_quest_expected_revenue", "$qst_collect_taxes_total_hours"),

       (store_random_in_range, "$qst_collect_taxes_menu_counter", ":menu_begin_time", ":menu_end_time"),
       (store_random_in_range, "$qst_collect_taxes_unrest_counter", ":unrest_begin_time", ":unrest_end_time"),
       (assign, "$qst_collect_taxes_halve_taxes", 0),
     (try_end),
     (quest_get_slot, ":target_hours", "qst_collect_taxes", slot_quest_target_amount),
     (store_div, ":target_days", ":target_hours", 24),
     (val_mul, ":target_days", 24),
     (try_begin),
       (lt, ":target_days", ":target_hours"),
       (val_add, ":target_days", 24),
     (try_end),
     (val_div, ":target_days", 24),
     (assign, reg4, ":target_days"),
     ],
    [
      ("start_collecting", [], "Start collecting.",
       [(assign, "$qst_collect_taxes_currently_collecting", 1),
        (try_begin),
          (quest_slot_eq, "qst_collect_taxes", slot_quest_current_state, 0),
          (quest_set_slot, "qst_collect_taxes", slot_quest_current_state, 1),
        (try_end),
        (rest_for_hours_interactive, 1000, 5, 0), #rest while not attackable
        (assign,"$auto_enter_town","$current_town"),
        (assign, "$g_town_visit_after_rest", 1),
        (change_screen_return),
        ]),
      ("collect_later", [], "Put it off until later.",
       [(try_begin),
          (party_slot_eq, "$current_town", slot_party_type, spt_town),
          (jump_to_menu, "mnu_town"),
        (else_try),
          (jump_to_menu, "mnu_village"),
        (try_end),
        ]),
    ]
  ),

  (
    "collect_taxes_complete",mnf_disable_all_keys,
    ##diplomacy start+
    ##Replace "him" with "{reg4?her:him}"
    "You've collected {reg3} siliquae in taxes from {s3}. {s19} will be expecting you to take the money to {reg4?her:him}.",
    ##diplomacy end+
    "none",
    [(str_store_party_name, s3, "$current_town"),
     (quest_get_slot, ":quest_giver", "qst_collect_taxes", slot_quest_giver_troop),
     (str_store_troop_name, s19, ":quest_giver"),
     ##diplomacy start+

     (try_begin),
       (eq, "$qst_collect_taxes_halve_taxes", 0),
       (call_script, "script_change_player_relation_with_center", "$current_town", -2),
     (try_end),
     (call_script, "script_succeed_quest", "qst_collect_taxes"),

     #SB : add renown to tax collector
     (try_begin),
       (call_script, "script_get_max_skill_of_player_party", "skl_trade"),
       (neq, reg1, "trp_player"),
       (call_script, "script_change_troop_renown", reg1, dplmc_companion_skill_renown),
     (try_end),

     (quest_get_slot, reg3, "qst_collect_taxes", slot_quest_gold_reward),
     ##Store quest giver gender to reg4
     (call_script, "script_dplmc_store_troop_is_female_reg", ":quest_giver", 4), #SB : use other script
     ##diplomacy end+
     ],
    [
      ("continue", [], "Continue...",
       [(change_screen_return),
        ]),
    ]
  ),

  (
    "collect_taxes_rebels_killed",0,
    "Your quick action and strong arm have successfully put down the revolt.\
 Surely, anyone with a mind to rebel against you will think better of it after this.",
    "none",
    [
    ],
    [
      ("continue", [], "Continue...",
       [(change_screen_map),
        ]),
    ]
  ),

  (
    "collect_taxes_failed",mnf_disable_all_keys,
##diplomacy start+ fix gender of pronoun
    "You could collect only {reg3} siliquae as tax from {s3} before the revolt broke out.\
 {s1} won't be happy, but some silver will placate {reg4?her:him} better than nothing at all...",
##diplomacy end+
    "none",
    [
    (set_background_mesh, "mesh_pic_escape_1"),

     (str_store_party_name, s3, "$current_town"),
     (quest_get_slot, ":quest_giver", "qst_collect_taxes", slot_quest_giver_troop),
     ##diplomacy start+ store gender of quest giver in reg4
     (call_script, "script_dplmc_store_troop_is_female", ":quest_giver"),
     (assign, reg4, reg0),
     ##diplomacy end+
     (str_store_troop_name, s1, ":quest_giver"),
     (quest_get_slot, reg3, "qst_collect_taxes", slot_quest_gold_reward),
     (call_script, "script_fail_quest", "qst_collect_taxes"),
     (quest_set_slot, "qst_collect_taxes", slot_quest_current_state, 4),
     (rest_for_hours, 0, 0, 0), #stop resting
     ],
    [
      ("continue", [], "Continue...",
        [#SB : lose renown
          (call_script, "script_change_troop_renown", "trp_player", -2),
          (change_screen_map),
        ]),
    ]
  ),

  (
    "collect_taxes_revolt_warning",0,
    "The people of {s3} are outraged at your demands and decry it as nothing more than extortion.\
 They're getting very restless, and they may react badly if you keep pressing them.",
    "none",
    [(str_store_party_name, s3, "$current_town"),
     ],
    [
      ("continue_collecting_taxes", [], "Ignore them and continue.",
       [ #SB : objectionable action
       (call_script, "script_objectionable_action", tmt_egalitarian, "str_repress_farmers"),
       (change_screen_return),]),
      ("halve_taxes", [(quest_get_slot, ":quest_giver_troop", "qst_collect_taxes", slot_quest_giver_troop),
                       (str_store_troop_name, s1, ":quest_giver_troop"),],
       "Agree to reduce your collection by half. ({s1} may be upset)",
       [(assign, "$qst_collect_taxes_halve_taxes", 1),
        (change_screen_return),
        ]),
    ]
  ),

  (
    "collect_taxes_revolt",0,
    "You are interrupted while collecting the taxes at {s3}. A large band of angry {reg9?peasants:townsmen} is marching nearer,\
 shouting about the exorbitant taxes and waving torches and weapons. It looks like they aim to fight you!",
    "none",
    [(str_store_party_name, s3, "$current_town"),
     #SB : town pictures
     (try_begin),
       (party_slot_eq, "$current_town", slot_party_type, spt_village),
       (assign, reg9, 1),
       (set_background_mesh, "mesh_pic_villageriot"),
     (else_try),
       (set_background_mesh, "mesh_pic_townriot"),
       (assign, reg9, 0),
     (try_end),
     ],
    [
      ("continue", [], "Continue...",
       [(set_jump_mission,"mt_back_alley_revolt"),
        (quest_get_slot, ":target_center", "qst_collect_taxes", slot_quest_target_center),
        (try_begin),
          (party_slot_eq, ":target_center", slot_party_type, spt_town),
          (party_get_slot, ":town_alley", ":target_center", slot_town_alley),
        (else_try),
          (party_get_slot, ":town_alley", ":target_center", slot_castle_exterior),
        (try_end),
        (modify_visitors_at_site,":town_alley"),
        (reset_visitors),
        (assign, ":num_rebels", 6),
        (store_character_level, ":level", "trp_player"),
        (val_div, ":level", 5),
        (val_add, ":num_rebels", ":level"),
        (set_visitors, 1, "trp_tax_rebel", ":num_rebels"),
        (jump_to_scene,":town_alley"),
        (change_screen_mission),
        ]),
    ]
  ),

# They must learn field discipline and the steadiness to follow orders in combat before they can be thought to use arms.",
  (
    "train_peasants_against_bandits",0,
    "As the party member with the highest training skill ({reg2}), {reg3?you expect:{s1} expects} that getting some peasants ready for practice will take {reg4} hours.",
    "none",
    [(call_script, "script_get_max_skill_of_player_party", "skl_trainer"),
     (assign, ":max_skill", reg0),
     (assign, reg2, reg0),
     (assign, ":max_skill_owner", reg1),
     (try_begin),
       (eq, ":max_skill_owner", "trp_player"),
       (assign, reg3, 1),
     (else_try),
       (assign, reg3, 0),
       (str_store_troop_name, s1, ":max_skill_owner"),
     (try_end),
     (store_sub, ":needed_hours", 20, ":max_skill"),
     (val_mul, ":needed_hours", 3),
     (val_div, ":needed_hours", 5),
     (store_sub, reg4, ":needed_hours", "$qst_train_peasants_against_bandits_num_hours_trained"),
     ],
    [
      ("make_preparation", [], "Train them.",
       [
         (assign, "$qst_train_peasants_against_bandits_currently_training", 1),
         (rest_for_hours_interactive, 1000, 5, 0), #rest while not attackable
         (assign, "$auto_enter_town", "$current_town"),
         (assign, "$g_town_visit_after_rest", 1),
         (change_screen_return),
         ]),
      ("train_later", [], "Put it off until later.",
       [
         (jump_to_menu, "mnu_village"),
        ]),
    ]
  ),

  (
    "train_peasants_against_bandits_ready",0,
    "You put the peasants through the basics of soldiering, discipline and obedience.\
 You think {reg0} of them {reg1?have:has} fully grasped the training and {reg1?are:is} ready for some practice.",
    "none",
    [
      (store_character_level, ":level", "trp_player"),
      (val_div, ":level", 10),
      (val_add, ":level", 1),
      (quest_get_slot, ":quest_target_amount", "qst_train_peasants_against_bandits", slot_quest_target_amount),
      (quest_get_slot, ":quest_current_state", "qst_train_peasants_against_bandits", slot_quest_current_state),
      (val_sub, ":quest_target_amount", ":quest_current_state"),
      (assign, ":max_random", ":level"),
      (val_min, ":max_random", ":quest_target_amount"),
      (val_add, ":max_random", 1),
      (store_random_in_range, ":random_number", 1, ":max_random"),
      (assign, "$g_train_peasants_against_bandits_num_peasants", ":random_number"),
      (assign, reg0, ":random_number"),
      (store_sub, reg1, ":random_number", 1),
      (str_store_troop_name_by_count, s0, "trp_trainee_peasant", ":random_number"),
     ],
    [
      ("peasant_start_practice", [], "Start the practice fight.",
       [
         (set_jump_mission,"mt_village_training"),
         (quest_get_slot, ":target_center", "qst_train_peasants_against_bandits", slot_quest_target_center),
         (party_get_slot, ":village_scene", ":target_center", slot_castle_exterior),
         (modify_visitors_at_site, ":village_scene"),
         (reset_visitors),
         (set_visitor, 0, "trp_player"),
         (set_visitors, 1, "trp_trainee_peasant", "$g_train_peasants_against_bandits_num_peasants"),
         (set_jump_entry, 11),
         (jump_to_scene, ":village_scene"),
         (jump_to_menu, "mnu_train_peasants_against_bandits_training_result"),
         (music_set_situation, 0),
         (change_screen_mission),
         ]),
      ]
    ),

  (
    "train_peasants_against_bandits_training_result",mnf_disable_all_keys,
    "{s0}",
    "none",
    [
      (assign, reg5, "$g_train_peasants_against_bandits_num_peasants"),
      (str_store_troop_name_by_count, s0, "trp_trainee_peasant", "$g_train_peasants_against_bandits_num_peasants"),
      (try_begin),
        (eq, "$g_train_peasants_against_bandits_training_succeeded", 0),
        (str_store_string, s0, "@You were beaten. The peasants are heartened by their success, but the lesson you wanted to teach them probably didn't get through..."),
      (else_try),
        (str_store_string, s0, "@After beating your last opponent, you explain to the peasants how to better defend themselves against such an attack. Hopefully they'll take the experience on board and will be prepared next time."),
        (quest_get_slot, ":quest_current_state", "qst_train_peasants_against_bandits", slot_quest_current_state),
        (val_add, ":quest_current_state", "$g_train_peasants_against_bandits_num_peasants"),
        (quest_set_slot, "qst_train_peasants_against_bandits", slot_quest_current_state, ":quest_current_state"),
      (try_end),
     ],
    [
      ("continue", [], "Continue...",
       [
         (try_begin),
           (quest_get_slot, ":quest_current_state", "qst_train_peasants_against_bandits", slot_quest_current_state),
           (quest_slot_eq, "qst_train_peasants_against_bandits", slot_quest_target_amount, ":quest_current_state"),
           (jump_to_menu, "mnu_train_peasants_against_bandits_attack"),
         (else_try),
           (change_screen_map),
         (try_end),
         ]),
      ]
    ),

  (
    "train_peasants_against_bandits_attack",0,
    "As you get ready to continue the training, a sentry from the village runs up to you, shouting alarums.\
 The bandits have been spotted on the horizon, riding hard for {s3}.\
 The elder begs that you organize your newly-trained militia and face them.",
    "none",
    [
    (str_store_party_name, s3, "$current_town"),
     ],
    [
      ("peasants_against_bandits_attack_resist", [], "Prepare for a fight!",
       [ ## SB : use new bandit script
        # (store_random_in_range, ":random_no", 0, 3),
        # (try_begin),
          # (eq, ":random_no", 0),
          # (assign, ":bandit_troop", "trp_bandit"),
        # (else_try),
          # (eq, ":random_no", 1),
          # (assign, ":bandit_troop", "trp_mountain_bandit"),
        # (else_try),
          # (assign, ":bandit_troop", "trp_forest_bandit"),
        # (try_end),
        (call_script, "script_center_get_bandits", "$current_town", 0),
        (assign, ":bandit_troop", reg0),
        (party_get_slot, ":scene_to_use", "$g_encountered_party", slot_castle_exterior),
        (modify_visitors_at_site, ":scene_to_use"),
        (reset_visitors),
        (store_character_level, ":level", "trp_player"),
        (val_div, ":level", 2),
        (store_add, ":min_bandits", ":level", 16),
        (store_add, ":max_bandits", ":min_bandits", 6),
        (store_random_in_range, ":random_no", ":min_bandits", ":max_bandits"),
        (set_visitors, 0, ":bandit_troop", ":random_no"),
        # (assign, ":num_villagers", ":max_bandits"),
        #SB : more accurate count
        (party_count_members_of_type, ":num_villagers", "$current_town", "trp_farmer"), #disallow peasant woman
        (val_min, ":num_villagers", ":max_bandits"), #dckplmc
        (set_visitors, 2, "trp_trainee_peasant", ":num_villagers"),
        (set_party_battle_mode),
        (set_battle_advantage, 0),
        (assign, "$g_battle_result", 0),
        (set_jump_mission,"mt_village_attack_bandits"),
        (jump_to_scene, ":scene_to_use"),
        (assign, "$g_next_menu", "mnu_train_peasants_against_bandits_attack_result"),
        (jump_to_menu, "mnu_battle_debrief"),
        (assign, "$g_mt_mode", vba_after_training),
        (change_screen_mission),
        ]),
      ]
    ),

  (
    "train_peasants_against_bandits_attack_result",mnf_scale_picture|mnf_disable_all_keys,
    "{s9}",
    "none",
    [
      (try_begin),
        (eq, "$g_battle_result", 1),
        (str_store_string, s9, "@The bandits are broken!\
 Those few who remain alive and conscious run off with their tails between their legs,\
 terrified of the peasants and their new champion."),
        (call_script, "script_succeed_quest", "qst_train_peasants_against_bandits"),
        (jump_to_menu, "mnu_train_peasants_against_bandits_success"),
      (else_try),
        (call_script, "script_fail_quest", "qst_train_peasants_against_bandits"),
        (str_store_string, s9, "@Try as you might, you could not defeat the bandits.\
 Infuriated, they raze the village to the ground to punish the peasants,\
 and then leave the burning wasteland behind to find greener pastures to plunder."),
        (set_background_mesh, "mesh_pic_looted_village"),
      (try_end),
     ],
    [
      ("continue", [], "Continue...",
       [(try_begin),
          (call_script, "script_village_set_state",  "$current_town", svs_looted),
          (party_set_slot, "$current_town", slot_village_raid_progress, 0),
          (party_set_slot, "$current_town", slot_village_recover_progress, 0),
          (call_script, "script_change_player_relation_with_center", "$g_encountered_party", -3),
          (call_script, "script_end_quest", "qst_train_peasants_against_bandits"),
        (try_end),
        (change_screen_map),
    ]),
      ]
    ),

   (
    "train_peasants_against_bandits_success",mnf_disable_all_keys,
    "The bandits are broken!\
 Those few who remain run off with their tails between their legs,\
 terrified of the peasants and their new champion.\
 The villagers have little left in the way of wealth after their ordeal,\
 but they offer you all they can find to show their gratitude.",
    "none",
    [(party_clear, "p_temp_party"),
     #SB : probably apply casualties before adding new troops?
     (quest_get_slot, ":amount_trained", "qst_train_peasants_against_bandits", slot_quest_target_amount),
     (store_faction_of_party, ":village_faction", "$current_town"), #assuming player trains them with local weapons
     (faction_get_slot, ":recruit_troop", ":village_faction", slot_faction_tier_1_troop),
	(try_begin),
	(le, ":recruit_troop", 0),
	(assign, ":recruit_troop", "trp_manhunter"), #madsci failsafe
	(try_end),
     (party_add_members, "$current_town", ":recruit_troop", ":amount_trained"),
     (party_remove_members, "$current_town", "trp_farmer", ":amount_trained"),

     (call_script, "script_end_quest", "qst_train_peasants_against_bandits"),
     (call_script, "script_change_player_relation_with_center", "$current_town", 4),

     (party_get_slot, ":merchant_troop", "$current_town", slot_town_elder),
	(try_begin),
	(le, ":merchant_troop", 0), #madsci failsafe
	(assign, ":merchant_troop", "trp_temp_troop"),
	(troop_clear_inventory, "trp_temp_troop"),
	(try_end),
     (try_for_range, ":slot_no", num_equipment_kinds ,max_inventory_items + num_equipment_kinds),
        (store_random_in_range, ":rand", 0, 100),
        (lt, ":rand", 50),
	(gt, ":merchant_troop", 0), #madsci make sure its valid troop
        (troop_set_inventory_slot, ":merchant_troop", ":slot_no", -1),
     (try_end),
     (call_script, "script_add_log_entry", logent_helped_peasants, "trp_player",  "$current_town", -1, -1),
     (set_background_mesh, "mesh_pic_mb_warrior_3"), #SB : background mesh
    ],
    [
      ("village_bandits_defeated_accept",[],"Take it as your just due.",[(jump_to_menu, "mnu_auto_return_to_map"),
                                                                         (party_get_slot, ":merchant_troop", "$current_town", slot_town_elder),
										(try_begin),
										(le, ":merchant_troop", 0), #madsci failsafe
										(assign, ":merchant_troop", "trp_temp_troop"),
										(try_end),
                                                                         (troop_sort_inventory, ":merchant_troop"),
                                                                         (change_screen_loot, ":merchant_troop"),
                                                                       ]),
      ("village_bandits_defeated_cont",[],  "Refuse, stating that they need these items more than you do.",[
      (call_script, "script_change_player_relation_with_center", "$g_encountered_party", 3),
      (call_script, "script_change_player_honor", 1),
      (change_screen_map)]),
    ],
  ),


  (
    "disembark",0,
    "Do you wish to disembark?",
    "none",
    [],
    [
      ("disembark_yes", [], "Yes.",
       [(assign, "$g_player_icon_state", pis_normal),
        (party_set_flags, "p_main_party", pf_is_ship, 0),
        (party_get_position, pos1, "p_main_party"),
        (party_set_position, "p_main_party", pos0),
        (try_begin),
          (le, "$g_main_ship_party", 0),
          (set_spawn_radius, 0),
          (spawn_around_party, "p_main_party", "pt_none"),
          (assign, "$g_main_ship_party", reg0),
          (party_set_flags, "$g_main_ship_party", pf_is_static|pf_always_visible|pf_hide_defenders|pf_is_ship, 1),
          (str_store_troop_name, s1, "trp_player"),
          (party_set_name, "$g_main_ship_party", "@{s1}'s Ship"),
          (party_set_icon, "$g_main_ship_party", "icon_ship"),
          (party_set_slot, "$g_main_ship_party", slot_party_type, spt_ship),
        (try_end),
        (enable_party, "$g_main_ship_party"),
        (party_set_position, "$g_main_ship_party", pos0),
        (party_set_icon, "$g_main_ship_party", "icon_ship_on_land"),
        (assign, "$g_main_ship_party", -1),
        (change_screen_return),
        ]),
      ("disembark_no", [], "No.",
       [(change_screen_return),
        ]),
    ]
  ),

  (
    "ship_reembark",0,
    "Do you wish to embark?",
    "none",
    [],
    [
      ("reembark_yes", [], "Yes.",
       [(assign, "$g_player_icon_state", pis_ship),
        (party_set_flags, "p_main_party", pf_is_ship, 1),
        (party_get_position, pos1, "p_main_party"),
        (map_get_water_position_around_position, pos2, pos1, 6),
        (party_set_position, "p_main_party", pos2),
        (assign, "$g_main_ship_party", "$g_encountered_party"),
        (disable_party, "$g_encountered_party"),
        (change_screen_return),
        ]),
      ("reembark_no", [], "No.",
       [(change_screen_return),
        ]),
    ]
  ),

  (
    "center_reports",0,
    "Town Name: {s1}^Rent Income: {reg1} siliquae^Tariff Income: {reg2} siliquae^Food Stock: for {reg3} days",
    "none",
    [(party_get_slot, ":town_food_store", "$g_encountered_party", slot_party_food_store),
     (call_script, "script_center_get_food_consumption", "$g_encountered_party"),
     (assign, ":food_consumption", reg0),
     (try_begin),
       (gt, ":food_consumption", 0),
       (store_div, reg3, ":town_food_store", ":food_consumption"),
     (else_try),
       (assign, reg3, 9999),
     (try_end),
     (str_store_party_name, s1, "$g_encountered_party"),
     (party_get_slot, reg1, "$g_encountered_party", slot_center_accumulated_rents),
     (party_get_slot, reg2, "$g_encountered_party", slot_center_accumulated_tariffs),
     ],
    [
      ("to_price_and_productions", [], "Show prices and productions.",
       [(jump_to_menu, "mnu_price_and_production"),
        ]),

      ("go_back_dot",[],"Go back.",
       [(try_begin),
          (party_slot_eq, "$g_encountered_party", slot_party_type, spt_village),
          (jump_to_menu, "mnu_village"),
        (else_try),
          (jump_to_menu, "mnu_town"),
        (try_end),
        ]),
    ]
  ),

  (
    "price_and_production",0,
    "Productions are:^(Note: base/modified by raw materials/modified by materials plus prosperity)^{s1}^^Price factors are:^{s2}",
    "none",
    [

	 (assign, ":calradian_average_urban_hardship", 0),
	 (assign, ":calradian_average_rural_hardship", 0),

	 (try_for_range, ":center", towns_begin, towns_end),
		(call_script, "script_center_get_goods_availability", ":center"),
		(val_add, ":calradian_average_urban_hardship", reg0),
	 (try_end),

	 (try_for_range, ":center", villages_begin, villages_end),
		(call_script, "script_center_get_goods_availability", ":center"),
		(val_add, ":calradian_average_rural_hardship", reg0),
	 (try_end),

	 (val_div, ":calradian_average_rural_hardship", 110),
	 (val_div, ":calradian_average_urban_hardship", 22),



	 (call_script, "script_center_get_goods_availability", "$g_encountered_party"),

	 (assign, reg1, ":calradian_average_urban_hardship"),
	 (assign, reg2, ":calradian_average_rural_hardship"),

	 (try_begin),
		(ge, "$cheat_mode", 1),
		(str_store_string, s1, "str___hardship_index_reg0_avg_towns_reg1_avg_villages_reg2__"),
		(display_message, "@{!}DEBUG - {s1}"),
	 (try_end),


     (try_for_range, ":cur_good", trade_goods_begin, trade_goods_end),
	   (neq, ":cur_good", "itm_pork"), #tied to price of grain
	   (neq, ":cur_good", "itm_chicken"), #tied to price of grain
	   (neq, ":cur_good", "itm_butter"), #tied to price of cheese
	   (neq, ":cur_good", "itm_cattle_meat"),
	   (neq, ":cur_good", "itm_cabbages"), #possibly include later

	   (call_script, "script_center_get_production", "$g_encountered_party", ":cur_good"),
	   (assign, ":production", reg0),
	   (assign, ":base_production", reg2),
	   (assign, ":base_production_modded_by_raw_materials", reg1),

	   (call_script, "script_center_get_consumption", "$g_encountered_party", ":cur_good"),
	   (assign, ":consumer_consumption", reg2),
	   (assign, ":raw_material_consumption", reg1),
	   (assign, ":consumption", reg0),

       (store_sub, ":cur_good_price_slot", ":cur_good", trade_goods_begin),
       (val_add, ":cur_good_price_slot", slot_town_trade_good_prices_begin),
       (party_get_slot, ":price", "$g_encountered_party", ":cur_good_price_slot"),

	   (assign, ":total_centers", 0),
	   (assign, ":calradian_average_price", 0),
	   (assign, ":calradian_average_production", 0),
	   (assign, ":calradian_average_consumption", 0),

	   (try_for_range, ":center", centers_begin, centers_end),
		(neg|is_between, ":center", castles_begin, castles_end),
	    (val_add, ":total_centers", 1),
        (call_script, "script_center_get_production", ":center", ":cur_good"),
		(assign, ":center_production", reg2),
        (call_script, "script_center_get_consumption", ":center", ":cur_good"),
		(store_add, ":center_consumption", reg1, reg2),

        (party_get_slot, ":center_price", ":center", ":cur_good_price_slot"),
	    (val_add, ":calradian_average_price", ":center_price"),
	    (val_add, ":calradian_average_production", ":center_production"),
	    (val_add, ":calradian_average_consumption", ":center_consumption"),
	   (try_end),

	   (assign, ":calradian_total_production", ":calradian_average_production"),
	   (assign, ":calradian_total_consumption", ":calradian_average_consumption"),

	   (val_div, ":calradian_average_price", ":total_centers"),
	   (val_div, ":calradian_average_production", ":total_centers"),
	   (val_div, ":calradian_average_consumption", ":total_centers"),


       (str_store_item_name, s3, ":cur_good"),

       (assign, reg1, ":base_production"),
       (assign, reg2, ":base_production_modded_by_raw_materials"),
       (assign, reg3, ":production"),
       (assign, reg4, ":price"),

	   (assign, reg5, ":calradian_average_production"),
	   (assign, reg6, ":calradian_average_price"),

	   (assign, reg7, ":consumer_consumption"),
	   (assign, reg8, ":raw_material_consumption"),
	   (assign, reg9, ":consumption"),

	   (assign, reg10, ":calradian_average_consumption"),

	   (item_get_slot, ":production_slot", ":cur_good", slot_item_production_slot),
	   (party_get_slot, ":production_number", "$g_encountered_party", ":production_slot"),
	   (assign, reg11, ":production_number"),
	   (assign, reg12, ":calradian_total_production"),
	   (assign, reg13, ":calradian_total_consumption"),

	   (item_get_slot, ":production_string", ":cur_good", slot_item_production_string),
	   (str_store_string, s4, ":production_string"),

       (str_store_string, s1, "str___s3_price_=_reg4_calradian_average_reg6_capital_reg11_s4_base_reg1modified_by_raw_material_reg2modified_by_prosperity_reg3_calradian_average_production_base_reg5_total_reg12_consumed_reg7used_as_raw_material_reg8modified_total_reg9_calradian_consumption_base_reg10_total_reg13s1_"),
     (try_end),


     ],
    [
      ("go_back_dot",[],"Go back.",
       [(try_begin),
          (party_slot_eq, "$g_encountered_party", slot_party_type, spt_village),
          (jump_to_menu, "mnu_village"),
        (else_try),
          (jump_to_menu, "mnu_town"),
        (try_end),
        ]),
    ]
  ),

  (
    "town_trade",0,
    "You head towards the marketplace.",
    "none",
    [
    (stop_all_sounds, 1), #SB : prevent overlaps
    ],
    [
      #SB : re-order dialog options for consistency, add talk instead of trade option
		##diplomacy start+
		#Begin auto-sell, credit rubik (Custom Commander)
      ## CC
      ("auto_sell",[],
       "Sell items automatically.",
       [
          (assign, "$g_next_menu", "mnu_town"),
          (jump_to_menu,"mnu_dplmc_trade_auto_sell_begin"),
        ]),

      ("auto_buy_food",[],
       "Buy food automatically.",
       [
          (assign, "$g_next_menu", "mnu_town"),
          (jump_to_menu,"mnu_dplmc_trade_auto_buy_food_begin"),
        ]),

      ## CC
		#End auto-sell, credit rubik (Custom Commander)
		##diplomacy start+
      ("assess_prices",
       [
         (store_faction_of_party, ":current_town_faction", "$current_town"),
         (store_relation, ":reln", ":current_town_faction", "fac_player_supporters_faction"),
         (ge, ":reln", 0),
         ],
       "Assess the local prices.",
       [
           (jump_to_menu,"mnu_town_trade_assessment_begin"),
        ]),

      ("trade_with_arms_merchant",[(party_slot_ge, "$current_town", slot_town_weaponsmith, 1)],
       "Trade with the arms merchant.",
       [
            (party_get_slot, ":merchant_troop", "$current_town", slot_town_weaponsmith),
            (assign, "$g_talk_troop", ":merchant_troop"),
            (try_begin),
              (this_or_next|key_is_down, key_left_shift),
              (key_is_down, key_right_shift),
              (call_script, "script_start_town_conversation", slot_town_weaponsmith, 10),
            (else_try),
              (store_random_in_range, ":sound", "snd_draw_sword", "snd_put_back_other"),
              (play_sound, ":sound"),
              (troop_set_slot, ":merchant_troop", slot_troop_met, 1),
              (change_screen_trade, ":merchant_troop"),
            (try_end),
        ]),
      ("trade_with_armor_merchant",[(party_slot_ge, "$current_town", slot_town_armorer, 1)],
       "Trade with the armor merchant.",
       [
            (party_get_slot, ":merchant_troop", "$current_town", slot_town_armorer),
            (assign, "$g_talk_troop", ":merchant_troop"),
            (try_begin),
              (this_or_next|key_is_down, key_left_shift),
              (key_is_down, key_right_shift),
              (call_script, "script_start_town_conversation", slot_town_armorer, 9),
            (else_try),
              (play_sound, "snd_distant_blacksmith"),
              (troop_set_slot, ":merchant_troop", slot_troop_met, 1),
              (change_screen_trade, ":merchant_troop"),
            (try_end),
        ]),
      ("trade_with_horse_merchant",[(party_slot_ge, "$current_town", slot_town_horse_merchant, 1)],
       "Trade with the horse merchant.",
       [
            (party_get_slot, ":merchant_troop", "$current_town", slot_town_horse_merchant),
            (assign, "$g_talk_troop", ":merchant_troop"),
            (try_begin),
              (this_or_next|key_is_down, key_left_shift),
              (key_is_down, key_right_shift),
              (call_script, "script_start_town_conversation", slot_town_horse_merchant, 12),
            (else_try),
              (play_sound, "snd_horse_snort"), #horse_low_whinny
              (troop_set_slot, ":merchant_troop", slot_troop_met, 1),
              (change_screen_trade, ":merchant_troop"),
            (try_end),
        ]),
      ("trade_with_goods_merchant",[(party_slot_ge, "$current_town", slot_town_merchant, 1)],
       "Trade with the goods merchant.",
       [
            (party_get_slot, ":merchant_troop", "$current_town", slot_town_merchant),
            (assign, "$g_talk_troop", ":merchant_troop"),
            (try_begin),
              (this_or_next|key_is_down, key_left_shift),
              (key_is_down, key_right_shift),
              (call_script, "script_start_town_conversation", slot_town_merchant, 9),
            (else_try),
              (store_random_in_range, ":sound", "snd_distant_dog_bark", "snd_distant_blacksmith"),
              (play_sound, ":sound"),
              (troop_set_slot, ":merchant_troop", slot_troop_met, 1),
              (change_screen_trade, ":merchant_troop"),
            (try_end),
        ]),

      ("back_to_town_menu",[],"Head back.",
       [
           (jump_to_menu,"mnu_town"),
        ]),
    ]
  ),

##diplomacy start+
##Begin auto-sell credit rubik (Custom Commander)
##Altered to only sell items from the player's inventory, not his companions'.
#
#Uses global variable $g_auto_sell_price_limit changed to $g_dplmc_auto_sell_price_limit
## CC
  (
    "dplmc_trade_auto_sell_begin",0,
    "Items in your inventory whose type is marked as sellable and whose prices \
are below {reg1} siliquae will be sold to the {reg2?appropriate merchants:elder} \
in the current {reg2?town:village} automatically.  Specifically food, trade \
goods, and books will never be sold. ^^You can change some settings here freely.",
    "none",
  [
	##dplmc+ added section begin
    (this_or_next|is_between, "$current_town", towns_begin, towns_end),
	    (is_between, "$current_town", villages_begin, villages_end),
	(call_script, "script_dplmc_initialize_autoloot", 0),#argument "0" means this does nothing if deemed unnecessary
	##dplmc+ added section end
    (assign, reg1, "$g_dplmc_auto_sell_price_limit"),
	 (assign, reg2, 0),
    (try_begin),
      (is_between, "$current_town", towns_begin, towns_end),
      (assign, reg2, 1),
    (try_end),
  ],
  [
    ("continue",[],"Continue...",
    [
      #(call_script, "script_auto_sell_all"),
	  (call_script, "script_dplmc_player_auto_sell_at_center", "$current_town"),
      (jump_to_menu, "$g_next_menu"),
      ]),
    ("change_settings",[],"Change settings.",[(start_presentation, "prsnt_dplmc_auto_sell_options"),]),
    ("go_back",[],"Go back",[(jump_to_menu, "$g_next_menu")]),
  ]
  ),

  (
    "dplmc_trade_auto_buy_food_begin",0,
    "You will automatically buy food according to your shopping list. Do you want to continue?^^You can view and configure the shopping list here.",
    "none", [],
  [
    ("continue",[
	  #dplmc+ added to check against weird conditions
 	  (assign, ":merchant_troop", -1),
	  (try_begin),
		  (is_between, "$current_town", towns_begin, towns_end),
        (party_get_slot, ":merchant_troop", "$current_town", slot_town_merchant),
     (else_try),
		  (is_between, "$current_town", villages_begin, villages_end),
        (party_get_slot, ":merchant_troop", "$current_town", slot_town_elder),
     (try_end),
	  (ge, ":merchant_troop", 1),
	  #dplmc+ end addition
	 ],"Continue...",
    [
 	   (assign, ":merchant_troop", -1),
	   (try_begin),
		  (is_between, "$current_town", towns_begin, towns_end),
        (party_get_slot, ":merchant_troop", "$current_town", slot_town_merchant),
      (else_try),
		  (is_between, "$current_town", villages_begin, villages_end),
        (party_get_slot, ":merchant_troop", "$current_town", slot_town_elder),
      (try_end),
	   (call_script, "script_dplmc_auto_buy_food", "trp_player", ":merchant_troop"),
      (jump_to_menu, "$g_next_menu"),
      ]),

    ("dplmc_change_shopping_list_of_food",[],"Configure your shopping list.",[(start_presentation, "prsnt_dplmc_shopping_list_of_food"),]),
    ("go_back",[],"Go back",[(jump_to_menu, "$g_next_menu")]),
   ]
  ),
## CC
##End auto-sell credit rubik (Custom Commander)
##diplomacy start+

  (
   "town_trade_assessment_begin",0,
   #"You overhear the following details about the roads out of town :^(experimental feature -- this may go into dialogs)^{s42}^You also overhear several discussions about the price of trade goods across the local area.^You listen closely, trying to work out the best deals around.",
   "You overhear several discussions about the price of trade goods across the local area.^You listen closely, trying to work out the best deals around.",
    "none",
    [
	(str_clear, s42),
##	(call_script, "script_merchant_road_info_to_s42", "$g_encountered_party"),

    ],

    [
      ("continue",[],"Continue...",
       [
           (assign,"$auto_enter_town", "$current_town"),
           (assign, "$g_town_assess_trade_goods_after_rest", "$current_town"), #SB : save this
           (call_script, "script_get_max_skill_of_player_party", "skl_trade"),
           (val_div, reg0, 2),
           (store_sub, ":num_hours", 6, reg0),
           (assign, "$g_last_rest_center", "$current_town"),
           (assign, "$g_last_rest_payment_until", -1),
           (rest_for_hours, ":num_hours", 5, 0), #rest while not attackable
           (change_screen_return),
        ]),
      ("go_back_dot",[],"Go back.",
       [
           (jump_to_menu,"mnu_town_trade"),
        ]),
    ]
  ),

  (
    "town_trade_assessment",mnf_disable_all_keys,
    "As the party member with the highest trade skill ({reg2}), {reg3?you try to figure out:{s1} tries to figure out} the best goods to trade in. {s2}",
    "none",
    [

     (call_script, "script_get_max_skill_of_player_party", "skl_trade"),
     (assign, ":max_skill", reg0),
     (assign, ":max_skill_owner", reg1),

     (assign, ":num_best_results", 0),
     (assign, ":best_result_1_item", -1),
     (assign, ":best_result_1_town", -1),
     (assign, ":best_result_1_profit", 0),
     (assign, ":best_result_2_item", -1),
     (assign, ":best_result_2_town", -1),
     (assign, ":best_result_2_profit", 0),
     (assign, ":best_result_3_item", -1),
     (assign, ":best_result_3_town", -1),
     (assign, ":best_result_3_profit", 0),
     (assign, ":best_result_4_item", -1),
     (assign, ":best_result_4_town", -1),
     (assign, ":best_result_4_profit", 0),
     (assign, ":best_result_5_item", -1),
     (assign, ":best_result_5_town", -1),
     (assign, ":best_result_5_profit", 0),

     (store_sub, ":num_towns", walled_centers_end, walled_centers_begin),
     (store_sub, ":num_goods", trade_goods_end, trade_goods_begin),
     (store_mul, ":max_iteration", ":num_towns", ":num_goods"),
     (val_mul, ":max_iteration", ":max_skill"),
     (val_div, ":max_iteration", 20),

     (assign, ":org_encountered_party", "$g_encountered_party"),

     (try_for_range, ":unused", 0, ":max_iteration"),
       (store_random_in_range, ":random_trade_good", trade_goods_begin, trade_goods_end),
       (store_random_in_range, ":random_town", towns_begin, towns_end),

       (party_get_slot, ":cur_merchant", ":org_encountered_party", slot_town_merchant),
	   (assign, ":num_items_in_town_inventory", 0),
       (try_for_range, ":i_slot", num_equipment_kinds, max_inventory_items + num_equipment_kinds),
         (troop_get_inventory_slot, ":slot_item", ":cur_merchant", ":i_slot"),
         (try_begin),
           (eq, ":slot_item", ":random_trade_good"),
		   (val_add, ":num_items_in_town_inventory", 1),
         (try_end),
       (try_end),

       (ge, ":num_items_in_town_inventory", 1),

       (assign, ":already_best", 0),

       (try_begin),
         (eq, ":random_trade_good", ":best_result_1_item"),
         (eq, ":random_town", ":best_result_1_town"),
         (val_add, ":already_best", 1),
       (try_end),

	   (try_begin),
         (eq, ":random_trade_good", ":best_result_2_item"),
         (eq, ":random_town", ":best_result_2_town"),
         (val_add, ":already_best", 1),
       (try_end),

	   (try_begin),
         (eq, ":random_trade_good", ":best_result_3_item"),
         (eq, ":random_town", ":best_result_3_town"),
         (val_add, ":already_best", 1),
       (try_end),

	   (try_begin),
         (eq, ":random_trade_good", ":best_result_4_item"),
         (eq, ":random_town", ":best_result_4_town"),
         (val_add, ":already_best", 1),
       (try_end),

	   (try_begin),
         (eq, ":random_trade_good", ":best_result_5_item"),
         (eq, ":random_town", ":best_result_5_town"),
         (val_add, ":already_best", 1),
       (try_end),

       (le, ":already_best", 1),

       (store_item_value, ":random_trade_good_price", ":random_trade_good"),
       (assign, "$g_encountered_party", ":org_encountered_party"),
       (call_script, "script_game_get_item_buy_price_factor", ":random_trade_good"),
       (store_mul, ":random_trade_good_buy_price", ":random_trade_good_price", reg0),
       (val_div, ":random_trade_good_buy_price", 100),
       (val_max, ":random_trade_good_buy_price", 1),
       (assign, "$g_encountered_party", ":random_town"),
       (call_script, "script_game_get_item_sell_price_factor", ":random_trade_good"),
       (store_mul, ":random_trade_good_sell_price", ":random_trade_good_price", reg0),
       (val_div, ":random_trade_good_sell_price", 100),
       (val_max, ":random_trade_good_sell_price", 1),
       (store_sub, ":difference", ":random_trade_good_sell_price", ":random_trade_good_buy_price"),

       (try_begin),
	     (this_or_next|eq, ":best_result_1_item", ":random_trade_good"),
		 (this_or_next|eq, ":best_result_2_item", ":random_trade_good"),
		 (this_or_next|eq, ":best_result_3_item", ":random_trade_good"),
		 (this_or_next|eq, ":best_result_4_item", ":random_trade_good"),
		 (eq, ":best_result_5_item", ":random_trade_good"),

         (try_begin),
		   (eq, ":best_result_1_item", ":random_trade_good"),
		   (gt, ":difference", ":best_result_1_profit"),
           (assign, ":best_result_1_item", ":random_trade_good"),
           (assign, ":best_result_1_town", ":random_town"),
           (assign, ":best_result_1_profit", ":difference"),
         (else_try),
		   (eq, ":best_result_2_item", ":random_trade_good"),
		   (gt, ":difference", ":best_result_2_profit"),
           (assign, ":best_result_2_item", ":random_trade_good"),
           (assign, ":best_result_2_town", ":random_town"),
           (assign, ":best_result_2_profit", ":difference"),
		 (else_try),
		   (eq, ":best_result_3_item", ":random_trade_good"),
		   (gt, ":difference", ":best_result_3_profit"),
           (assign, ":best_result_3_item", ":random_trade_good"),
           (assign, ":best_result_3_town", ":random_town"),
           (assign, ":best_result_3_profit", ":difference"),
		 (else_try),
		   (eq, ":best_result_4_item", ":random_trade_good"),
		   (gt, ":difference", ":best_result_4_profit"),
           (assign, ":best_result_4_item", ":random_trade_good"),
           (assign, ":best_result_4_town", ":random_town"),
           (assign, ":best_result_4_profit", ":difference"),
		 (else_try),
		   (eq, ":best_result_5_item", ":random_trade_good"),
		   (gt, ":difference", ":best_result_5_profit"),
           (assign, ":best_result_5_item", ":random_trade_good"),
           (assign, ":best_result_5_town", ":random_town"),
           (assign, ":best_result_5_profit", ":difference"),
		 (try_end),
	   (else_try),
       (try_begin),
         (gt, ":difference", ":best_result_1_profit"),
         (val_add, ":num_best_results", 1),
           (val_min, ":num_best_results", 5),
           (assign, ":best_result_5_item", ":best_result_4_item"),
           (assign, ":best_result_5_town", ":best_result_4_town"),
           (assign, ":best_result_5_profit", ":best_result_4_profit"),
           (assign, ":best_result_4_item", ":best_result_3_item"),
           (assign, ":best_result_4_town", ":best_result_3_town"),
           (assign, ":best_result_4_profit", ":best_result_3_profit"),
         (assign, ":best_result_3_item", ":best_result_2_item"),
         (assign, ":best_result_3_town", ":best_result_2_town"),
         (assign, ":best_result_3_profit", ":best_result_2_profit"),
         (assign, ":best_result_2_item", ":best_result_1_item"),
         (assign, ":best_result_2_town", ":best_result_1_town"),
         (assign, ":best_result_2_profit", ":best_result_1_profit"),
         (assign, ":best_result_1_item", ":random_trade_good"),
         (assign, ":best_result_1_town", ":random_town"),
         (assign, ":best_result_1_profit", ":difference"),
       (else_try),
         (gt, ":difference", ":best_result_2_profit"),
         (val_add, ":num_best_results", 1),
           (val_min, ":num_best_results", 5),
           (assign, ":best_result_5_item", ":best_result_4_item"),
           (assign, ":best_result_5_town", ":best_result_4_town"),
           (assign, ":best_result_5_profit", ":best_result_4_profit"),
           (assign, ":best_result_4_item", ":best_result_3_item"),
           (assign, ":best_result_4_town", ":best_result_3_town"),
           (assign, ":best_result_4_profit", ":best_result_3_profit"),
         (assign, ":best_result_3_item", ":best_result_2_item"),
         (assign, ":best_result_3_town", ":best_result_2_town"),
         (assign, ":best_result_3_profit", ":best_result_2_profit"),
         (assign, ":best_result_2_item", ":random_trade_good"),
         (assign, ":best_result_2_town", ":random_town"),
         (assign, ":best_result_2_profit", ":difference"),
       (else_try),
         (gt, ":difference", ":best_result_3_profit"),
         (val_add, ":num_best_results", 1),
           (val_min, ":num_best_results", 5),
           (assign, ":best_result_5_item", ":best_result_4_item"),
           (assign, ":best_result_5_town", ":best_result_4_town"),
           (assign, ":best_result_5_profit", ":best_result_4_profit"),
           (assign, ":best_result_4_item", ":best_result_3_item"),
           (assign, ":best_result_4_town", ":best_result_3_town"),
           (assign, ":best_result_4_profit", ":best_result_3_profit"),
         (assign, ":best_result_3_item", ":random_trade_good"),
         (assign, ":best_result_3_town", ":random_town"),
         (assign, ":best_result_3_profit", ":difference"),
         (else_try),
           (gt, ":difference", ":best_result_4_profit"),
           (val_add, ":num_best_results", 1),
           (val_min, ":num_best_results", 5),
           (assign, ":best_result_5_item", ":best_result_4_item"),
           (assign, ":best_result_5_town", ":best_result_4_town"),
           (assign, ":best_result_5_profit", ":best_result_4_profit"),
           (assign, ":best_result_4_item", ":random_trade_good"),
           (assign, ":best_result_4_town", ":random_town"),
           (assign, ":best_result_4_profit", ":difference"),
         (else_try),
           (gt, ":difference", ":best_result_5_profit"),
           (val_add, ":num_best_results", 1),
           (val_min, ":num_best_results", 5),
           (assign, ":best_result_5_item", ":best_result_4_item"),
           (assign, ":best_result_5_town", ":best_result_4_town"),
           (assign, ":best_result_5_profit", ":best_result_4_profit"),
         (try_end),
       (try_end),
     (try_end),

     (assign, "$g_encountered_party", ":org_encountered_party"),

     (str_clear, s3),

     (assign, reg2, ":max_skill"),
     (try_begin),
       (eq, ":max_skill_owner", "trp_player"),
       (assign, reg3, 1),
     (else_try),
       (assign, reg3, 0),
       (str_store_troop_name, s1, ":max_skill_owner"),
     (try_end),
     (try_begin),
       (le, ":num_best_results", 0),
       (str_store_string, s2, "@However, {reg3?You are:{s1} is} unable to find any trade goods that would bring a profit."),
     (else_try),
        #SB : add lesser renown bonus
        (try_begin),
          (call_script, "script_get_max_skill_of_player_party", "skl_trade"),
          (neq, reg1, "trp_player"),
          (call_script, "script_change_troop_renown", reg1, dplmc_companion_skill_renown / 2),
        (try_end),
       (try_begin),
         (ge, ":best_result_5_item", 0),
         (assign, reg6, ":best_result_5_profit"),
         (str_store_item_name, s4, ":best_result_5_item"),
         (str_store_party_name, s5, ":best_result_5_town"),
         (str_store_string, s3, "@^Buying {s4} here and selling it at {s5} would bring a profit of {reg6} siliquae per item.{s3}"),
       (try_end),
       (try_begin),
         (ge, ":best_result_4_item", 0),
         (assign, reg6, ":best_result_4_profit"),
         (str_store_item_name, s4, ":best_result_4_item"),
         (str_store_party_name, s5, ":best_result_4_town"),
         (str_store_string, s3, "@^Buying {s4} here and selling it at {s5} would bring a profit of {reg6} siliquae per item.{s3}"),
       (try_end),
       (try_begin),
         (ge, ":best_result_3_item", 0),
         (assign, reg6, ":best_result_3_profit"),
         (str_store_item_name, s4, ":best_result_3_item"),
         (str_store_party_name, s5, ":best_result_3_town"),
         (str_store_string, s3, "@^Buying {s4} here and selling it at {s5} would bring a profit of {reg6} siliquae per item.{s3}"),
       (try_end),
       (try_begin),
         (ge, ":best_result_2_item", 0),
         (assign, reg6, ":best_result_2_profit"),
         (str_store_item_name, s4, ":best_result_2_item"),
         (str_store_party_name, s5, ":best_result_2_town"),
         (str_store_string, s3, "@^Buying {s4} here and selling it at {s5} would bring a profit of {reg6} siliquae per item.{s3}"),
       (try_end),
       (try_begin),
         (ge, ":best_result_1_item", 0),
         (assign, reg6, ":best_result_1_profit"),
         (str_store_item_name, s4, ":best_result_1_item"),
         (str_store_party_name, s5, ":best_result_1_town"),
         (str_store_string, s3, "@^Buying {s4} here and selling it at {s5} would bring a profit of {reg6} siliquae per item.{s3}"),
       (try_end),
       (str_store_string, s2, "@{reg3?You find:{s1} finds} out the following:^{s3}"),
     (try_end),
     ],
    [
      ("continue",[],"Continue...",
       [
           (jump_to_menu,"mnu_town_trade"),
        ]),
    ]
  ),




  #SB : flavour text
  (
    "sneak_into_town_suceeded",0,
    "Disguised in the garments of a poor {reg1?cheater:{s1}}, you fool the guards and make your way into the town.",
    "none",
    [(assign, reg1, "$cheat_mode"),
     (call_script, "script_get_disguise_string", "$sneaked_into_town", 1),

     # (try_begin),
       # (eq, "$sneaked_into_town", disguise_pilgrim),
       # (assign, ":string", "str_pilgrim_disguise"),
     # (try_end),
    ],
    [
      ("continue",[],"Continue...",
       [
           # (assign, "$sneaked_into_town",1),
           (jump_to_menu,"mnu_town"),
        ]),
    ]
  ),
  (
    "sneak_into_town_caught",0,
    "As you try to sneak in, one of the guards recognizes you and raises the alarm!\
 You must flee back through the gates before all the guards in the town come down on you!",
    "none",
    [
       (assign,"$auto_menu","mnu_captivity_start_castle_surrender"),
    ],
    [
      ("sneak_caught_fight",[],"Try to fight your way out!",
       [
          (assign,"$all_doors_locked",1),
          (party_get_slot, ":sneak_scene", "$current_town", slot_town_center), # slot_town_gate),
          (modify_visitors_at_site,":sneak_scene"),
          (reset_visitors),

          (set_jump_mission, "mt_sneak_caught_fight"),
          (try_begin),
            (this_or_next|eq, "$talk_context", tc_escape),
            (eq, "$talk_context", tc_prison_break),
            (assign, ":entry_no", 7),
          (else_try),
            (party_slot_eq, "$current_town", slot_party_type, spt_town),
            #(set_visitor,0,"trp_player"),
            (assign, ":entry_no", 0),
          (else_try),
            #(set_visitor,1,"trp_player"),
            (assign, ":entry_no", 1),
          (try_end),

          (try_begin), #dckplmc
            (gt, "$sneaked_into_town", disguise_none), #setup disguise
            (assign, ":override_state", af_override_everything),
            (mission_tpl_entry_set_override_flags, "mt_sneak_caught_fight", ":entry_no", ":override_state"),
            #SB : script call to assign correct disguise, with weapons
            (call_script, "script_set_disguise_override_items", "mt_sneak_caught_fight", ":entry_no", 1),
          (try_end),
          (set_jump_entry, ":entry_no"),
          (set_passage_menu, "mnu_town"),
          (jump_to_scene,":sneak_scene"),
          (change_screen_mission),
        ]),
      ("sneak_caught_surrender",[],"Surrender.",
       [
           (jump_to_menu,"mnu_captivity_start_castle_surrender"),
        ]),
    ]
  ),
  (
    "sneak_into_town_caught_dispersed_guards",0,
    "You drive off the guards and cover your trail before running off, easily losing your pursuers in the maze of streets.",
    "none",
    [
        #SB : show disguise again
        (set_fixed_point_multiplier, 100),
        (init_position, pos0),
        (try_begin),
          (neq, "$sneaked_into_town", disguise_none),
          (position_set_x, pos0, 60),
          (position_set_y, pos0, 20),
          (position_set_z, pos0, 100),
          (set_game_menu_tableau_mesh, "tableau_game_inventory_window", "trp_player", pos0),
        (try_end),
        # (troop_get_slot, "$temp_2", "trp_player", slot_troop_player_disguise_sets),
    ],

    [
      #SB : TODO re-choose disguise, chance of dropping inventory items during fight?
      ("continue",[],"Continue...",
       [
          (try_begin), #dckplmc
             (eq, "$sneaked_into_town", disguise_none),
             (assign, "$sneaked_into_town", disguise_pilgrim),
          (try_end),
          (assign, "$town_entered", 1),


          (jump_to_menu,"mnu_town"),
        ]),
    ]
  ),

  (
    "sneak_into_town_caught_ran_away",0,
    "You make your way back through the gates and quickly retreat to the safety of the countryside.{s11}",
    "none",
    [

    (str_clear, s11),
    (assign, ":at_least_one_escaper_caught", 0),

    (assign, ":end_cond", heroes_end),
    (try_for_range, ":prisoner", active_npcs_begin, ":end_cond"),
      (try_begin),
        (troop_slot_eq, ":prisoner", slot_troop_mission_participation, mp_prison_break_escaped),
        (assign, "$talk_context", tc_hero_freed),
        (assign, reg14, ":prisoner"),
        (call_script, "script_setup_troop_meeting", ":prisoner", -1),
        (troop_set_slot, ":prisoner", slot_troop_mission_participation, -1),

        (troop_get_slot, ":prison_center", ":prisoner", slot_troop_prisoner_of_party),
		(try_begin),
		(ge, ":prison_center", 0),
        	(party_remove_prisoners, ":prison_center", ":prisoner", 1),
		(try_end),
        (troop_set_slot, ":prisoner", slot_troop_prisoner_of_party, -1),

        (assign, ":end_cond", -1), #maybe more than 1 should be able to escape?
      (else_try),
        (troop_slot_eq, ":prisoner", slot_troop_mission_participation, mp_prison_break_caught),
        (str_store_troop_name, s12, ":prisoner"),
        (try_begin),
            (eq, ":at_least_one_escaper_caught", 0),
            (str_store_string, s11, "str_s11_unfortunately_s12_was_wounded_and_had_to_be_left_behind"),
        (else_try),
            (str_store_string, s11, "str_s11_also_s12_was_wounded_and_had_to_be_left_behind"),
        (try_end),
        (assign, ":at_least_one_escaper_caught", 1),
      (try_end),

      (troop_set_slot, ":prisoner", slot_troop_mission_participation, 0), #new
    (try_end),
    ],
    [
      ("continue",[],"Continue...",
       [
           (assign,"$auto_menu",-1),
           (store_encountered_party,"$last_sneak_attempt_town"),
           (store_current_hours,"$last_sneak_attempt_time"),
           (change_screen_return),
        ]),
    ]
  ),


  (
    "enemy_offer_ransom_for_prisoner",0,
##diplomacy start+ Since s2 is the name of a kingdom rather than a person, change "sell him" to "sell them"
    "{s2} offers you a sum of {reg12} siliquae in silver if you are willing to sell them {s1}.",
##diplomacy end+
    "none",
    [ (call_script, "script_calculate_ransom_amount_for_troop", "$g_ransom_offer_troop"),
      (assign, reg12, reg0),
      (str_store_troop_name, s1, "$g_ransom_offer_troop"),
      (store_troop_faction, ":faction_no", "$g_ransom_offer_troop"),
      (str_store_faction_name, s2, ":faction_no"),

       #SB : add tableau
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 70),
      (position_set_y, pos0, 5),
      (position_set_z, pos0, 75),
      (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", "$g_ransom_offer_troop", pos0),
     ],
    [
      ("ransom_accept",[],"Accept the offer.",
       [ ##diplomacy begin
        (try_begin),
          (gt, "$g_player_chamberlain", 0),
          (call_script, "script_dplmc_pay_into_treasury", reg12),
        (else_try),
        ##diplomacy end
          (troop_add_gold, "trp_player", reg12),
        ##diplomacy begin
        (try_end),
        ##diplomacy end
		##diplomacy start+
		#The enemy actually loses the gold paid.
		(assign, ":gold_paid", reg12),
		(assign, ":lord_who_pays", "$g_ransom_offer_troop"),
		(store_troop_faction, ":faction_no", "$g_ransom_offer_troop"),
		#For kingdom ladies, someone else might pay.
		(try_begin),
			(is_between, "$g_ransom_offer_troop", kingdom_ladies_begin, kingdom_ladies_end),
			(neg|troop_slot_eq, "$g_ransom_offer_troop", slot_troop_occupation, slto_kingdom_hero),#I think at this step even for heroes it's 0
			(neg|troop_slot_ge, "$g_ransom_offer_troop", slot_troop_wealth, 1),
			(try_begin),
				#Check spouse pays
				(troop_get_slot, ":lord", "$g_ransom_offer_troop", slot_troop_spouse),
				(this_or_next|is_between, ":lord", active_npcs_begin, active_npcs_end),
					(troop_slot_eq, ":lord", slot_troop_occupation, slto_kingdom_hero),
				(store_troop_faction, ":lord_faction", ":lord"),
				(eq, ":faction_no", ":lord_faction"),
				(neg|troop_slot_ge, ":lord", slot_troop_occupation, slto_retirement),
				(assign, ":lord_who_pays", ":lord"),
			(else_try),
				#Check father pays
				(troop_get_slot, ":lord", "$g_ransom_offer_troop", slot_troop_father),
				(this_or_next|is_between, ":lord", active_npcs_begin, active_npcs_end),
					(troop_slot_eq, ":lord", slot_troop_occupation, slto_kingdom_hero),
				(store_troop_faction, ":lord_faction", ":lord"),
				(eq, ":faction_no", ":lord_faction"),
				(neg|troop_slot_ge, ":lord", slot_troop_occupation, slto_retirement),
				(assign, ":lord_who_pays", ":lord"),
			(else_try),
				#Check guardian pays
				(troop_get_slot, ":lord", "$g_ransom_offer_troop", slot_troop_guardian),
				(this_or_next|is_between, ":lord", active_npcs_begin, active_npcs_end),
					(troop_slot_eq, ":lord", slot_troop_occupation, slto_kingdom_hero),
				(store_troop_faction, ":lord_faction", ":lord"),
				(eq, ":faction_no", ":lord_faction"),
				(neg|troop_slot_ge, ":lord", slot_troop_occupation, slto_retirement),
				(assign, ":lord_who_pays", ":lord"),
			(else_try),
				#Check mother pays
				(troop_get_slot, ":lord", "$g_ransom_offer_troop", slot_troop_mother),
				(this_or_next|is_between, ":lord", active_npcs_begin, active_npcs_end),
					(troop_slot_eq, ":lord", slot_troop_occupation, slto_kingdom_hero),
				(store_troop_faction, ":lord_faction", ":lord"),
				(eq, ":faction_no", ":lord_faction"),
				(neg|troop_slot_ge, ":lord", slot_troop_occupation, slto_retirement),
				(assign, ":lord_who_pays", ":lord"),
			(try_end),
            #SB : copy from dialogues
            (call_script, "script_get_kingdom_lady_social_determinants", "$g_ransom_offer_troop"),
            (assign, ":new_location", reg1),
            (troop_set_slot, "$g_ransom_offer_troop", slot_troop_cur_center, ":new_location"),
		(try_end),
		(try_begin),
			(ge, ":gold_paid", 0),
			(ge, ":lord_who_pays", 1),
			(troop_is_hero, ":lord_who_pays"),
			#Remove the gold.  The lady has her own funds (e.g. from her dower)
			#that will partially defray the expense to the lord, depending on
			#the campaign difficulty.
		    (game_get_reduce_campaign_ai, ":reduce_campaign_ai"),
		    (try_begin),
			   (eq, ":reduce_campaign_ai", 0), #hard: lord pays 50%, lady's resources pay for 50%
			   (val_div, ":gold_paid", 2),
		    (else_try),
			   (eq, ":reduce_campaign_ai", 1), #medium: lord pays 75%, lady's resources pay for 25%
			   (val_mul, ":gold_paid", 3),
			   (val_div, ":gold_paid", 4),
		    (try_end),#easy: lord pays 100%, lady pays nothing
			(call_script, "script_dplmc_remove_gold_from_lord_and_holdings", ":gold_paid", ":lord_who_pays"),
		(try_end),
		##diplomacy end+
        (party_remove_prisoners, "$g_ransom_offer_party", "$g_ransom_offer_troop", 1),
        (call_script, "script_remove_troop_from_prison", "$g_ransom_offer_troop"),
        (try_begin),
            (troop_get_type, ":is_female", "trp_player"),
            (eq, ":is_female", tf_female),
            #SB : add condition here
            (troop_get_type, ":is_female", "$g_ransom_offer_troop"),
            (eq, ":is_female", tf_male),
            (get_achievement_stat, ":number_of_lords_sold", ACHIEVEMENT_MAN_HANDLER, 0),
            (val_add, ":number_of_lords_sold", 1),
            (set_achievement_stat, ACHIEVEMENT_MAN_HANDLER, 0, ":number_of_lords_sold"),

            (eq, ":number_of_lords_sold", 3),
            (unlock_achievement, ACHIEVEMENT_MAN_HANDLER),
        (try_end),

        (change_screen_return),
        ]),
      ("ransom_reject",[],"Reject the offer.",
       [
	    ##diplomacy start+
		#Relation loss altered by lord personality type.
		#OLD:
        #(call_script, "script_change_player_relation_with_troop", "$g_ransom_offer_troop", -4),
		#NEW:
		(try_begin),
			(troop_slot_eq, "$g_ransom_offer_troop", slot_lord_reputation_type, lrep_quarrelsome),
			(call_script, "script_change_player_relation_with_troop", "$g_ransom_offer_troop", -6),
		(else_try),
			(troop_slot_eq, "$g_ransom_offer_troop", slot_lord_reputation_type, lrep_debauched),
			(call_script, "script_change_player_relation_with_troop", "$g_ransom_offer_troop", -5),
		(else_try),
			(call_script, "script_change_player_relation_with_troop", "$g_ransom_offer_troop", -4),
		(try_end),
		##diplomacy end+
        (call_script, "script_change_player_honor", -1),
        (assign, "$g_ransom_offer_rejected", 1),
		##diplomacy start+
		#TODO: Review this, it was partway through a redesign when I stopped.
		#Also apply a negative reaction modifier to other lords
		(assign, ":save_reg0", reg0),

		(store_faction_of_troop, ":captive_faction", "$g_ransom_offer_troop"),
		#For kingdom ladies:
		(try_begin),
			(is_between, "$g_ransom_offer_troop", kingdom_ladies_begin, kingdom_ladies_end),
			#(troop_slot_eq, "$g_ransom_offer_troop", slot_troop_occupation, slto_kingdom_lady),
			(call_script, "script_get_kingdom_lady_social_determinants", "$g_talk_troop"),
			(assign, ":guardian", reg0),
			(store_faction_of_troop, ":captive_faction", ":guardian"),

			(try_for_range, ":troop_no", heroes_begin, heroes_end),
				(troop_slot_ge, ":troop_no", slot_troop_occupation, slto_kingdom_hero),#lowest valid
				(neg|troop_slot_ge, ":troop_no", slot_troop_occupation, slto_inactive_pretender),#end of valid range
				(neq, "$g_ransom_offer_troop", ":troop_no"),
				(store_faction_of_troop, ":troop_faction", ":troop_no"),

				(assign, ":disapproval_threshold", 20),
				(try_begin),
					(neq, ":troop_faction", ":captive_faction"),
					(neg|is_between, ":troop_no", kingdom_ladies_begin, kingdom_ladies_end),
					(assign, ":disapproval_threshold", 40),
				(try_end),
				#(this_or_next|is_between, ":troop_no", kingdom_ladies_begin, kingdom_ladies_end),
				#	(eq, ":troop_faction", ":captive_faction"),
				(assign, ":relation_change", 0),

				#family
				(try_begin),
					(this_or_next|troop_slot_eq, ":troop_no", slot_troop_spouse, "$g_ransom_offer_troop"),
					(this_or_next|troop_slot_eq, "$g_ransom_offer_troop", slot_troop_spouse, ":troop_no"),
					(eq, ":guardian", ":troop_no"),
					(assign, ":relation_change", -4),
				(else_try),
					(eq, ":troop_no", slot_troop_betrothed, "$g_ransom_offer_troop"),
					(assign, ":relation_change", -4),
				(else_try),
					(call_script, "script_troop_get_family_relation_to_troop", "$g_ransom_offer_troop", ":troop_no"),
					(ge, reg0, 14),
					(assign, ":relation_change", -3),
				(else_try),
					(ge, reg0, 10),
					(assign, ":relation_change", -2),
				(else_try),
					(ge, reg0, 2),
					(assign, ":relation_change", -1),
				(else_try),
					(call_script, "script_troop_get_relation_with_troop", ":troop_no", "$g_ransom_offer_troop"),
					(ge, reg0, ":disapproval_threshold"),
					(this_or_next|is_between, ":troop_no", kingdom_ladies_begin, kingdom_ladies_end),
						(eq, ":troop_faction", ":captive_faction"),
					(assign, ":relation_change", -1),
				(else_try),
					(ge, ":guardian", 1),
					(call_script, "script_troop_get_relation_with_troop", ":troop_no", ":guardian"),
					(ge, reg0, ":disapproval_threshold"),
					(assign, ":relation_change", -1),
				(try_end),

				(lt, ":relation_change", 0),
				(try_begin),
					(troop_slot_eq, ":troop_no", slot_lord_reputation_type, lrep_quarrelsome),
					(val_mul, ":relation_change", 3),#-1 to -2, -2 to -3, -3 to -5, -4 to -6
					(val_sub, ":relation_change", 1),
					(val_div, ":relation_change", 2),
				(try_end),
				(call_script, "script_change_player_relation_with_troop", ":troop_no", ":relation_change"),
			(try_end),
		(else_try),
		#For others:
			(is_between, "$g_ransom_offer_troop", active_npcs_begin, active_npcs_end),
			(try_for_range, ":hero", heroes_begin, heroes_end),
				(this_or_next|is_between, ":hero", active_npcs_begin, active_npcs_end),
					(troop_slot_eq, ":hero", slot_troop_occupation, slto_kingdom_hero),
				(neg|troop_slot_eq, ":hero", slot_troop_occupation, dplmc_slto_dead),
				(neg|troop_slot_ge, ":hero", slot_troop_occupation, slto_retirement),

				(neq, ":hero", "$g_ransom_offer_troop"),

				(store_faction_of_troop, ":troop_faction", ":hero"),

				(assign, ":relation_change", 0),

				(call_script, "script_troop_get_family_relation_to_troop", "$g_ransom_offer_troop", ":hero"),
				(try_begin),
					(ge, reg0, 10),
					(assign, ":relation_change", -1),
				(try_end),

				(call_script, "script_troop_get_relation_with_troop", ":hero", "$g_ransom_offer_troop"),
				(try_begin),
					(ge, reg0, 20),
					(eq, ":troop_faction", ":captive_faction"),
					(val_sub, ":relation_change", 1),
				(else_try),
					(ge, reg0, 40),
					(val_sub, ":relation_change", 1),
				(else_try),
					(lt, reg0, 0),
					(assign, ":relation_change", 0),
				(try_end),

				(lt, ":relation_change", 0),
				(try_begin),
					(troop_slot_eq, ":hero", slot_lord_reputation_type, lrep_quarrelsome),
					(val_mul, ":relation_change", 3),#-1 to -2, -2 to -3, -3 to -5, -4 to -6
					(val_sub, ":relation_change", 1),
					(val_div, ":relation_change", 2),
				(try_end),
				(call_script, "script_change_player_relation_with_troop", ":hero", ":relation_change"),
			(try_end),

			(try_for_range, ":lady", kingdom_ladies_begin, kingdom_ladies_end),
				(neg|troop_slot_eq, ":lady", slot_troop_occupation, slto_kingdom_hero),
				(neg|troop_slot_eq, ":lady", slot_troop_occupation, dplmc_slto_dead),
				(neg|troop_slot_ge, ":lady", slot_troop_occupation, slto_retirement),

				(neq, ":lady", "$g_ransom_offer_troop"),

				(assign, ":relation_change", 0),
				(call_script, "script_troop_get_family_relation_to_troop", ":lady", "$g_ransom_offer_troop"),
				(try_begin),
					(ge, reg0, 14),
					(assign, ":relation_change", -3),
				(else_try),
					(ge, reg0, 10),
					(assign, ":relation_change", -2),
				(else_try),
					(ge, reg0, 2),
					(assign, ":relation_change", -1),
				(else_try),
					(call_script, "script_troop_get_relation_with_troop", ":lady", "$g_ransom_offer_troop"),
					(ge, reg0, 20),
					(assign, ":relation_change", -1),
				(try_end),

				(lt, ":relation_change", 0),
				(call_script, "script_change_player_relation_with_troop", ":lady", ":relation_change"),
			(try_end),
		(try_end),

		(assign, reg0, ":save_reg0"),
		##diplomacy end+
        (change_screen_return),
        ]),
    ]
  ),


  (
    "training_ground",mnf_enable_hot_keys, #SB : enable hotkeys to check party
    "You approach a training field where you can practice your martial skills. What kind of training do you want to do?",
    "none",
    [
      (try_begin), #SB : track slot
        (party_get_slot, ":scene_no", slot_grounds_track, "$g_encountered_party"),
        (le, ":scene_no", 0),
        (store_add, ":scene_no", "scn_training_ground_horse_track_1", "$g_encountered_party"),
        (val_sub, ":scene_no", training_grounds_begin),
        (party_set_slot, "$g_encountered_party", slot_grounds_track, ":scene_no"),
      (try_end),
      (try_begin), #SB : melee/ranged slot
        (party_get_slot, ":scene_no", slot_grounds_melee, "$g_encountered_party"),
        (le, ":scene_no", 0),
        (store_add, ":scene_no", "scn_training_ground_ranged_melee_1", "$g_encountered_party"),
        (val_sub, ":scene_no", training_grounds_begin),
        (party_set_slot, "$g_encountered_party", slot_grounds_melee, ":scene_no"),
      (try_end),
      (assign, "$g_training_ground_melee_training_scene", ":scene_no"),


      #SB : modify this interval
      (party_get_skill_level, ":training", "p_main_party", "skl_trainer"), #from 0 to 10
      (try_begin), #grab trainer troop if it isn't linked
        (party_get_slot, ":trainer_troop", "$g_encountered_party", slot_grounds_trainer),
        (try_begin),
          (le, ":trainer_troop", 0),
          #(store_sub, ":trainer_troop", "$g_encountered_party", training_grounds_begin),
          #(val_add, ":trainer_troop", training_ground_trainers_begin),
          #(party_set_slot, "$g_encountered_party", slot_grounds_trainer, ":trainer_troop"),
          (party_set_slot, "$g_encountered_party", slot_grounds_trainer, "trp_trainer_1"),
        (try_end),
        (troop_get_slot, ":difficulty", ":trainer_troop", slot_troop_trainer_training_difficulty), #from 0 to 4
        (val_add, ":training", ":difficulty"), #0 to 14
      (try_end),
      (val_div, ":training", 2), #0 to 7
      (val_max, ":training", 3),
      (try_begin), #was $g_training_ground_training_count
        (party_slot_ge, "$g_encountered_party", slot_grounds_count, ":training"),
        (party_set_slot, "$g_encountered_party", slot_grounds_count, 0),
        # (assign, "$g_training_ground_training_count", 0),
        (rest_for_hours, 1, 5, 0), #rest while not attackable
        (assign, "$auto_enter_town", "$g_encountered_party"),
        (change_screen_return),
      (try_end),
      #SB : set background mesh, player troop
      (assign, "$g_player_troop", "trp_player"),
      (set_background_mesh, "mesh_pic_mb_warrior_1"),
      ],
    [
      ("camp_trainer",
       [], "Speak with the trainer.",
       [
         (set_jump_mission, "mt_training_ground_trainer_talk"),
         # no need to reset visitors, trainer is always there
         # (modify_visitors_at_site, "$g_training_ground_melee_training_scene"),
         # (reset_visitors),
         (set_jump_entry, 5),
         (jump_to_scene, "$g_training_ground_melee_training_scene"),
         (change_screen_mission),
         (music_set_situation, 0),
         ]),
      ("camp_train_melee",
       [
         (neg|troop_is_wounded, "trp_player"),
         (call_script, "script_party_count_fit_for_battle", "p_main_party"),
         (gt, reg0, 1),
         ], "Sparring practice.",
       [
         (assign, "$g_mt_mode", ctm_melee),
         (jump_to_menu, "mnu_training_ground_selection_details_melee_1"),
         (music_set_situation, 0),
         ]),
      ("camp_train_archery",[], "Ranged weapon practice.",
       [
         (jump_to_menu, "mnu_training_ground_selection_details_ranged_1"),
         (music_set_situation, 0),
         ]),
      ("camp_train_mounted",[], "Horseback practice.",
       [
         (assign, "$g_mt_mode", ctm_mounted),
         (jump_to_menu, "mnu_training_ground_selection_details_mounted"),
         (music_set_situation, 0),
         ]),

      ("go_to_track",[(eq, "$cheat_mode", 1)],"{!}Cheat: Go to track.",
       [
         (set_jump_mission, "mt_ai_training"),
         (try_begin), #SB : slots
           (party_get_slot, ":scene_no", slot_grounds_track, "$g_encountered_party"),
           (le, ":scene_no", 0),
           (store_add, ":scene_no", "scn_training_ground_horse_track_1", "$g_encountered_party"),
           (val_sub, ":scene_no", training_grounds_begin),
         (try_end),
         (jump_to_scene, ":scene_no"),
         (change_screen_mission),
        ]
       ),
      ("go_to_range",[(eq, "$cheat_mode", 1)],"{!}Cheat: Go to range.",
       [
         (set_jump_mission, "mt_ai_training"),
         (jump_to_scene, "$g_training_ground_melee_training_scene"),
         (change_screen_mission),
        ]
       ),
      ("leave",[],"Leave.",
       [(change_screen_return),
        ]),
    ]
  ),

  ("training_ground_selection_details_melee_1",0,
   "How many opponents will you go against?",
   "none",
   [
     (call_script, "script_write_fit_party_members_to_stack_selection", "p_main_party", 1),
     (troop_get_slot, "$temp", "trp_stack_selection_amounts", 1), #number of men fit
     (assign, "$temp_2", 1),
     ],
    [
      ("camp_train_melee_num_men_1",[(ge, "$temp", 1)], "One.",
       [
         (assign, "$temp", 1),
         (jump_to_menu, "mnu_training_ground_selection_details_melee_2"),
         ]),
      ("camp_train_melee_num_men_2",[(ge, "$temp", 2)], "Two.",
       [
         (assign, "$temp", 2),
         (jump_to_menu, "mnu_training_ground_selection_details_melee_2"),
         ]),
      ("camp_train_melee_num_men_3",[(ge, "$temp", 3)], "Three.",
       [
         (assign, "$temp", 3),
         (jump_to_menu, "mnu_training_ground_selection_details_melee_2"),
         ]),
      ("camp_train_melee_num_men_4",[(ge, "$temp", 4)], "Four.",
       [
         (assign, "$temp", 4),
         (jump_to_menu, "mnu_training_ground_selection_details_melee_2"),
         ]),
      ("go_back_dot",[],"Cancel.",
       [
         (jump_to_menu, "mnu_training_ground"),
        ]),
      ]
  ),

  ("training_ground_selection_details_melee_2",0,
   "Choose your opponent:^{s1}^{reg1}:",
   "none",
    [
      (assign, reg1, "$temp_2"),
      (troop_get_slot, "$temp_3", "trp_stack_selection_amounts", 0), #number of slots

      #SB : show current list
      (str_clear, s1),
      (store_sub, ":end", "$temp_2", 1),
      (try_for_range, ":slot_index", 0, ":end"),
        (store_add, reg0, ":slot_index", 1),
        (troop_get_slot, ":troop_id", "trp_temp_array_a", ":slot_index"),
        (gt, ":troop_id", 0),
        (str_store_troop_name, s2, ":troop_id"),
        (str_store_string, s1, "@{s1}^{reg0}: {s2}"),
      # (else_try),
        # (str_store_string, s1, "@{s1}^{reg0}:"),
      (try_end),
    ],
    [
      ("training_ground_selection_details_melee_random", [], "Choose randomly.",
       [(call_script, "script_training_ground_sub_routine_2_for_melee_details", -1),]),
      ("go_back_dot",[],"Go back.",
       [(jump_to_menu, "mnu_training_ground"),]
       ), #SB : stack built from loop
      ]+
      [("stack"+str(x), [(call_script, "script_cf_training_ground_sub_routine_1_for_melee_details", x),], "{s0}",
       [(call_script, "script_training_ground_sub_routine_2_for_melee_details", x),])
       for x in range(1, 20)]
  ),



  ("training_ground_selection_details_mounted",0,
   "What kind of weapon do you want to train with?",
   "none",
   [
   #SB : background mesh
   (set_background_mesh, "mesh_pic_mb_warrior_2"),
   ],
    [
      ("camp_train_mounted_details_1",[], "One handed weapon.",
       [
         (call_script, "script_start_training_at_training_ground", itp_type_one_handed_wpn, 0),
         ]),
      ("camp_train_mounted_details_2",[], "Polearm.",
       [
         (call_script, "script_start_training_at_training_ground", itp_type_polearm, 0),
         ]),
      ("camp_train_mounted_details_3",[], "Bow.",
       [
         (call_script, "script_start_training_at_training_ground", itp_type_bow, 0),
         ]),
      ("camp_train_mounted_details_4",[], "Thrown weapon.",
       [
         (call_script, "script_start_training_at_training_ground", itp_type_thrown, 0),
         ]),
      ("go_back_dot",[],"Go back.",
       [(jump_to_menu, "mnu_training_ground"),
        ]
       ),
      ]
  ),


  ("training_ground_selection_details_ranged_1",0,
   "What kind of ranged weapon do you want to train with?",
   "none",
   [
   (set_background_mesh, "mesh_pic_mb_warrior_4"), #SB : background mesh
   ],
    [
      ("camp_train_ranged_weapon_bow",[], "Bow and arrows.",
       [
         (assign, "$g_mt_mode", ctm_ranged),
         (assign, "$temp", itp_type_bow),
         (jump_to_menu, "mnu_training_ground_selection_details_ranged_2"),
         ]),
      ("camp_train_ranged_weapon_crossbow",[], "Crossbow.",
       [
         (assign, "$g_mt_mode", ctm_ranged),
         (assign, "$temp", itp_type_crossbow),
         (jump_to_menu, "mnu_training_ground_selection_details_ranged_2"),
         ]),
      ("camp_train_ranged_weapon_thrown",[], "Throwing Knives.",
       [
         (assign, "$g_mt_mode", ctm_ranged),
         (assign, "$temp", itp_type_thrown),
         (jump_to_menu, "mnu_training_ground_selection_details_ranged_2"),
         ]),
      ("go_back_dot",[],"Go back.",
       [(jump_to_menu, "mnu_training_ground"),
        ]
       ),
      ]
  ),


  ("training_ground_selection_details_ranged_2",0,
   "What range do you want to practice at?",
   "none",
   [
   (set_background_mesh, "mesh_pic_mb_warrior_4"), #SB : background mesh
   ],
    [
      ("camp_train_ranged_details_1",[], "10 yards.",
       [
         (call_script, "script_start_training_at_training_ground", "$temp", 10),
         ]),
      ("camp_train_ranged_details_2",[], "20 yards.",
       [
         (call_script, "script_start_training_at_training_ground", "$temp", 20),
         ]),
      ("camp_train_ranged_details_3",[], "30 yards.",
       [
         (call_script, "script_start_training_at_training_ground", "$temp", 30),
         ]),
      ("camp_train_ranged_details_4",[], "40 yards.",
       [
         (call_script, "script_start_training_at_training_ground", "$temp", 40),
         ]),
      ("camp_train_ranged_details_5",[(eq, "$g_mt_mode", ctm_ranged),], "50 yards.",
       [
         (call_script, "script_start_training_at_training_ground", "$temp", 50),
         ]),
      ("camp_train_ranged_details_6",[(eq, "$g_mt_mode", ctm_ranged),], "60 yards.",
       [
         (call_script, "script_start_training_at_training_ground", "$temp", 60),
         ]),
      ("camp_train_ranged_details_7",[(eq, "$g_mt_mode", ctm_ranged),], "70 yards.",
       [
         (call_script, "script_start_training_at_training_ground", "$temp", 70),
         ]),
      ("go_back_dot",[],"Go back.",
       [(jump_to_menu, "mnu_training_ground"),
        ]
       ),
      ]
  ),


  ("training_ground_description",0,
   "{s0}",
   "none",
   [
   #Sb : format string here instead of script_start_training_at_training_ground
   (store_sub, reg0, "$g_training_ground_training_num_enemies", 1),
   (store_sub, ":string", "$g_mt_mode", 1),
   (val_add, ":string", "str_ctm_melee"),
   (str_store_string, s0, ":string"),

   ],
    [
      ("continue", [], "Continue...",
       [
         (jump_to_scene, "$g_training_ground_training_scene"),
         (change_screen_mission),
        ]
       ),
      ]
  ),

  ("training_ground_training_result",mnf_disable_all_keys,
   "{s7}{s2}",
   "none",
   [
     (store_skill_level, ":trainer_skill", "skl_trainer", "trp_player"),
     (store_add, ":trainer_skill_multiplier", 5, ":trainer_skill"),
     (call_script, "script_write_fit_party_members_to_stack_selection", "p_main_party", 1),
     (str_clear, s2),
     (troop_get_slot, ":num_fit", "trp_stack_selection_amounts", 1),
     (troop_get_slot, ":num_slots", "trp_stack_selection_amounts", 0),
     (try_begin),
       (gt, "$g_training_ground_training_success_ratio", 0),
       (store_mul, ":xp_ratio_to_add", "$g_training_ground_training_success_ratio", "$g_training_ground_training_success_ratio"),
       (try_begin),
         (eq, "$g_training_ground_training_success_ratio", 100),
         (val_mul, ":xp_ratio_to_add", 2), #2x when perfect
       (try_end),
       (try_begin),
         (eq, "$g_mt_mode", ctm_melee),
         (val_div, ":xp_ratio_to_add", 2),
       (try_end),
       (val_div, ":xp_ratio_to_add", 10), # value over 1000
       (try_begin),
         (gt, ":num_fit", 8),
         (val_mul, ":xp_ratio_to_add", 3),
         (assign, ":divisor", ":num_fit"),
         (convert_to_fixed_point, ":divisor"),
         (store_sqrt, ":divisor", ":divisor"),
         (convert_to_fixed_point, ":xp_ratio_to_add"),
         (val_div, ":xp_ratio_to_add", ":divisor"),
       (try_end),
##       (assign, reg0, ":xp_ratio_to_add"),
##       (display_message, "@xp earn ratio: {reg0}/1000"),
       (store_mul, ":xp_ratio_to_add_with_trainer_skill", ":xp_ratio_to_add", ":trainer_skill_multiplier"),
       (val_div, ":xp_ratio_to_add_with_trainer_skill", 10),
       (party_get_num_companion_stacks, ":num_stacks", "p_main_party"),
       (store_add, ":end_cond", ":num_slots", 2),
       (try_for_range, ":i_slot", 2, ":end_cond"),
         (troop_get_slot, ":amount", "trp_stack_selection_amounts", ":i_slot"),
         (troop_get_slot, ":troop_id", "trp_stack_selection_ids", ":i_slot"),
         (assign, ":end_cond_2", ":num_stacks"),
         (try_for_range, ":stack_no", 0, ":end_cond_2"),
           (party_stack_get_troop_id, ":stack_troop", "p_main_party", ":stack_no"),
           (eq, ":stack_troop", ":troop_id"),
           (assign, ":end_cond_2", 0), #break
           (call_script, "script_cf_training_ground_sub_routine_for_training_result", ":troop_id", ":stack_no", ":amount", ":xp_ratio_to_add_with_trainer_skill"),
           (str_store_troop_name_by_count, s1, ":troop_id", ":amount"),
           #SB : hero name count
           (try_begin),
             (troop_is_hero, ":troop_id"),
             (assign, reg2, 1),
           (else_try),
             (assign, reg2, 0),
             (assign, reg1, ":amount"),
           (try_end),
           (str_store_string, s2, "@{s2}^{reg2?:{reg1} }{s1} earned {reg0} experience."),
         (try_end),
       (try_end),
       (try_begin),
         (eq, "$g_mt_mode", ctm_melee),
         (store_mul, ":special_xp_ratio_to_add", ":xp_ratio_to_add", 3),
         (val_div, ":special_xp_ratio_to_add", 2),
         (try_for_range, ":enemy_index", 0, "$g_training_ground_training_num_enemies"),
           (troop_get_slot, ":troop_id", "trp_temp_array_a", ":enemy_index"),
           (assign, ":end_cond_2", ":num_stacks"),
           (try_for_range, ":stack_no", 0, ":end_cond_2"),
             (party_stack_get_troop_id, ":stack_troop", "p_main_party", ":stack_no"),
             (eq, ":stack_troop", ":troop_id"),
             (assign, ":end_cond_2", 0), #break
             (call_script, "script_cf_training_ground_sub_routine_for_training_result", ":troop_id", ":stack_no", 1, ":special_xp_ratio_to_add"),
             (str_store_troop_name, s1, ":troop_id"),
             (str_store_string, s2, "@{s2}^{s1} earned an additional {reg0} experience."),
           (try_end),
         (try_end),
       (try_end),
       (try_begin),
         (call_script, "script_cf_training_ground_sub_routine_for_training_result", "trp_player", -1, 1, ":xp_ratio_to_add"),
         (str_store_string, s2, "@^You earned {reg0} experience.{s2}"),
       (try_end),
     (try_end),
     (try_begin),
       (eq, "$g_training_ground_training_success_ratio", 0),
       (str_store_string, s7, "@The training didn't go well at all."),
     (else_try),
       (lt, "$g_training_ground_training_success_ratio", 25),
       (str_store_string, s7, "@The training didn't go well at all."),
     (else_try),
       (lt, "$g_training_ground_training_success_ratio", 50),
       (str_store_string, s7, "@The training didn't go very well."),
     (else_try),
       (lt, "$g_training_ground_training_success_ratio", 75),
       (str_store_string, s7, "@The training went quite well."),
     (else_try),
       (lt, "$g_training_ground_training_success_ratio", 99),
       (str_store_string, s7, "@The training went very well."),
     (else_try),
       (str_store_string, s7, "@The training went perfectly."),
     (try_end),

     ],
    [
      ("continue",[],"Continue...",
       [(jump_to_menu, "mnu_training_ground"),
        ]
       ),
      ]
   ),

  ("marshall_selection_candidate_ask",0,
   "{s15} will soon select a new marshall for {s23}. Some of the lords have suggested your name as a likely candidate.",
   "none",
   [
     (try_begin),
       (eq, "$g_presentation_marshall_selection_ended", 1),
       (change_screen_return),
     (try_end),
     (faction_get_slot, ":king", "$players_kingdom", slot_faction_leader),
     (str_store_troop_name, s15, ":king"),
     (str_store_faction_name, s23, "$players_kingdom"),
     ],
    [
      ("marshall_candidate_accept", [], "Let {s15} learn that you are willing to serve as marshall.",
       [
         (start_presentation, "prsnt_marshall_selection"),
        ]
       ),
      ("marshall_candidate_reject", [], "Tell everyone that you are too busy these days.",
       [
         (try_begin),
           (eq, "$g_presentation_marshall_selection_max_renown_2_troop", "trp_player"),
           (assign, "$g_presentation_marshall_selection_max_renown_2", "$g_presentation_marshall_selection_max_renown_3"),
           (assign, "$g_presentation_marshall_selection_max_renown_2_troop", "$g_presentation_marshall_selection_max_renown_3_troop"),
         (else_try),
           (assign, "$g_presentation_marshall_selection_max_renown_1", "$g_presentation_marshall_selection_max_renown_2"),
           (assign, "$g_presentation_marshall_selection_max_renown_1_troop", "$g_presentation_marshall_selection_max_renown_2_troop"),
           (assign, "$g_presentation_marshall_selection_max_renown_2", "$g_presentation_marshall_selection_max_renown_3"),
           (assign, "$g_presentation_marshall_selection_max_renown_2_troop", "$g_presentation_marshall_selection_max_renown_3_troop"),
         (try_end),
         (start_presentation, "prsnt_marshall_selection"),
        ]
       ),
      ]
  ),




##    [
##      ("renew_oath",[],"Renew your oath to {s1} for another month.",[
##          (store_current_day, ":cur_day"),
##          (store_add, "$g_oath_end_day", ":cur_day", 30),
##          (change_screen_return)]),
##      ("dont_renew_oath",[],"Become free of your bond.",[
##          (assign, "$players_kingdom",0),
##          (assign, "$g_player_permitted_castles", 0),
##          (change_screen_return)]),
##    ]
##  ),


#####################################################################
## Captivity....
#####################################################################
#####################################################################
#####################################################################
#####################################################################
  (
    "captivity_avoid_wilderness",0,
    "Suddenly all the world goes black around you.\
 Many hours later you regain your conciousness and find yourself at the spot you fell.\
 Your enemies must have taken you up for dead and left you there.\
 However, it seems that none of your wound were lethal,\
 and altough you feel awful, you find out that can still walk.\
 You get up and try to look for any other survivors from your party.",
    "none",
    [
      ],
    []
  ),

  (
    "captivity_start_wilderness",0,
    "Stub",
    "none",
    [
          (try_begin), #siege warfare
              (eq, "$g_empieza_asedio", 1),
              (call_script, "script_lift_siege", "$g_player_besiege_town", 0),
              (assign, "$g_player_besiege_town", -1),
          (try_end),

          (assign, "$g_player_is_captive", 1),
          (try_begin),
            (eq,"$g_player_surrenders",1),
            (jump_to_menu, "mnu_captivity_start_wilderness_surrender"),
          (else_try),
            (jump_to_menu, "mnu_captivity_start_wilderness_defeat"),
          (try_end),
      ],
    []
  ),

  (
    "captivity_start_wilderness_surrender",0,
    "Stub",
    "none",
    [

    (try_begin), #siege warfare
        (eq, "$g_empieza_asedio", 1),
        (call_script, "script_lift_siege", "$g_player_besiege_town", 0),
        (assign, "$g_player_besiege_town", -1),
    (try_end),

       (assign, "$g_player_is_captive", 1),
       (assign,"$auto_menu",-1), #We need this since we may come here by something other than auto_menu
       (assign, "$capturer_party", "$g_encountered_party"),
       (jump_to_menu, "mnu_captivity_wilderness_taken_prisoner"),
      ],
    []
  ),
  (
    "captivity_start_wilderness_defeat",0,
    "Your enemies take you prisoner.",
    "none",
    [
       (assign, "$g_player_is_captive", 1),
       (assign,"$auto_menu",-1),
       (assign, "$capturer_party", "$g_encountered_party"),

       (try_begin),
         (party_stack_get_troop_id, ":party_leader", "$g_encountered_party", 0),
         (is_between, ":party_leader", active_npcs_begin, active_npcs_end),
         (troop_slot_eq, ":party_leader", slot_troop_occupation, slto_kingdom_hero),
         (store_sub, ":kingdom_hero_id", ":party_leader", active_npcs_begin),
         (set_achievement_stat, ACHIEVEMENT_BARON_GOT_BACK, ":kingdom_hero_id", 1),
       (try_end),

      (try_begin), #siege warfare
          (eq, "$g_empieza_asedio", 1),
          (call_script, "script_lift_siege", "$g_player_besiege_town", 0),
          (assign, "$g_player_besiege_town", -1),
      (try_end),

       (jump_to_menu, "mnu_captivity_wilderness_taken_prisoner"),
    ],
    []
  ),
  #SB : impose various degrees of penalty through permanent wounding
  (
    "captivity_start_castle_surrender",0,
    "Stub",
    "none",
    [
        (assign, "$g_player_is_captive", 1),
        (assign,"$auto_menu",-1),
        (assign, "$capturer_party", "$g_encountered_party"),
        # (try_begin),
          # (store_random_in_range, ":random_no", -100, 100),
          # (ge, ":random_no", "$g_player_luck"),
          # (assign, "$g_next_menu", "mnu_captivity_castle_taken_prisoner"),
          # (jump_to_menu, "mnu_permanent_damage"),
        # (else_try),
        (try_begin), #siege warfare
            (eq, "$g_empieza_asedio", 1),
            (call_script, "script_lift_siege", "$g_player_besiege_town", 0),
            (assign, "$g_player_besiege_town", -1),
        (try_end),

          (jump_to_menu, "mnu_captivity_castle_taken_prisoner"),
        # (try_end),
      ],
    []
  ),
  ( #SB : defeat in castles has chance of wounding
    "captivity_start_castle_defeat",0,
    "Stub",
    "none",
    [
        (assign, "$g_player_is_captive", 1),
        (assign,"$auto_menu",-1),
        (assign, "$capturer_party", "$g_encountered_party"),
        (try_begin),
          (store_random_in_range, ":random_no", -50, 100),
          (ge, ":random_no", "$g_player_luck"),
          (assign, "$g_next_menu", "mnu_captivity_castle_taken_prisoner"),
          (jump_to_menu, "mnu_permanent_damage"),
        (else_try),
          (jump_to_menu, "mnu_captivity_castle_taken_prisoner"),
        (try_end),
        (try_begin), #siege warfare
            (eq, "$g_empieza_asedio", 1),
            (call_script, "script_lift_siege", "$g_player_besiege_town", 0),
            (assign, "$g_player_besiege_town", -1),
        (try_end),
      ],
    []
  ),
  ( #SB : defeat while defending has higher penalty
    "captivity_start_under_siege_defeat",0,
    "Your enemies take you prisoner.",
    "none",
    [
        (assign, "$g_player_is_captive", 1),
        (assign,"$auto_menu",-1),
        (assign, "$capturer_party", "$g_encountered_party"),

        (try_begin), #siege warfare
            (eq, "$g_empieza_asedio", 1),
            (call_script, "script_lift_siege", "$g_player_besiege_town", 0),
            (assign, "$g_player_besiege_town", -1),
        (try_end),

        (try_begin),
          (store_random_in_range, ":random_no", -50, 150),
          (ge, ":random_no", "$g_player_luck"),
          (assign, "$g_next_menu", "mnu_captivity_castle_taken_prisoner"),
          (jump_to_menu, "mnu_permanent_damage"),
        (else_try),
          (jump_to_menu, "mnu_captivity_castle_taken_prisoner"),
        (try_end),
    ],
    []
  ),

  (
    "captivity_wilderness_taken_prisoner",mnf_scale_picture,
    "Your enemies take you prisoner.",
    "none",
    [
        (set_background_mesh, "mesh_pic_prisoner_wilderness"),
     ],
    [
      ("continue",[],"Continue...",
       [
	     # Explanation of removing below code : heros are already being removed with 50% (was 75%, I decreased it) probability in mnu_total_defeat, why here there is additionally 30% removing of heros?
		 # See codes linked to "mnu_captivity_start_wilderness_surrender" and "mnu_captivity_start_wilderness_defeat" which is connected with here they all also enter
		 # "mnu_total_defeat" and inside the "mnu_total_defeat" there is script_party_remove_all_companions which removes 50% (was 75%, I decreased it) of compainons from player party.

         #(try_for_range, ":npc", companions_begin, companions_end),
         #  (main_party_has_troop, ":npc"),
         #  (store_random_in_range, ":rand", 0, 100),
         #  (lt, ":rand", 30),
         #  (remove_member_from_party, ":npc", "p_main_party"),
         #  (troop_set_slot, ":npc", slot_troop_occupation, 0),
         #  (troop_set_slot, ":npc", slot_troop_playerparty_history, pp_history_scattered),
         #  (assign, "$last_lost_companion", ":npc"),
         #  (store_faction_of_party, ":victorious_faction", "$g_encountered_party"),
         #  (troop_set_slot, ":npc", slot_troop_playerparty_history_string, ":victorious_faction"),
         #  (troop_set_health, ":npc", 100),
         #  (store_random_in_range, ":rand_town", towns_begin, towns_end),
         #  (troop_set_slot, ":npc", slot_troop_cur_center, ":rand_town"),
         #  (assign, ":nearest_town_dist", 1000),
         #  (try_for_range, ":town_no", towns_begin, towns_end),
         #    (store_faction_of_party, ":town_fac", ":town_no"),
         #    (store_relation, ":reln", ":town_fac", "fac_player_faction"),
         #    (ge, ":reln", 0),
         #    (store_distance_to_party_from_party, ":dist", ":town_no", "p_main_party"),
         #    (lt, ":dist", ":nearest_town_dist"),
         #    (assign, ":nearest_town_dist", ":dist"),
         #    (troop_set_slot, ":npc", slot_troop_cur_center, ":town_no"),
         #  (try_end),
         #(try_end),

         (set_camera_follow_party, "$capturer_party"),
         (assign, "$g_player_is_captive", 1),
         (store_random_in_range, ":random_hours", 18, 30),
         (call_script, "script_event_player_captured_as_prisoner"),
         (call_script, "script_stay_captive_for_hours", ":random_hours"),
         (assign,"$auto_menu","mnu_captivity_wilderness_check"),
         (change_screen_return),
         ]),
      ]
  ),
  (
    "captivity_wilderness_check",0,
    "stub",
    "none",
    [(jump_to_menu,"mnu_captivity_end_wilderness_escape")],
    []
  ),
  (
    "captivity_end_wilderness_escape", mnf_scale_picture,
    "After painful days of being dragged about as a prisoner, you find a chance and escape from your captors!",
    "none",
    [
        (play_cue_track, "track_escape"),
        (set_background_mesh, "mesh_pic_escape_1"),
    ],
    [
      ("continue",[],"Continue...",
       [
           (assign, "$g_player_is_captive", 0),
           (try_begin),
             (party_is_active, "$capturer_party"),
             (party_relocate_near_party, "p_main_party", "$capturer_party", 2),
           (try_end),
		(party_get_current_terrain, ":terrain_type", "p_main_party"), #madsci lets make sure the player doesnt end up stuck
		(try_begin),
		(this_or_next|eq, ":terrain_type", rt_water),
		(eq, ":terrain_type", rt_river),
			(try_begin),
			(party_get_position, pos1, "p_main_party"),
			(map_get_land_position_around_position, pos2, pos1, 10),
			(party_set_position, "p_main_party", pos2),
			(else_try),
			(call_script, "script_get_closest_center", "p_main_party"),
			(gt, reg0, 0),
			(party_relocate_near_party, "p_main_party", reg0, 1),
			(try_end),
		(try_end),
           (call_script, "script_set_parties_around_player_ignore_player", 8, 12), #it was radius:2 and hours:4, but players make lots of complains about consequent battle losses after releases from captivity then I changed this.
           (assign, "$g_player_icon_state", pis_normal),
           (set_camera_follow_party, "p_main_party"),
           (rest_for_hours, 0, 0, 0), #stop resting
           ##diplomacy begin
           (assign, "$g_move_fast", 1),
           ##diplomacy end
           (change_screen_return),
        ]),
    ]
  ),
  (
    "captivity_castle_taken_prisoner",0,
    "You are quickly surrounded by guards who take away your weapons. With curses and insults, they throw you into the dungeon where you must while away the miserable days of your captivity.",
    "none",
    [
        (set_background_mesh, "mesh_pic_prisoner_man"),
        (call_script, "script_change_player_relation_with_center", "$g_encountered_party", -1),
    ],
    [
      ("continue",[],"Continue...",
       [
           (assign, "$g_player_is_captive", 1),
           (store_random_in_range, ":random_hours", 16, 22),
           (call_script, "script_event_player_captured_as_prisoner"),
           (call_script, "script_stay_captive_for_hours", ":random_hours"),
           (assign,"$auto_menu", "mnu_captivity_castle_check"),
           (change_screen_return)
        ]),
    ]
  ),
  (
    "captivity_rescue_lord_taken_prisoner",0,
    "You remain in disguise for as long as possible before revealing yourself.\
 The guards are outraged and beat you savagely before throwing you back into the cell for God knows how long...",
    "none",
    [
       (set_background_mesh, "mesh_pic_prisoner_man"),
   ],
    [
      ("continue",[],"Continue...",
       [
           (assign, "$g_player_is_captive", 1),
           (store_random_in_range, ":random_hours", 16, 22),
           (call_script, "script_event_player_captured_as_prisoner"),
           (call_script, "script_stay_captive_for_hours", ":random_hours"),
           (assign,"$auto_menu", "mnu_captivity_castle_check"),
           (change_screen_return),
        ]),
    ]
  ),
  (
    "captivity_castle_check",0,
    "stub",
    "none",
    [
        (store_character_level, ":player_level", "trp_player"),
        (store_mul, "$player_ransom_amount", ":player_level", 50),
        (val_add, "$player_ransom_amount", 100),
        #TODO scale with standing (marshal, liege etc)

        (store_troop_gold, ":player_gold", "trp_player"),
        (store_div, ":player_gold_div_20", ":player_gold", 20),
        (val_add, "$player_ransom_amount", ":player_gold_div_20"),
        (store_troop_gold, ":player_treasury", "trp_household_possessions"), #hidden wealth
        (assign, "$g_talk_troop", -1),

        (try_begin),
          (troop_get_slot, ":spouse", "trp_player", slot_troop_spouse),
          (gt, ":spouse", 0),
          (troop_slot_eq, ":spouse", slot_troop_spouse, "trp_player"),
        (else_try),
          (assign, ":spouse", -1),
        (try_end),


        (try_begin), #lower chance of bad results
          (ge, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_LOW),
          (this_or_next|gt, ":spouse", 0),
          (gt, "$g_player_affiliated_troop", 0),
          (store_random_in_range, ":chance", 0, 8),
        (else_try),
          (store_random_in_range, ":chance", 0, 10),
        (try_end),
        (try_begin),
          (party_is_active, "$capturer_party"),
          (store_faction_of_party, ":capturer_faction", "$capturer_party"),
          (is_between, ":capturer_faction", kingdoms_begin, kingdoms_end),
          (store_relation, ":relation_w_player_faction", ":capturer_faction", "fac_player_faction"),
          (ge, ":relation_w_player_faction", 0),
          #SB : this doesn't make much sense when the player is unaffiliated
          (jump_to_menu,"mnu_captivity_end_exchanged_with_prisoner"),
        (else_try),
          (lt, ":chance", 4),
          #SB : add in spouse cost
          (try_begin),
            (main_party_has_troop, ":spouse"),
            (store_character_level, ":spouse_ransom", ":spouse"),
            (val_mul, ":spouse_ransom", 250),
            (val_max, ":spouse_ransom", 1000),
            (val_add, "$player_ransom_amount", ":spouse_ransom"),
          (try_end),
          (gt, ":player_gold", "$player_ransom_amount"),
          (jump_to_menu,"mnu_captivity_end_propose_ransom"),
        (else_try), #spouse pays from treasury
          (lt, ":chance", 5),
          (ge, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_LOW),
          (gt, ":spouse", 0),
          (neg|main_party_has_troop, ":spouse"),
          (assign, "$g_talk_troop", ":spouse"),
          (gt, ":player_treasury", "$player_ransom_amount"),
          (call_script, "script_dplmc_withdraw_from_treasury", "$player_ransom_amount"), #defray a bit depending on spouse skills?
          (jump_to_menu,"mnu_captivity_end_exchanged_with_prisoner"),
        (else_try), #affiliate pays from thin air
          (lt, ":chance", 6),
          (ge, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_LOW),
          (gt, "$g_player_affiliated_troop", 0),
          (game_get_reduce_campaign_ai, ":reduce_campaign_ai"),
          (try_begin),
            (eq, ":reduce_campaign_ai", 0), #hard: lord pays 50%, lady's resources pay for 50%
            (val_div, "$player_ransom_amount", 2),
          (else_try),
            (eq, ":reduce_campaign_ai", 1), #medium: lord pays 75%, lady's resources pay for 25%
            (val_mul, "$player_ransom_amount", 3),
            (val_div, "$player_ransom_amount", 4),
          (try_end),#easy: lord pays 100%, lady pays nothing
          (assign, "$g_talk_troop", "$g_player_affiliated_troop"),
          #TODO : add debt?
          (call_script, "script_dplmc_remove_gold_from_lord_and_holdings", "$player_ransom_amount", "$g_player_affiliated_troop"),
          (jump_to_menu,"mnu_captivity_end_exchanged_with_prisoner"),
        (else_try),
          (lt, ":chance", 7),
          (assign, "$g_talk_troop", -1),
          (jump_to_menu,"mnu_captivity_end_exchanged_with_prisoner"),
        (else_try),
          #SB : renown loss while imprisoned in loop?
          (jump_to_menu,"mnu_captivity_castle_remain"),
        (try_end),
    ],
    []
  ),
  (
    "captivity_end_exchanged_with_prisoner",0,
    "After days of imprisonment, you are finally set free when your captors {reg10?receive your ransom from {s10}:exchange you with another prisoner}.",
    "none",
    [
      (play_cue_track, "track_escape"),
      (try_begin),
        (gt, "$g_talk_troop", -1),
        (assign, reg10, 1),
        (str_store_troop_name, s10, "$g_talk_troop"),
      (else_try),
        (assign, reg10, 0),
      (try_end),
      (assign, "$g_player_is_captive", 0),
      # (call_script, "script_set_parties_around_player_ignore_player", 8, 12), #it was radius:2 and hours:12, but players make lots of complains about consequent battle losses after releases from captivity then I changed this.
      (assign, "$g_player_icon_state", pis_normal),
      (set_camera_follow_party, "p_main_party"),
      (rest_for_hours, 0, 0, 0), #stop resting
      ],
    [
    #SB : add alternatives : home court, affiliated center, faction capital
      ("continue_court",[
        (is_between, "$g_player_court", centers_begin, centers_end),
      ],"Go back to your court in shame...",
       [

           (party_relocate_near_party, "p_main_party", "$g_player_court", 2),
           # (call_script, "script_set_parties_around_player_ignore_player", 8, 12), #it was radius:2 and hours:12, but players make lots of complains about consequent battle losses after releases from captivity then I changed this.
           (change_screen_return),
        ]),

      ("continue_ransomer",[
        (is_between, "$g_talk_troop", heroes_begin, heroes_end),
      ],"Return with {s10}'s escorts...",
       [
           (assign, ":party_no", -1),
           (try_begin),
             (troop_slot_eq, "$g_talk_troop", slot_troop_occupation, slto_kingdom_hero),
             (troop_get_slot, ":leaded_party", "$g_talk_troop", slot_troop_leaded_party),
             #TODO divert if in-combat?
             (try_begin),
               (gt, ":leaded_party", 0),
               (party_is_active, ":leaded_party"),
               (assign, ":party_no", ":leaded_party"),
             (else_try),
               (call_script, "script_lord_get_home_center", "$g_talk_troop"),
               (assign, ":party_no", reg0),
             (try_end),
           (else_try),
             (troop_slot_eq, "$g_talk_troop", slot_troop_occupation, slto_kingdom_lady),
             (call_script, "script_get_kingdom_lady_social_determinants", "$g_talk_troop"),
             (assign, ":party_no", reg1),
           (try_end),
           (try_begin),
             (party_is_active, ":party_no"),
             (party_relocate_near_party, "p_main_party", ":party_no", 2),
           (try_end),
           (call_script, "script_change_player_relation_with_troop", "$g_talk_troop", -1), #annoyed?
           (call_script, "script_set_parties_around_player_ignore_player", 8, 12), #it was radius:2 and hours:12, but players make lots of complains about consequent battle losses after releases from captivity then I changed this.
           # (assign, "$g_player_icon_state", pis_normal),
           # (set_camera_follow_party, "p_main_party"),
           # (rest_for_hours, 0, 0, 0), #stop resting
           (change_screen_return),
        ]),
      ("continue",[],"Continue...",
       [
           (try_begin),
             (party_is_active, "$capturer_party"),
             (party_relocate_near_party, "p_main_party", "$capturer_party", 2),
           (try_end),
           (call_script, "script_set_parties_around_player_ignore_player", 8, 12), #it was radius:2 and hours:12, but players make lots of complains about consequent battle losses after releases from captivity then I changed this.
           (assign, "$g_player_icon_state", pis_normal),
           (set_camera_follow_party, "p_main_party"),
           (rest_for_hours, 0, 0, 0), #stop resting
           (change_screen_return),
        ]),
    ]
  ),
  (
    "captivity_end_propose_ransom",0,
    "You spend long hours in the sunless dank of the dungeon, more than you can count.\
 Suddenly one of your captors enters your cell with an offer;\
 he proposes to free you{reg6? and {s5}:} in return for {reg5} siliquae of your hidden wealth. You decide to...",
    "none",
    [
      (assign, reg5, "$player_ransom_amount"),
      #SB : mention spouse as companion
      (try_begin),
        (troop_get_slot, ":spouse", "trp_player", slot_troop_spouse),
        (gt, ":spouse", 0),
        (main_party_has_troop, ":spouse"),
        (str_store_troop_name, s5, ":spouse"),
        (assign, reg6, 1),
      (else_try),
        (assign, reg6, 0),
      (try_end),
    ],
    [
      #SB : TODO add in individual companion ransoms/leave in dungeon lower relations?
      ("captivity_end_ransom_accept",
      [
        (store_troop_gold,":player_gold", "trp_player"),
        (ge, ":player_gold","$player_ransom_amount")
      ],"Accept the offer.",
      [
        (play_cue_track, "track_escape"),
        (assign, "$g_player_is_captive", 0),
        (troop_remove_gold, "trp_player", "$player_ransom_amount"),
        (try_begin),
          (party_is_active, "$capturer_party"),
          (party_relocate_near_party, "p_main_party", "$capturer_party", 1),
        (try_end),
        (call_script, "script_set_parties_around_player_ignore_player", 8, 12), #it was radius:2 and hours:6, but players make lots of complains about consequent battle losses after releases from captivity then I changed this.
        (assign, "$g_player_icon_state", pis_normal),
        (set_camera_follow_party, "p_main_party"),
        (rest_for_hours, 0, 0, 0), #stop resting
        (change_screen_return),
      ]),
      ("captivity_end_ransom_deny",
      [
      ],"Refuse him, wait for something better.",
      [
        (assign, "$g_player_is_captive", 1),
        (store_random_in_range, reg(8), 16, 22),
        (call_script, "script_stay_captive_for_hours", reg8),
        (assign,"$auto_menu", "mnu_captivity_castle_check"),
        (change_screen_return),
      ]),
    ]
  ),

("captivity_castle_remain",mnf_scale_picture|mnf_disable_all_keys,
    "More days pass in the darkness of your cell. You get through them as best you can,\
 enduring the kicks and curses of the guards, watching your underfed body waste away more and more...",
    "none",
    [
        (set_background_mesh, "mesh_pic_prisoner_man"),
        (store_random_in_range, ":random_hours", 16, 22),
        (call_script, "script_stay_captive_for_hours", ":random_hours"),
        (assign,"$auto_menu", "mnu_captivity_castle_check"),
    ],
    [
      ("continue",[],"Continue...",
       [
           (assign, "$g_player_is_captive", 1),
           (change_screen_return),
        ]),
]),

  (
##diplomacy end+ fix gender of pronoun
    "kingdom_army_quest_report_to_army",mnf_scale_picture,
    "{s8} sends word that {reg4?she:he} wishes you to join {reg4?her:his} new military campaign.\
 You need to bring at least {reg13} troops to the army,\
 and are instructed to raise more men with all due haste if you do not have enough.",
##diplomacy end+
    "none",
    [
        (set_background_mesh, "mesh_pic_messenger"),
        (quest_get_slot, ":quest_target_troop", "qst_report_to_army", slot_quest_target_troop),
        (quest_get_slot, ":quest_target_amount", "qst_report_to_army", slot_quest_target_amount),
        (call_script, "script_get_information_about_troops_position", ":quest_target_troop", 0),
        (str_clear, s9),
        (try_begin),
          (eq, reg0, 1), #troop is found and text is correct
          (str_store_string, s9, s1),
        (try_end),
        (str_store_troop_name, s8, ":quest_target_troop"),
        (assign, reg13, ":quest_target_amount"),
		##diplomacy start+
      #Set gender with script
		#(troop_get_type, reg4, ":quest_target_troop"), #<- OLD
		(call_script, "script_dplmc_store_troop_is_female_reg", ":quest_target_troop", 4),
		##diplomacy end+
      ],
    [
      ("continue",[],"Continue...",
       [
           (quest_get_slot, ":quest_target_troop", "qst_report_to_army", slot_quest_target_troop),
           (quest_get_slot, ":quest_target_amount", "qst_report_to_army", slot_quest_target_amount),
           (str_store_troop_name_link, s13, ":quest_target_troop"),
           (assign, reg13, ":quest_target_amount"),
           (setup_quest_text, "qst_report_to_army"),
           ##diplomacy start+ fix gender of pronoun
           (str_store_string, s2, "@{s13} asked you to report to {reg4?her:him} with at least {reg13} troops."),
           ##diplomacy end+
           (call_script, "script_start_quest", "qst_report_to_army", ":quest_target_troop"),
           (call_script, "script_report_quest_troop_positions", "qst_report_to_army", ":quest_target_troop", 3),
           (change_screen_return),
        ]),
     ]
  ),

  (
##diplomacy start+ fix gender of pronouns
    "kingdom_army_quest_messenger",mnf_scale_picture,
    "{s8} sends word that {reg4?she:he} wishes to speak with you about a task {reg4?she:he} needs performed.\
 {reg4?She:He} requests you to come and see {reg4?her:him} as soon as possible.",
##diplomacy end+
    "none",
    [
        (set_background_mesh, "mesh_pic_messenger"),
        (faction_get_slot, ":faction_marshall", "$players_kingdom", slot_faction_marshall),
        ##diplomacy start+ put marshall's gender in reg4
        (call_script, "script_dplmc_store_troop_is_female", ":faction_marshall"),
        (assign, reg4, reg0),
        ##diplomacy end+
        (str_store_troop_name, s8, ":faction_marshall"),
      ],
    [
      ("continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),

  (
    "kingdom_army_quest_join_siege_order",mnf_scale_picture,
    "{s8} sends word that you are to join the siege of {s9} in preparation for a full assault.\
 Your troops are to take {s9} at all costs.",
    "none",
    [
		(set_background_mesh, "mesh_pic_messenger"),
        (faction_get_slot, ":faction_marshall", "$players_kingdom", slot_faction_marshall),
        (quest_get_slot, ":quest_target_center", "qst_join_siege_with_army", slot_quest_target_center),
        (str_store_troop_name, s8, ":faction_marshall"),
        (str_store_party_name, s9, ":quest_target_center"),
      ],
    [
      ("continue",[],"Continue...",
       [
           (call_script, "script_end_quest", "qst_follow_army"),
           (quest_get_slot, ":quest_target_center", "qst_join_siege_with_army", slot_quest_target_center),
           (faction_get_slot, ":faction_marshall", "$players_kingdom", slot_faction_marshall),
           (str_store_troop_name_link, s13, ":faction_marshall"),
           (str_store_party_name_link, s14, ":quest_target_center"),
           (setup_quest_text, "qst_join_siege_with_army"),
           (str_store_string, s2, "@{s13} ordered you to join the assault against {s14}."),
           (call_script, "script_start_quest", "qst_join_siege_with_army", ":faction_marshall"),
           (change_screen_return),
        ]),
     ]
  ),

  (
    "kingdom_army_follow_failed",mnf_scale_picture,
    "You have failed to follow {s8}. The marshal assumes that you were otherwise engaged, but would have appreciated your support.",
    "none",
    [
        (set_background_mesh, "mesh_pic_messenger"),
        (faction_get_slot, ":faction_marshall", "$players_kingdom", slot_faction_marshall),
        (str_store_troop_name, s8, ":faction_marshall"),
        (call_script, "script_abort_quest", "qst_follow_army", 1),
#        (call_script, "script_change_player_relation_with_troop", ":faction_marshall", -3),
      ],
    [
      ("continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),


  (
    "invite_player_to_faction_without_center",mnf_scale_picture,
##diplomacy start+ fix gender of pronouns
    "You receive an offer of vassalage!^^\
 {s8} of {s9} has sent a royal herald to bring you an invititation in {reg4?her:his} own hand.\
 You would be granted the honour of becoming a vassal {lord/lady} of {s9},\
 and in return {s8} asks you to swear an oath of homage to {reg4?her:him} and fight in {reg4?her:his} military campaigns,\
 although {reg4?she:he} offers you no lands or titles.\
 {reg4?She:He} will surely be offended if you do not take the offer...",
##diplomacy end+
    "none",
    [
        (set_background_mesh, "mesh_pic_messenger"),
        (faction_get_slot, "$g_invite_faction_lord", "$g_invite_faction", slot_faction_leader),
        ##diplomacy start+ store gender in reg4
        (call_script, "script_dplmc_store_troop_is_female", "$g_invite_faction_lord"),
        (assign, reg4, reg0),
        ##diplomacy start+
        (str_store_troop_name, s8, "$g_invite_faction_lord"),
        (str_store_faction_name, s9, "$g_invite_faction"),
      ],
    [
      ("faction_accept",[],"Accept!",
       [(str_store_troop_name,s1,"$g_invite_faction_lord"),
        (setup_quest_text,"qst_join_faction"),

        (str_store_troop_name_link, s3, "$g_invite_faction_lord"),
        (str_store_faction_name_link, s4, "$g_invite_faction"),
        (quest_set_slot, "qst_join_faction", slot_quest_giver_troop, "$g_invite_faction_lord"),
        (quest_set_slot, "qst_join_faction", slot_quest_expiration_days, 30),
		(quest_set_slot, "qst_join_faction", slot_quest_failure_consequence, 0),
	##diplomacy start+ fix gender of pronoun
        (str_store_string, s2, "@Find and speak with {s3} of {s4} to give {reg4?her:him} your oath of homage."),
        ##diplomacy end+
        (call_script, "script_start_quest", "qst_join_faction", "$g_invite_faction_lord"),
        (call_script, "script_report_quest_troop_positions", "qst_join_faction", "$g_invite_faction_lord", 3),
        (jump_to_menu, "mnu_invite_player_to_faction_accepted"),
        ]),
      ("faction_reject",[],"Decline the invitation.",
       [(call_script, "script_change_player_relation_with_troop", "$g_invite_faction_lord", -3),
        (call_script, "script_change_player_relation_with_faction", "$g_invite_faction", -10),
        (assign, "$g_invite_faction", 0),
        (assign, "$g_invite_faction_lord", 0),
        (assign, "$g_invite_offered_center", 0),
        (change_screen_return),
        ]),
     ]
  ),


  (
    "invite_player_to_faction",mnf_scale_picture,
##diplomacy start+ fix gender of pronouns
    "You receive an offer of vassalage!^^\
 {s8} of {s9} has sent a royal herald to bring you an invititation in {reg4?her:his} own hand.\
 You would be granted the honour of becoming a vassal {lord/lady} of {s9},\
 and in return {s8} asks you to swear an oath of homage to {reg4?her:him} and fight in {reg4?her:his} military campaigns,\
 offering you the fief of {s2} for your loyal service.\
 {reg4?She:He} will surely be offended if you do not take the offer...",
##diplomacy end+
    "none",
    [
        (set_background_mesh, "mesh_pic_messenger"),
        (faction_get_slot, "$g_invite_faction_lord", "$g_invite_faction", slot_faction_leader),
        ##diplomacy start+ store gender in reg4
        (call_script, "script_dplmc_store_troop_is_female", "$g_invite_faction_lord"),
        (assign, reg4, reg0),
        ##diplomacy start+
        (str_store_troop_name, s8, "$g_invite_faction_lord"),
        (str_store_faction_name, s9, "$g_invite_faction"),
        (str_store_party_name, s2, "$g_invite_offered_center"),
      ],
    [
      ("faction_accept",[],"Accept!",
       [(str_store_troop_name,s1,"$g_invite_faction_lord"),
        (setup_quest_text,"qst_join_faction"),

        (str_store_troop_name_link, s3, "$g_invite_faction_lord"),
        (str_store_faction_name_link, s4, "$g_invite_faction"),
        (quest_set_slot, "qst_join_faction", slot_quest_giver_troop, "$g_invite_faction_lord"),
        (quest_set_slot, "qst_join_faction", slot_quest_expiration_days, 30),
        ##diplomacy start+ fix gender of pronoun
        (str_store_string, s2, "@Find and speak with {s3} of {s4} to give {reg4?her:him} your oath of homage."),
        ##diplomacy end+
        (call_script, "script_start_quest", "qst_join_faction", "$g_invite_faction_lord"),
        (call_script, "script_report_quest_troop_positions", "qst_join_faction", "$g_invite_faction_lord", 3),
        (jump_to_menu, "mnu_invite_player_to_faction_accepted"),
        ]),
      ("faction_reject",[],"Decline the invitation.",
       [(call_script, "script_change_player_relation_with_troop", "$g_invite_faction_lord", -3),
        (assign, "$g_invite_faction", 0),
        (assign, "$g_invite_faction_lord", 0),
        (assign, "$g_invite_offered_center", 0),
        (change_screen_return),
        ]),
     ]
  ),

  (
    "invite_player_to_faction_accepted",0,
##diplomacy start+ fix gender of pronouns (king's gender should already be in reg4)
    "In order to become a vassal, you must swear an oath of homage to {s3}.\
 You shall have to find {reg4?her:him} and give {reg4?her:him} your oath in person. {s5}",
##diplomacy end+
    "none",
    [
        (call_script, "script_get_information_about_troops_position", "$g_invite_faction_lord", 0),
        (str_store_troop_name, s3, "$g_invite_faction_lord"),
        (str_store_string, s5, "@{!}{s1}"),
      ],
    [
      ("continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),

  (
    "question_peace_offer",0,
    "You Receive a Peace Offer^^The {s1} offers you a peace agreement. What is your answer?",
    "none",
    [
      (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),

      ##diplomacy begin
      (store_relation,  ":relation", "fac_player_supporters_faction", "$g_notification_menu_var1"),
      (try_begin),
        (ge, ":relation", 0),
        (change_screen_return),
      (try_end),
      ##diplomacy end
      ],
    [
      ("peace_offer_accept",[],"Accept",
       [
         (call_script, "script_diplomacy_start_peace_between_kingdoms", "fac_player_supporters_faction", "$g_notification_menu_var1", 1),
         (change_screen_return),
        ]),
        ##diplomacy begin
      ("dplmc_peace_offer_terms",[],"Dictate the peace terms",
       [
        (start_presentation, "prsnt_dplmc_peace_terms"),
        ]),
        ##diplomacy end
      ("peace_offer_reject",[],"Reject",
       [
         (call_script, "script_change_player_relation_with_faction", "$g_notification_menu_var1", -5),
         (change_screen_return),
        ]),
     ]
  ),

  (
    "notification_truce_expired",0,
    "Truce Has Expired^^The truce between {s1} and {s2} has expired.",
    "none",
    [
      (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (str_store_faction_name, s2, "$g_notification_menu_var2"),

      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),
      ],
    [
      ("continue",[],"Continue",
       [
	   (change_screen_return),
        ]),
     ]
  ),

  (
    "notification_feast_quest_expired",0,
    "{s10}",
    "none",
    [
    (str_store_string, s10, "str_feast_quest_expired"),
    ],
    [
      ("continue",[],"Continue",
       [
	   (change_screen_return),
        ]),
     ]
  ),

  (
    "notification_sortie_possible",0,
    "Enemy Sighted: Enemies have been sighted outside the walls of {s4}, and {s5} and others are preparing for a sortie. You may join them if you wish.",
    "none",
    [
	(str_store_party_name, s4, "$g_notification_menu_var1"),
	(party_stack_get_troop_id, ":leader", "$g_notification_menu_var2", 0),
	(str_store_troop_name, s5, ":leader"),
      ],
    [
      ("continue",[],"Continue",
       [
	   #stop auto-clock

	   (change_screen_return),
        ]),
     ]
  ),




  (
    "notification_casus_belli_expired",0,
    "Kingdom Fails to Respond^^The {s1} has not responded to the {s2}'s provocations, and {s3} suffers a loss of face among {reg4?her:his} more bellicose subjects...^",
    "none",
    [
      (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (str_store_faction_name, s2, "$g_notification_menu_var2"),
	  (faction_get_slot, ":faction_leader", "$g_notification_menu_var1", slot_faction_leader),
      (str_store_troop_name, s3, ":faction_leader"),
	  ##diplomacy start+ use a script for gender
	  #(troop_get_type, reg4, ":faction_leader"),#<- OLD
	  (call_script, "script_dplmc_store_troop_is_female_reg", ":faction_leader", 4),
     ##diplomacy end+

      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),
      ],
    [
      ("continue",[],"Continue",
       [
	   (call_script, "script_faction_follows_controversial_policy", "$g_notification_menu_var1", logent_policy_ruler_ignores_provocation),
	   (change_screen_return),
        ]),
     ]
  ),

  (
    "notification_lord_defects",0,
##diplomacy start+ Fix gender of pronouns
    "Defection: {s4} has abandoned the {s5} and joined the {s7}, taking {reg4?her:his} fiefs with {reg4?her:him}",
##diplomacy end+
    "none",
	[
	  (assign, ":defecting_lord", "$g_notification_menu_var1"),
	  (assign, ":old_faction", "$g_notification_menu_var2"),
	  (str_store_troop_name, s4, ":defecting_lord"),
	  (str_store_faction_name, s5, ":old_faction"),
	  (store_faction_of_troop, ":new_faction", ":defecting_lord"),
	  (str_store_faction_name, s7, ":new_faction"),
	  ##diplomacy start+ get gender with script
	  #(troop_get_type, reg4, ":defecting_lord"),#<-OLD
	  (call_script, "script_dplmc_store_troop_is_female_reg", ":defecting_lord", 4),
	  ##diplomacy end+

	],
    [
      ("continue",[],"Continue",
       [
	   (change_screen_return),
        ]),
     ]
	),


  (
    "notification_treason_indictment",0,
    "Treason Indictment^^{s9}",
    "none",
    [
	  (assign, ":indicted_lord", "$g_notification_menu_var1"),
	  (assign, ":former_faction", "$g_notification_menu_var2"),
	  (faction_get_slot, ":former_faction_leader", ":former_faction", slot_faction_leader),

	  #Set up string
	  (try_begin),
			(eq, ":indicted_lord", "trp_player"),
			(str_store_troop_name, s7, ":former_faction_leader"),
			(str_store_string, s9, "str_you_have_been_indicted_for_treason_to_s7_your_properties_have_been_confiscated_and_you_would_be_well_advised_to_flee_for_your_life"),
	  (else_try),
			(str_store_troop_name_link, s4, ":indicted_lord"),
			(str_store_faction_name_link, s5, ":former_faction"),
			(str_store_troop_name_link, s6, ":former_faction_leader"),

		   ##diplomacy start+ get gender with script
			#(troop_get_type, reg4, ":indicted_lord"),#<-OLD
			(call_script, "script_dplmc_store_troop_is_female_reg", ":indicted_lord", 4),
			##diplomacy end+
			(store_faction_of_troop, ":new_faction", ":indicted_lord"),
			(try_begin),
				(is_between, ":new_faction", kingdoms_begin, kingdoms_end),
				(str_store_faction_name_link, s10, ":new_faction"),
				(str_store_string, s11, "str_with_the_s10"),
			(else_try),
				(str_store_string, s11, "str_outside_calradia"),
			(try_end),
			(str_store_string, s9, "str_by_order_of_s6_s4_of_the_s5_has_been_indicted_for_treason_the_lord_has_been_stripped_of_all_reg4herhis_properties_and_has_fled_for_reg4herhis_life_he_is_rumored_to_have_gone_into_exile_s11"),
		(try_end),


	],
    [
      ("continue",[],"Continue",
       [
	   (change_screen_return),
        ]),
     ]
	),



  (
    "notification_border_incident",0,
    "Border incident^^Word reaches you that {s9}. Though you don't know whether or not the rumors are true, you do know one thing -- this seemingly minor incident has raised passions among the {s4}, making it easier for them to go to war against the {s3}, if they want it...",
    "none",
    [],
    [
      ("continue",[],"Continue",
       [
	   (change_screen_return),
        ]),
     ]
  ),

  (
    "notification_player_faction_active",0,
    "You now possess land in your name, without being tied to any kingdom. This makes you a monarch in your own right, with your court temporarily located at {s12}. However, the other kings will at first consider you a threat, for if any upstart warlord can grab a throne, then their own legitimacy is called into question.^^You may find it desirable at this time to pledge yourself to an existing kingdom. If you want to continue as a sovereign monarch, then your first priority should be to establish an independent right to rule. You can establish your right to rule through several means -- marrying into a high-born family, recruiting new lords, governing your lands, treating with other kings, or dispatching your companions on missions.^^At any rate, your first step should be to appoint a chief minister from among your companions, to handle affairs of state. Different companions have different capabilities.^You may appoint new ministers from time to time. You may also change the location of your court, by speaking to the minister.",
    "none",
    [
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "fac_player_supporters_faction", pos0),

      (unlock_achievement, ACHIEVEMENT_CALRADIAN_TEA_PARTY),
      (play_track, "track_coronation"),

	  (try_for_range, ":walled_center", walled_centers_begin, walled_centers_end),
	    (lt, "$g_player_court", walled_centers_begin),
		(store_faction_of_party, ":walled_center_faction", ":walled_center"),
	    (eq, ":walled_center_faction", "fac_player_supporters_faction"),
		(assign, "$g_player_court", ":walled_center"),

		##diplomacy start+
		#OLD VERSION:
		#(try_begin),
		#	(troop_get_slot, ":spouse", "trp_player", slot_troop_spouse),
		#	(is_between, ":spouse", kingdom_ladies_begin, kingdom_ladies_end),
		#	(troop_set_slot, ":spouse", slot_troop_cur_center, "$g_player_court"),
		#(try_end),
		#
		#NEW VERSION:
		#For settings with polygamy, check all kingdom ladies to see if they are wives.
		#Also move unmarried daughters/sisters of the player if they exist (they cannot
		#in Native, but might in mods).
		(try_for_range, ":lady", kingdom_ladies_begin, kingdom_ladies_end),
			#Make sure the spouse hasn't been promoted, and is not a prisoner, and is not exiled/dead
			(troop_slot_eq, ":lady", slot_troop_occupation, slto_kingdom_lady),
			(neg|troop_slot_ge, ":lady", slot_troop_leaded_party, 0),
			#Make sure the lady isn't a prisoner
			(neg|troop_slot_ge, ":lady", slot_troop_prisoner_of_party, 0),
			(neg|main_party_has_troop, ":lady"), #dckplmc
			(try_begin),
				#Check if the lady is the player's spouse
				(this_or_next|troop_slot_eq, "trp_player", slot_troop_spouse, ":lady"),
					(troop_slot_eq, ":lady", slot_troop_spouse, "trp_player"),
				#Update location
				(troop_set_slot, ":lady", slot_troop_cur_center, "$g_player_court"),
			(else_try),
				#If the lady is unmarried, check if she is the player's dependent.
				(troop_slot_eq, ":lady", slot_troop_spouse, -1),
				(this_or_next|troop_slot_eq, ":lady", slot_troop_father, "trp_player"),
				(this_or_next|troop_slot_eq, ":lady", slot_troop_mother, "trp_player"),
					(troop_slot_eq, ":lady", slot_troop_guardian, "trp_player"),
				#Update location
				(troop_set_slot, ":lady", slot_troop_cur_center, "$g_player_court"),
			(try_end),
		(try_end),
		##diplomacy end+

		(str_store_party_name, s12, "$g_player_court"),
	  (try_end),

      ],
    [
	  ##diplomacy start+
	  #Make compatible with polygamy
      ("appoint_spouse",[
	  (troop_slot_ge, "trp_player", slot_troop_spouse, 1),
	  (troop_get_slot, ":player_spouse", "trp_player", slot_troop_spouse),
	  (neg|troop_slot_eq, ":player_spouse", slot_troop_occupation, slto_kingdom_hero),
	  ##diplomacy start+
	  #Also do not appoint the missing or the dead
	  (neg|troop_slot_ge, ":player_spouse", slot_troop_occupation, slto_retirement),
	  (call_script, "script_dplmc_store_troop_is_female", ":player_spouse"),#reg0 make gender-correct
	  ##diplomacy end+
	  (str_store_troop_name, s10, ":player_spouse"),
	  ],"Appoint your {reg0?wife:husband}, {s10}...",
       [
	   (troop_get_slot, ":player_spouse", "trp_player", slot_troop_spouse),
	   (assign, "$g_player_minister", ":player_spouse"),
	   (jump_to_menu, "mnu_minister_confirm"),
	   ]),
	  ##diplomacy end+

	  ##diplomacy start+
	  #Check for one additional spouse (polygamy may be enabled)
      ("dplmc_appoint_spouse_plus_1",[
	  (troop_slot_ge, "trp_player", slot_troop_spouse, 1),
	  (assign, ":player_spouse", -1),
	  (try_for_range_backwards, ":troop_no", heroes_begin, heroes_end),#Go backwards to ensure we end with the first match
		(troop_slot_eq, ":troop_no", slot_troop_spouse, "trp_player"),
		(neg|troop_slot_eq, "trp_player", slot_troop_spouse, ":troop_no"),#Not ordinary spouse
		(neg|troop_slot_ge, ":troop_no", slot_troop_occupation, slto_retirement),#Not retired/dead/exiled
		(neg|troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),#Not leading a party
		(assign, ":player_spouse", ":troop_no"),
	  (try_end),
	  (ge, ":player_spouse", 1),
	  (call_script, "script_dplmc_store_troop_is_female", ":player_spouse"),
	  (str_store_troop_name, s10, ":player_spouse"),
	  ],"Appoint your {reg0?wife:husband}, {s10}...",
       [
	   (assign, ":player_spouse", -1),
	   (try_for_range_backwards, ":troop_no", heroes_begin, heroes_end),#Go backwards to ensure we end with the first match
	     (troop_slot_eq, ":troop_no", slot_troop_spouse, "trp_player"),
		 (neg|troop_slot_eq, "trp_player", slot_troop_spouse, ":troop_no"),#Not ordinary spouse
		 (neg|troop_slot_ge, ":troop_no", slot_troop_occupation, slto_retirement),#Not retired/dead/exiled
		 (neg|troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),#Not leading a party
		 (assign, ":player_spouse", ":troop_no"),
	   (try_end),
	   (try_begin),
		  (lt, ":player_spouse", 1),#This shouldn't be possible
		  (troop_get_slot, ":player_spouse", "trp_player", slot_troop_spouse),
	   (try_end),

	   (assign, "$g_player_minister", ":player_spouse"),
	   (jump_to_menu, "mnu_minister_confirm"),
	   ]),
	  ##diplomacy end+
      ]+

    #SB : roll into loop
      [("appoint_npc"+str(x), [
      (main_party_has_troop, "trp_npc"+str(x)),
      (str_store_troop_name, s10, "trp_npc"+str(x)),
      ],"Appoint {s10}", [
       (assign, "$g_player_minister", "trp_npc"+str(x)),
       (jump_to_menu, "mnu_minister_confirm"),
      ]) for x in range (1, 17)]

    +[
      ("appoint_default",[],"Appoint a prominent citizen from the area...",
       [
	   (assign, "$g_player_minister", "trp_temporary_minister"),
	   (troop_set_faction, "trp_temporary_minister", "fac_player_supporters_faction"),
	   (jump_to_menu, "mnu_minister_confirm"),
        ]),
     ]
  ),

  (
    "minister_confirm",0,
    "{s9}can be found at your court in {s12}. You should consult {reg4?her:him} periodically, to avoid the accumulation of unresolved issues that may sap your authority...",
    "none",
    [
    (try_begin),
        (store_and, ":name_set", "$players_kingdom_name_set", rename_kingdom),
        (eq, ":name_set", rename_kingdom),
        (change_screen_return),
    (try_end),

    (try_begin),
        (eq, "$g_player_minister", "trp_temporary_minister"),
        (str_store_string, s9, "str_your_new_minister_"),
    (else_try),
        (str_store_troop_name, s10, "$g_player_minister"),
        (str_store_string, s9, "str_s10_is_your_new_minister_and_"),
    (try_end),

    (try_begin),
        (main_party_has_troop, "$g_player_minister"),
        (remove_member_from_party, "$g_player_minister", "p_main_party"),
    (try_end),

    #SB : tableau notes
    (set_fixed_point_multiplier, 100),
    (position_set_x, pos0, 70),
    (position_set_y, pos0, 5),
    (position_set_z, pos0, 75),
    (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", "$g_player_minister", pos0),
    #also gender string
    (call_script, "script_dplmc_store_troop_is_female_reg", "$g_player_minister", 4),
    ],
    [
      ("continue",[],"Continue...",
       [
         #SB : explicitly state kingdom
         (assign, "$g_presentation_state", rename_kingdom),
         (start_presentation, "prsnt_name_kingdom"),
        ]),
     ]
  ),



  (
  "notification_court_lost",0,
  "{s12}",
  "none",
  [
    (try_begin),
		(is_between, "$g_player_court", centers_begin, centers_end),
		(str_store_party_name, s10, "$g_player_court"),
		(str_store_party_name, s11, "$g_player_court"),
	(else_try),
		(str_store_string, s10, "str_your_previous_court_some_time_ago"),
		(str_store_string, s11, "str_your_previous_court_some_time_ago"),
	(try_end),

	##diplomacy start+ Handle player is co-ruler of NPC kingdom
	(assign, ":alt_faction", "fac_player_supporters_faction"),
	(try_begin),
		(is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
		(call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$players_kingdom"),
		(ge, reg0, DPLMC_FACTION_STANDING_LEADER_SPOUSE),
		(assign, ":alt_faction", "$players_kingdom"),
	(try_end),
	##diplomacy end+

    (try_begin), #SB : loss of court = loss of right to rule
      (store_and, ":name_set", "$players_kingdom_name_set", rename_center),
      (eq, ":name_set", rename_center),
      (call_script, "script_change_player_right_to_rule", -20),
      #the old "capital" should be stored so that this penalty does not apply twice
      #but we'll let the player name a new center
      (val_sub, "$players_kingdom_name_set", rename_center),
    (else_try), #need a court to lose one
      (is_between, "$g_player_court", centers_begin, centers_end),
      (call_script, "script_change_player_right_to_rule", -5),
    (try_end),
    (assign, "$g_player_court", -1),
	(str_store_string, s14, "str_after_to_the_fall_of_s11_your_court_has_nowhere_to_go"),
	(try_begin),
		##diplomacy start+  Handle player is co-ruler of NPC kingdom
		(this_or_next|neg|is_between, ":alt_faction", npc_kingdoms_begin, npc_kingdoms_end),
			(neg|faction_slot_eq, ":alt_faction", slot_faction_state, sfs_active),
		##diplomacy end+
		(faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, sfs_inactive),
		(str_store_string, s14, "str_as_you_no_longer_maintain_an_independent_kingdom_you_no_longer_maintain_a_court"),
	(try_end),

	(try_for_range, ":walled_center", walled_centers_begin, walled_centers_end),
		(eq, "$g_player_court", -1),
    ##diplomacy begin
        (neg|party_slot_eq, ":walled_center", slot_village_infested_by_bandits, "trp_peasant_woman"),
    ##diplomacy end
		(store_faction_of_party, ":walled_center_faction", ":walled_center"),
		##diplomacy start+ Handle player is co-ruler of NPC kingdom
		(this_or_next|eq, ":alt_faction", ":walled_center_faction"),
		##diplomacy end+
		(eq, ":walled_center_faction", "fac_player_supporters_faction"),
		(neg|party_slot_ge, ":walled_center", slot_town_lord, active_npcs_begin),

		(assign, "$g_player_court", ":walled_center"),
		(try_begin),
			(troop_get_slot, ":spouse", "trp_player", slot_troop_spouse),
			(is_between, ":spouse", kingdom_ladies_begin, kingdom_ladies_end),
			##diplomacy start+ Check that the spouse is not a hero, imprisoned (except by the player), or exiled/dead/etc.
			(neg|troop_slot_eq, ":spouse", slot_troop_occupation, slto_kingdom_hero),
			(neg|troop_slot_ge, ":spouse", slot_troop_occupation, slto_retirement),
			(neg|troop_slot_ge, ":spouse", slot_troop_prisoner_of_party, 1),
			##diplomacy end+
			(neg|main_party_has_troop,":spouse"), #dckplmc
			(troop_set_slot, ":spouse", slot_troop_cur_center, "$g_player_court"),
			(str_store_party_name, s11, "$g_player_court"),
		(try_end),

		(str_store_string, s14, "str_due_to_the_fall_of_s10_your_court_has_been_relocated_to_s12"), #actually s11
	(try_end),

	(try_for_range, ":walled_center", walled_centers_begin, walled_centers_end),
		(eq, "$g_player_court", -1),

		(store_faction_of_party, ":walled_center_faction", ":walled_center"),
		##diplomacy start+ Handle player is co-ruler of NPC kingdom
		(this_or_next|eq, ":alt_faction", ":walled_center_faction"),
		##diplomacy end+
		(eq, ":walled_center_faction", "fac_player_supporters_faction"),

		(assign, "$g_player_court", ":walled_center"),

		(try_begin),
			(troop_get_slot, ":spouse", "trp_player", slot_troop_spouse),
			(is_between, ":spouse", kingdom_ladies_begin, kingdom_ladies_end),
			##diplomacy start+ Check that the spouse is not a hero, imprisoned (except by the player), or exiled/dead/etc.
			(neg|troop_slot_eq, ":spouse", slot_troop_occupation, slto_kingdom_hero),
			(neg|troop_slot_ge, ":spouse", slot_troop_occupation, slto_retirement),
			(neg|troop_slot_ge, ":spouse", slot_troop_prisoner_of_party, 1),
			##diplomacy end+
			(troop_set_slot, ":spouse", slot_troop_cur_center, "$g_player_court"),
		(try_end),

		(party_get_slot, ":town_lord", ":walled_center", slot_town_lord),
		(str_store_party_name, s11, "$g_player_court"),
			(try_begin),
			(gt, ":town_lord", 0),
			(faction_slot_eq, ":walled_center_faction", slot_faction_leader, "trp_player"),
			(str_store_troop_name, s9, ":town_lord"),
			(str_store_string, s14, "str_after_to_the_fall_of_s10_your_faithful_vassal_s9_has_invited_your_court_to_s11_"),
			(else_try),
			(str_store_string, s14, "str_after_to_the_fall_of_s10_your_faithful_vassal_s9_has_invited_your_court_to_s11_nolord"),
			(try_end),
	(try_end),

	(try_begin),
		##diplomacy start+  Handle player is co-ruler of NPC kingdom
		(this_or_next|neg|is_between, ":alt_faction", npc_kingdoms_begin, npc_kingdoms_end),
			(neg|faction_slot_eq, ":alt_faction", slot_faction_state, sfs_active),
		##diplomacy end+
		(faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, sfs_inactive),
		(str_store_string, s14, "str_as_you_no_longer_maintain_an_independent_kingdom_you_no_longer_maintain_a_court"),
	(try_end),
	(str_store_string, s12, s14),
  ],
  [
      ("continue",[],"Continue...",[
	  (change_screen_return),
	  ]),
     ],
  ),



  (
    "notification_player_faction_deactive",0,
    "Your kingdom no longer holds any land.",
    "none",
    [
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "fac_player_supporters_faction", pos0),
      ],
    [
      ("continue",[],"Continue...",
       [
        (try_begin), #SB : just in case
         (is_between, "$g_player_minister", companions_begin, companions_end),
         (assign, "$npc_to_rejoin_party", "$g_player_minister"),
        (try_end),
        (assign, "$g_player_minister", -1),
        (change_screen_return),
        ]),
     ]
  ),






  (
    "notification_player_wedding_day",mnf_scale_picture,
    "{s8} wishes to inform you that preparations for your wedding at {s10} have been complete, and that your presence is expected imminently .",
    "none",
    [
		(set_background_mesh, "mesh_pic_messenger"),
		(str_store_troop_name, s8, "$g_notification_menu_var1"),
		(str_store_party_name, s10, "$g_notification_menu_var2"),
      ],
    [
      ("continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),


  (
    "notification_player_kingdom_holds_feast",mnf_scale_picture,
    "{s11}",
    "none",
    [
		(set_background_mesh, "mesh_pic_messenger"),

		(str_store_troop_name, s8, "$g_notification_menu_var1"),
		(store_faction_of_troop, ":host_faction", "$g_notification_menu_var1"),
		(str_store_faction_name, s9, ":host_faction"),

#		(str_store_faction_name, s9, "$players_kingdom"),
		(str_store_party_name, s10, "$g_notification_menu_var2"),

		(str_clear, s12),
		(try_begin),
			(check_quest_active, "qst_wed_betrothed"),
			(quest_get_slot, ":giver_troop", "qst_wed_betrothed", slot_quest_giver_troop),
			(store_faction_of_troop, ":giver_troop_faction", ":giver_troop"),
			(eq, ":giver_troop_faction", "$players_kingdom"),
			(str_store_string, s12, "str_feast_wedding_opportunity"),
		(try_end),



		(str_store_string, s11, "str_s8_wishes_to_inform_you_that_the_lords_of_s9_will_be_gathering_for_a_feast_at_his_great_hall_in_s10_and_invites_you_to_be_part_of_this_august_assembly"),
		(try_begin),
			(eq, "$g_notification_menu_var1", 0),
			(str_store_string, s11, "str_the_great_lords_of_your_kingdom_plan_to_gather_at_your_hall_in_s10_for_a_feast"),
		(try_end),
		(str_store_string, s11, "@{!}{s11}{s12}"),

		(try_begin),
			(ge, "$cheat_mode", 1),
			(store_current_hours, ":hours_since_last_feast"),
			(faction_get_slot, ":last_feast_start_time", "$players_kingdom", slot_faction_last_feast_start_time),
			(val_sub, ":hours_since_last_feast", ":last_feast_start_time"),
			(assign, reg4, ":hours_since_last_feast"),
			(display_message, "@{!}DEBUG -- Hours since last feast started: {reg4}"),
		(try_end),

      ],
    [
      ("continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),


  (
    "notification_center_under_siege",0,
    "{s1} has been besieged by {s2} of {s3}!",
    "none",
    [
      (str_store_party_name, s1, "$g_notification_menu_var1"),
      (str_store_troop_name, s2, "$g_notification_menu_var2"),
      (store_troop_faction, ":troop_faction", "$g_notification_menu_var2"),
      (str_store_faction_name, s3, ":troop_faction"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 62),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_center_note_mesh", "$g_notification_menu_var1", pos0),
      ],
    [
      ("continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),

  (
    "notification_village_raided",0,
    "Enemies have Laid Waste to a Fief^^{s1} has been raided by {s10}!",
    "none",
    [
      (str_store_party_name, s1, "$g_notification_menu_var1"),
      (str_store_troop_name, s2, "$g_notification_menu_var2"),
      (store_troop_faction, ":troop_faction", "$g_notification_menu_var2"),
      (str_store_faction_name, s3, ":troop_faction"),
	(try_begin),
	(ge, ":troop_faction", kingdoms_begin),
	(str_store_string, s10, "@{s2} of {s3}"),
	(else_try),
	(str_store_string, s10, "@{s2}"),
	(try_end),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 62),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_center_note_mesh", "$g_notification_menu_var1", pos0),
      ],
    [
      ("continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),

  (
    "notification_village_raid_started",0,
    "Your Village is under Attack!^^{s2} of {s3} is laying waste to {s1}.",
    "none",
    [
      (str_store_party_name, s1, "$g_notification_menu_var1"),
      (str_store_troop_name, s2, "$g_notification_menu_var2"),
      (store_troop_faction, ":troop_faction", "$g_notification_menu_var2"),
      (str_store_faction_name, s3, ":troop_faction"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 62),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_center_note_mesh", "$g_notification_menu_var1", pos0),
      ],
    [
      ("continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),

("notification_one_faction_left",0,
    "World Conquered by One Kingdom^^{s1} has defeated all rivals and stands as the sole kingdom.",
    "none",
    [
        (str_store_faction_name, s1, "$g_notification_menu_var1"),
        (set_fixed_point_multiplier, 100),
        (position_set_x, pos0, 65),
        (position_set_y, pos0, 30),
        (position_set_z, pos0, 170),
        (try_begin),
            (is_between, "$g_notification_menu_var1", "fac_kingdom_1", kingdoms_end), #Excluding player kingdom
            (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_for_menu", "$g_notification_menu_var1", pos0),
        (else_try),
            (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),
        (try_end),
        (try_begin),
            (faction_slot_eq, "$g_notification_menu_var1", slot_faction_leader, "trp_player"),
            (unlock_achievement, ACHIEVEMENT_THE_GOLDEN_THRONE),
        (else_try),
          (unlock_achievement, ACHIEVEMENT_MANIFEST_DESTINY),
        (try_end),
        (try_begin),
            (troop_get_type, ":is_female", "trp_player"),
            (eq, ":is_female", 1),
            (unlock_achievement, ACHIEVEMENT_EMPRESS),
        (try_end),
      ],
    [
      ("continue",[],"Continue...",
       [(change_screen_return),
        ]),
]),

("notification_oath_renounced_faction_defeated",0,
    "Your Old Faction was Defeated^^You won the battle against {s1}! This ends your struggle which started after you renounced your oath to them.",
    "none",
    [
      (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (try_begin),
        (is_between, "$g_notification_menu_var1", "fac_kingdom_1", kingdoms_end), #Excluding player kingdom
        (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_for_menu", "$g_notification_menu_var1", pos0),
      (else_try),
        (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),
      (try_end),
      ],
    [
      ("continue",[],"Continue...",
       [(change_screen_return),
        ]),
]),

("notification_center_lost",0,
    "An Estate was Lost^^You have lost {s1} to {s2}.",
    "none",
    [
      (str_store_party_name, s1, "$g_notification_menu_var1"),
      (str_store_faction_name, s2, "$g_notification_menu_var2"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 62),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_center_note_mesh", "$g_notification_menu_var1", pos0),
      ],
    [
      ("continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),


  (
    "notification_troop_left_players_faction",0,
    "Betrayal!^^{s1} has left {s2} and joined {s3}.",
    "none",
    [
      (str_store_troop_name, s1, "$g_notification_menu_var1"),
      (str_store_faction_name, s2, "$players_kingdom"),
      (str_store_faction_name, s3, "$g_notification_menu_var2"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 55),
      (position_set_y, pos0, 20),
      (position_set_z, pos0, 100),
      (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", "$g_notification_menu_var1", pos0),
      ],
    [
      ("continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),

  (
    "notification_troop_joined_players_faction",0,
    "Good news!^^ {s1} has left {s2} and joined {s3}.",
    "none",
    [
      (str_store_troop_name, s1, "$g_notification_menu_var1"),
      (str_store_faction_name, s2, "$g_notification_menu_var2"),
      (str_store_faction_name, s3, "$players_kingdom"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 55),
      (position_set_y, pos0, 20),
      (position_set_z, pos0, 100),
      (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", "$g_notification_menu_var1", pos0),
      ],
    [
      ("continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),

   (
    "notification_war_declared",0,
#    "Declaration of War^^{s1} has declared war against {s2}!^^The sword has been drawn from the sheath, and the shield taken down from the wall. War has been declared!",
    "Declaration of War^^{s1} has declared war against {s2}!^{s57}^The sword has been drawn from the sheath, and the shield taken down from the wall. War has been declared!",
    "none",
    [
	  #MOTO salvage explanation (when multiple explanations needed, only last one valid)
	  (try_begin),
      (eq, "$g_last_acting_faction", "$g_notification_menu_var1"),
      (eq, "$g_last_target_faction", "$g_notification_menu_var2"),
      (str_store_string, s57, "@^{s64}^"),
      (assign, "$g_last_acting_faction", -1),
      (assign, "$g_last_target_faction", -1),
	  (else_try),
	    (str_clear, s57),
	  (try_end),
	  #MOTO salvage explanation end

      (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (str_store_faction_name, s2, "$g_notification_menu_var2"),

      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (store_sub, ":faction_1", "$g_notification_menu_var1", kingdoms_begin),
      (store_sub, ":faction_2", "$g_notification_menu_var2", kingdoms_begin),
      (val_mul, ":faction_1", 128),
      (val_add, ":faction_1", ":faction_2"),
      (set_game_menu_tableau_mesh, "tableau_2_factions_mesh", ":faction_1", pos0),
      ],
    [
      ("continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),
#chief sot cambia texto abajo, motomataru cambia codigo
  (
    "notification_peace_declared",0,
#    "Peace Agreement^^{s1} and {s2} have made peace!^{s57}^^These two peoples have stopped fighting - for now. Perhaps one nation will use the time to sharpen a fresh knife to plunge into the heart of its enemy...",
    "Peace Agreement^^{s1} and {s2} have made peace!^{s57}^These two peoples have stopped fighting - for now. Perhaps one nation will use the time to sharpen a fresh knife to plunge into the heart of its enemy...",
    "none",
    [

	  (try_begin),
      #MOTO salvage explanation (when multiple explanations needed, only last one valid)
      # (eq, 1, 0), #Alas, this does not seem to work
      # (eq, "$g_include_diplo_explanation", "$g_notification_menu_var1"),
      # (assign, "$g_include_diplo_explanation", 0),
      (eq, "$g_last_acting_faction", "$g_notification_menu_var1"),
      (eq, "$g_last_target_faction", "$g_notification_menu_var2"),
      (str_store_string, s57, "@^{s64}^"),
      (assign, "$g_last_acting_faction", -1),
      (assign, "$g_last_target_faction", -1),
      #MOTO salvage explanation end
	  (else_try),
	    (str_clear, s57),
	  (try_end),

	  (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (str_store_faction_name, s2, "$g_notification_menu_var2"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (store_sub, ":faction_1", "$g_notification_menu_var1", kingdoms_begin),
      (store_sub, ":faction_2", "$g_notification_menu_var2", kingdoms_begin),
      (val_mul, ":faction_1", 128),
      (val_add, ":faction_1", ":faction_2"),
      (set_game_menu_tableau_mesh, "tableau_2_factions_mesh", ":faction_1", pos0),
      ],
    [
      ("continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),


  (
    "notification_faction_defeated",0,
    "Faction Eliminated^^{s1} is no more!",
    "none",
    [
      (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      # (try_begin),
      #   (is_between, "$g_notification_menu_var1", npc_kingdoms_begin, kingdoms_end), #Excluding player kingdom
      #   (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_for_menu", "$g_notification_menu_var1", pos0),
      # (else_try),
        (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),
      # (try_end),
      ],
    [
      ("continue",[],"Continue...",
       [
         (try_begin),
           (is_between, "$supported_pretender", pretenders_begin, pretenders_end),
           (troop_slot_eq, "$supported_pretender", slot_troop_original_faction, "$g_notification_menu_var1"),

           #All rebels switch to kingdom
           (try_for_range, ":cur_troop", heroes_begin, heroes_end), #dckplmc switch kingdom ladies
             (this_or_next|troop_slot_eq, ":cur_troop", slot_troop_occupation, slto_kingdom_hero),
             (troop_slot_eq, ":cur_troop", slot_troop_occupation, slto_kingdom_lady),
             (store_troop_faction, ":cur_faction", ":cur_troop"),
             (eq, ":cur_faction", "fac_player_supporters_faction"),
             (troop_set_faction, ":cur_troop", "$g_notification_menu_var1"),
             (call_script, "script_troop_set_title_according_to_faction", ":cur_troop", "$g_notification_menu_var1"),
             (try_begin),
               (this_or_next|eq, "$g_notification_menu_var1", "$players_kingdom"),
               (eq, "$g_notification_menu_var1", "fac_player_supporters_faction"),
               (call_script, "script_check_concilio_calradi_achievement"),
             (try_end),
           (else_try), #all loyal lords gain a small bonus with the player
             (troop_slot_eq, ":cur_troop", slot_troop_occupation, slto_kingdom_hero),
             (store_troop_faction, ":cur_faction", ":cur_troop"),
             (eq, ":cur_faction", "$g_notification_menu_var1"),
             (call_script, "script_troop_change_relation_with_troop", ":cur_troop", "trp_player", 5),
           (try_end),

           (try_for_parties, ":cur_party"),
             (store_faction_of_party, ":cur_faction", ":cur_party"),
             (eq, ":cur_faction", "fac_player_supporters_faction"),
             (party_set_faction, ":cur_party", "$g_notification_menu_var1"),
           (try_end),

           (assign, "$players_kingdom", "$g_notification_menu_var1"),
           (try_begin),
            (troop_get_slot, ":spouse", "trp_player", slot_troop_spouse),
            (is_between, ":spouse", kingdom_ladies_begin, kingdom_ladies_end),
            (troop_set_faction, ":spouse", "$g_notification_menu_var1"),
           (try_end),


           (call_script, "script_add_notification_menu", "mnu_notification_rebels_switched_to_faction", "$g_notification_menu_var1", "$supported_pretender"),

           (faction_set_slot, "$g_notification_menu_var1", slot_faction_state, sfs_active),
           (faction_set_slot, "fac_player_supporters_faction", slot_faction_state, sfs_inactive),

           (faction_get_slot, ":old_leader", "$g_notification_menu_var1", slot_faction_leader),
           #(troop_set_slot, ":old_leader", slot_troop_change_to_faction, "fac_commoners"),
		(try_begin),
		(gt, ":old_leader", 0),
		(neq, ":old_leader", "$supported_pretender"),
		(call_script, "script_change_troop_faction", ":old_leader", "fac_commoners"), #dckplmc - prevent possible respawn before actual faction changes
           	#SB : renown loss of under 25%
           	(troop_get_slot, ":old_renown", ":old_leader", slot_troop_renown),
           	(store_random_in_range, ":renown_loss", 10, 25),
           	(val_mul, ":renown_loss", ":old_renown"),
           	(val_div, ":renown_loss", 100),
           	(val_sub, ":old_renown", ":renown_loss"),
           	(troop_set_slot, ":old_leader", slot_troop_renown, ":old_renown"),
			(try_begin),
			(troop_slot_eq, ":old_leader", slot_troop_occupation, slto_kingdom_hero),
			(neg|troop_slot_ge, ":old_leader", slot_troop_prisoner_of_party, 0),
			(neg|troop_slot_ge, ":old_leader", slot_troop_leaded_party, 1),
			(troop_set_slot, ":old_leader", slot_troop_occupation, dplmc_slto_dead), #madsci we dont want dethroned kings to appear as regular vassals in other kingsdoms later like in native because its dumb
			(try_end),
		(try_end),

           (faction_set_slot, "$g_notification_menu_var1", slot_faction_leader, "$supported_pretender"),
           (troop_set_faction, "$supported_pretender", "$g_notification_menu_var1"),

		(troop_get_slot, ":lord_religion", "$supported_pretender", slot_troop_religion),
		(faction_set_slot, "$g_notification_menu_var1", slot_faction_religion, ":lord_religion"),  #madsci make sure the faction gets the pretenders religion

           (faction_get_slot, ":old_marshall", "$g_notification_menu_var1", slot_faction_marshall),
           (try_begin),
             (ge, ":old_marshall", 0),
             (troop_get_slot, ":old_marshall_party", ":old_marshall", slot_troop_leaded_party),
		(gt, ":old_marshall_party", 0),
             (party_is_active, ":old_marshall_party"),
             (party_set_marshal, ":old_marshall_party", 0),
           (try_end),

           (faction_set_slot, "$g_notification_menu_var1", slot_faction_marshall, "trp_player"),
           (faction_set_slot, "$g_notification_menu_var1", slot_faction_ai_state, sfai_default),
           (faction_set_slot, "$g_notification_menu_var1", slot_faction_ai_object, -1),
           (troop_set_slot, "$supported_pretender", slot_troop_occupation, slto_kingdom_hero),
           (call_script, "script_change_troop_renown", "$supported_pretender", 1000), #SB : keep existing renown
           (val_div, ":renown_loss", 2), #and add to it half of what old king lost
           (call_script, "script_change_troop_renown", "$supported_pretender", ":renown_loss"),
           # (troop_set_slot, "$supported_pretender", slot_troop_renown, 1000),

           (party_remove_members, "p_main_party", "$supported_pretender", 1),
           (call_script, "script_troop_set_title_according_to_faction", "$supported_pretender", "$g_notification_menu_var1"), #dckplmc title
           (troop_set_auto_equip, "$supported_pretender",1), #SB : diplomacy suggestion: claimants
           (call_script, "script_set_player_relation_with_faction", "$g_notification_menu_var1", 0),
           (try_for_range, ":cur_kingdom", kingdoms_begin, kingdoms_end),
             (faction_slot_eq, ":cur_kingdom", slot_faction_state, sfs_active),
             (neq, ":cur_kingdom", "$g_notification_menu_var1"),
             (store_relation, ":reln", ":cur_kingdom", "fac_player_supporters_faction"),
             (set_relation, ":cur_kingdom", "$g_notification_menu_var1", ":reln"),
           (try_end),
           (assign, "$supported_pretender", 0),
           (assign, "$supported_pretender_old_faction", 0),
           (assign, "$g_recalculate_ais", 1),
           (call_script, "script_update_all_notes"),
         (try_end),
         (change_screen_return),
        ]),
     ]
  ),


  (
    "notification_rebels_switched_to_faction",0,
    "Rebellion Success^^ Your rebellion is victorious! Your faction now has the sole claim to the title of {s11}, with {s12} as the single ruler.",
    "none",
    [
      (str_store_faction_name, s11, "$g_notification_menu_var1"),
      (str_store_troop_name, s12, "$g_notification_menu_var2"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (try_begin),
        (is_between, "$g_notification_menu_var1", npc_kingdoms_begin, kingdoms_end), #Excluding player kingdom
        (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_for_menu", "$g_notification_menu_var1", pos0),
      (else_try),
        (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),
      (try_end),
      ],
    [
      ("continue",[],"Continue...",
       [
         (assign, "$talk_context", tc_rebel_thanks),
         (start_map_conversation, "$g_notification_menu_var2", -1),
         (change_screen_return),
        ]),
     ]
  ),


  (
    "notification_player_should_consult",0,
##diplomacy start+ Replace "Your minister" with "{reg0?Your minister:{s11}}" and "him" with "{reg4?her:him}".
#Also "sends words" to "sends word"
    "{reg0?Your minister:{s11}} send word that there are problems brewing in the realm which, if left untreated, could sap your authority. You should consult with {reg4?her:him} at your earliest convenience",
	##diplomacy end+
    "none",
    [
      ],
    [
      ("continue",[],"Continue...",
       [
	    (setup_quest_text, "qst_consult_with_minister"),

        (str_store_troop_name, s11, "$g_player_minister"),
        (str_store_party_name, s12, "$g_player_court"),

		(str_store_string, s2, "str_consult_with_s11_at_your_court_in_s12"),
	    (call_script, "script_start_quest", "qst_consult_with_minister", -1),
		##diplomacy start+ Set minister gender and reg0 for generic vs specific
		(assign, reg4, 0),
		(try_begin),
			(call_script, "script_cf_dplmc_troop_is_female", "$g_player_minister"),
			(assign, reg4, 1),
		(try_end),
		(assign, reg0, 1),
		(try_begin),
			(is_between, "$g_player_minister", heroes_begin, heroes_end),
			(assign, reg0, 0),
		(try_end),
		##diplomacy end+

		(quest_set_slot, "qst_consult_with_minister", slot_quest_expiration_days, 30),
		(quest_set_slot, "qst_consult_with_minister", slot_quest_giver_troop, "$g_player_minister"),


	    (change_screen_return),
        ]),
     ]
  ),







  (
    "notification_player_feast_in_progress",0,
##diplomacy start+ make gender correct
    "Feast in Preparation^^Your {wife/husband} has started preparations for a feast in your hall in {s11}",
##diplomacy end+
    "none",
    [
    (str_store_party_name, s11, "$g_notification_menu_var1"),
    ],
    [
      ("continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),


  (
    "notification_lady_requests_visit",0, #add this once around seven days after the last visit, or three weeks, or three months
    "An elderly woman approaches your party and passes one of your men a letter, sealed in plain wax. It is addressed to you. When you break the seal, you see it is from {s15}. It reads, 'I so enjoyed your last visit. {s14} I am currently in {s10}.{s12}'",
    "none",
    [

      (assign, ":lady_no", "$g_notification_menu_var1"),
      (assign, ":center_no", "$g_notification_menu_var2"),

      (str_store_troop_name, s15, ":lady_no"),
      (str_store_party_name, s10, ":center_no"),

      (store_current_hours, ":hours_since_last_visit"),
      (troop_get_slot, ":last_visit_hours", ":lady_no", slot_troop_last_talk_time),
      (val_sub, ":hours_since_last_visit", ":last_visit_hours"),

      (call_script, "script_get_kingdom_lady_social_determinants", ":lady_no"),
      (assign, ":lady_guardian", reg0),

      (str_store_troop_name, s16, ":lady_guardian"),
      (call_script, "script_troop_get_family_relation_to_troop", ":lady_guardian", ":lady_no"),

      (str_clear, s14),
      (try_begin),
        (lt, ":hours_since_last_visit", 336),
        (try_begin),
            (troop_slot_eq, ":lady_no", slot_lord_reputation_type, lrep_otherworldly),
            (str_store_string, s14, "str_as_brief_as_our_separation_has_been_the_longing_in_my_heart_to_see_you_has_made_it_seem_as_many_years"),
        (else_try),
            (str_store_string, s14, "str_although_it_has_only_been_a_short_time_since_your_departure_but_i_would_be_most_pleased_to_see_you_again"),
        (try_end),
      (else_try),
        (ge, ":hours_since_last_visit", 336),
        (try_begin),
            (troop_slot_eq, ":lady_no", slot_lord_reputation_type, lrep_ambitious),
            (str_store_string, s14, "str_although_i_have_received_no_word_from_you_for_quite_some_time_i_am_sure_that_you_must_have_been_very_busy_and_that_your_failure_to_come_see_me_in_no_way_indicates_that_your_attentions_to_me_were_insincere_"),
        (else_try),
            (troop_slot_eq, ":lady_no", slot_lord_reputation_type, lrep_moralist),
            (str_store_string, s14, "str_i_trust_that_you_have_comported_yourself_in_a_manner_becoming_a_gentleman_during_our_long_separation_"),
        (else_try),
            (str_store_string, s14, "str_it_has_been_many_days_since_you_came_and_i_would_very_much_like_to_see_you_again"),
        (try_end),
      (try_end),


      (str_clear, s12),
      (str_clear, s18),
      ##diplomacy start+ Store gender in register for use below
      (assign, ":save_reg4", reg4),
      (call_script, "script_dplmc_store_troop_is_female_reg", ":lady_guardian", 4),
      ##diplomacy end+
      (try_begin),
        (troop_slot_eq, ":lady_guardian", slot_lord_granted_courtship_permission, 0),
        (str_store_string, s12, "str__you_should_ask_my_s11_s16s_permission_but_i_have_no_reason_to_believe_that_he_will_prevent_you_from_coming_to_see_me"),
        (str_store_string, s18, "str__you_should_first_ask_her_s11_s16s_permission"),
      (else_try),
        (troop_slot_eq, ":lady_guardian", slot_lord_granted_courtship_permission, -1),
        (str_store_string, s12, "str__alas_as_we_know_my_s11_s16_will_not_permit_me_to_see_you_however_i_believe_that_i_can_arrange_away_for_you_to_enter_undetected"),
      (else_try),
        (troop_slot_eq, ":lady_guardian", slot_lord_granted_courtship_permission, 1),
        (str_store_string, s12, "str__as_my_s11_s16_has_already_granted_permission_for_you_to_see_me_i_shall_expect_your_imminent_arrival"),
      (try_end),
      ##diplomacy start+ Revert register
      (assign, reg4, ":save_reg4"),
      ##diplomacy end+

      #SB : add tableau for lady
      (set_fixed_point_multiplier, 100),
      (init_position, pos0),
      (position_set_x, pos0, 60),
      (position_set_y, pos0, 20),
      (position_set_z, pos0, 100),
      (set_game_menu_tableau_mesh, "tableau_dplmc_lord_profile", ":lady_no", pos0),
      ],
    [

      ("continue",[],"Tell the woman to inform her mistress that you will come shortly",
       [

        (assign, ":lady_to_visit", "$g_notification_menu_var1"),
        (str_store_troop_name_link, s3, ":lady_to_visit"),
        (str_store_party_name_link, s4, "$g_notification_menu_var2"),

        (str_store_string, s2, "str_visit_s3_who_was_last_at_s4s18"),
        (call_script, "script_start_quest", "qst_visit_lady", ":lady_to_visit"),
        (quest_set_slot, "qst_visit_lady", slot_quest_giver_troop, ":lady_to_visit"), #don't know why this is necessary

        (try_begin),
            (eq, "$cheat_mode", 1),
            (quest_get_slot, ":giver_troop", "qst_visit_lady", slot_quest_giver_troop),
            (str_store_troop_name, s2, ":giver_troop"),
            (display_message, "str_giver_troop_=_s2"),
        (try_end),

        (quest_set_slot, "qst_visit_lady", slot_quest_expiration_days, 30),
        (change_screen_return),
        ]),

      ("continue",[],"Tell the woman to inform her mistress that you are indisposed",
       [
        (troop_set_slot, "$g_notification_menu_var1", slot_lady_no_messages, 1),
        (change_screen_return),
        ]),
     ]
  ),



  ( #pre lady visit
    "garden",0,
    "{s12}",
    "none",
    [

    (call_script, "script_get_kingdom_lady_social_determinants", "$love_interest_in_town"),
	(assign, ":guardian_lord", reg0),
	(str_store_troop_name, s11, "$love_interest_in_town"),

	(try_begin),
		(call_script, "script_npc_decision_checklist_male_guardian_assess_suitor", ":guardian_lord", "trp_player"),
		(lt, reg0, 0),
		(troop_set_slot, ":guardian_lord", slot_lord_granted_courtship_permission, -1),
	(try_end),

	(assign, "$nurse_assists_entry", 0),
	(try_begin),
		(troop_slot_eq, ":guardian_lord", slot_lord_granted_courtship_permission, 1),
		(str_store_string, s12, "str_the_guards_at_the_gate_have_been_ordered_to_allow_you_through_you_might_be_imagining_things_but_you_think_one_of_them_may_have_given_you_a_wink"),
	(else_try), #the circumstances under which the lady arranges for a surreptitious entry
		(call_script, "script_troop_get_relation_with_troop", "trp_player", "$love_interest_in_town"),
		(gt, reg0, 0),

		(assign, ":player_completed_quest", 0),
		(try_begin),
			(check_quest_active, "qst_visit_lady"),
			(quest_slot_eq, "qst_visit_lady", slot_quest_giver_troop, "$love_interest_in_town"),
			(assign, ":player_completed_quest", 1),
		(else_try),
			(check_quest_active, "qst_formal_marriage_proposal"),
			(quest_slot_eq, "qst_formal_marriage_proposal", slot_quest_giver_troop, "$love_interest_in_town"),
			(this_or_next|check_quest_succeeded, "qst_formal_marriage_proposal"),
				(check_quest_failed, "qst_formal_marriage_proposal"),
			(assign, ":player_completed_quest", 1),
		(else_try),
			(check_quest_active, "qst_duel_courtship_rival"),
			(quest_slot_eq, "qst_duel_courtship_rival", slot_quest_giver_troop, "$love_interest_in_town"),
			(this_or_next|check_quest_succeeded, "qst_duel_courtship_rival"),
				(check_quest_failed, "qst_duel_courtship_rival"),
			(assign, ":player_completed_quest", 1),
		(try_end),

		(try_begin),
			(store_current_hours, ":hours_since_last_visit"),
			(troop_get_slot, ":last_visit_time", "$love_interest_in_town", slot_troop_last_talk_time),
			(val_sub, ":hours_since_last_visit", ":last_visit_time"),
			(this_or_next|ge, ":hours_since_last_visit", 96), #at least four days
				(eq, ":player_completed_quest", 1),

			(try_begin),
				(is_between, "$g_encountered_party", towns_begin, towns_end),
				(str_store_string, s12, "str_the_guards_glare_at_you_and_you_know_better_than_to_ask_permission_to_enter_however_as_you_walk_back_towards_your_lodgings_an_elderly_lady_dressed_in_black_approaches_you_i_am_s11s_nurse_she_whispers_urgently_don_this_dress_and_throw_the_hood_over_your_face_i_will_smuggle_you_inside_the_castle_to_meet_her_in_the_guise_of_a_skullery_maid__the_guards_will_not_look_too_carefully_but_i_beg_you_for_all_of_our_sakes_be_discrete"),
				(assign, "$nurse_assists_entry", 1),
			(else_try),
				(str_store_string, s12, "str_the_guards_glare_at_you_and_you_know_better_than_to_ask_permission_to_enter_however_as_you_walk_back_towards_your_lodgings_an_elderly_lady_dressed_in_black_approaches_you_i_am_s11s_nurse_she_whispers_urgently_wait_for_a_while_by_the_spring_outside_the_walls_i_will_smuggle_her_ladyship_out_to_meet_you_dressed_in_the_guise_of_a_shepherdess_but_i_beg_you_for_all_of_our_sakes_be_discrete"),
				(assign, "$nurse_assists_entry", 2),
			(try_end),
		(else_try),
			(str_store_string, s12, "str_the_guards_glare_at_you_and_you_know_better_than_to_ask_permission_to_enter_however_as_you_walk_back_towards_your_lodgings_an_elderly_lady_dressed_in_black_approaches_you_i_am_s11s_nurse_she_whispers_urgently_her_ladyship_asks_me_to_say_that_yearns_to_see_you_but_that_you_should_bide_your_time_a_bit_her_ladyship_says_that_to_arrange_a_clandestine_meeting_so_soon_after_your_last_encounter_would_be_too_dangerous"),
		(try_end),
	(else_try),
		(str_store_string, s12, "str_the_guards_glare_at_you_and_you_know_better_than_to_ask_permission_to_enter"),
	(try_end),

	],
    [

	("enter",
	[
    (call_script, "script_get_kingdom_lady_social_determinants", "$love_interest_in_town"),
	(troop_slot_eq, reg0, slot_lord_granted_courtship_permission, 1)
	], "Enter",
	[
	(jump_to_menu, "mnu_town"),
	(call_script, "script_setup_meet_lady", "$love_interest_in_town", "$g_encountered_party"),
	]
	),

	("nurse",
	[
    (eq, "$nurse_assists_entry", 1),
	], "Go with the nurse",
	[
	(jump_to_menu, "mnu_town"),
	(call_script, "script_setup_meet_lady", "$love_interest_in_town", "$g_encountered_party"),
	]
	),


	("nurse",
	[
    (eq, "$nurse_assists_entry", 2),
	], "Wait by the spring",
	[
	(jump_to_menu, "mnu_town"),
	(call_script, "script_setup_meet_lady", "$love_interest_in_town", "$g_encountered_party"),
	]
	),

	("leave",
	[],
	"Leave",
	[(jump_to_menu, "mnu_town")]),

    ]


  ),


    (
    "kill_local_merchant_begin",0,
    "You spot your victim and follow him, observing as he turns a corner into a dark alley.\
 This will surely be your best opportunity to attack him.",
    "none",
    [
    ],
    [
      ("continue",[],"Continue...",
       [(set_jump_mission,"mt_back_alley_kill_local_merchant"),
        (party_get_slot, ":town_alley", "$qst_kill_local_merchant_center", slot_town_alley),
        (modify_visitors_at_site,":town_alley"),
        (reset_visitors),
        (set_visitor, 0, "trp_player"),
        (set_visitor, 1, "trp_local_merchant"),
        (jump_to_menu, "mnu_town"),
        (jump_to_scene,":town_alley"),
        (change_screen_mission),
        ]),
     ]
  ),


    (
    "debug_alert_from_s65",0,
    "DEBUG ALERT: {s65}",
    "none",
    [
    ],
    [
      ("continue",[],"Continue...",
       [
        (assign, "$debug_message_in_queue", 0),
        (change_screen_return),
        ]),
     ]
  ),

  (
    "auto_return_to_map",0,
    "stub",
    "none",
    [(change_screen_map)],
    []
  ),

    (
    "bandit_lair",0,
    "{s3}",
    "none",
    [
      (try_begin),
        (eq, "$loot_screen_shown", 1),

        (try_for_range, ":bandit_template", bandit_party_templates_begin, bandit_party_templates_end), #SB : template range
          (party_template_slot_eq, ":bandit_template", slot_party_template_lair_party, "$g_encountered_party"),
          (party_template_set_slot, ":bandit_template", slot_party_template_lair_party, 0),
        (try_end),

        (try_begin),
          (ge, "$g_encountered_party", 0),
          (party_is_active, "$g_encountered_party"),
          (party_get_template_id, ":template", "$g_encountered_party"),
          (neq, ":template", "pt_looter_lair"),
          (remove_party, "$g_encountered_party"),
        (try_end),

        (assign, "$g_leave_encounter", 0),
        (change_screen_return),

      (else_try),
        (party_stack_get_troop_id, ":bandit_type", "$g_encountered_party", 0),
        (str_store_troop_name_plural, s4, ":bandit_type"),
        (str_store_string, s5, "str_bandit_approach_defile"),

        #SB : set pictures
        (try_begin),
          (eq, ":bandit_type", "trp_desert_bandit"),
          (str_store_string, s5, "str_bandit_approach_defile"),
        (else_try),
          (eq, ":bandit_type", "trp_mountain_bandit"),
          (str_store_string, s5, "str_bandit_approach_cliffs"),
          (set_background_mesh, "mesh_pic_mountain_bandits"),
        (else_try),
          (eq, ":bandit_type", "trp_forest_bandit"),
          (str_store_string, s5, "str_bandit_approach_swamp"),
          (set_background_mesh, "mesh_pic_forest_bandits"),
        (else_try),
          (eq, ":bandit_type", "trp_taiga_bandit"),
          (str_store_string, s5, "str_bandit_approach_swamp"),
          (set_background_mesh, "mesh_pic_steppe_bandits"),
        (else_try),
          (eq, ":bandit_type", "trp_steppe_bandit"),
          (str_store_string, s5, "str_bandit_approach_thickets"),
          (set_background_mesh, "mesh_pic_steppe_bandits"),\
        (else_try),
          (eq, ":bandit_type", "trp_sabir_bandit"),
          (str_store_string, s5, "str_bandit_approach_thickets"),
          (set_background_mesh, "mesh_pic_steppe_bandits"),
        (else_try),
          (eq, ":bandit_type", "trp_sea_raider"),
          (str_store_string, s5, "str_bandit_approach_cove"),
          (set_background_mesh, "mesh_pic_sea_raiders"),
        (else_try),
          (eq, ":bandit_type", "trp_coptic_footman"),
          (str_store_string, s5, "str_bandit_approach_swamp"),
          (set_background_mesh, "mesh_pic_forest_bandits"),
        (else_try),
          (eq, ":bandit_type", "trp_arab_bandit"),
          (str_store_string, s5, "str_bandit_approach_defile"),
        (try_end),


        (try_begin),
          (party_slot_eq, "$g_encountered_party", slot_party_ai_substate, 0), #used in place of global variable
          (str_store_string, s3, "str_bandit_hideout_preattack"),
        (else_try),
          (party_get_template_id, ":template", "$g_encountered_party"),
          (eq, ":template", "pt_looter_lair"),
          (party_slot_eq, "$g_encountered_party", slot_party_ai_substate, 1), #used in place of global variable
          (str_store_string, s3, "str_lost_startup_hideout_attack"),
        (else_try),
          (party_slot_eq, "$g_encountered_party", slot_party_ai_substate, 1), #used in place of global variable
          (str_store_string, s3, "str_bandit_hideout_failure"),
          (set_background_mesh, "mesh_pic_wounded"),
        (else_try),
          (party_slot_eq, "$g_encountered_party", slot_party_ai_substate, 2), #used in place of global variable
          (str_store_string, s3, "str_bandit_hideout_success"),
          (set_background_mesh, "mesh_pic_victory"),
        (try_end),
      (try_end),
    ],
    [
      ("continue_1",
      [
        (party_slot_eq, "$g_encountered_party", slot_party_ai_substate, 0), #used in place of global variable
      ],
      "Attack the hideout...",

      [
        (party_set_slot, "$g_encountered_party", slot_party_ai_substate, 1),
        (party_get_template_id, ":template", "$g_encountered_party"),
        (assign, "$g_enemy_party", "$g_encountered_party"),

        (try_begin),
          (this_or_next|eq, ":template", "pt_sea_raider_lair"),
          (eq, ":template", "pt_sea_raider_lair_2"),
          (assign, ":bandit_troop", "trp_sea_raider"),
          (assign, ":scene_to_use", "scn_lair_sea_raiders"),
        (else_try),
          (eq, ":template", "pt_forest_bandit_lair"),
          (assign, ":bandit_troop", "trp_forest_bandit"),
          (assign, ":scene_to_use", "scn_lair_forest_bandits"),
        (else_try),
          (eq, ":template", "pt_desert_bandit_lair"),
          (assign, ":bandit_troop", "trp_desert_bandit"),
          (assign, ":scene_to_use", "scn_lair_desert_bandits"),
        (else_try),
          (eq, ":template", "pt_mountain_bandit_lair"),
          (assign, ":bandit_troop", "trp_mountain_bandit"),
          (assign, ":scene_to_use", "scn_lair_mountain_bandits"),
        (else_try),
          (eq, ":template", "pt_taiga_bandit_lair"),
          (assign, ":bandit_troop", "trp_taiga_bandit"),
          (assign, ":scene_to_use", "scn_lair_taiga_bandits"),
        (else_try),
          (eq, ":template", "pt_steppe_bandit_lair"),
          (assign, ":bandit_troop", "trp_steppe_bandit"),
          (assign, ":scene_to_use", "scn_lair_steppe_bandits"),
        (else_try),
          (eq, ":template", "pt_sabir_bandit_lair"), #sabir bandits
          (assign, ":bandit_troop", "trp_sabir_bandit"),
          (assign, ":scene_to_use", "scn_lair_steppe_bandits"),
        (else_try),
          (eq, ":template", "pt_armenian_bandit_lair"), #armenian bandits
          (assign, ":bandit_troop", "trp_armenian_brigand"),
          (assign, ":scene_to_use", "scn_lair_mountain_bandits"),
        (else_try),
          (eq, ":template", "pt_coptic_bandit_lair"),
          (assign, ":bandit_troop", "trp_coptic_footman"),
          (assign, ":scene_to_use", "scn_lair_arab_bandits"),
        (else_try),
          (eq, ":template", "pt_arab_bandit_lair"),
          (assign, ":bandit_troop", "trp_arab_bandit"),
          (assign, ":scene_to_use", "scn_lair_arab_bandits"),
        (else_try),
          (eq, ":template", "pt_looter_lair"),
          (assign, ":bandit_troop", "trp_looter"),
          (assign, ":scene_to_use", "scn_lair_forest_bandits"),
	(else_try),
          (assign, ":bandit_troop", "trp_bandit"), #madsci failsafe
          (assign, ":scene_to_use", "scn_lair_forest_bandits"),
        (try_end),

        (modify_visitors_at_site,":scene_to_use"),
        (reset_visitors),

        (store_character_level, ":player_level", "trp_player"),
        (store_add, ":number_of_bandits_will_be_spawned_at_each_period", 5, ":player_level"),
        (val_div, ":number_of_bandits_will_be_spawned_at_each_period", 3),

        (try_for_range, ":unused", 0, ":number_of_bandits_will_be_spawned_at_each_period"),
          (store_random_in_range, ":random_entry_point", 2, 11),
          (set_visitor, ":random_entry_point", ":bandit_troop", 1),
        (try_end),

        (party_clear, "p_temp_casualties"),

        (set_party_battle_mode),
        (set_battle_advantage, 0),
        (assign, "$g_battle_result", 0),
        (set_jump_mission,"mt_bandit_lair"),

        (jump_to_scene, ":scene_to_use"),
        (change_screen_mission),
      ]),

      ("leave_no_attack",
      [
        (party_slot_eq, "$g_encountered_party", slot_party_ai_substate, 0),
      ],
      "Leave...",
      [
        (change_screen_return),
      ]),

      ("leave_victory",
      [
        (party_slot_eq, "$g_encountered_party", slot_party_ai_substate, 2),
      ],
      "Continue...",
      [
        (try_for_range, ":bandit_template", bandit_party_templates_begin, bandit_party_templates_end), #SB : template range
          (party_template_slot_eq, ":bandit_template", slot_party_template_lair_party, "$g_encountered_party"),
          (party_template_set_slot, ":bandit_template", slot_party_template_lair_party, 0),
        (try_end),

        (party_get_template_id, ":template", "$g_encountered_party"),
        (try_begin),
          (neq, ":template", "pt_looter_lair"),
          (check_quest_active, "qst_destroy_bandit_lair"),
          (quest_slot_eq, "qst_destroy_bandit_lair", slot_quest_target_party, "$g_encountered_party"),
          (call_script, "script_succeed_quest", "qst_destroy_bandit_lair"),
        (try_end),

        (assign, "$g_leave_encounter", 0),
        (change_screen_return),

        (try_begin),
          (eq, "$loot_screen_shown", 0),
          (assign, "$loot_screen_shown", 1),
#          (try_begin),
#            (gt, "$g_ally_party", 0),
#            (call_script, "script_party_add_party", "$g_ally_party", "p_temp_party"), #Add remaining prisoners to ally TODO: FIX it.
#          (else_try),
#            (party_get_num_attached_parties, ":num_quick_attachments", "p_main_party"),
#            (gt, ":num_quick_attachments", 0),
#            (party_get_attached_party_with_rank, ":helper_party", "p_main_party", 0),
#            (call_script, "script_party_add_party", ":helper_party", "p_temp_party"), #Add remaining prisoners to our reinforcements
#          (try_end),
          (troop_clear_inventory, "trp_temp_troop"),

          (party_get_num_companion_stacks, ":num_stacks", "p_temp_casualties"),
          (try_for_range, ":stack_no", 0, ":num_stacks"),
            (party_stack_get_troop_id, ":stack_troop", "p_temp_casualties", ":stack_no"),
            (try_begin),
              (party_stack_get_size, ":stack_size", "p_temp_casualties", ":stack_no"),
              (party_stack_get_troop_id, ":stack_troop", "p_temp_casualties", ":stack_no"),
              (gt, ":stack_size", 0),
              (party_add_members, "p_total_enemy_casualties", ":stack_troop", ":stack_size"), #addition_to_p_total_enemy_casualties
              (party_stack_get_num_wounded, ":stack_wounded_size", "p_temp_casualties", ":stack_no"),
              (gt, ":stack_wounded_size", 0),
              (party_wound_members, "p_total_enemy_casualties", ":stack_troop", ":stack_wounded_size"),
            (try_end),
          (try_end),

          (call_script, "script_party_calculate_loot", "p_total_enemy_casualties"), #p_encountered_party_backup changed to total_enemy_casualties
          (gt, reg0, 0),
          (troop_sort_inventory, "trp_temp_troop"),
          ##diplomacy start+
          ##OLD:
          #(change_screen_loot, "trp_temp_troop"),
          ##NEW:
          ##jump to rubik's CC autoloot
          (try_begin),
            (call_script, "script_party_calculate_loot", "p_total_enemy_casualties"),
            (assign, "$dplmc_return_menu", "mnu_bandit_lair"),
            #SB : variable resets
            (assign, "$lord_selected", "trp_player"),
            (str_clear, dplmc_loot_string),
            (jump_to_menu, "mnu_dplmc_manage_loot_pool"),
          (else_try),
             #Fall back to old behavior
            (change_screen_loot, "trp_temp_troop"),
          (try_end),
          ##diplomacy end+
        (try_end),

        (try_begin),
          (ge, "$g_encountered_party", 0),
          (party_is_active, "$g_encountered_party"),
          (party_get_template_id, ":template", "$g_encountered_party"),
          (eq, ":template", "pt_looter_lair"),
          (remove_party, "$g_encountered_party"),
        (try_end),
      ]),

      ("leave_defeat",
      [
        (party_slot_eq, "$g_encountered_party", slot_party_ai_substate, 1),
      ],
      "Continue...",
      [
        (try_for_range, ":bandit_template", bandit_party_templates_begin, bandit_party_templates_end), #SB : template range
          (party_template_slot_eq, ":bandit_template", slot_party_template_lair_party, "$g_encountered_party"),
          (party_template_set_slot, ":bandit_template", slot_party_template_lair_party, 0),
        (try_end),

        (try_begin),
          (party_get_template_id, ":template", "$g_encountered_party"),
          (neq, ":template", "pt_looter_lair"),
          (check_quest_active, "qst_destroy_bandit_lair"),
          (quest_slot_eq, "qst_destroy_bandit_lair", slot_quest_target_party, "$g_encountered_party"),
          (call_script, "script_fail_quest", "qst_destroy_bandit_lair"),
        (try_end),

        (try_begin),
          (ge, "$g_encountered_party", 0),
          (party_is_active, "$g_encountered_party"),
          (party_get_template_id, ":template", "$g_encountered_party"),
          (neq, ":template", "pt_looter_lair"),
          (remove_party, "$g_encountered_party"),
        (try_end),

        (assign, "$g_leave_encounter", 0),

        (try_begin),
            (party_is_active, "$g_encountered_party"),
            (party_set_slot, "$g_encountered_party", slot_party_ai_substate, 0),
        (try_end),

        (change_screen_return),
        ]),

     ]
  ),


  (
    "notification_player_faction_political_issue_resolved",0,
    "After consulting with the peers of the realm, {s10} has decided to confer {s11} on {s12}.",
    "none",
    [
    (assign, ":faction_issue_resolved", "$g_notification_menu_var1"),
    (assign, ":faction_decision", "$g_notification_menu_var2"),
    (faction_get_slot, ":leader", "$players_kingdom", slot_faction_leader),
    (str_store_troop_name, s10, ":leader"),
    (try_begin),
        (eq, ":faction_issue_resolved", 1),
        (str_store_string, s11, "str_the_marshalship"),
    (else_try),
        (str_store_party_name, s11, ":faction_issue_resolved"),
    (try_end),
    (str_store_troop_name, s12, ":faction_decision"),

    ],
    [
       ("continue",
       [],"Continue...",
       [
        (change_screen_return),
        ]),


    ]
  ),

  (
    "notification_player_faction_political_issue_resolved_for_player",0,
    "After consulting with the peers of the realm, {s10} has decided to confer {s11} on you. You may decline the honor, but it will probably mean that you will not receive other awards for a little while.{s12}",
    "none",
    [
    (faction_get_slot, ":leader", "$players_kingdom", slot_faction_leader),
    (str_store_troop_name, s10, ":leader"),
    (faction_get_slot, ":issue", "$players_kingdom", slot_faction_political_issue),
    (try_begin),
        (eq, ":issue", 1),
        (str_store_string, s11, "str_the_marshalship"),
        (str_store_string, s12, "@^^Note that so long as you remain marshal, the lords of the realm will be expecting you to lead them on campaign. So, if you are awaiting a feast, either for a wedding or for other purposes, you may wish to resign the marshalship by speaking to your liege."),
    (else_try),
        (str_clear, s12),
        (str_store_party_name, s11, ":issue"),
    (try_end),
    ],
    [
       ("accept",
       [],"Accept the honor",
       [
        (faction_get_slot, ":issue", "$players_kingdom", slot_faction_political_issue),

        (try_begin),
            (eq, ":issue", 1),
            (call_script, "script_check_and_finish_active_army_quests_for_faction", "$players_kingdom"),
            (call_script, "script_appoint_faction_marshall", "$players_kingdom", "trp_player"),
            (unlock_achievement, ACHIEVEMENT_AUTONOMOUS_COLLECTIVE),
        (else_try),
            (call_script, "script_give_center_to_lord", ":issue", "trp_player", 0), #Zero means don't add garrison
        (try_end),

        (faction_set_slot, "$players_kingdom", slot_faction_political_issue, 0),
        (try_for_range, ":active_npc", active_npcs_begin, active_npcs_end),
            (store_faction_of_troop, ":active_npc_faction", ":active_npc"),
            (eq, ":active_npc_faction", "$players_kingdom"),
            (troop_set_slot, ":active_npc", slot_troop_stance_on_faction_issue, -1),
        (try_end),
        (change_screen_return),
        ]),

       ("decline",
       [],"Decline the honor",
       [
        (faction_get_slot, ":issue", "$players_kingdom", slot_faction_political_issue),
        (try_begin),
            (is_between, ":issue", centers_begin, centers_end),
            (assign, "$g_dont_give_fief_to_player_days", 30),
        (else_try),
            (assign, "$g_dont_give_marshalship_to_player_days", 30),
        (try_end),

        (try_for_range, ":active_npc", active_npcs_begin, active_npcs_end),
            (store_faction_of_troop, ":active_npc_faction", ":active_npc"),
            (eq, ":active_npc_faction", "$players_kingdom"),
            (troop_set_slot, ":active_npc", slot_troop_stance_on_faction_issue, -1),
        (try_end),
        (change_screen_return),
        ]),
    ]
  ),

  ("start_phase_2_5",mnf_disable_all_keys,
    "{!}{s16}",
    "none",
    [
      (str_store_party_name, s1, "$g_starting_town"),
      (str_store_string, s16, "$g_journey_string"),
      (call_script, "script_player_arrived"),
    ],
    [
    #SB : skip quest
      ("skip_quest",[], "Take a nice long walk around {s1}...",
       [
        (assign, "$g_starting_town", -1), #this disables the startup merchant from taverns
        #let triggers load first
        (rest_for_hours, 3, 5, 0),
        (assign, "$auto_enter_town", "$current_town"),
        # (start_encounter, "$current_town"),
        (change_screen_return),
       ]),

#      ("continue",[], "Go find an inn...",
#       [
#        (jump_to_menu, "mnu_start_phase_3"),
#       ]),
    ]
  ),


  ("start_phase_3",mnf_disable_all_keys,
    "{s16}^^You are exhausted by the time you find the inn in {s1}, and fall asleep quickly. However, you awake before dawn and are eager to explore your surroundings. You venture out onto the streets, which are still deserted. All of a sudden, you hear a sound that stands the hairs of your neck on end -- the rasp of a blade sliding from its scabbard...",
    "none",
    [
      (assign, ":continue", 1),
      (try_begin),
        (eq, "$current_startup_quest_phase", 1),
        (try_begin),
          (eq, "$g_killed_first_bandit", 1),
          (str_store_string, s11, "str_killed_bandit_at_alley_fight"),
        (else_try),
          (str_store_string, s11, "str_wounded_by_bandit_at_alley_fight"),
        (try_end),
        (jump_to_menu, "mnu_start_phase_4"),
        (assign, ":continue", 0),
      (else_try),
        (eq, "$current_startup_quest_phase", 3),
        (try_begin),
          (eq, "$g_killed_first_bandit", 1),
          (str_store_string, s11, "str_killed_bandit_at_alley_fight"),
        (else_try),
          (str_store_string, s11, "str_wounded_by_bandit_at_alley_fight"),
        (try_end),
        (jump_to_menu, "mnu_start_phase_4"),
        (assign, ":continue", 0),
      (try_end),

      (str_store_party_name, s1, "$g_starting_town"),
      (str_clear, s16),
      (eq, ":continue", 1),

    ],
    [

      ("continue",[], "Continue...",
       [
         (assign, "$g_starting_town", "$current_town"),
         # (call_script, "script_player_arrived"),
         # (party_set_morale, "p_main_party", 100), #SB : roll this into previous script
         (set_encountered_party, "$current_town"),
         #SB : play sound
         (play_sound, "snd_draw_sword"),
         (call_script, "script_prepare_alley_to_fight"),
       ]),
    ]
  ),

  ("start_phase_4",mnf_disable_all_keys,
    "{s11}",
    "none",
    [
      (assign, ":continue", 1),
      (try_begin),
        (eq, "$current_startup_quest_phase", 2),
        (change_screen_return),
        (assign, ":continue", 0),
      (else_try),
        (eq, "$current_startup_quest_phase", 3),
        (str_store_string, s11, "str_merchant_and_you_call_some_townsmen_and_guards_to_get_ready_and_you_get_out_from_tavern"),
      (else_try),
        (eq, "$current_startup_quest_phase", 4),
        (try_begin),
          (eq, "$g_killed_first_bandit", 1),
          (str_store_string, s11, "str_town_fight_ended_you_and_citizens_cleaned_town_from_bandits"),
        (else_try),
          (str_store_string, s11, "str_town_fight_ended_you_and_citizens_cleaned_town_from_bandits_you_wounded"),
        (try_end),
      (try_end),

      (eq, ":continue", 1),
    ],
    [
      ("continue",
      [
        (this_or_next|eq, "$current_startup_quest_phase", 1),
        (eq, "$current_startup_quest_phase", 4),
      ],
      "Continue...",
      [
        (assign, "$town_entered", 1),

        #(try_begin),
        #  (eq, "$current_town", "p_town_1"),
        #  (assign, ":town_merchant", "trp_nord_merchant"),
        #  (assign, ":town_room_scene", "scn_town_1_room"),
        #(else_try),
        #  (eq, "$current_town", "p_town_5"),
        #  (assign, ":town_merchant", "trp_rhodok_merchant"),
        #  (assign, ":town_room_scene", "scn_town_5_room"),
        #(else_try),
        #  (eq, "$current_town", "p_town_6"),
        #  (assign, ":town_merchant", "trp_swadian_merchant"),
        #  (assign, ":town_room_scene", "scn_town_6_room"),
        #(else_try),
        #  (eq, "$current_town", "p_town_8"),
        #  (assign, ":town_merchant", "trp_vaegir_merchant"),
        #  (assign, ":town_room_scene", "scn_town_8_room"),
        #(else_try),
        #  (eq, "$current_town", "p_town_10"),
        #  (assign, ":town_merchant", "trp_khergit_merchant"),
        #  (assign, ":town_room_scene", "scn_town_10_room"),
        #(else_try),
        #  (eq, "$current_town", "p_town_19"),
        #  (assign, ":town_merchant", "trp_sarranid_merchant"),
        #  (assign, ":town_room_scene", "scn_town_19_room"),
        #(try_end),

        #(modify_visitors_at_site, ":town_room_scene"),
        #(reset_visitors),
        #(set_visitor, 0, "trp_player"),
        #(set_visitor, 9, ":town_merchant"),

        #(assign, "$talk_context", tc_merchants_house),

        #(assign, "$dialog_with_merchant_ended", 0),

        #(set_jump_mission, "mt_meeting_merchant"),

        #(jump_to_scene, ":town_room_scene"),
        (change_screen_mission),
      ]),

      ("continue",
      [
        (eq, "$current_startup_quest_phase", 3),
      ],
      "Continue...",
      [
        (call_script, "script_prepare_town_to_fight"),
      ]),
    ]
  ),


  ("lost_tavern_duel",mnf_disable_all_keys,
    "{s11}{s12}",
    "none",
    [
    (str_clear, s11),
    (str_clear, s12),
    #use s11 as primary indicator string
	(try_begin),
		(agent_get_troop_id, ":type", "$g_main_attacker_agent"),
		(eq, ":type", "trp_belligerent_drunk"),
		(str_store_string, s11, "str_lost_tavern_duel_ordinary"),
	(else_try),
		(agent_get_troop_id, ":type", "$g_main_attacker_agent"),
		(eq, ":type", "trp_hired_assassin"),
		(str_store_string, s11, "str_lost_tavern_duel_assassin"),
	(try_end),
	(troop_set_slot, "trp_hired_assassin", slot_troop_cur_center, -1),
	(troop_set_slot, "trp_belligerent_drunk", slot_troop_cur_center, -1), #remove him for now

    #use s12 for additional info like lost purse, etc
    #SB : penalty for fighting while disguised
    (try_begin),
      (gt, "$sneaked_into_town", disguise_none),
      (store_random_in_range, ":random_no", -100, 200),
      # (ge, ":random_no", "$g_player_luck"),
      (ge, ":random_no", 0),
      (str_store_string, s12, "@ Unfortunately, when the guards inquired about the tavern brawl, your description was recognized and you were in no condition to fight them off."),
    (try_end),
    ],
    [
      ("continue",[(eq, "$sneaked_into_town", disguise_none),],"Continue...",
       [
         (jump_to_menu, "mnu_town"),
         (troop_set_health, "trp_player", 25),
         #SB : renown loss, less than losing to bandits
         (call_script, "script_change_troop_renown", "trp_player", -1),
       ]),

      ("surrender",[(gt, "$sneaked_into_town", disguise_none),],"Surrender...",
       [
         (jump_to_menu, "mnu_captivity_castle_taken_prisoner"),
       ]),
    ]
  ),


  #SB : standardize court requirements, 1x tool + 2x bolts of wool/velvet/linen cloth
  ("establish_court",mnf_disable_all_keys,
    "To establish {s4} as your court will require a small refurbishment. In particular, you will need a set of tools and two bolts of fabric. You own {reg1} of the former and {reg0} of the latter. It may also take a short while for some of your followers to relocate here. Do you wish to proceed?",
    "none",
    [
      (call_script, "script_dplmc_count_item_for_court", "trp_player", -1, -1),
      (assign, "$diplomacy_var", reg0),
      (assign, "$diplomacy_var2", reg1),
      (call_script, "script_dplmc_count_item_for_court", "trp_household_possessions", -1, -1),
      (val_add, "$diplomacy_var", reg0),
      (val_add, "$diplomacy_var2", reg1),
      (str_store_party_name, s4, "$g_encountered_party"),
      (assign, reg0, "$diplomacy_var"),
      (assign, reg1, "$diplomacy_var2"),
    ],

    [
      ("establish",[
      # (player_has_item, "itm_tools"),
      # (player_has_item, "itm_velvet"),
      (ge, "$diplomacy_var", 2),
      (ge, "$diplomacy_var2", 1), #SB : one set of tools
      # conditions already handled in parent menu
      # (store_and, ":name_set", "$players_kingdom_name_set", rename_center),
      # (eq, ":name_set", 0),
      ],"Establish {s4} as your court",
       [
        (assign, "$g_player_court", "$current_town"),
        # (troop_remove_item, "trp_player", "itm_tools"),
        # (troop_remove_item, "trp_player", "itm_velvet"),
        (call_script, "script_dplmc_count_item_for_court", "trp_household_possessions", 2, 1),
        (call_script, "script_dplmc_count_item_for_court", "trp_player", reg0, reg1),
        (jump_to_menu, "mnu_town"),
       ]),

      #SB : allows checking inventory to see how much you need
      ("check_inv",[],"Check your household inventory",
       [
        (change_screen_loot, "trp_household_possessions"),
       ]),
    # ("capital_exists",
      # [
        # (store_and, ":name_set", "$players_kingdom_name_set", rename_center),
        # (ge, ":name_set", rename_center),
        # (str_store_party_name, s1, "$g_player_court"),
        # (disable_menu_option),
      # ],
       # "You cannot move the court as your capital is at {s1}.",
       # [
     # ]),


      ("continue",[],"Hold off...",
       [
         (jump_to_menu, "mnu_town"),
       ]),
    ]
  ),

  ("notification_relieved_as_marshal", mnf_disable_all_keys,
    "{s4} wishes to inform you that your services as marshal are no longer required. In honor of valiant efforts on behalf of the realm over the last {reg4} days, however, {reg8?she:he} offers you a purse of {reg5} siliquae.",
    "none",
    [
	(assign, reg4, "$g_player_days_as_marshal"),



	(store_div, ":renown_gain", "$g_player_days_as_marshal",4),
	(val_min, ":renown_gain", 20),
	(store_mul, ":denar_gain", "$g_player_days_as_marshal", 50),
	(val_max, ":denar_gain", 200),
	(val_min, ":denar_gain", 4000),
	(troop_add_gold, "trp_player", ":denar_gain"),
	(call_script, "script_change_troop_renown", "trp_player", ":renown_gain"),
	(assign, "$g_player_days_as_marshal", 0),
	(assign, "$g_dont_give_marshalship_to_player_days", 15),
	(assign, reg5, ":denar_gain"),

	(faction_get_slot, ":faction_leader", "$players_kingdom", slot_faction_leader),
	(str_store_troop_name, s4, ":faction_leader"),
	##diplomacy start+ get gender with script
	#(troop_get_type, reg8, ":faction_leader"),#<- OLD
	(assign, ":save_reg0", reg0),
	(call_script, "script_dplmc_store_troop_is_female", ":faction_leader"),
	(assign, reg8, reg0),
	(assign, reg0, ":save_reg0"),
	##diplomacy end+
	],

	 [
      ("continue",[],"Continue",
       [
         (change_screen_return),
       ]),
    ]
  ),


  ##diplomacy begin
########################################################
# Autoloot Game Menus Begin
########################################################

	##########################################################
	# Inventory allocation / Loot allocation Game Menu  -  by Fisheye
	# Parameters:
	# $return_menu : return to this menu after managing loot.  0 if this menu is called via random encounter
	##diplomacy start+
	#Added "return_menu", renaming it to "$dplmc_return_menu"
	##diplomacy end+
	("dplmc_manage_loot_pool", mnf_enable_hot_keys,
		"{s10}^{s30}",
		"none",
		[
			##diplomacy start+
			#Use a different troop!
			#(assign, "$pool_troop", "trp_dplmc_chamberlain"),
			(assign, "$pool_troop", "trp_temp_troop"),
			#Make sure things are initialized
			(call_script, "script_dplmc_initialize_autoloot", 0),#argument "0" means this does nothing if deemed unnecessary
			##diplomacy end+
			(assign, reg20,0),
			(troop_get_inventory_capacity, ":inv_cap", "$pool_troop"),
			(try_for_range, ":i_slot", 0, ":inv_cap"),
				(troop_get_inventory_slot, ":item_id", "$pool_troop", ":i_slot"),
				(ge, ":item_id", 0),
				(neg|troop_has_item_equipped, "$pool_troop", ":item_id"),
				(val_add, reg20, 1),
			(try_end),
			# reg20 now contains number of items in loot pool
			(try_begin),
				(eq, reg20, 0),
				(str_store_string, s10, "str_dplmc_item_pool_no_items"),
				(str_store_string, s20, "str_dplmc_item_pool_leave"),
			(else_try),
				(eq, reg20, 1),
				(str_store_string, s10, "str_dplmc_item_pool_one_item"),
				(str_store_string, s20, "str_dplmc_item_pool_abandon"),
			(else_try),
				(str_store_string, s10, "str_dplmc_item_pool_many_items"),
				(str_store_string, s20, "str_dplmc_item_pool_abandon"),
			(try_end),
		  ## CC
			(try_begin), #only show when we don't have equipment logs
              (str_is_empty, dplmc_loot_string),
			  (set_fixed_point_multiplier, 100),
              (position_set_x, pos0, 20),
              (position_set_y, pos0, 30),
              (position_set_z, pos0, 80),
			  (set_game_menu_tableau_mesh, "tableau_game_character_sheet", "$lord_selected", pos0),
			(try_end),
		  ## CC

          #SB : str30 shows items looted after script_dplmc_auto_loot_troop was called
          # (try_begin),
            # (neg|str_is_empty, dplmc_loot_string),
            # (str_store_string, s10, "@{s10}^^{s30}"),
          # (try_end),
		],
		[
			("dplmc_auto_loot",
				[
					(eq, "$inventory_menu_offset",0),
					(store_free_inventory_capacity, ":space", "$pool_troop"),
					(ge, ":space", 10),
					(gt, reg20, 0),
				],
				##diplomacy start+
				#"Let your heroes select gear from the item pool.",
				"Let your heroes select gear from the items on the ground.",
				##diplomacy end+
				[
					# (set_player_troop, "trp_player"),
					# (assign, "$lord_selected", "trp_player"),
					##diplomacy start+
					(call_script, "script_dplmc_initialize_autoloot", 0),#argument "0" means this does nothing if deemed unnecessary
					##diplomacy end+
					(jump_to_menu, "mnu_dplmc_auto_loot")
				]
			),
			("dplmc_auto_loot_no",
				[
					(eq, "$inventory_menu_offset",0),
					(store_free_inventory_capacity, ":space", "$pool_troop"),
					(lt, ":space", 10),
					(disable_menu_option)
				],
				"Insufficient item pool space for auto-upgrade.",
				[]
			),
			("dplmc_loot",
				[],
				##diplomacy start+
				#"Access the item pool.",
				"Access the items on the ground.",
				##diplomacy end+
				[
					(change_screen_loot, "$pool_troop"),
				]
			),

            #SB : improve usability, if only change_screen_loot worked with the player
			("dplmc_loot_player",
				[(is_between, "$lord_selected", companions_begin, companions_end),],
				"Access the captain's inventory.",
                #can't use honorific, since the player troop is the companion and strings will be malformed
				[
					(set_player_troop, "trp_player"),
					(change_screen_equip_other, "$lord_selected"),
					(assign, "$lord_selected", "trp_player"),
				]
			),

            #SB : improve usability, if only change_screen_loot worked with the player
			("dplmc_loot_spouse",
				[
                 (neq, "$lord_selected", "trp_player"),
                 (this_or_next|troop_slot_eq, "$lord_selected", slot_troop_spouse, "trp_player"),
                 (troop_slot_eq, "trp_player", slot_troop_spouse, "$lord_selected"),
                ],
				"Access your spouse's inventory.",
                #can't use honorific, since the player troop is the companion and strings will be malformed
				[
					(set_player_troop, "trp_player"),
					(change_screen_equip_other, "$lord_selected"),
					(assign, "$lord_selected", "trp_player"),
				]
			),
      ("dplmc_auto_loot_upgrade_management", [],
##diplomacy start+
#        "Upgrade management of the NPC's equipments.",
         "Update management of NPC equipment.", #SB : just use acronym
##diplomacy end+
        [
          (party_get_num_companion_stacks, ":num_stacks", "p_main_party"),
          ##nested diplomcy start+ Add error check.

          ##nested diplomacy end+
          (try_begin),
            (is_between, "$lord_selected", companions_begin, companions_end),
            (assign, "$temp", "$lord_selected"),
          (else_try),
            (assign, "$temp", -1),
            (try_for_range, ":stack_no", 0, ":num_stacks"),
              (party_stack_get_troop_id,   ":stack_troop", "p_main_party", ":stack_no"),
              (is_between, ":stack_troop", companions_begin, companions_end),
              (assign, "$temp", ":stack_troop"),
              (assign, ":num_stacks", 0),
            (try_end),
          (try_end),
          ##nested diplomacy start+   Add error check.
          (call_script, "script_dplmc_initialize_autoloot", 0),#argument "0" means this does nothing if deemed unnecessary
          (try_begin),#<- dplmc+ added
            (ge, "$temp", 1),#<- dplmc+ added
            (assign, "$temp_2", -1), #SB : other globals
            (try_for_range, ":item_slot", ek_item_0, ek_food),
              (troop_set_slot, "trp_stack_selection_ids", ":item_slot", 0),
            (try_end),
            (str_clear, dplmc_loot_string),
            (start_presentation, "prsnt_dplmc_autoloot_upgrade_management"),
          (try_end),
          ##nested diplomacy end+
        ]
      ),

      #all other options will reset player eventually, this is for convenience
      ("dplmc_auto_loot_reset_player", [(neq, "$lord_selected", "trp_player")],
         "Reset current troop to the player",
        [
          (assign, "$lord_selected", "trp_player"),
          (set_player_troop, "$lord_selected"),
        ]
      ),
			("dplmc_leave",
				[],
				"{s20}",
				[
				##diplomacy start+
				#Actually abandon the lost loot
				(troop_get_inventory_capacity, ":inv_cap", "$pool_troop"),
				(try_for_range, ":i_slot", 10, ":inv_cap"),
					(troop_get_inventory_slot, ":item_id", "$pool_troop", ":i_slot"),
					(ge, ":item_id", 0),
					(neg|troop_has_item_equipped, "$pool_troop", ":item_id"),
					(troop_set_inventory_slot, "$pool_troop", ":i_slot", -1), #delete it
					(troop_inventory_slot_set_item_amount, "$pool_troop", ":i_slot", 0),
				(try_end),

				#(jump_to_menu, "mnu_camp"),
				(set_player_troop, "trp_player"),
				(jump_to_menu, "$dplmc_return_menu"),
				(assign, "$pool_troop", -1), #mark ending
				##diplomacy end+
				]
			),
			##nested diplomacy start+
			#Leave & take everything you can
			("dplmc_leave_and_take_a",
				[
				(store_free_inventory_capacity, ":space", "trp_player"),
				(lt, ":space", reg20),
				(gt, reg20, 0),
				(gt, ":space", 0),
				(assign, reg0, ":space"),
				],
				"Gather {reg0} of the {reg20} items on the ground and leave.",
				[
					(store_free_inventory_capacity, ":space", "trp_player"),
					#Take remaining items for player
					(troop_get_inventory_capacity, ":inv_cap", "$pool_troop"),
					(troop_sort_inventory, "$pool_troop"),
					(try_for_range, ":i_slot", 10, ":inv_cap"),
					    (gt, ":space", 0),
					    (troop_get_inventory_slot, ":item_id", "$pool_troop", ":i_slot"),
					    (ge, ":item_id", 0),
					    (neg|troop_has_item_equipped, "$pool_troop", ":item_id"),
					    (troop_get_inventory_slot_modifier, ":imod", "$pool_troop", ":i_slot"),
					    (troop_add_item, "trp_player", ":item_id", ":imod"),#give item to player
					    (val_sub, ":space", 1),
					    (troop_set_inventory_slot, "$pool_troop", ":i_slot", -1), #remove item from pool
					    (troop_inventory_slot_set_item_amount, "$pool_troop", ":i_slot", 0),
					(try_end),
					#(jump_to_menu, "mnu_camp"),
					(set_player_troop, "trp_player"),
					(jump_to_menu, "$dplmc_return_menu"),
					(assign, "$pool_troop", -1), #mark ending
				]
			),
			("dplmc_leave_and_take_b",
				[
				(store_free_inventory_capacity, ":space", "trp_player"),
				(ge, ":space", reg20),
				(gt, reg20, 0),#don't show if nothing is on the ground
				(store_sub, reg0, reg20, 1),
				],
				"Gather the remaining {reg20} {reg0?items:item} on the ground and leave.",
				[
					(store_free_inventory_capacity, ":space", "trp_player"),
					#Take remaining items for player
					(troop_get_inventory_capacity, ":inv_cap", "$pool_troop"),
					(try_for_range, ":i_slot", 10, ":inv_cap"),
					    (gt, ":space", 0),
					    (troop_get_inventory_slot, ":item_id", "$pool_troop", ":i_slot"),
					    (ge, ":item_id", 0),
					    (neg|troop_has_item_equipped, "$pool_troop", ":item_id"),
					    (troop_get_inventory_slot_modifier, ":imod", "$pool_troop", ":i_slot"),
					    (troop_add_item, "trp_player", ":item_id", ":imod"),#give item to player
					    (val_sub, ":space", 1),
					    (troop_set_inventory_slot, "$pool_troop", ":i_slot", -1), #remove item frlom pool
					    (troop_inventory_slot_set_item_amount, "$pool_troop", ":i_slot", 0),
					(try_end),
					(set_player_troop, "trp_player"),
					(jump_to_menu, "$dplmc_return_menu"),
					(assign, "$pool_troop", -1), #mark ending
				]
			),
			("dplmc_leave_and_take_c",
				[
				(store_free_inventory_capacity, ":space", "trp_player"),
				(eq, ":space", 0),
				(gt, reg20, 0),#don't show if nothing is on the ground
				(disable_menu_option),
				],
				"There is no space left in your bags.",
				[
				]
			),
			##nested diplomacy end+
		]
	),

	("dplmc_auto_loot",
		0,
##diplomacy start+
		"Your heroes will automatically grab items from the loot pool based on their pre-selected upgrade options. Heroes listed first in the party order will have first pick. Any equipment no longer needed will be dropped back into the loot pool. Any items in the loot pool will be lost when you leave.^ Are you sure you wish to do this?",
##diplomacy end+
		"none",
		[],
		[
			("dplmc_autoloot_no",
				[],
				"No, I've changed my mind.",
				[
					(jump_to_menu, "mnu_dplmc_manage_loot_pool"),
				]
			),
			("dplmc_autoloot_yes",
				[],
				"Yes, perform the upgrading.",
				[
					##diplomacy start+
					(call_script, "script_dplmc_initialize_autoloot", 0),#argument "0" means this does nothing if deemed unnecessary
					(assign, "$pool_troop", "trp_temp_troop"),
					#SB : reset variables
					(set_player_troop, "trp_player"),
					(assign, "$lord_selected", "trp_player"),
					##diplomacy end+
					(call_script, "script_dplmc_auto_loot_all", "trp_temp_troop", dplmc_loot_string),
					(jump_to_menu, "mnu_dplmc_manage_loot_pool"),
				]
			),

            #SB : individual looting
			("dplmc_autoloot_personal",
				[(is_between, "$lord_selected", companions_begin, companions_end),(str_store_troop_name, s1, "$lord_selected")],
				"Yes, only upgrade {s1}.",
				[
					##diplomacy start+
					(assign, "$pool_troop", "trp_temp_troop"),
					(call_script, "script_dplmc_auto_loot_troop", "$lord_selected", "$pool_troop", dplmc_loot_string),
					##diplomacy end+
					(jump_to_menu, "mnu_dplmc_manage_loot_pool"),
				]
			),
		]
	),

  (
    "dplmc_notification_tribute_declared",0,
    "Tributary established^^After a long and bloody period of wars, {s1} has finally been subjugated by {s2}!^{s3} has been forced to pay a high tribute\
 and his diplomacy is now limited due to his new overlord.^{s57}",
    "none",
    [

    (str_clear, s57),
    (faction_get_slot, ":leader", "$g_notification_menu_var1", slot_faction_leader),
    (str_store_troop_name, s3, ":leader"),
    (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (str_store_faction_name, s2, "$g_notification_menu_var2"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (store_sub, ":faction_1", "$g_notification_menu_var1", kingdoms_begin),
      (store_sub, ":faction_2", "$g_notification_menu_var2", kingdoms_begin),
      (val_mul, ":faction_1", 128),
      (val_add, ":faction_1", ":faction_2"),
      (set_game_menu_tableau_mesh, "tableau_2_factions_mesh", ":faction_1", pos0),
      ],
    [
      ("dplmc_continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),
  (
    "notification_tributary_offer",0,
    "You recieve a message from {s1} of the {s2}. He offers you a tribute of 20,000 siliquae and to submit to you. The {s2} would be your vassal state from now on.^^\
 As vassal state they are not able to declare war or peace and will follow you into wars.",
    "none",
    [
    (str_store_faction_name, s2, "$g_notification_menu_var1"),
    (faction_get_slot, ":leader", "$g_notification_menu_var1", slot_faction_leader),
    (str_store_troop_name, s1, ":leader"),
      ],
    [
      ("dplmc_continue",[],"Accept. {s2} are now my tributaries.",
       [
       (call_script, "script_dplmc_start_tributary_between_kingdoms", "$g_notification_menu_var1", "fac_player_supporters_faction", 1),
       (change_screen_return),
        ]),

      ("dplmc_continue",[],"Reject the offer.",
       [(change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_notification_alliance_declared",0,
    "Alliance Agreement^^{s1} and {s2} have formed an alliance!^{s57}",
    "none",
    [

	  (str_clear, s57),

	  (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (str_store_faction_name, s2, "$g_notification_menu_var2"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (store_sub, ":faction_1", "$g_notification_menu_var1", kingdoms_begin),
      (store_sub, ":faction_2", "$g_notification_menu_var2", kingdoms_begin),
      (val_mul, ":faction_1", 128),
      (val_add, ":faction_1", ":faction_2"),
      (set_game_menu_tableau_mesh, "tableau_2_factions_mesh", ":faction_1", pos0),
      ],
    [
      ("dplmc_continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),

("notification_casus_belli_decide_player",0,
    "Your realm has suffered provocations from the people of {s2}. You still haven't reacted to the provocations."
    +" You can declare war using this casus belli or demand tribute as reparation."
    +" If you decide to ignore the matter you will suffer a loss of authority.",
    "none",
    [


        (str_store_faction_name, s2, "$g_notification_menu_var2"),

        (set_fixed_point_multiplier, 100),
        (position_set_x, pos0, 65),
        (position_set_y, pos0, 30),
        (position_set_z, pos0, 170),
        (store_sub, ":faction_1", "$g_notification_menu_var1", kingdoms_begin),
        (store_sub, ":faction_2", "$g_notification_menu_var2", kingdoms_begin),
        (val_mul, ":faction_1", 128),
        (val_add, ":faction_1", ":faction_2"),
        (set_game_menu_tableau_mesh, "tableau_2_factions_mesh", ":faction_1", pos0),


        (call_script, "script_count_parties_of_faction_and_party_type", "$g_notification_menu_var2", spt_town),
        (store_mul, reg40, reg0, 8000),
        (call_script, "script_count_parties_of_faction_and_party_type", "$g_notification_menu_var2", spt_castle),
        (val_mul, reg0, 4000),
      ],
    [
        ("tribute",[],"Demand a tribute of {reg40} siliquae.",
        [
            (jump_to_menu, "mnu_decide_ai_tribute"),
        ]),

        ("war",[],"Declare war!",
        [
            (call_script, "script_diplomacy_start_war_between_kingdoms", "$g_notification_menu_var1", "$g_notification_menu_var2", 1),
            (jump_to_menu, "mnu_auto_return_to_map"),
        ]),

        ("ignore",[],"Ignore the situation.",
        [
            (jump_to_menu, "mnu_notification_casus_belli_expired"),
        ]),
    ]
),

("notification_tribute_demanded",0,
    "Due to recent provocations from your subjects, the {s1} demand reparations and tributes of {reg40} siliquae from you. How do you react?"
    " Refusing the demand will lead to war!",
    "none",
    [


        (str_store_faction_name, s1, "$g_notification_menu_var1"),
        (str_store_faction_name, s2, "$g_notification_menu_var2"),

        (set_background_mesh, "mesh_pic_messenger"),

        (call_script, "script_count_parties_of_faction_and_party_type", "$g_notification_menu_var2", spt_town),
        (store_mul, reg40, reg0, 8000),
        (call_script, "script_count_parties_of_faction_and_party_type", "$g_notification_menu_var2", spt_castle),
        (val_mul, reg0, 4000),
        (val_add, reg40, reg0),
      ],
    [
        ("continue",[
            (store_troop_gold, ":gold", "trp_player"),
            (ge, ":gold", reg40),
        ],"Pay the tribute.",
        [
            (store_mul, ":gold_lost", reg40, -1),
            (troop_remove_gold, "trp_player",  ":gold_lost"),
            (jump_to_menu, "mnu_auto_return_to_map"),

            (faction_get_slot, ":leader_1", "$g_notification_menu_var1", slot_faction_leader),
            (call_script, "script_add_to_troop_wealth", ":leader_1", reg40),
        ]),

        ("continue",[],"Refuse.",
        [
            (call_script, "script_diplomacy_start_war_between_kingdoms", "$g_notification_menu_var1", "$g_notification_menu_var2", 0),
            (jump_to_menu, "mnu_auto_return_to_map"),
        ]),
    ]
),

("decide_ai_tribute",0,
    "You demand reparations and tributes from {s2}.^{s4}",
    "none",
    [


        (store_random_in_range, ":rand_normal", -50, 50),
        (store_random_in_range, ":rand", -50, 50),
        (val_add, ":rand_normal", ":rand"),
        (val_abs, ":rand_normal"),
        #should be normal distributed with expectation value at 50

        (assign, reg40, 0),

        (call_script, "script_npc_decision_checklist_peace_or_war", "$g_notification_menu_var2", "$g_notification_menu_var1", -1),
        (assign, ":faction_2_to_1", reg0),

        (assign, ":explain_string", "str_none"),
        (try_begin),
            (faction_get_slot, ":leader_2", "$g_notification_menu_var2", slot_faction_leader),
            (try_begin),
                (this_or_next|troop_slot_eq, ":leader_2", slot_lord_reputation_type, lrep_martial),
                (this_or_next|troop_slot_eq, ":leader_2", slot_lord_reputation_type, lrep_debauched),
                (troop_slot_eq, ":leader_2", slot_lord_reputation_type, lrep_cunning),
                (val_sub, ":faction_2_to_1", 1),
            (try_end),
            (ge, ":faction_2_to_1", 0),
            (call_script, "script_count_parties_of_faction_and_party_type", "$g_notification_menu_var2", spt_town),
            (store_mul, reg40, reg0, 8000),
            (call_script, "script_count_parties_of_faction_and_party_type", "$g_notification_menu_var2", spt_castle),
            (val_mul, reg0, 4000),
            (val_add, reg40, reg0),
            (troop_add_gold, "trp_player", reg40),
            (assign, ":explain_string", "str_diplo_casus_expired_reparations_accepted"),
        (else_try),
            (assign, ":explain_string", "str_diplo_casus_expired_reparations_refused_war"),
            (call_script, "script_diplomacy_start_war_between_kingdoms", "$g_notification_menu_var1", "$g_notification_menu_var2", 0),
        (try_end),

        (str_store_string, s4, ":explain_string"),

        (str_store_faction_name, s1, "$g_notification_menu_var1"),
        (str_store_faction_name, s2, "$g_notification_menu_var2"),

        (set_background_mesh, "mesh_pic_messenger"),
      ],
    [
        ("continue",[],"Continue",
        [
            (jump_to_menu, "mnu_auto_return_to_map"),
        ]),
    ]
),

("notification_casus_belli_decide",0,
    "The {s1} has suffered provocations from {s2}. {s3} demand reparations and tributes from {s2}.^{s4}",
    "none",
    [


        (store_random_in_range, ":rand_normal", -50, 50),
        (store_random_in_range, ":rand", -50, 50),
        (val_add, ":rand_normal", ":rand"),
        (val_abs, ":rand_normal"),
        #should be normal distributed with expectation value at 50

        (assign, reg40, 0),

        (call_script, "script_npc_decision_checklist_peace_or_war", "$g_notification_menu_var1", "$g_notification_menu_var2", -1),
        (assign, ":faction_1_to_2", reg0),

        (call_script, "script_npc_decision_checklist_peace_or_war", "$g_notification_menu_var2", "$g_notification_menu_var1", -1),
        (assign, ":faction_2_to_1", reg0),

        (faction_get_slot, ":leader_1", "$g_notification_menu_var1", slot_faction_leader),
        (try_begin),
            (this_or_next|troop_slot_eq, ":leader_1", slot_lord_reputation_type, lrep_martial),
            (this_or_next|troop_slot_eq, ":leader_1", slot_lord_reputation_type, lrep_debauched),
            (troop_slot_eq, ":leader_1", slot_lord_reputation_type, lrep_cunning),
            (val_sub, ":faction_1_to_2", 1),
        (try_end),
        (str_store_troop_name, s3, ":leader_1"),

        (assign, ":explain_string", "str_none"),
        (try_begin),
            (lt,  ":faction_1_to_2", 0),
            (le, ":rand_normal", 50),
            (call_script, "script_diplomacy_start_war_between_kingdoms", "$g_notification_menu_var1", "$g_notification_menu_var2", 1),
            (jump_to_menu, "mnu_auto_return_to_map"),
        (else_try),
            (le,  ":faction_1_to_2", 0),
            (le, ":rand_normal", 80),
            (try_begin),
                (faction_get_slot, ":leader_2", "$g_notification_menu_var2", slot_faction_leader),
                (eq, ":leader_2", "trp_player"),
                (jump_to_menu, "mnu_notification_tribute_demanded"),
            (else_try),
                (try_begin),
                    (this_or_next|troop_slot_eq, ":leader_2", slot_lord_reputation_type, lrep_martial),
                    (this_or_next|troop_slot_eq, ":leader_2", slot_lord_reputation_type, lrep_debauched),
                    (troop_slot_eq, ":leader_2", slot_lord_reputation_type, lrep_cunning),
                    (val_sub, ":faction_2_to_1", 1),
                (try_end),
                (ge, ":faction_2_to_1", 0),
                (call_script, "script_count_parties_of_faction_and_party_type", "$g_notification_menu_var2", spt_town),
                (store_mul, reg40, reg0, 8000),
                (call_script, "script_count_parties_of_faction_and_party_type", "$g_notification_menu_var2", spt_castle),
                (val_mul, reg0, 4000),
                (val_add, reg40, reg0),
                (call_script, "script_add_to_troop_wealth", ":leader_1", reg40),
                (assign, ":explain_string", "str_diplo_casus_expired_reparations_accepted"),
            (else_try),
                (assign, ":explain_string", "str_diplo_casus_expired_reparations_refused_war"),
                (call_script, "script_diplomacy_start_war_between_kingdoms", "$g_notification_menu_var1", "$g_notification_menu_var2", 0),
            (try_end),
        (else_try),
            (jump_to_menu, "mnu_notification_casus_belli_expired"),
        (try_end),

        (str_store_string, s4, ":explain_string"),

        (str_store_faction_name, s1, "$g_notification_menu_var1"),
        (str_store_faction_name, s2, "$g_notification_menu_var2"),

        (set_fixed_point_multiplier, 100),
        (position_set_x, pos0, 65),
        (position_set_y, pos0, 30),
        (position_set_z, pos0, 170),
        (store_sub, ":faction_1", "$g_notification_menu_var1", kingdoms_begin),
        (store_sub, ":faction_2", "$g_notification_menu_var2", kingdoms_begin),
        (val_mul, ":faction_1", 128),
        (val_add, ":faction_1", ":faction_2"),
        (set_game_menu_tableau_mesh, "tableau_2_factions_mesh", ":faction_1", pos0),

      ],
    [
        ("continue",[],"Continue",
        [
            (jump_to_menu, "mnu_auto_return_to_map"),
        ]),
    ]
),

("notification_decide_tributary_war_decleration",0,
    "Your tributary vassal {s1} wants to declared war against {s2}.^^{s57}^^How do you wish to react? As they are your vassals you can force them to hold off from such plans. Or you use this opportunity to declare war without penalities.",
    "none",
    [
        (call_script, "script_npc_decision_checklist_peace_or_war", "$g_notification_menu_var1", "$g_notification_menu_var2", -1),
        #(str_store_string, s57, reg1),
        (str_store_string_reg, s57, s14), #madsci

        (str_store_faction_name, s1, "$g_notification_menu_var1"),
        (str_store_faction_name, s2, "$g_notification_menu_var2"),

        (set_fixed_point_multiplier, 100),
        (position_set_x, pos0, 65),
        (position_set_y, pos0, 30),
        (position_set_z, pos0, 170),
        (store_sub, ":faction_1", "$g_notification_menu_var1", kingdoms_begin),
        (store_sub, ":faction_2", "$g_notification_menu_var2", kingdoms_begin),
        (val_mul, ":faction_1", 128),
        (val_add, ":faction_1", ":faction_2"),
        (set_game_menu_tableau_mesh, "tableau_2_factions_mesh", ":faction_1", pos0),
      ],
    [
      ("continue",[],"Force them to hold off from such plans!",
       [
        (faction_get_slot, ":leader", "$g_notification_menu_var1", slot_faction_leader),
        (call_script, "script_change_player_relation_with_troop", ":leader", -25),
        (change_screen_return),
       ]),
      ("continue",[],"Follow {s1} in the war.",
       [
        (faction_get_slot, ":leader", "$g_notification_menu_var1", slot_faction_leader),
        (call_script, "script_change_player_relation_with_troop", ":leader", 10),

        (call_script, "script_diplomacy_start_war_between_kingdoms", "$players_kingdom", "$g_notification_menu_var2", logent_faction_declares_war_to_fulfil_pact),
        (call_script, "script_diplomacy_start_war_between_kingdoms", "$g_notification_menu_var1", "$g_notification_menu_var2", 1),
        (change_screen_return),
       ]),
    ]
),

("notification_decide_defensive_war",0,
    "{s1} has declared war against your {s22} {s2}.^^{s57}^^How do you wish to react?",
    "none",
    [
        (try_begin),
            (faction_slot_eq, "$g_notification_menu_var2", slot_faction_tributary_of, "$players_kingdom"),
            (str_store_string, s22, "@tributary vassal"),
        (else_try),
            (str_store_string, s22, "@ally"),
        (try_end),

        (call_script, "script_npc_decision_checklist_peace_or_war", "$g_notification_menu_var1", "$g_notification_menu_var2", -1),
        #(str_store_string, s57, reg1),
        (str_store_string_reg, s57, s14), #madsci

        (str_store_faction_name, s1, "$g_notification_menu_var1"),
        (str_store_faction_name, s2, "$g_notification_menu_var2"),

        (set_fixed_point_multiplier, 100),
        (position_set_x, pos0, 65),
        (position_set_y, pos0, 30),
        (position_set_z, pos0, 170),
        (store_sub, ":faction_1", "$g_notification_menu_var1", kingdoms_begin),
        (store_sub, ":faction_2", "$g_notification_menu_var2", kingdoms_begin),
        (val_mul, ":faction_1", 128),
        (val_add, ":faction_1", ":faction_2"),
        (set_game_menu_tableau_mesh, "tableau_2_factions_mesh", ":faction_1", pos0),
      ],
    [
      ("continue",[],"Try to enforce peace by threatening {s1} with joining the war. [costs 1,000 siliquae to send message]",
       [
        (try_begin),
            (store_troop_gold, reg0, "trp_player"),
            (lt, reg0, 1000),
            (display_message, "@You have not enough money!", color_bad_news),
        (else_try),
            (store_add, ":slot_provocation_days", "$players_kingdom", slot_faction_provocation_days_with_factions_begin),
            (val_sub, ":slot_provocation_days", kingdoms_begin),
            (faction_set_slot, "$g_notification_menu_var1", ":slot_provocation_days", 15),

            (faction_get_slot, ":leader", "$g_notification_menu_var2", slot_faction_leader),
            (call_script, "script_change_player_relation_with_troop", ":leader", -10),

            (jump_to_menu, "mnu_threat_war_reaction"),
            (troop_remove_gold, "trp_player", 1000),
        (try_end),
       ]),
      ("continue",[],"Follow {s2} in the war.",
       [
        (faction_get_slot, ":leader", "$g_notification_menu_var2", slot_faction_leader),
        (call_script, "script_change_player_relation_with_troop", ":leader", 10),

        (call_script, "script_diplomacy_start_war_between_kingdoms", "$players_kingdom", "$g_notification_menu_var1", logent_faction_declares_war_to_fulfil_pact),
        (change_screen_return),
       ]),
      ("continue",[],"Break your agreement with {s2}.",
       [
        (call_script, "script_change_player_honor", -25),
        (call_script, "script_change_troop_renown", "trp_player", -50),

        (try_begin),
            (faction_slot_eq, "$g_notification_menu_var2", slot_faction_tributary_of, "$players_kingdom"),
            (faction_set_slot, "$g_notification_menu_var2", slot_faction_tributary_of, 0),
        (try_end),

        (store_add, ":truce_slot_a", "$g_notification_menu_var2", slot_faction_truce_days_with_factions_begin),
        (val_sub, ":truce_slot_a", kingdoms_begin),
        (faction_set_slot, "$players_kingdom", ":truce_slot_a", 0),

        (store_add, ":truce_slot_a", "$players_kingdom", slot_faction_truce_days_with_factions_begin),
        (val_sub, ":truce_slot_a", kingdoms_begin),
        (faction_set_slot, "$g_notification_menu_var2", ":truce_slot_a", 0),

        (store_add, ":slot_provocation_days", "$players_kingdom", slot_faction_provocation_days_with_factions_begin),
        (val_sub, ":slot_provocation_days", kingdoms_begin),
        (faction_set_slot, "$g_notification_menu_var2", ":slot_provocation_days", 30),

        (faction_get_slot, ":leader", "$g_notification_menu_var2", slot_faction_leader),
        (call_script, "script_change_player_relation_with_troop", ":leader", -100),

        (str_store_faction_name, s4, "$players_kingdom"),
        (display_log_message, "@{s4} broke its agreement with {s2}"),

        (change_screen_return),
       ]),
    ]
),

("notification_decide_offensive_war",0,
    "Your ally {s1} has declared war against {s2}.^^{s57}^^How do you wish to react?",
    "none",
    [
        (call_script, "script_npc_decision_checklist_peace_or_war", "$g_notification_menu_var1", "$g_notification_menu_var2", -1),
        #(str_store_string, s57, reg1),
        (str_store_string_reg, s57, s14), #madsci

        (str_store_faction_name, s1, "$g_notification_menu_var1"),
        (str_store_faction_name, s2, "$g_notification_menu_var2"),

        (set_fixed_point_multiplier, 100),
        (position_set_x, pos0, 65),
        (position_set_y, pos0, 30),
        (position_set_z, pos0, 170),
        (store_sub, ":faction_1", "$g_notification_menu_var1", kingdoms_begin),
        (store_sub, ":faction_2", "$g_notification_menu_var2", kingdoms_begin),
        (val_mul, ":faction_1", 128),
        (val_add, ":faction_1", ":faction_2"),
        (set_game_menu_tableau_mesh, "tableau_2_factions_mesh", ":faction_1", pos0),
      ],
    [
      ("continue",[],"Try to persuade {s1} to stop the war. [costs 1,000 siliquae to send message]",
       [
        (try_begin),
            (store_troop_gold, reg0, "trp_player"),
            (lt, reg0, 1000),
            (display_message, "@You have not enough money.", color_bad_news),
        (else_try),
            (store_add, ":slot_provocation_days", "$players_kingdom", slot_faction_provocation_days_with_factions_begin),
            (val_sub, ":slot_provocation_days", kingdoms_begin),
            (faction_set_slot, "$g_notification_menu_var1", ":slot_provocation_days", 15),
            # (faction_get_slot, ":leader", "$g_notification_menu_var2", slot_faction_leader),
            # (call_script, "script_change_player_relation_with_troop", ":leader", -10),
            (jump_to_menu, "mnu_persuade_war_reaction"),
            (troop_remove_gold, "trp_player", 1000),
        (try_end),
       ]),
      ("continue",[],"Follow {s1} in the war.",
       [
        (faction_get_slot, ":leader", "$g_notification_menu_var1", slot_faction_leader),
        (call_script, "script_change_player_relation_with_troop", ":leader", 10),

        (call_script, "script_diplomacy_start_war_between_kingdoms", "$players_kingdom", "$g_notification_menu_var2", logent_faction_declares_war_to_fulfil_pact),
        (change_screen_return),
       ]),
      ("continue",[],"Break your alliance with {s1}.",
       [
        (call_script, "script_change_player_honor", -25),
        (call_script, "script_change_troop_renown", "trp_player", -50),

        (try_begin),
            (faction_slot_eq, "$g_notification_menu_var1", slot_faction_tributary_of, "$players_kingdom"),
            (faction_set_slot, "$g_notification_menu_var1", slot_faction_tributary_of, 0),
        (try_end),

        (store_add, ":truce_slot_a", "$g_notification_menu_var1", slot_faction_truce_days_with_factions_begin),
        (val_sub, ":truce_slot_a", kingdoms_begin),
        (faction_set_slot, "$players_kingdom", ":truce_slot_a", 0),

        (store_add, ":truce_slot_a", "$players_kingdom", slot_faction_truce_days_with_factions_begin),
        (val_sub, ":truce_slot_a", kingdoms_begin),
        (faction_set_slot, "$g_notification_menu_var1", ":truce_slot_a", 0),

        (store_add, ":slot_provocation_days", "$players_kingdom", slot_faction_provocation_days_with_factions_begin),
        (val_sub, ":slot_provocation_days", kingdoms_begin),
        (faction_set_slot, "$g_notification_menu_var1", ":slot_provocation_days", 30),

        (faction_get_slot, ":leader", "$g_notification_menu_var1", slot_faction_leader),
        (call_script, "script_change_player_relation_with_troop", ":leader", -100),

        (str_store_faction_name, s4, "$players_kingdom"),
        (display_log_message, "@{s4} broke its agreement with {s2}"),

        (change_screen_return),
       ]),
    ]
),

("threat_war_reaction",0,
    "{s57}",
    "none",[
    (assign, ":player_strength", 0),
    (assign, ":enemy_strength", 10),
	  (try_for_parties, ":party_no"),
        (party_is_active, ":party_no"),
        (store_faction_of_party, ":faction_no", ":party_no"),
        (this_or_next|eq, ":faction_no", "$players_kingdom"),
        (eq, ":faction_no", "$g_notification_menu_var1"),

        (store_party_size_wo_prisoners, ":party_value", ":party_no"),#use size of party
        (try_begin),
            (is_between, ":party_no", towns_begin, towns_end),
            (val_div, ":party_value", 300),##average size 1200 -> 4
        (else_try),
            (is_between, ":party_no", castles_begin, castles_end),
            (val_div, ":party_value", 250),##average size 700 -> 3
        (else_try),
            (party_get_template_id, ":template", ":party_no"),
            (eq, ":template", "pt_kingdom_hero_party"),
            (val_div, ":party_value", 100),##average size 400 -> 4
        (else_try),#nero claudius begin
            (eq, ":template", "pt_patrol_party"),
            (val_div, ":party_value", 50),##average size 200 -> 4
        (else_try),
            (assign, ":party_value", 0),
		    (try_end),

        (try_begin),
            (eq, ":faction_no", "$g_notification_menu_var1"),
            (val_add, ":enemy_strength", ":party_value"),
        (else_try),
            (val_add, ":player_strength", ":party_value"),
        (try_end),
	  (try_end),
    (call_script, "script_store_number_of_wars", "$players_kingdom"),
    (assign, ":number_of_wars_player", reg0),
    (call_script, "script_store_number_of_wars", "$g_notification_menu_var1"),
    (assign, ":number_of_wars_enemy", reg0),

    (store_sub, ":modifier_enemy_1", 50, ":number_of_wars_enemy"),
    (store_sub, ":modifier_player_1", 50, ":number_of_wars_player"),

    (store_add, ":modifier_enemy_2", 50, ":number_of_wars_player"),
    (store_add, ":modifier_player_2", 50, ":number_of_wars_enemy"),

    (val_mul, ":enemy_strength", ":modifier_enemy_1"),
    (val_div, ":enemy_strength", 50),
    (val_mul, ":enemy_strength", ":modifier_enemy_2"),
    (val_div, ":enemy_strength", 50),

    (val_mul, ":player_strength", ":modifier_player_1"),
    (val_div, ":player_strength", 50),
    (val_mul, ":player_strength", ":modifier_player_2"),
    (val_div, ":player_strength", 50),

    (faction_get_slot, ":leader", "$g_notification_menu_var1", slot_faction_leader),
    (call_script, "script_personality_modifier", ":leader"),
    (val_mul, ":enemy_strength", reg0),
    (val_div, ":enemy_strength", 100),

    (call_script, "script_troop_get_player_relation", ":leader"),
    (assign, ":relation", reg0),
    (try_begin),
        (lt, ":relation", -75),
        (val_mul, ":enemy_strength", 2),
    (try_end),

    (val_div, ":relation", 10),
    (val_add, ":player_strength", ":relation"),

    (try_begin),
        (ge, "$cheat_mode", 1),
        (assign, reg11, ":player_strength"),
        (assign, reg12, ":enemy_strength"),
        (display_message, "@player_strength: {reg11}, enemy_strength: {reg12}"),
    (try_end),
    (str_store_faction_name, s1, "$g_notification_menu_var1"),
    (str_store_faction_name, s2, "$g_notification_menu_var2"),
    (str_store_troop_name, s3, ":leader"),

    (try_begin),
        (gt, ":player_strength", ":enemy_strength"),

        (store_mul, reg40, ":enemy_strength", 1000),
        (val_clamp, reg40, 5000, 750001),

        (str_store_string, s57, "@Messengers are send and soon you recieve news that {s3} of {s1} has re-thought his actions. He send you a gift of {reg40} siliquae and will not future attack the {s2}"),
        (assign, "$temp1", 1),
    (else_try),
        (str_store_string, s57, "@Messengers are send and soon you recieve news that {s3} of {s1} will attack the {s2} nevertheless. You are now forced to join the war."),
        (assign, "$temp1", -1),
    (try_end),
    ],

    [
      ("continue",[],"Continue",
       [
        (try_begin),
            (eq, "$temp1", -1),
            (call_script, "script_diplomacy_start_war_between_kingdoms", "$players_kingdom", "$g_notification_menu_var1", logent_faction_declares_war_to_fulfil_pact),
        (else_try),
            (call_script, "script_diplomacy_start_peace_between_kingdoms", "$g_notification_menu_var2", "$g_notification_menu_var1", 0),

            (try_begin),
                (gt, "$g_player_chamberlain", 0),
                (call_script, "script_dplmc_pay_into_treasury", reg40),
            (else_try),
                (troop_add_gold, "trp_player", reg40),
            (try_end),

            (faction_get_slot, ":leader", "$g_notification_menu_var2", slot_faction_leader),
            (call_script, "script_change_player_relation_with_troop", ":leader", -10),
        (try_end),
        (jump_to_menu, "mnu_auto_return_to_map"),
       ]),
    ]
),
("persuade_war_reaction",0,
    "{s57}",
    "none",
    [
    (call_script, "script_store_number_of_wars", "$g_notification_menu_var1"),
    (store_mul, ":player_strength", reg0, 10),

    (faction_get_slot, ":leader", "$g_notification_menu_var1", slot_faction_leader),

    (call_script, "script_troop_get_player_relation", ":leader"),
    (assign, ":relation", reg0),
    (val_mul, ":relation", 2),
    (val_add, ":player_strength", ":relation"),

    (call_script, "script_personality_modifier", ":leader"),
    (assign, ":leader_modifier", reg0),##250-100
    (val_div, ":leader_modifier", 100),#3/2-1
    (val_div, ":player_strength", ":leader_modifier"),

    (try_begin),
        (ge, "$cheat_mode", 1),
        (assign, reg11, ":player_strength"),
        (display_message, "@player_strength: {reg11}"),
    (try_end),
    (str_store_faction_name, s1, "$g_notification_menu_var1"),
    (str_store_faction_name, s2, "$g_notification_menu_var2"),
    (str_store_troop_name, s3, ":leader"),


    (try_begin),
        (gt, ":player_strength", 100),
        (str_store_string, s57, "@Messengers are send and soon you recieve news that {s3} of {s1} has re-thought his actions. He send you a best wishes and will not attack the {s2}."),
        (assign, "$temp1", 1),
    (else_try),
        (str_store_string, s57, "@Messengers are send and soon you recieve news that {s3} of {s1} will attack the {s2} nevertheless."),
        (assign, "$temp1", -1),
    (try_end),
    ],

    [
      ("continue",[(eq, "$temp1", 1),],"Continue",
       [
        (call_script, "script_diplomacy_start_peace_between_kingdoms", "$g_notification_menu_var2", "$g_notification_menu_var1", 0),
        (faction_get_slot, ":leader", "$g_notification_menu_var1", slot_faction_leader),
        (call_script, "script_change_player_relation_with_troop", ":leader", -10),
        (jump_to_menu, "mnu_auto_return_to_map"),
       ]),
       ("continue",[(eq, "$temp1", -1),],"Do not join this war and break your alliance!",
       [
        (call_script, "script_change_player_honor", -25),
        (call_script, "script_change_troop_renown", "trp_player", -50),

        (try_begin),
            (faction_slot_eq, "$g_notification_menu_var1", slot_faction_tributary_of, "$players_kingdom"),
            (faction_set_slot, "$g_notification_menu_var1", slot_faction_tributary_of, 0),
        (try_end),

        (store_add, ":truce_slot_a", "$g_notification_menu_var1", slot_faction_truce_days_with_factions_begin),
        (val_sub, ":truce_slot_a", kingdoms_begin),
        (faction_set_slot, "$players_kingdom", ":truce_slot_a", 0),

        (store_add, ":truce_slot_a", "$players_kingdom", slot_faction_truce_days_with_factions_begin),
        (val_sub, ":truce_slot_a", kingdoms_begin),
        (faction_set_slot, "$g_notification_menu_var1", ":truce_slot_a", 0),

        (store_add, ":slot_provocation_days", "$players_kingdom", slot_faction_provocation_days_with_factions_begin),
        (val_sub, ":slot_provocation_days", kingdoms_begin),
        (faction_set_slot, "$g_notification_menu_var1", ":slot_provocation_days", 30),

        (faction_get_slot, ":leader", "$g_notification_menu_var1", slot_faction_leader),
        (call_script, "script_change_player_relation_with_troop", ":leader", -100),

        (str_store_faction_name, s4, "$players_kingdom"),
        (display_log_message, "@{s4} broke its agreement with {s1}"),
        (jump_to_menu, "mnu_auto_return_to_map"),
       ]),
       ("continue",[(eq, "$temp1", -1),],"Help your ally by declaring war.",
       [
        (call_script, "script_diplomacy_start_war_between_kingdoms", "$players_kingdom", "$g_notification_menu_var2", logent_faction_declares_war_to_fulfil_pact),
        (jump_to_menu, "mnu_auto_return_to_map"),
       ]),
    ]
),


("dplmc_notification_defensive_declared",0,
    "Defensive Pact^^{s1} and {s2} have agreed to a defensive pact!^{s57}",
    "none",
    [

	  (str_clear, s57),

	  (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (str_store_faction_name, s2, "$g_notification_menu_var2"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (store_sub, ":faction_1", "$g_notification_menu_var1", kingdoms_begin),
      (store_sub, ":faction_2", "$g_notification_menu_var2", kingdoms_begin),
      (val_mul, ":faction_1", 128),
      (val_add, ":faction_1", ":faction_2"),
      (set_game_menu_tableau_mesh, "tableau_2_factions_mesh", ":faction_1", pos0),
      ],
    [
      ("dplmc_continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_notification_trade_declared",0,
    "Trade Agreement^^{s1} and {s2} have signed a trade agreement!^{s57}",
    "none",
    [

	  (str_clear, s57),

	  (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (str_store_faction_name, s2, "$g_notification_menu_var2"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (store_sub, ":faction_1", "$g_notification_menu_var1", kingdoms_begin),
      (store_sub, ":faction_2", "$g_notification_menu_var2", kingdoms_begin),
      (val_mul, ":faction_1", 128),
      (val_add, ":faction_1", ":faction_2"),
      (set_game_menu_tableau_mesh, "tableau_2_factions_mesh", ":faction_1", pos0),
      ],
    [
      ("dplmc_continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_notification_nonaggression_declared",0,
    "Non-aggression Treaty^^{s1} and {s2} have concluded a non-aggression treaty!^{s57}",
    "none",
    [
	  (str_clear, s57),

	  (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (str_store_faction_name, s2, "$g_notification_menu_var2"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (store_sub, ":faction_1", "$g_notification_menu_var1", kingdoms_begin),
      (store_sub, ":faction_2", "$g_notification_menu_var2", kingdoms_begin),
      (val_mul, ":faction_1", 128),
      (val_add, ":faction_1", ":faction_2"),
      (set_game_menu_tableau_mesh, "tableau_2_factions_mesh", ":faction_1", pos0),
      ],
    [
      ("dplmc_continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_question_alliance_offer",0,
    "You Receive an Alliance Offer^^The {s1} wants to form an alliance with you. What is your answer?",
    "none",
    [
      (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),
      ],
    [
      ("dplmc_alliance_offer_accept",[],"Accept",
       [
         (call_script, "script_dplmc_start_alliance_between_kingdoms", "fac_player_supporters_faction", "$g_notification_menu_var1", 1),
         (change_screen_return),
        ]),
      ("dplmc_alliance_offer_reject",[],"Reject",
       [
         (call_script, "script_change_player_relation_with_faction", "$g_notification_menu_var1", -2),
         (change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_question_defensive_offer",0,
    "You Receive a Pact Offer^^The {s1} offers you a defensive pact. What is your answer?",
    "none",
    [
      (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),
      ],
    [
      ("dplmc_defensive_offer_accept",[],"Accept",
       [
         (call_script, "script_dplmc_start_defensive_between_kingdoms", "fac_player_supporters_faction", "$g_notification_menu_var1", 1),
         (change_screen_return),
        ]),
      ("dplmc_defensive_offer_reject",[],"Reject",
       [
         (call_script, "script_change_player_relation_with_faction", "$g_notification_menu_var1", -2),
         (change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_question_trade_offer",0,
    "You Receive a Pact Offer^^The {s1} offers you a trade pact. What is your answer?",
    "none",
    [
      (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),
      ],
    [
      ("dplmc_trade_offer_accept",[],"Accept",
       [
         (call_script, "script_dplmc_start_trade_between_kingdoms", "fac_player_supporters_faction", "$g_notification_menu_var1", 1),
         (change_screen_return),
        ]),
      ("dplmc_trade_offer_reject",[],"Reject",
       [
         (call_script, "script_change_player_relation_with_faction", "$g_notification_menu_var1", -2),
         (change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_question_nonaggression_offer",0,
    "You Receive a Pact Offer^^The {s1} offers you a non-aggression treaty. What is your answer?",
    "none",
    [
      (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),
      ],
    [
      ("dplmc_nonaggression_offer_accept",[],"Accept",
       [
         (call_script, "script_dplmc_start_nonaggression_between_kingdoms", "fac_player_supporters_faction", "$g_notification_menu_var1", 1),
         (change_screen_return),
        ]),
      ("dplmc_nonaggression_offer_reject",[],"Reject",
       [
         (call_script, "script_change_player_relation_with_faction", "$g_notification_menu_var1", -2),
         (change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_notification_tribute_expired_2_tribute_of_1",0,
    "A tribute treaty Has Expired^^The {s2} are no longer a tributary vassal of {s1}. The treaty has expired and was degraded to an alliance.",
    "none",
    [
      (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (str_store_faction_name, s2, "$g_notification_menu_var2"),

      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),
      ],
    [
      ("dplmc_continue",[],"Continue",
       [
     (change_screen_return),
        ]),
     ]
  ),
  (
    "dplmc_notification_tribute_expired_1_tribute_of_2",0,
    "A tribute treaty Has Expired^^The {s1} are no longer a tributary vassal of {s2}. The treaty has expired and was degraded to an alliance.",
    "none",
    [
      (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (str_store_faction_name, s2, "$g_notification_menu_var2"),

      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),
      ],
    [
      ("dplmc_continue",[],"Continue",
       [
     (change_screen_return),
        ]),
     ]
  ),


  (
    "dplmc_notification_alliance_expired",0,
    "Alliance Has Expired^^The alliance between {s1} and {s2} has expired and was degraded to a defensive pact.",
    "none",
    [
      (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (str_store_faction_name, s2, "$g_notification_menu_var2"),

      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),
      ],
    [
      ("dplmc_continue",[],"Continue",
       [
	   (change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_notification_defensive_expired",0,
    "Defensive Pact Has Expired^^The defensive pact between {s1} and {s2} has expired and was degraded to a trade agreement.",
    "none",
    [
      (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (str_store_faction_name, s2, "$g_notification_menu_var2"),

      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),
      ],
    [
      ("dplmc_continue",[],"Continue",
       [
	   (change_screen_return),
        ]),
     ]
  ),


  (
    "dplmc_notification_trade_expired",0,
    "Trade Agreement Has Expired^^The trade agreement between {s1} and {s2} has expired and was degraded to a non-aggression treaty.",
    "none",
    [
      (str_store_faction_name, s1, "$g_notification_menu_var1"),
      (str_store_faction_name, s2, "$g_notification_menu_var2"),

      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),
      ],
    [
      ("dplmc_continue",[],"Continue",
       [
	   (change_screen_return),
        ]),
     ]
  ),

  ("dplmc_dictate_terms",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Dictate your peace terms.",
    "none",
    [(set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),],
    [
      ("dplmc_demand_4000",[(gt, "$g_player_chamberlain", 0),],"Demand 4000 siliquae",
      [
        (call_script, "script_npc_decision_checklist_peace_or_war", "$g_notification_menu_var1", "fac_player_supporters_faction", -1),
        (assign, ":goodwill", reg0),
        (store_random_in_range, ":random", 0, 4),

        (call_script, "script_change_player_relation_with_faction", "$g_notification_menu_var1", -3),
        (try_begin),
          (le, ":random", ":goodwill"),
          (call_script, "script_dplmc_pay_into_treasury", 4000),
          (call_script, "script_diplomacy_start_peace_between_kingdoms", "$g_notification_menu_var1", "fac_player_supporters_faction", 1),
          (change_screen_return),
        (else_try),
          (jump_to_menu,"mnu_dplmc_deny_terms"),
        (try_end),
      ]),
      ("dplmc_demand_8000",[(gt, "$g_player_chamberlain", 0),],"Demand 8000 siliquae",
       [
         (call_script, "script_npc_decision_checklist_peace_or_war", "$g_notification_menu_var1", "fac_player_supporters_faction", -1),
         (assign, ":goodwill", reg0),
         (val_mul, ":goodwill", 2),
				 (store_random_in_range, ":random", 0, 10),

         (call_script, "script_change_player_relation_with_faction", "$g_notification_menu_var1", -5),
				 (try_begin),
				   (le, ":random", ":goodwill"),
           (call_script, "script_dplmc_pay_into_treasury", 8000),
           (call_script, "script_diplomacy_start_peace_between_kingdoms", "$g_notification_menu_var1", "fac_player_supporters_faction", 1),
           (change_screen_return),
         (else_try),
             (jump_to_menu,"mnu_dplmc_deny_terms"),
         (try_end),
       ]),
      ("dplmc_demand_castle",[
        (assign, ":distance", 100),
        (assign, "$demanded_castle", -1),
        ##diplomacy start+ Handle player is co-ruler of NPC kingdom
        (assign, ":alt_faction", "fac_player_supporters_faction"),
        (try_begin),
            (is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
            (call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$players_kingdom"),
            (ge, reg0, DPLMC_FACTION_STANDING_LEADER_SPOUSE),
            (assign, ":alt_faction", "$players_kingdom"),
        (try_end),
        ##diplomacy end+
        (try_for_range, ":castle", castles_begin, castles_end),
          (store_faction_of_party, ":castle_faction", ":castle"),
          (eq, ":castle_faction", "$g_notification_menu_var1"),
          (try_for_range, ":center", centers_begin, centers_end),
            (store_faction_of_party, ":center_faction", ":center"),
            ##diplomacy start+
            (this_or_next|eq, ":alt_faction", ":center_faction"),
            ##diplomacy end+
            (eq, ":center_faction", "fac_player_supporters_faction"),
            (store_distance_to_party_from_party, ":tmp_distance", ":center", ":castle"),

            (lt, ":tmp_distance", ":distance"),
            (assign, ":distance", ":tmp_distance"),
            (assign, "$demanded_castle", ":castle"),
            (str_store_party_name, s2, ":castle"),
          (try_end),
        (try_end),
        (is_between, "$demanded_castle", castles_begin,castles_end),
      ],"Demand {s2}.",
       [
        (call_script, "script_npc_decision_checklist_peace_or_war", "$g_notification_menu_var1", "fac_player_supporters_faction", -1),
        (assign, ":goodwill", reg0),
        (val_mul, ":goodwill", 2),
        (store_random_in_range, ":random", 0, 12),

        (call_script, "script_change_player_relation_with_faction", "$g_notification_menu_var1", -6),
        (try_begin),
          (le, ":random", ":goodwill"),
			 ##diplomacy start+
			 #Chance of veto based on ownership and difficulty setting.
			 (assign, ":did_veto", 0),
			 (try_begin),
					 (party_get_slot, ":castle_lord", "$demanded_castle", slot_town_lord),
					 (ge, ":castle_lord", 1),
					 (neg|troop_slot_ge, ":castle_lord", slot_troop_prisoner_of_party, 0),
					 (try_begin),
								(this_or_next|troop_slot_eq, ":castle_lord", slot_troop_home, "$demanded_castle"),
								(party_slot_eq, "$demanded_castle", dplmc_slot_center_original_lord, ":castle_lord"),
								(store_random_in_range, ":random", 0, 24),
								(assign, ":did_veto", 1),
								(le, ":random", ":goodwill"),
								(assign, ":did_veto", 0),
 					 (else_try),
								(troop_get_slot, ":castle_lord_original_faction", ":castle_lord", slot_troop_original_faction),
								(party_slot_eq, "$demanded_castle", slot_center_original_faction, ":castle_lord_original_faction"),
								(store_random_in_range, ":random", 0, 12),
								(assign, ":did_veto", 1),
								(le, ":random", ":goodwill"),
								(assign, ":did_veto", 0),
					 (try_end),
			 (try_end),
			 (eq, ":did_veto", 0),
		  ##Handle player is co-ruler of NPC kingdom
          ##OLD:
          #(call_script, "script_give_center_to_faction", "$demanded_castle", "fac_player_supporters_faction"),
          #(call_script, "script_diplomacy_start_peace_between_kingdoms", "$g_notification_menu_var1", "fac_player_supporters_faction", 1),
		  ##NEW:
		  (assign, ":player_kingdom", "fac_player_supporters_faction"),
		  (try_begin),
		        (neg|faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, sfs_active),
				(is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
				(call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$players_kingdom"),
				(ge, reg0, DPLMC_FACTION_STANDING_LEADER_SPOUSE),
				(assign, ":player_kingdom", "$players_kingdom"),
		  (try_end),
		  (call_script, "script_give_center_to_faction", "$demanded_castle", ":player_kingdom"),
          (call_script, "script_diplomacy_start_peace_between_kingdoms", "$g_notification_menu_var1", ":player_kingdom", 1),
		  ##diplomacy end+
          (change_screen_return),
        (else_try),
          (jump_to_menu,"mnu_dplmc_deny_terms"),
        (try_end),        ]
       ),
	  ("dplmc_go_back",[],"Go back",
       [
	     (jump_to_menu,"mnu_question_peace_offer"),
       ]),
    ]
  ),

  ("dplmc_deny_terms",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "The {s1} refuses your terms and is breaking off of negotiations.",
    "none",
    [(set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "$g_notification_menu_var1", pos0),],
    [
	  ("dplmc_continue",[],"Continue",
       [
       (change_screen_return),
       ]),
    ]
  ),

  (
    "dplmc_village_riot_result",mnf_scale_picture,
    "{s9}",
    "none",
    [(try_begin),
       (eq, "$g_battle_result", 1),
       (jump_to_menu, "mnu_dplmc_village_riot_removed"),
     (else_try),
       (set_background_mesh, "mesh_pic_villageriot"),
       (str_store_string, s9, "@Try as you might, you could not defeat the rebelling village."),
     (try_end),
    ],
    [
      ("dplmc_continue",[],"Continue...",
       [(call_script, "script_change_player_relation_with_center", "$g_encountered_party", -3),
        (call_script, "script_change_troop_renown", "trp_player", -5), #SB : renown loss highest here
        (jump_to_menu, "mnu_village"),]),
    ],
  ),

  (
    "dplmc_village_riot_removed",mnf_disable_all_keys,
    "In bloody battle you and your men slaughter the rebels and regain control over the village. But there is not much left you can control.",
    "none",
    [
     (set_background_mesh, "mesh_pic_looted_village"),
     (party_set_slot, "$g_encountered_party", slot_village_infested_by_bandits, 0),
     (call_script, "script_village_set_state",  "$current_town", svs_looted),
    ],
    [
      ("dplmc_continue",[],"Continue...",
       [
         (jump_to_menu, "mnu_village"),
       ]),
    ],
  ),

  (
    "dplmc_town_riot_removed",mnf_disable_all_keys,
    "In bloody battle you and your men slaughter the rebels and regain control over the town.",
    "none",
    [],
    [
      ("dplmc_continue",[],"Continue...",
       [
        (party_set_slot, "$g_encountered_party", slot_village_infested_by_bandits, 0),
        (assign, "$new_encounter", 1),
        (try_begin),
          (party_get_slot, ":town_lord","$g_encountered_party", slot_town_lord),
          (troop_get_slot, ":cur_banner", ":town_lord", slot_troop_banner_scene_prop),
          (gt, ":cur_banner", 0),
          (val_sub, ":cur_banner", banner_scene_props_begin),
          (val_add, ":cur_banner", banner_map_icons_begin),
          #(party_set_banner_icon, "$g_encountered_party", ":cur_banner"),
          (party_set_banner_icon, "$g_encountered_party", "icon_heraldic_banner_03"),
        (try_end),
        (jump_to_menu, "mnu_castle_outside"),
       ]),
    ],
  ),

  (
    "dplmc_riot_negotiate",mnf_disable_all_keys,
    "You approach the angry crowd and begin negotiations. The leader of the riot demands {reg0} siliquae. He agrees to lay down arms if you are willing to pay.",
    "none",
    [
      (party_get_slot, ":center_relation", "$g_encountered_party", slot_center_player_relation),
      (val_min, ":center_relation", 0),
      (try_begin),
        (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
        (val_sub, ":center_relation", 75),
        (set_background_mesh, "mesh_pic_townriot"),
      (else_try),
        (val_sub, ":center_relation", 50),
        (set_background_mesh, "mesh_pic_villageriot"),
      (try_end),

      (store_skill_level, ":persuasion_level", "skl_persuasion", "trp_player"),
      (val_add, ":center_relation", ":persuasion_level"),
      (val_mul, ":center_relation", ":center_relation"),
      (assign, reg0, ":center_relation"),
    ],
    [
      ("dplmc_pay_riot_treasury",
      [
        (gt, "$g_player_chamberlain", 0),
        (store_troop_gold, ":gold", "trp_household_possessions"),
        (ge, ":gold", reg0),
      ],"Induce your chamberlain to pay the money from the treasury.",
       [
        (call_script, "script_dplmc_withdraw_from_treasury", reg0),
        (party_set_slot, "$g_encountered_party", slot_village_infested_by_bandits, 0),
        (try_begin),  #SB : swap menu order for castles
          (party_slot_eq, "$g_encountered_party", slot_party_type, spt_village),
          (jump_to_menu, "mnu_village"),
        (else_try),
          (jump_to_menu, "mnu_castle_outside"),
        (try_end),

        #SB TODO : remove the townsman/watchman added from riot

       ]),
       ("dplmc_pay_riot_cash",
      [
        (store_troop_gold, ":gold", "trp_player"),
        (ge, ":gold", reg0),
      ],"Pay cash.",
       [
        (troop_remove_gold, "trp_player", reg0),
        (party_set_slot, "$g_encountered_party", slot_village_infested_by_bandits, 0),
        (try_begin), #SB : swap menu order for castles
          (party_slot_eq, "$g_encountered_party", slot_party_type, spt_village),
          (jump_to_menu, "mnu_village"),
        (else_try),
          (jump_to_menu, "mnu_castle_outside"),
        (try_end),

       ]),

      ("dplmc_back",[],"Back...",
       [
        (try_begin),
          (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
          (jump_to_menu, "mnu_castle_outside"),
        (else_try),
          (jump_to_menu, "mnu_village"),
        (try_end),
       ]),
    ],
  ),

  (
    "dplmc_notification_riot",0,
    "The peasants of {s1} launched a riot against you! In a surprise attack, men loyal to you have been slain. The remainder joined the angry crowd.",
    "none",
    [
      (str_store_party_name, s1, "$g_notification_menu_var1"),
      (try_begin),
        (party_slot_eq, "$g_notification_menu_var1", slot_party_type, spt_town),
        (set_background_mesh, "mesh_pic_townriot"),
      (else_try),
        (set_background_mesh, "mesh_pic_villageriot"),
      (try_end),
      ],
    [
      ("dplmc_continue",[],"Continue...",
       [(change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_notification_appoint_chamberlain",0,
    #SB : your court
    "As a lord of a fief you can now appoint a chamberlain who resides at your court for a weekly salary of "+str(dplmc_chamberlain_salary)+" siliquae. He will handle all financial affairs like collecting and determining taxes, paying wages and managing your estate. In addition he supervises money transfers between kingdoms giving you more diplomatic options.",
    "none",
    [
    #SB : tableau notes
    # (set_fixed_point_multiplier, 100),
    # (position_set_x, pos0, 70),
    # (position_set_y, pos0, 5),
    # (position_set_z, pos0, 75),
    # (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", "trp_dplmc_chamberlain", pos0),
    ],
    [

      ("dplmc_appoint_default",[],"Appoint a prominent nobleman from the area.",
       [
        (call_script, "script_dplmc_appoint_chamberlain"),
        (jump_to_menu, "mnu_dplmc_chamberlain_confirm"),
        ]),
      ("dplmc_continue",[],"Proceed without chamberlain.",
       [
         (assign, "$g_player_chamberlain", -1), #denied
         (change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_chamberlain_confirm",0,
    "Your chamberlain can be found at your court. You should consult him if you want to give him any financial advice or if you need greater amounts of money. You should always make sure that there is enough money in the treasury to pay for political affairs.",
    "none",
    [],
    [
      ("dplmc_continue",[],"Continue...",
       [
         (change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_notification_appoint_constable",0,
    #SB : your court, also walled center clarification
    "As a lord of a fortified center you can now appoint a constable who resides at your court for a weekly salary of "+str(dplmc_constable_salary)+" siliquae. He will recruit new troops and provide information about your army.",
    "none",
    [
    #SB : tableau notes
    # (set_fixed_point_multiplier, 100),
    # (position_set_x, pos0, 70),
    # (position_set_y, pos0, 5),
    # (position_set_z, pos0, 75),
    # (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", "trp_dplmc_constable", pos0),
    ],
    [

      ("dplmc_appoint_default",[],"Appoint a prominent nobleman from the area.",
       [
        (call_script, "script_dplmc_appoint_constable"),
        (jump_to_menu, "mnu_dplmc_constable_confirm"),
        ]),
      ("dplmc_continue",[],"Proceed without constable.",
       [
         (assign, "$g_player_constable", -1), #denied
         (assign, "$g_constable_training_center", -1),
         (change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_constable_confirm",0,
    "Your constable can be found at your court. You should consult him if you want to recruit new troops or get detailed information about your standing army.",
    "none",
    [],
    [
      ("dplmc_continue",[],"Continue...",
       [
         (change_screen_return),
        ]),
     ]
  ),



  (
    "dplmc_notification_appoint_chancellor",0,
    #SB : your court, fief->city
    "As a lord of a realm and owner of a city you can now appoint a chancellor who resides at your court for a weekly salary of "+str(dplmc_chancellor_salary)+" siliquae. He will be the keeper of your seal and conduct the correspondence between you and other important persons.",
    "none",
    [
    #SB : tableau notes
    # (set_fixed_point_multiplier, 100),
    # (position_set_x, pos0, 70),
    # (position_set_y, pos0, 5),
    # (position_set_z, pos0, 75),
    # (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", "trp_dplmc_chancellor", pos0),
    ],
    [

      ("dplmc_appoint_default",[],"Appoint a prominent nobleman from the area.",
       [
        (call_script, "script_dplmc_appoint_chancellor"),
        (jump_to_menu, "mnu_dplmc_chancellor_confirm"),
        ]),
      ("dplmc_continue",[],"Proceed without chancellor.",
       [
         (assign, "$g_player_chancellor", -1), #denied
         (change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_chancellor_confirm",0,
    "Your chancellor can be found at your court. You should consult him if you want to send messages or gifts.",
    "none",
    [],
    [
      ("dplmc_continue",[],"Continue...",
       [
         (change_screen_return),
        ]),
     ]
  ),


  (
    "dplmc_deserters",0,
    "Some of your men don't believe that you will pay their wages and desert. Overall you lose: {s11} men.",
    "none",
    [
      (set_background_mesh, "mesh_pic_deserters"),
      (store_random_in_range, ":random", 1,  "$g_notification_menu_var1"),
      (call_script, "script_dplmc_player_troops_leave", ":random"),
      (str_store_string, s11, "@{reg0}"),
    ],
    [
      ("dplmc_continue",[],"Continue...",
       [
         (change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_negotiate_besieger",0,
    "You appear with a white flag at the top of the wall. After a while a negotiator of {s11} approaches you. He demands {s6} and all associated villages as well as {reg0} siliquae for safe conduct.",
    "none",
    [
      (party_get_slot, ":besieger", "$current_town", slot_center_is_besieged_by),
      (party_stack_get_troop_id, ":enemy_party_leader", ":besieger", 0),
      (str_store_troop_name, s11, ":enemy_party_leader"),
      (store_faction_of_troop, ":besieger_faction", ":enemy_party_leader"),

      ##diplomacy start+
	  #1) Support promoted kingdom ladies, mercenary parties, etc.
	  #2) Fix mistake with potentially not counting besieger party in the size calculation!
	  ##OLD:
	  #(assign, ":besieger_size", 0),
      #(try_for_range, ":lord", active_npcs_begin, active_npcs_end),
      #  (store_faction_of_troop, ":lord_faction", ":lord"),
      #  (eq, ":lord_faction", ":besieger_faction"),
      #  (troop_get_slot, ":led_party", ":lord", slot_troop_leaded_party),
      ##NEW:
      (party_get_num_companions, ":besieger_size", ":besieger"),

	  (try_for_parties, ":led_party"),
        (ge, ":led_party", spawn_points_end),
        (neq, ":led_party", ":besieger"),#don't double count
        (store_faction_of_party, ":party_faction", ":led_party"),
        (eq, ":party_faction", ":besieger_faction"),
	  ##diplomacy end+
        (party_is_active, ":led_party"),

        (party_slot_eq, ":led_party", slot_party_ai_state, spai_accompanying_army),
        (party_slot_eq, ":led_party", slot_party_ai_object, ":besieger"),

        (party_is_active, ":besieger"),
        (store_distance_to_party_from_party, ":distance_to_marshal", ":led_party", ":besieger"),
        (lt, ":distance_to_marshal", 25),
        (party_get_num_companions, ":party_size", ":led_party"),
        (val_add, ":besieger_size", ":party_size"),
      (try_end),

      (assign, ":garrison_size", 0),
      (party_get_num_companion_stacks, ":num_stacks", "$current_town"),
      (try_for_range, ":i_stack", 0, ":num_stacks"),
        (party_stack_get_size, ":stack_size", "$current_town", ":i_stack"),
        (val_add, ":garrison_size", ":stack_size"),
      (try_end),
      (val_sub, ":besieger_size", ":garrison_size"),

      (store_skill_level, ":player_persuasion_skill", "skl_persuasion", "trp_player"),
      (val_mul, ":player_persuasion_skill", 10),
      (store_sub, "$diplomacy_var", ":besieger_size", ":player_persuasion_skill"),
      (val_mul, "$diplomacy_var", 4),
      ##diplomacy start+ : include ransom cost in calculation
      (call_script, "script_calculate_ransom_amount_for_troop", "trp_player"),
      (val_add, "$diplomacy_var", reg0),
      ##diplomacy end+
      (val_max,"$diplomacy_var",500),
      (val_div, "$diplomacy_var", 100),
      (val_mul, "$diplomacy_var", 100),
      (assign, reg0, "$diplomacy_var"),

      (str_store_party_name, s6, "$current_town"),

    ],
      [
      ("dplmc_comply_treasury",
      [
        (store_troop_gold, ":gold", "trp_household_possessions"),
        (ge, ":gold", "$diplomacy_var"),
      ],"Comply and induce your chamberlain to pay the money from the treasury.",
      [
        (call_script, "script_dplmc_withdraw_from_treasury", "$diplomacy_var"),
		##diplomacy start+ when the player pays, give the gold to the lord
		(party_get_slot, ":besieger", "$current_town", slot_center_is_besieged_by),
		(party_stack_get_troop_id, ":enemy_party_leader", ":besieger", 0),
		(call_script, "script_dplmc_distribute_gold_to_lord_and_holdings", "$diplomacy_var", ":enemy_party_leader"),
		##diplomacy end+
        (call_script, "script_dplmc_player_center_surrender", "$current_town"),
        (change_screen_return),
      ]),

      ("dplmc_comply",
      [
        (store_troop_gold, ":gold", "trp_player"),
        (ge, ":gold", "$diplomacy_var"),
      ],"Comply and pay the gold.",
      [
        (troop_remove_gold, "trp_player", "$diplomacy_var"),
		##diplomacy start+ when the player pays, give the gold to the lord
		(party_get_slot, ":besieger", "$current_town", slot_center_is_besieged_by),
		(party_stack_get_troop_id, ":enemy_party_leader", ":besieger", 0),
		(call_script, "script_dplmc_distribute_gold_to_lord_and_holdings", "$diplomacy_var", ":enemy_party_leader"),
		##diplomacy end+
        (call_script, "script_dplmc_player_center_surrender", "$current_town"),
        (change_screen_return),
      ]),

      ("dplmc_break_off",[],"Break off negotiations.",
       [
          (jump_to_menu, "mnu_town"),
        ]),
     ]
  ),


  (
    "dplmc_messenger",0,
##nested diplomacy start+ "His" to "{reg4?Her:His}"
    "Sire, I found {s10} and delivered your message. {reg4?Her:His} answer was {s11}.",
##nested diplomacy end+
    "none",
    [
        (set_background_mesh, "mesh_pic_messenger"),
        (str_store_troop_name, s10, "$g_notification_menu_var1"),
        (try_begin),
          (eq, "$g_notification_menu_var2", 1),
          (str_store_string, s11, "@positive"),
        (else_try),
          (str_store_string, s11, "@negative"),
        (try_end),
        ##nested diplomacy start+
        (try_begin),
           (call_script, "script_cf_dplmc_troop_is_female", "$g_notification_menu_var1"),
           (assign, reg4, 1),
        (else_try),
           (assign, reg4, 0),
        (try_end),
        ##nested diplomacy end+
    ],
    [
      ("dplmc_continue",[],"Continue...",
       [
         (change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_scout",0,
    "Your spy returned from {s10}^^{s11}{s12}",
    "none",
    [
    (set_background_mesh, "mesh_pic_messenger"),
    (str_store_party_name, s10, "$g_notification_menu_var1"),

    (call_script, "script_game_get_center_note", "$g_notification_menu_var1", 0),
    (str_store_string, s11, "@{!}{s0}"),
    (try_begin),
      (this_or_next|is_between, "$g_notification_menu_var1", towns_begin, towns_end),
      (is_between, "$g_notification_menu_var1", castles_begin, castles_end),
      (party_get_slot, ":center_food_store", "$g_notification_menu_var1", slot_party_food_store),
      (call_script, "script_center_get_food_consumption", "$g_notification_menu_var1"),
      (assign, ":food_consumption", reg0),
      (store_div, reg6, ":center_food_store", ":food_consumption"),
      (store_party_size, reg5, "$g_notification_menu_var1"),
      (str_store_string, s11, "@{s11}^^ The current garrison consists of {reg5} men.^The food stock lasts for {reg6} days."),
    (try_end),

    (str_clear, s12),
    (party_get_num_attached_parties, ":num_attached_parties", "$g_notification_menu_var1"),
    (try_begin),#<- dplmc+ unclosed try_begin!
      (gt, ":num_attached_parties", 0),
      (str_store_string, s12, "@^^Additional the following parties are currently inside:^"),
    (try_for_range, ":attached_party_rank", 0, ":num_attached_parties"),
      (party_get_attached_party_with_rank, ":attached_party", "$g_notification_menu_var1", ":attached_party_rank"),
      (str_store_party_name, s3, ":attached_party"),
      (store_party_size, reg1, ":attached_party"),
      (str_store_string, s12, "@{s12} {s3} with {reg1} troops.^"),
    (try_end),
	##diplomacy start+
	#Add missing try-end for (gt, ":num_attached_parties", 0),
	(try_end),
	##diplomacy end+

    (call_script, "script_update_center_recon_notes", "$g_notification_menu_var1"),
    ],
    [
      ("dplmc_continue",[],"Continue...",
       [
         (change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_domestic_policy",0,
    "You can now shape the domestic policy of your kingdom. Do you want to change your policy now?",
    "none",
    [
      (try_begin),
          (eq, "$g_players_policy_set", 1),
          (change_screen_return),
      (try_end),

      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 65),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_faction_note_mesh_banner", "fac_player_supporters_faction", pos0),
    ],
    [
      ("dplmc_yes",[],"Yes, I want to change the domestic policy.",
       [
         (assign, "$g_faction_selected", "fac_player_supporters_faction"),
         (start_presentation, "prsnt_dplmc_policy_management"), #SB : reassign global
        ]),
      ("dplmc_no",[],"No, I don't want to change the domestic policy.",
       [
         (change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_affiliate_end",0,
    "{!}{s11}",
    "none",
    [
      (set_background_mesh, "mesh_pic_messenger"),

      (str_store_troop_name, s9, "$g_notification_menu_var1"),
      (try_begin),
        ##nested diplomacy start+ (1) Fix a bug from the Diplomacy 3.3.2 version of this menu by getting your ex-affiliate
	    #from "$g_notification_menu_var2" instead of "$g_player_affiliated_troop".
        ##OLD: #(eq, "$g_player_affiliated_troop", "$g_notification_menu_var1"),
        (eq, "$g_notification_menu_var2", "$g_notification_menu_var1"),
        ##nested diplomacy end+
        #SB : some fixes
        (str_store_string, s11, "@{playername}, ^^I always knew you were a bad egg, since the day you have pledged allegiance to my clan. ^Did you really think you could set my family against me? You've dropped your mask, you snake! You are an infliction, and I will not bear it anymore. ^Hereby, I disown and ban you from my house. I have urged my family to fight you, and I will warn all lords of your infamy. ^Tremble with fear, for now you have a deadly enemy! ^^{s9}."),
      (else_try),
        ##nested diplomacy start+ (2) Fix a bug from the Diplomacy 3.3.2 version of this menu by getting your ex-affiliate
	    #from "$g_notification_menu_var2" instead of "$g_player_affiliated_troop".
        ##OLD:
		#(is_between, "$g_player_affiliated_troop", lords_begin, kingdom_ladies_end),
        #(str_store_troop_name, s10, "$g_player_affiliated_troop"),
		##NEW:
		(ge, "$g_notification_menu_var2", walkers_end),
        (troop_is_hero, "$g_notification_menu_var2"),
		(str_store_troop_name, s10, "$g_notification_menu_var2"),
        ##### (3) Make the next line use correct pronouns, and correct term for king/queen.  TODO: Change some of the funny wording.
		##OLD:
        #(str_store_string, s11, "@{playername},^^ I've received a letter from {s9}, telling me about your disgracefull jiggery-pokery. In the present circumstances, {s9} could not provide evidence. But unlike you, {he/she} is a distinguished member of my family; and since all these years, I never had any reason to distrust {him/her}. I take {his/her} charges for granted. ^Hopefully, you failed to breakup my family unit. Hereby I reject your pledge : you are no longer related to my house. Each membership will retaliate against you in all conscience... ^I would be ashamed to confess how you maliciously fooled me, so I will not challenge you, to not be accountable for your death to my King. However I'm not used to report him every rat I crush while in wilderness, someday I may find you there ! ^^{s10}"),
		##NEW:
		(call_script, "script_dplmc_store_troop_is_female", "$g_notification_menu_var1"),
		(assign, reg1, reg0),#Move to reg1, because reg0 will be overwritten below
        (store_faction_of_troop, ":faction_var", "$g_notification_menu_var2"),
		(try_begin),
		   (gt, ":faction_var", 0),
		   (faction_get_slot, ":faction_var", ":faction_var", slot_faction_leader),
		   (gt, ":faction_var", 0),
		   (call_script, "script_dplmc_store_troop_is_female", ":faction_var"),
		   (eq, reg0, 1),
		   (call_script, "script_dplmc_print_cultural_word_to_sreg", "$g_notification_menu_var2", DPLMC_CULTURAL_TERM_KING_FEMALE, s11),
		   (assign, reg1, 1),#make sure the above didn't do anything funny with the register
		(else_try),
		   (call_script, "script_dplmc_print_cultural_word_to_sreg", "$g_notification_menu_var2", DPLMC_CULTURAL_TERM_KING, s11),
		   (assign, reg1, 0),#if there was no faction leader, reg0 might not have been initialized in the first place
		(try_end),
		#Aside from making the next line use the correct gender for the pronoun,
		#I made the wording a tiny bit less strange (although I left in "jiggery-pokery").
        #SB : some fixes (him->his)
        (str_store_string, s11, "@{playername},^^ I've received a letter from {s9}, telling me about your disgraceful jiggery-pokery. In the present circumstances, {s9} could not provide evidence. But unlike you, {reg1?she:he} is a distinguished member of my family; and in all these years, I've never had any reason to distrust {reg1?her:him}. I therefore take {reg1?her:his} charges for granted. ^Hopefully, you failed to break-up my family unit. Hereby I reject your pledge : you are no longer related to my house. Each member shall retaliate against you in all conscience... ^I would be ashamed to confess how you maliciously deceived me, so I will not challenge you, so as to not be held accountable for your death by my {s11}. However I've no need to tell {reg0?her:him} about every rat I crush in the wilderness, and someday I may find you there ! ^^{s10}"),
        ##nested diplomacy end+
      (try_end),
    ],
    [
      ("dplmc_continue",[],"Continue...",
       [
         (change_screen_return),
        ]),
     ]
  ),

  (
    "dplmc_preferences",0,
	##diplomacy start+ alter for PBOD
    "Diplomacy "+DPLMC_DIPLOMACY_VERSION_STRING+" Preferences{s0}",##"Diplomacy preferences",
	##diplomacy end+
    "none",
    [
	##diplomacy start+
    #SB : do verification and update script here as well
	(troop_get_slot, reg0, "trp_dplmc_chamberlain", dplmc_slot_troop_affiliated),
    # (call_script, "script_dplmc_version_checker"),
	(str_clear, s0),
	(try_begin),
		#Print a warning message for bad version numbers
		(neq, reg0, 0),
		(store_mod, ":verify", reg0, 128),
		(this_or_next|lt, reg0, 0),
			(neq, ":verify", DPLMC_VERSION_LOW_7_BITS),
		(str_store_string, s0, "@{!}{s0}^^ WARNING: Unexpected version value in slot dplmc_slot_troop_affiliated in trp_dplmc_chamberlain: {reg0}"),
	(else_try),
		#In cheat mode, print the diplomacy+ version
		(ge, "$cheat_mode", 1),
		(val_div, reg0, 128),
		(str_store_string, s0, "@{!}{s0}^^ DEBUG: Internal update code for current saved game is {reg0}.^Update code for the current release is "+str(DPLMC_CURRENT_VERSION_CODE)+"."),
	(try_end),
	##diplomacy end+

    ##SB : enable presentation to be launched again
    (try_begin),
      (eq, "$g_presentation_next_presentation", "prsnt_redefine_keys"),
      (start_presentation, "$g_presentation_next_presentation"),
    (try_end),
    ],
    [
      ("dplmc_presentation",[],"Presentation",
       [
           # (jump_to_menu, "mnu_dplmc_preferences"),
           (start_presentation, "prsnt_adv_diplomacy_preferences"),
           (assign, "$g_presentation_next_presentation", -1),
        ]),
    #SB : adjust menu options
      ("dplmc_cheat_mode",[(assign, reg0, "$cheat_mode")],"{reg0?Dis:En}able cheat mode.",
       [
           (store_sub, "$cheat_mode", 1, "$cheat_mode"),
           # (jump_to_menu, "mnu_dplmc_preferences"),
        ]),
        #value = 0 is on by default
      ("dplmc_horse_speed",[(assign, reg0, "$g_dplmc_horse_speed"),],"{reg0?En:Dis}able Diplomacy horse speed and culling.",
       [
           (store_sub, "$g_dplmc_horse_speed", 1, "$g_dplmc_horse_speed"),
           # (jump_to_menu, "mnu_dplmc_preferences"),
        ]),
      # ("dplmc_enable_horse_speed",[(eq, "$g_dplmc_horse_speed", 1),],"Enable Diplomacy horse speed.",
       # [
           # (assign, "$g_dplmc_horse_speed", 0),
           # (jump_to_menu, "mnu_dplmc_preferences"),
        # ]),
        #value = 0 is on by default
      ("dplmc_battle_continuation",[(assign, reg0, "$g_dplmc_battle_continuation"),],"{reg0?En:Dis}able Diplomacy battle continuation.",
       [
           (val_clamp, "$g_dplmc_battle_continuation", 0, 2), #in case of other values
           (store_sub, "$g_dplmc_battle_continuation", 1, "$g_dplmc_battle_continuation"),
           (jump_to_menu, "mnu_dplmc_preferences"),
        ]),
      #SB : new option
      ("dplmc_player_disguise",[(assign, reg0, "$g_dplmc_player_disguise"),],"{reg0?Dis:En}able disguise system.",
       [
           (store_sub, "$g_dplmc_player_disguise", 1, "$g_dplmc_player_disguise"),
           (jump_to_menu, "mnu_dplmc_preferences"),
        ]),

      ## sb : charge + deathcam
      # ("dplmc_charge_when_dead",[ (eq, "$g_dplmc_battle_continuation", 0),(assign, reg0, "$g_dplmc_charge_when_dead"),],
      #   "{reg0?Dis:En}able troops charging upon battle continuation.",
      #  [
      #      (store_sub, "$g_dplmc_charge_when_dead", 1, "$g_dplmc_charge_when_dead"),
      #      # (jump_to_menu, "mnu_dplmc_preferences"),
      #   ]),

      ("dplmc_deathcam_keys",[ (eq, "$g_dplmc_battle_continuation", 0),],"Redefine camera keys.",
       [
           (assign, "$g_presentation_next_presentation", "prsnt_redefine_keys"),
           (start_presentation, "prsnt_redefine_keys"),
        ]),

      ##diplomacy start+
      #toggle terrain advantage
      ("dplmc_disable_terrain_advantage",[(eq, "$g_dplmc_terrain_advantage", DPLMC_TERRAIN_ADVANTAGE_ENABLE),],"Disable terrain advantage in Autocalc battles (currently Enabled).",
       [
           (assign, "$g_dplmc_terrain_advantage", DPLMC_TERRAIN_ADVANTAGE_DISABLE),
           (jump_to_menu, "mnu_dplmc_preferences"),
        ]),
      ("dplmc_enable_terrain_advantage",[
		(eq, "$g_dplmc_terrain_advantage", DPLMC_TERRAIN_ADVANTAGE_DISABLE),],"Enable terrain advantage in Autocalc battles (currently Disabled).",
       [
           (assign, "$g_dplmc_terrain_advantage", DPLMC_TERRAIN_ADVANTAGE_ENABLE),
           (jump_to_menu, "mnu_dplmc_preferences"),
        ]),
      ("dplmc_reset_terrain_advantage",[
		(neq, "$g_dplmc_terrain_advantage", DPLMC_TERRAIN_ADVANTAGE_DISABLE),
		(neq, "$g_dplmc_terrain_advantage", DPLMC_TERRAIN_ADVANTAGE_ENABLE),
		(assign, reg0, "$g_dplmc_terrain_advantage")
		],"You used a saved game from another mod: g_dplmc_terrain_advantage = {reg0} (click to reset)",
       [
           (assign, "$g_dplmc_terrain_advantage", 0),
           (jump_to_menu, "mnu_dplmc_preferences"),
        ]),
	#toggle lord recycling
	  ("dplmc_toggle_lord_recycling_a",[
		(eq, "$g_dplmc_lord_recycling", DPLMC_LORD_RECYCLING_DISABLE),
		],"Enable lords returning from exile and spawning without homes (currently disabled)",
       [
           (assign, "$g_dplmc_lord_recycling", DPLMC_LORD_RECYCLING_ENABLE),
        ]),
	  ("dplmc_toggle_lord_recycling_b",[
		(this_or_next|eq, "$g_dplmc_lord_recycling", DPLMC_LORD_RECYCLING_FREQUENT),#currently this setting is not distinct
		(eq, "$g_dplmc_lord_recycling", DPLMC_LORD_RECYCLING_ENABLE),
		],"Disable lords returning from exile and spawning without homes (currently enabled)",
       [
	 	   (assign, "$g_dplmc_lord_recycling", DPLMC_LORD_RECYCLING_DISABLE),
        ]),
      ("dplmc_toggle_lord_recycling_reset",
		[(neq, "$g_dplmc_lord_recycling", DPLMC_LORD_RECYCLING_DISABLE), #SB : fix const
 		 (neq, "$g_dplmc_lord_recycling", DPLMC_LORD_RECYCLING_ENABLE),
		 (neq, "$g_dplmc_lord_recycling", DPLMC_LORD_RECYCLING_FREQUENT),
		 (assign, reg0, "$g_dplmc_lord_recycling"),],
			"You used a saved game from another mod: g_dplmc_lord_recycling = {reg0} (click to reset)",
       [
           (assign, "$g_dplmc_lord_recycling", 0),
           (jump_to_menu, "mnu_dplmc_preferences"),
        ]),
	#toggle AI changes
	  ("dplmc_toggle_ai_changes_a",[
		(eq, "$g_dplmc_ai_changes", DPLMC_AI_CHANGES_DISABLE),
		],"Enable AI changes (currently disabled)",
       [
           (assign, "$g_dplmc_ai_changes", DPLMC_AI_CHANGES_LOW),
        ]),
	  ("dplmc_toggle_ai_changes_b",[
		(eq, "$g_dplmc_ai_changes", DPLMC_AI_CHANGES_LOW),
		],"Increase AI changes (currently low)",
       [
	 	   (assign, "$g_dplmc_ai_changes",DPLMC_AI_CHANGES_MEDIUM),
        ]),

	  ("dplmc_toggle_ai_changes_c",[
		(eq, "$g_dplmc_ai_changes", DPLMC_AI_CHANGES_MEDIUM),
		],"Increase AI changes (currently medium)",
       [
	 	   (assign, "$g_dplmc_ai_changes", DPLMC_AI_CHANGES_HIGH),
        ]),
	  ("dplmc_toggle_ai_changes_d",[
		(eq, "$g_dplmc_ai_changes", DPLMC_AI_CHANGES_HIGH),
		],"Disable AI changes (currently high/experimental)",
       [
	 	   (assign, "$g_dplmc_ai_changes", DPLMC_AI_CHANGES_DISABLE),
        ]),
      ("dplmc_reset_ai_changes",
		[(neq, "$g_dplmc_ai_changes", DPLMC_AI_CHANGES_DISABLE),
 		 (neq, "$g_dplmc_ai_changes", DPLMC_AI_CHANGES_LOW),
		 (neq, "$g_dplmc_ai_changes", DPLMC_AI_CHANGES_MEDIUM),
		 (neq, "$g_dplmc_ai_changes", DPLMC_AI_CHANGES_HIGH),
		 (assign, reg0, "$g_dplmc_ai_changes"),],
			"You used a saved game from another mod: g_dplmc_ai_changes = {reg0} (click to reset)",
       [
           (assign, "$g_dplmc_ai_changes", 0),
           (jump_to_menu, "mnu_dplmc_preferences"),
        ]),
	#toggle economics changes
	  ("dplmc_toggle_gold_changes_a",[
		(eq, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_DISABLE),
		],"Set economic & behavioral changes to low (current mode: disabled)",
       [
           (assign, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_LOW),
        ]),
	  ("dplmc_toggle_gold_changes_b",[
		(eq, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_LOW),
		],"Set economic & behavioral changes to medium (current mode: low)",
       [
	 	   (assign, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_MEDIUM),
        ]),
	  ("dplmc_toggle_gold_changes_c",[
		(eq, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_MEDIUM),
		],"Set economic & behavioral changes to high/experimental (current mode: medium)",
       [
	 	   (assign, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_HIGH),
        ]),
	  ("dplmc_toggle_gold_changes_d",[
		(eq, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_HIGH),
		],"Disable economic & behavioral changes (current mode: high/experimental)",
       [
	 	   (assign, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_DISABLE),
        ]),
      ("dplmc_reset_gold_changes",
		[(neq, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_DISABLE),
 		 (neq, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_LOW),
		 (neq, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_MEDIUM),
		 (neq, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_HIGH),
		 (assign, reg0, "$g_dplmc_gold_changes"),],
			"You used a saved game from another mod: g_dplmc_gold_changes = {reg0} (click to reset)",
       [
           (assign, "$g_dplmc_gold_changes", 0),
           (jump_to_menu, "mnu_dplmc_preferences"),
        ]),
	#Toggle the default anti-woman prejudice.  This uses the already-existing
	#global variable "$g_disable_condescending_comments", and gives it additional
	#meaning.
		("dplmc_switch_woman_prejudice_1", [
			(this_or_next|eq, "$g_disable_condescending_comments", 0),
			(eq, "$g_disable_condescending_comments", 1)],
			"Change prejudice level (current level is default)",
			[(val_add, "$g_disable_condescending_comments", 2),
			(jump_to_menu, "mnu_dplmc_preferences"),]),
		("dplmc_switch_woman_prejudice_2", [
			(this_or_next|eq, "$g_disable_condescending_comments", 2),
			(eq, "$g_disable_condescending_comments", 3)],
			"Change prejudice level (current level is off)",
			[(val_sub, "$g_disable_condescending_comments", 4),
			(jump_to_menu, "mnu_dplmc_preferences"),]),
		("dplmc_switch_woman_prejudice_3", [
			(this_or_next|eq, "$g_disable_condescending_comments", -1),
			(eq, "$g_disable_condescending_comments", -2)],
			"Change prejudice level (current level is high)",
			[(val_add, "$g_disable_condescending_comments", 2),
			(jump_to_menu, "mnu_dplmc_preferences"),]),
      #SB : companion complaints
      ("dplmc_player_disguise",[(assign, reg0, "$disable_npc_complaints"),],"{reg0?En:Dis}able NPC complaints.",
       [
           (store_sub, "$disable_npc_complaints", 1, "$disable_npc_complaints"),
        ]),
##diplomacy end+
      ("dplmc_back",[],"Back...",
       [
           (jump_to_menu, "mnu_camp"),
           #SB : add blurb to info pages
           (call_script, "script_dplmc_update_info_settings"),
        ]),
     ]
  ),

  ##diplomacy end
##diplomacy start+
  ("dplmc_affiliated_family_report",0,
   "{s0}",
   "none",
   [
    (str_clear, s0),
	(str_clear, s1),
	(try_for_range, ":troop_no", active_npcs_including_player_begin, heroes_end),
		(try_begin),
			(eq, ":troop_no", active_npcs_including_player_begin),
			(assign, ":troop_no", "trp_player"),
		(try_end),
		(call_script, "script_dplmc_store_troop_is_eligible_for_affiliate_messages", ":troop_no"),
		(this_or_next|eq, ":troop_no", "trp_player"),
           (ge, reg0, 1),

		(str_clear, s1),
		(str_store_string, s0, "str_dplmc_s0_newline_s1"),#add blank line to start

		#show name; (non-player) also show location
		(try_begin),
			(eq, ":troop_no", "trp_player"),
			(str_store_string, s1, "@{playername}"),
		(else_try),
			(call_script, "script_get_information_about_troops_position", ":troop_no", 0),#s1 = String, reg0 = knows-or-not
		(try_end),
		(str_store_string, s0, "str_dplmc_s0_newline_s1"),#add line

		#(non-player) show relation
		(try_begin),
			(neq, "trp_player", ":troop_no"),
			(call_script, "script_troop_get_player_relation", ":troop_no"),
			(assign, reg1, reg0) ,
			(str_store_string, s1, "str_relation_reg1"),
			(str_store_string, s0, "str_dplmc_s0_newline_s1"),#add line
		(try_end),

		#(non-prisoner) show party size
		(try_begin),
            (neg|troop_slot_ge, ":troop_no", slot_troop_prisoner_of_party, 0),
			(troop_get_slot, ":led_party", ":troop_no", slot_troop_leaded_party),
            (this_or_next|eq, ":led_party", 0),
			   (ge, ":led_party", spawn_points_end),
			(this_or_next|eq, ":troop_no", "trp_player"),
			   (neq, ":led_party", "p_main_party"),
			(party_is_active, ":led_party"),
			(assign, reg0, 0),
			(party_get_num_companions, reg1, ":led_party"),#number of troops
            (str_store_string, s1, "@Troops: {reg1}"),
			(str_store_string, s0, "str_dplmc_s0_newline_s1"),#add line
		(try_end),

	(try_end),
    ],
    [
	  ("lord_relations",[],"View list of all known lords by relation.",
       [
		(jump_to_menu, "mnu_lord_relations"),
        ]
       ),
      ("continue",[],"Continue...",
       [(jump_to_menu, "mnu_reports"),
        ]
       ),
      ]
  ),

  ("dplmc_start_select_prejudice",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "In the traditional medieval society depicted in the game, war and politics are usually dominated by male members of the nobility.  Beacuse of this, a female character can face initial prejudice, and some opportunities open to men will not be available (although a woman will also have some opportunities a man will not).  Some players might find distasteful, so if you want you can ignore that aspect of society.^^You can later change your mind through the options in the Camp menu.",
    "none",
    [],
    [
      # ("dplmc_start_prejudice_yes",[],"I do not mind encountering sexism.",
      #  [
      #    (assign, "$g_disable_condescending_comments", 0),#Default value
      #    (jump_to_menu,"mnu_start_character_1"),
      #   ]
      #  ),
      # ("dplmc_start_prejudice_no",[],"I would prefer not to encounter as much sexism.",
      #  [
      #    (assign, "$g_disable_condescending_comments", 2),#Any value 2 or higher shuts off sexist setting elements
      #    (jump_to_menu, "mnu_start_character_1"),
      #  ]
      #  ),
      #  #SB : enable dplmc_random_mixed_gender mission triggers
      # ("dplmc_start_prejudice_mixed",[],"I would also like to see female presence on the field of battle.",
      #  [
      #    (assign, "$g_disable_condescending_comments", 4),
      #    (jump_to_menu, "mnu_start_character_1"),
      #  ]
      #  ),
	  ("go_back",[],"Bruh, fuck it",
       [
	     (change_screen_quit),
       ]),
    ]
  ),

  ##Economic report, currently just for debugging purposes
  ("dplmc_economic_report",0,
   "{s0}",
   "none",
   [
    (str_clear, s0),
    (str_clear, s1),
    (assign, reg0, 0),
    (str_store_string, s0, "@Prosperity Report^"),

    #Show average prosperity for each faction
    (try_for_range, ":faction", 0, kingdoms_end),
       (this_or_next|eq, ":faction", 0),
       (is_between, ":faction", kingdoms_begin, kingdoms_end),

       (this_or_next|eq, ":faction", 0),
       (faction_slot_eq, ":faction", slot_faction_state, sfs_active),

       (try_begin),
          (eq, ":faction", 0),
          (str_store_string, s1, "@Total"),
       (else_try),
          (faction_get_slot, reg0, ":faction", slot_faction_adjective),
          (gt, reg0, 0),
          (str_store_string, s1, reg0),
       (else_try),
          (str_store_faction_name, s1, ":faction"),
       (try_end),

       ##(1) Faction Prosperity, towns
       (assign, ":sum", 0),
       (assign, ":q_5", 0),
       (assign, ":q_4", 0),
       (assign, ":q_3", 0),
       (assign, ":q_2", 0),
       (assign, ":q_1", 0),
       (assign, ":num", 0),

       (try_for_range, ":center_no", towns_begin, towns_end),
          (store_faction_of_party, reg0, ":center_no"),
          (this_or_next|eq, ":faction", 0),
          (eq, reg0, ":faction"),
          (val_add, ":num", 1),
          (party_get_slot, reg0, ":center_no", slot_town_prosperity),
          (val_add, ":sum", reg0),
          (try_begin),
             (lt, reg0, 20),
             (val_add, ":q_1", 1),
          (else_try),
             (lt, reg0, 40),
             (val_add, ":q_2", 1),
          (else_try),
             (lt, reg0, 60),
             (val_add, ":q_3", 1),
          (else_try),
             (lt, reg0, 80),
             (val_add, ":q_4", 1),
          (else_try),
             (val_add, ":q_5", 1),
          (try_end),
       (try_end),

       (assign, reg0, ":num"),
       (val_max, reg0, 1),
       (store_div, reg0, ":sum", reg0),
       (str_store_string, s0, "@{s0}^{s1} Average Town Prosperity: {reg0}"),
       (assign, reg0, ":q_5"),
       (try_begin),
          (this_or_next|eq, ":faction", 0),
          (gt, reg0, 0),
          (str_store_string, s0, "@{s0}^{s1} towns with prosperity 80-100: {reg0}"),
       (try_end),
       (assign, reg0, ":q_4"),
       (try_begin),
          (this_or_next|eq, ":faction", 0),
          (gt, reg0, 0),
          (str_store_string, s0, "@{s0}^{s1} towns with prosperity 60-79: {reg0}"),
       (try_end),
       (assign, reg0, ":q_3"),
       (try_begin),
          (this_or_next|eq, ":faction", 0),
          (gt, reg0, 0),
          (str_store_string, s0, "@{s0}^{s1} towns with prosperity 40-59: {reg0}"),
       (try_end),
       (assign, reg0, ":q_2"),
       (try_begin),
          (this_or_next|eq, ":faction", 0),
          (gt, reg0, 0),
          (str_store_string, s0, "@{s0}^{s1} towns with prosperity 20-39: {reg0}"),
       (try_end),
       (assign, reg0, ":q_1"),
       (try_begin),
          (this_or_next|eq, ":faction", 0),
          (gt, reg0, 0),
          (str_store_string, s0, "@{s0}^{s1} towns with prosperity 0-19: {reg0}"),
       (try_end),

       (str_store_string, s0, "@{!}{s0}^"),

       ##(2) Faction Prosperity, villages
       (assign, ":sum", 0),
       (assign, ":q_5", 0),
       (assign, ":q_4", 0),
       (assign, ":q_3", 0),
       (assign, ":q_2", 0),
       (assign, ":q_1", 0),
       (assign, ":num", 0),

       (try_for_range, ":center_no", villages_begin, villages_end),
          (store_faction_of_party, reg0, ":center_no"),
          (this_or_next|eq, ":faction", 0),
          (eq, reg0, ":faction"),
          (val_add, ":num", 1),
          (party_get_slot, reg0, ":center_no", slot_town_prosperity),
          (val_add, ":sum", reg0),
          (try_begin),
             (lt, reg0, 20),
             (val_add, ":q_1", 1),
          (else_try),
             (lt, reg0, 40),
             (val_add, ":q_2", 1),
          (else_try),
             (lt, reg0, 60),
             (val_add, ":q_3", 1),
          (else_try),
             (lt, reg0, 80),
             (val_add, ":q_4", 1),
          (else_try),
             (val_add, ":q_5", 1),
          (try_end),
       (try_end),

       (assign, reg0, ":num"),
       (val_max, reg0, 1),
       (store_div, reg0, ":sum", reg0),
       (str_store_string, s0, "@{s0}^{s1} Average Village Prosperity: {reg0}"),
       (try_begin),
          (this_or_next|eq, ":faction", 0),
          (gt, ":q_5", 0),
          (assign, reg0, ":q_5"),
          (str_store_string, s0, "@{s0}^{s1} villages with prosperity 80-100: {reg0}"),
       (try_end),
       (try_begin),
          (this_or_next|eq, ":faction", 0),
          (gt, ":q_4", 0),
          (assign, reg0, ":q_4"),
          (str_store_string, s0, "@{s0}^{s1} villages with prosperity 60-79: {reg0}"),
       (try_end),
       (try_begin),
          (this_or_next|eq, ":faction", 0),
          (gt, ":q_3", 0),
          (assign, reg0, ":q_3"),
          (str_store_string, s0, "@{s0}^{s1} villages with prosperity 40-59: {reg0}"),
       (try_end),
       (try_begin),
          (this_or_next|eq, ":faction", 0),
          (gt, ":q_2", 0),
          (assign, reg0, ":q_2"),
          (str_store_string, s0, "@{s0}^{s1} villages with prosperity 20-39: {reg0}"),
       (try_end),
       (try_begin),
          (this_or_next|eq, ":faction", 0),
          (gt, ":q_1", 0),
          (assign, reg0, ":q_1"),
          (str_store_string, s0, "@{s0}^{s1} villages with prosperity 0-19: {reg0}"),
       (try_end),
       (str_store_string, s0, "@{!}{s0}^"),
    (try_end),
    ],
    [
      ("dplmc_back",[],"Continue...",
       [
           (jump_to_menu, "mnu_reports"),
        ]),
      ]
  ),
##diplomacy end+

#SB : secondary cheat menu

  (
    "town_cheats",0,
    "Select an option to interact with the town here",
    "none",[(call_script, "script_set_town_picture"),],
    [
      ("page",
      [],
      "Next Page.",
      [
        (jump_to_menu, "mnu_town_cheats_2"),
      ]),

      ("debug",
      [],
      "Party Cheats.",
      [
        (jump_to_menu, "mnu_party_cheat"),
      ]),
      ("host_tournament",
      [(party_slot_eq, "$current_town", slot_party_type, spt_town),],
      "Host a competition",
      [
           (call_script, "script_fill_tournament_participants_troop", "$current_town", 1),
           (assign, "$g_tournament_cur_tier", 0),
           (assign, "$g_tournament_player_team_won", -1),
           (assign, "$g_tournament_bet_placed", 0),
           (assign, "$g_tournament_bet_win_amount", 0),
           (assign, "$g_tournament_last_bet_tier", -1),
           (assign, "$g_tournament_next_num_teams", 0),
           (assign, "$g_tournament_next_team_size", 0),
           (jump_to_menu, "mnu_town_tournament"),
      ]),

      ("camp_cheat_gather",[(party_slot_eq, "$current_town", slot_party_type, spt_town),],"Gather all inactive NPCs.",
       [ (assign, "$npc_to_rejoin_party", -1),
         (try_for_range, ":troop_no", companions_begin, companions_end),
           (neg|main_party_has_troop, ":troop_no"),
           (troop_slot_eq, ":troop_no", slot_troop_days_on_mission, 0),
           (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_inactive),
            # (neg|troop_slot_ge, ":troop_no", slot_troop_prisoner_of_party, 0),
           (troop_set_slot, ":troop_no", slot_troop_cur_center, "$current_town"),
           (troop_set_slot, ":troop_no", slot_troop_turned_down_twice, 0),
         (try_end),
         # (jump_to_menu, "mnu_camp_cheat"),
        ]
        ),

      # ("camp_cheat_gather",[(party_slot_eq, "$current_town", slot_party_type, spt_town),],"Gather all NPCs not in main party (cancel missions).",
       # [ (assign, "$npc_to_rejoin_party", -1),
         # (try_for_range, ":troop_no", companions_begin, companions_end),
            # (neg|main_party_has_troop, ":troop_no"),
            # (call_script, "script_remove_troop_from_prison", ":troop_no"),
            # (try_for_range, ":slots", slot_troop_days_on_mission, slot_troop_recruit_price),
              # (troop_set_slot, ":troop_no", ":slots", 0),
            # (try_end),
            # (troop_set_slot, ":troop_no", slot_troop_cur_center, "$current_town"),
         # (try_end),
        # ]
        # ),

      ("summon_drunk",
      [(party_slot_eq, "$current_town", slot_party_type, spt_town),
       # (troop_get_slot, ":town", "trp_belligerent_drunk", slot_troop_cur_center),
       (try_begin),
         # (is_between, ":town", towns_begin, towns_end),
         (troop_slot_eq, "trp_belligerent_drunk", slot_troop_cur_center, "$current_town"),
         (assign, reg10, 1),
       (else_try),
         (assign, reg10, 0),
       (try_end),
       ],
      "{reg10?Dismiss:Get} a drunkard.",
      [
        (try_begin),
          (eq, reg10, 1),
          (troop_set_slot, "trp_belligerent_drunk", slot_troop_cur_center, -1),
        (else_try),
          (troop_set_slot, "trp_belligerent_drunk", slot_troop_cur_center, "$current_town"),
        (try_end),
      ]),


      ("summon_ass",
      [(party_slot_eq, "$current_town", slot_party_type, spt_town),
       (try_begin),
         # (is_between, ":town", towns_begin, towns_end),
         (troop_slot_eq, "trp_hired_assassin", slot_troop_cur_center, "$current_town"),
         (assign, reg11, 1),
       (else_try),
         (assign, reg11, 0),
       (try_end),
      ],
      "{reg11?Scare away:Hire} an assassin.",
      [
        (try_begin),
          (eq, reg11, 1),
          (troop_set_slot, "trp_hired_assassin", slot_troop_cur_center, -1),
        (else_try),
          (troop_set_slot, "trp_hired_assassin", slot_troop_cur_center, "$current_town"),
        (try_end),
      ]),

      ("summon_bandit",
      [
       (neg|party_slot_eq, "$current_town", slot_party_type, spt_castle),
       (party_get_slot, reg12, "$current_town", slot_center_has_bandits),
       # (try_begin),
         # (party_slot_ge, "$current_town", slot_center_has_bandits, 1),
         # (assign, reg12, 1),
       # (else_try),
         # (assign, reg12, 0),
       # (try_end).
       (try_begin), #none present
         (eq, reg12, 0),
         (str_store_string, s12, "str_bandits"),
       (else_try),
         (str_store_troop_name_plural, s12, reg12),
       (try_end),
      ],
      "{reg12?Kick out:Get ambushed by} some {s12}.",
      [
       (try_begin), #cleanse
         (party_slot_ge, "$current_town", slot_center_has_bandits, 1),
         (party_set_slot, "$current_town", slot_center_has_bandits, 0),
       (else_try), #ambush
         (store_random_in_range, ":bandit", bandits_begin, bandits_end),
         (party_set_slot, "$current_town", slot_center_has_bandits, ":bandit"),
         (assign, "$town_nighttime", 1),
         (assign, "$sneaked_into_town", 0),
         (assign, "$g_defending_against_siege", 0),
         (call_script, "script_cf_enter_center_location_bandit_check"),
         # (assign, "$town_nighttime", 1),
       (try_end),
      ]),

      ("summon_village_bandit",
      [
       (party_slot_eq, "$current_town", slot_party_type, spt_village),
       (party_get_slot, reg13, "$current_town", slot_village_infested_by_bandits),
       (try_begin),
         (le, reg13, 0),
         (str_store_troop_name_plural, s13, "trp_bandit"),
       (else_try),
         (str_store_troop_name_plural, s13, reg13),
       (try_end),
      ],
      "{reg13?Cleanse:Infest} the village {reg13?of:with} {s13}.",
      [
        (try_begin), #cleanse
          (party_slot_ge, "$current_town", slot_village_infested_by_bandits, 1),
          (party_set_slot, "$current_town", slot_village_infested_by_bandits, 0),
        (else_try), #infest
          (call_script, "script_center_get_bandits", "$current_town", 0),
          (party_set_slot, "$current_town", slot_village_infested_by_bandits, reg0),
          (jump_to_menu, "mnu_village"),
        (try_end),
      ]),

      ("summon_insurgent",
      [ (party_slot_eq, "$current_town", slot_village_infested_by_bandits, 0),
      ],
      "Spearhead a peasant revolution.",
      [
        (party_set_slot, "$current_town", slot_village_infested_by_bandits, "trp_peasant_woman"),

        #add additional troops
        (store_character_level, ":player_level", "trp_player"),
        (store_div, ":player_leveld2", ":player_level", 2),
        (store_mul, ":player_levelx2", ":player_level", 2),
        (try_begin),
          (is_between, "$current_town", villages_begin, villages_end),
          (store_random_in_range, ":random",0, ":player_level"),
          (party_add_members, "$current_town", "trp_mercenary_swordsman", ":random"),
          (store_random_in_range, ":random", 0, ":player_leveld2"),
          (party_add_members, "$current_town", "trp_hired_blade", ":random"),
        (else_try),
          (party_set_banner_icon, "$current_town", 0),
          (party_get_num_companion_stacks, ":num_stacks","$current_town"),
          (try_for_range, ":i_stack", 0, ":num_stacks"),
            (party_stack_get_size, ":stack_size","$current_town",":i_stack"),
            (val_div, ":stack_size", 2),
            (party_stack_get_troop_id, ":troop_id", "$current_town", ":i_stack"),
            (party_remove_members, "$current_town", ":troop_id", ":stack_size"),
          (try_end),
          (store_random_in_range, ":random",":player_leveld2", ":player_levelx2"),
          (party_add_members, "$current_town", "trp_townsman", ":random"),
          (store_random_in_range, ":random",0, ":player_level"),
          (party_add_members, "$current_town", "trp_watchman", ":random"),
        (try_end),
      ]),

      ("center_refresh",
      [(party_slot_eq, "$current_town", slot_party_type, spt_town),],
      "Refresh merchants (global).",
      [
        # (party_get_slot, g.selected_troop,"$current_town", slot_town_weaponsmith),
        (call_script, "script_refresh_center_weaponsmiths"),
        # (party_get_slot, g.selected_troop,"$current_town", slot_town_armorer),
        (call_script, "script_refresh_center_armories"),
        # (party_get_slot, g.selected_troop,"$current_town", slot_town_horse_merchant),
        (call_script, "script_refresh_center_stables"),
        # (party_get_slot, g.selected_troop,"$current_town", slot_town_merchant),
        (call_script, "script_refresh_center_inventories"),
        # (assign, g.selected_troop, -1),
      ]),

      ("village_refresh",
      [(party_slot_eq, "$current_town", slot_party_type, spt_village),],
      "Refresh village goods.",
      [
        (call_script, "script_refresh_village_merchant_inventory", "$current_town"),
      ]),

      ("village_recruits",
      [(party_slot_eq, "$current_town", slot_party_type, spt_village),],
      "Refresh recruits.",
      [
        (call_script, "script_update_volunteer_troops_in_village", "$current_town"),
      ]),
      ("center_recruits",
      [(party_slot_eq, "$current_town", slot_party_type, spt_town),],
      "Refresh mercenaries.",
      [
        (store_random_in_range, ":troop_no", mercenary_troops_begin, mercenary_troops_end),
        (party_set_slot, "$current_town", slot_center_mercenary_troop_type, ":troop_no"),
        (store_random_in_range, ":amount", 3, 8),
        (try_begin),
          (ge, "$g_dplmc_gold_changes", DPLMC_GOLD_CHANGES_HIGH),
          (store_character_level, ":level", "trp_player"), #increase limits a little bit as the game progresses.
          (store_add, ":level_factor", 80, ":level"),
          (val_mul, ":amount", ":level_factor"),
          (val_div, ":amount", 80),
        (try_end),
        (party_set_slot, "$current_town", slot_center_mercenary_troop_amount, ":amount"),
      ]),


      ("center_refresh_industry", #resets slot_center_player_enterprise to be 0 just in case it breaks
      [(party_slot_eq, "$current_town", slot_party_type, spt_town),
      ],
      "Reset player enterprise (if it breaks).",
      [
      (party_set_slot, "$current_town", slot_center_player_enterprise, 0),
      ]),


      ("go_back",
      [(neg|party_slot_eq,"$current_town",slot_party_type, spt_village),],
      "Go Back.",
      [
        (jump_to_menu,"mnu_town"),
      ]),

      ("continue",
      [(party_slot_eq,"$current_town",slot_party_type, spt_village),],
      "Continue.",
      [
        (jump_to_menu,"mnu_village"),
      ]),
    ]),

  (
    "town_cheats_2",0,
    "Select an option to interact with the center itself. Prosperity is {reg1}, Relation is {reg2}, there are {reg3} parties in town.",
    "none",[
        (call_script, "script_set_town_picture"),
        (party_get_slot, reg1, "$current_town", slot_town_prosperity),
        (party_get_slot, reg2, "$current_town", slot_center_player_relation),

        (assign, ":count", 0),
        (try_for_parties, ":party_no"),
          (party_is_active, ":party_no"),
          (party_is_in_town, ":party_no", "$current_town"),
          (val_add, ":count", 1),
        (try_end),
        (assign, reg3, ":count"),
      ],
      [
          ("page",
          [],
          "Previous Page.",
          [
            (jump_to_menu, "mnu_town_cheats"),
          ]),

          ("toggle_state",
          [(party_slot_eq, "$current_town", slot_party_type, spt_village),
           (party_get_slot, reg1, "$current_town", slot_village_state),],
          "{reg1?Restore:Raze} this village.",
          [
            (try_begin),
              (party_slot_eq, "$current_town", slot_village_state, svs_normal),
              (call_script, "script_village_set_state", "$current_town", svs_looted),
            (else_try),
              (call_script, "script_village_set_state", "$current_town", svs_normal),
            (try_end),
          ]),

          # ("village_manage",
          # [], "Manage this center.",
          # [
           # (assign, "$g_next_menu", "mnu_town_cheats_2"),
           # (jump_to_menu, "mnu_center_manage"),
          # ]),
          ("increase_rel",
          [],
          "Increase Relation.",
          [
            (try_begin),
              (this_or_next|key_is_down, key_left_shift),
              (key_is_down, key_right_shift),
              (call_script, "script_change_player_relation_with_center", "$current_town", 1),
            (else_try),
              (call_script, "script_change_player_relation_with_center", "$current_town", 5),
            (try_end),
          ]),

          ("decrease_rel",
          [],
          "Decrease Relation.",
          [
            (try_begin),
              (this_or_next|key_is_down, key_left_shift),
              (key_is_down, key_right_shift),
              (call_script, "script_change_player_relation_with_center", "$current_town", -1),
            (else_try),
              (call_script, "script_change_player_relation_with_center", "$current_town", -5),
            (try_end),
          ]),

          ("increase_prosp",
          [],
          "Increase Prosperity.",
          [
            (try_begin),
              (this_or_next|key_is_down, key_left_shift),
              (key_is_down, key_right_shift),
              (call_script, "script_change_center_prosperity", "$current_town", 1),
            (else_try),
              (call_script, "script_change_center_prosperity", "$current_town", 5),
            (try_end),
          ]),

          ("decrease_prosp",
          [],
          "Decrease Prosperity.",
          [
            (try_begin),
              (this_or_next|key_is_down, key_left_shift),
              (key_is_down, key_right_shift),
              (call_script, "script_change_center_prosperity", "$current_town", -1),
            (else_try),
              (call_script, "script_change_center_prosperity", "$current_town", -5),
            (try_end),
          ]),

          ("castle_cheat_interior",
          [(neg|party_slot_eq, "$current_town", slot_party_type, spt_village)],
          "{!}Interior.",
          [
            (set_jump_mission,"mt_ai_training"),
            (party_get_slot, ":castle_scene", "$current_town", slot_town_castle),
            (jump_to_scene,":castle_scene"),
            (change_screen_mission),
          ]),

          ("castle_cheat_town_exterior",
          [],
          "{!}Exterior.",
          [
            # (try_begin),
              # (party_slot_eq, "$current_town",slot_party_type, spt_castle),
              # (party_get_slot, ":scene", "$current_town", slot_castle_exterior),
            # (else_try),
              # (party_get_slot, ":scene", "$current_town", slot_town_center),
            # (try_end),
            (party_get_slot, ":scene", "$current_town", slot_town_center),
            (set_jump_mission,"mt_ai_training"),
            (jump_to_scene,":scene"),
            (change_screen_mission),
          ]),

          ("castle_cheat_dungeon",
          [(neg|party_slot_eq, "$current_town", slot_party_type, spt_village)],
          "{!}Prison.",
          [
            (set_jump_mission,"mt_ai_training"),
            (party_get_slot, ":castle_scene", "$current_town", slot_town_prison),
            (jump_to_scene,":castle_scene"),
            (change_screen_mission),
          ]),

          ("castle_cheat_town_walls",
          [
            (party_slot_eq,"$current_town",slot_party_type, spt_town),
          ],
          "{!}Town Walls.",
          [
            (party_get_slot, ":scene", "$current_town", slot_town_walls),
            (set_jump_mission,"mt_ai_training"),
            (jump_to_scene,":scene"),
            (change_screen_mission),
          ]),

          ("cheat_town_start_siege",
          [ (neg|party_slot_eq, "$current_town", slot_party_type, spt_village),
            (party_slot_eq, "$g_encountered_party", slot_center_is_besieged_by, -1),
            (lt, "$g_encountered_party_2", 1),
            # (call_script, "script_party_count_fit_for_battle","p_main_party"),
            # (gt, reg(0), 1),
            # (try_begin),
              # (party_slot_eq, "$g_encountered_party", slot_party_type, spt_town),
              # (assign, reg6, 1),
            # (else_try),
              # (assign, reg6, 0),
            # (try_end),
          ],
          "Besiege the center...",
          [
            #siege warfare chief We repit this here for advoid issues.
            (assign, "$g_empieza_asedio", 1), #variable to begin siege
            (party_set_slot,"$g_encountered_party",slot_center_blockaded,0),
            (party_set_slot,"$g_encountered_party",slot_center_blockaded_time,0),
            (party_set_slot, "$g_encountered_party", slot_center_mantlets_placed, 0),
            (party_set_slot,"$g_encountered_party",slot_center_ladder_time,0),
            (party_set_slot,"$g_encountered_party",slot_center_latrines,0),
            (party_set_slot,"$g_encountered_party",slot_center_infiltration_type,0),
            (assign, "$g_siege_saneamiento", 0),
            (assign, "$g_traicion_interna", 0),
            (assign, "$g_infiltracion_interna", 0),
            (assign, "$g_campos_cercanos", 0),
            (assign, "$g_listos_para_asalto", 0),
            (assign, "$g_mantlets_1", 0),
            (assign, "$g_cabezas_dentro", 0), #event
            (assign, "$g_siege_method", 0),
            (assign, "$g_siege_sallied_out_once", 0),
            (assign, "$g_days_spent_starving", 0), #siege warfare, important, we use this in dialogs
            (assign, "$g_next_sally_at", 0), #sally more common siege warfare chief
            #siege warfare acaba

            (assign,"$g_player_besiege_town","$g_encountered_party"),
            (jump_to_menu, "mnu_castle_besiege"),
          ]),

          ("center_reports",
          [],
          "Show reports.",
          [
            (jump_to_menu,"mnu_center_reports"),
          ]),

          ("sail_from_port",
          [
            (party_slot_eq,"$current_town",slot_party_type, spt_town),
            (party_get_position, pos1, "$current_town"),
            (map_get_water_position_around_position, pos2, pos1, 6),
            (get_distance_between_positions, ":dist", pos1, pos2),
            (lt, ":dist", 6),
            # (party_set_position, "p_main_party", pos2),
            (ge, "$cheat_mode", 1),
            #(party_slot_eq,"$current_town",slot_town_near_shore, 1),
          ],
          "{!}Sail from port.",
          [
            (assign, "$g_player_icon_state", pis_ship),
            (party_set_flags, "p_main_party", pf_is_ship, 1),
            # (party_get_position, pos1, "p_main_party"),
            # (map_get_water_position_around_position, pos2, pos1, 6),
            (party_set_position, "p_main_party", pos2),
            (assign, "$g_main_ship_party", -1),
            (change_screen_return),
          ]),


          ("go_back",
          [(neg|party_slot_eq,"$current_town",slot_party_type, spt_village),],
          "Go Back.",
          [
            (jump_to_menu,"mnu_town"),
          ]),

          ("continue",
          [(party_slot_eq,"$current_town",slot_party_type, spt_village),],
          "Continue.",
          [
            (jump_to_menu,"mnu_village"),
          ]),
      ]
    ),

  #rename_court to set a capital
  (
    "rename_court",0,
    "{!}This menu jumps to the rename presentation",
    "none",
    [
    # (call_script, "script_change_player_right_to_rule", 1), #handled in dialogues
    (try_begin),
      (store_and, ":name_set", "$players_kingdom_name_set", rename_center),
      (gt, ":name_set", 0),
      (change_screen_return),
    (else_try),
      (assign, "$g_presentation_state", rename_center),
      (start_presentation, "prsnt_name_kingdom"),
      (call_script, "script_add_log_entry", logent_player_renamed_capital, "trp_player", "$g_player_court", -1, -1),
    (try_end),
    ],
    []),

  ( #export/import from prsnt_companion_overview
    "export_import", mnf_enable_hot_keys,
    "Press C to access {s1}'s character screen and then the statistics button on the bottom left.",
    "none",
    [
    (set_background_mesh, "mesh_pic_mb_warrior_1"),
    # # (set_player_troop, "trp_player"),
    # (change_screen_view_character),
    # # (change_screen_return),
    # (assign, "$talk_context", tc_town_talk),
    # (start_map_conversation, "$g_player_troop"),
    (set_player_troop, "$g_player_troop"),
    (str_store_troop_name_plural, s1, "$g_player_troop"),
    ],
    [
      ("rename",
      [],
      "I never liked the name {s1}...",
      [
        (assign, "$g_presentation_state", rename_companion),
        (start_presentation, "prsnt_name_kingdom"),
      ]),

      ("display_slots",
      [(ge, "$cheat_mode", 1)], "Show me all your secrets...",
      [
        (assign, "$g_talk_troop", "$g_player_troop"),
        (jump_to_menu, "mnu_display_troop_slots"),
      ]),
      ("continue",
      [],
      "Continue...",
      [
        (set_player_troop, "trp_player"),
        (jump_to_menu, "$g_next_menu"),
      ]),
    ]
  ),

  ( #helper menu to show all slots
    "display_party_slots", menu_text_color(0xFF990000),
    "{s1}",
    "none",
    [
    (set_background_mesh, "mesh_pic_messenger"),
    (str_store_party_name, s1, "$g_encountered_party"),
    (assign, reg1, "$g_encountered_party"),
    (assign, "$pout_party", -1),
    (try_for_parties, ":party_no"),
      # (assign, "$pout_party", ":party_no"),
      (party_is_active, ":party_no"),
      (gt, ":party_no", "$pout_party"),
      (assign, "$pout_party", ":party_no"),
    (try_end),
    (assign, reg2, "$pout_party"),
    (str_store_string, s1, "@{reg1}/{reg2}: {s1}"),
    #There's probably too many slots (and conflicting ones) to actually output the slot names to string
    (try_for_range, reg1, 0, 1000), #slot_town_trade_good_productions_begin
      (party_get_slot, reg0, "$g_encountered_party", reg1),
      (neq, reg0, 0), #if there's a value in here
      (str_store_string, s1, "@{s1}^{reg1}: {reg0}"),
    (try_end),

    # Process the prev and next parties
    # (assign, "$diplomacy_var",  "$g_encountered_party"),
    # (assign, "$diplomacy_var2", "$g_encountered_party"),
    # (try_for_parties, ":party_no"),
      # (party_is_active, ":party_no"),
      # (eq, "$diplomacy_var2", "$g_encountered_party"),
      # (try_begin), #find last party before current one
        # (lt, ":party_no", "$g_encountered_party"),
        # (assign, "$diplomacy_var", ":party_no"),
      # (else_try), #find first party after current one
        # (gt, ":party_no", "$g_encountered_party"),
        # (assign, "$diplomacy_var2", ":party_no"),
      # (try_end),
    # (try_end),
    (store_sub, "$diplomacy_var",  "$g_encountered_party", 1),
    (store_add, "$diplomacy_var2", "$g_encountered_party", 1),
    (try_begin), #find first
      (neg|party_is_active, "$diplomacy_var"),
      (assign, "$diplomacy_var", 0),
      (assign, ":end", "$g_encountered_party"),
      (try_for_range_backwards, ":party_no", 0, ":end"),
        (party_is_active, ":party_no"),
        (lt, ":party_no", "$g_encountered_party"),
        (gt, ":party_no", "$diplomacy_var"),
        (assign, "$diplomacy_var", ":party_no"),
        (assign, ":end", 0),
      (try_end),
    (try_end),
    # (val_max, "$diplomacy_var", "p_main_party"), #lock as first party

    (try_begin), #look for next
      (neg|party_is_active, "$diplomacy_var2"),
      (assign, "$diplomacy_var2", "$pout_party"), #this was previous checked as highest party
      (assign, ":end", "$pout_party"),
      (try_for_range, ":party_no", "$g_encountered_party", ":end"),
        (party_is_active, ":party_no"),
        (gt, ":party_no", "$g_encountered_party"),
        (le, ":party_no", "$diplomacy_var2"),
        (assign, "$diplomacy_var2", ":party_no"),
        (assign, ":end", "$g_encountered_party"),
      (try_end),
    (try_end),

    ],
    [

      ("notes",
      [(is_between, "$g_encountered_party", centers_begin, centers_end),],
      "View Notes.",
      [
        (change_screen_notes, 3, "$g_encountered_party"),
      ]),
      ("previous",
      [
        (ge, "$diplomacy_var", "p_main_party"),
        (lt, "$diplomacy_var", "$g_encountered_party"),
        (party_is_active, "$diplomacy_var"),
        (str_store_party_name, s2, "$diplomacy_var"),
      ],
      "Previous Party ({s2}).",
      [
        # (jump_to_menu, "mnu_party_cheat"),
        (assign, "$g_encountered_party", "$diplomacy_var"),
      ]),

      ("next",
      [
        (le, "$diplomacy_var2", "$pout_party"),
        (gt, "$diplomacy_var2", "$g_encountered_party"),
        (party_is_active, "$diplomacy_var2"),
        (str_store_party_name, s2, "$diplomacy_var2"),
      ],
      "Next Party ({s2}).",
      [
        (assign, "$g_encountered_party", "$diplomacy_var2"),
      ]),


      ("change",
      [],
      "Modify slots.",
      [
        (assign, "$g_presentation_state", 0), #start off at first slot
        (assign, "$g_presentation_input", rename_center),
        (start_presentation, "prsnt_modify_slots"),
      ]),

      ("continue",
      [],
      "Continue.",
      [
        # (jump_to_menu, "mnu_party_cheat"),
        (assign, "$new_encounter", 2),
        (set_encountered_party, "$g_encountered_party"),
        (call_script, "script_game_event_party_encounter", "$g_encountered_party", -1),
        # (change_screen_map),
        # (start_encounter, "$g_encountered_party"),
      ]),
    ]
  ),
  ( #exchange cheat from cmenu_encounter
    "party_cheat",0,
    "{!}{s10} is a {reg10?holding:member} of {s11} with relation {reg11}{reg6? (player relation {reg6}):} at ({reg8},{reg9}) {reg7} km away.^\
 It has {reg12}/{reg13} soldiers {reg13?in {reg14} stacks:}{reg15? and {reg15} prisoners in {reg16} stacks:{reg17? and {reg17} attached parties:}.^\
 AI Behaviour is {s13}{reg18? (currently {s14}):}, Object is {s15}{reg19? (currently {s16}):} at ({reg20},{reg21})",
    "none",
    [
    (assign, "$new_encounter", 0), #this undoes the cheat toggle global immediately
    (set_fixed_point_multiplier, 1000),
    #basic world info first line
    (str_store_party_name, s10, "$g_encountered_party"),
    (str_store_faction_name, s11, "$g_encountered_party_faction"),
    (try_begin),
      (this_or_next|is_between, "$g_encountered_party", centers_begin, centers_end),
      (is_between, "$g_encountered_party", training_grounds_begin, training_grounds_end),
      (assign, reg10, 1),
      (party_get_slot, reg6, "$g_encountered_party", slot_center_player_relation),
    (else_try),
      (assign, reg10, 0),
      (try_begin),
        (party_stack_get_troop_id, ":leader_troop", "$g_encountered_party", 0),
        (troop_is_hero, ":leader_troop"),
        (call_script, "script_troop_get_relation_with_troop", ":leader_troop", "trp_player"),
        (assign, reg6, reg0),
      (try_end),
    (try_end),
    (party_get_position, pos1, "$g_encountered_party"),
    (position_get_x, reg8, pos1),
    (position_get_y, reg9, pos1),
    (assign, reg11, "$g_encountered_party_relation"),
    (store_distance_to_party_from_party, reg7, "$g_encountered_party", "p_main_party"),

    #party composition second line
    (call_script, "script_party_count_fit_for_battle", "$g_encountered_party"),
    (assign, reg12, reg0),
    (party_get_num_companions, reg13, "$g_encountered_party"),
    (party_get_num_companion_stacks, reg14, "$g_encountered_party"),
    (party_get_num_prisoners, reg15, "$g_encountered_party"),
    (party_get_num_prisoner_stacks, reg16, "$g_encountered_party"),
    (party_get_num_attached_parties, reg17, "$g_encountered_party"),

    #AI info third line
    (get_party_ai_behavior, ":behaviour", "$g_encountered_party"),
    (val_add, ":behaviour", "str_ai_bhvr_hold"),
    (str_store_string, s13, ":behaviour"),
    (get_party_ai_current_behavior, ":cur_behaviour", "$g_encountered_party"),
    (val_add, ":cur_behaviour", "str_ai_bhvr_hold"),
    (try_begin),
      (neq, ":cur_behaviour", ":behaviour"),
      (str_store_string, s14, ":cur_behaviour"),
      (assign, reg18, 1),
    (else_try),
      (str_clear, s14),
      (assign, reg18, 0),
    (try_end),

    (get_party_ai_object, ":object", "$g_encountered_party"),
    (try_begin),
      (this_or_next|le, ":object", 0),
      (neg|party_is_active, ":object"),
      (str_store_string, s15, "str_dplmc_none"),
    (else_try),
      (str_store_party_name, s15, ":object"),
    (try_end),
    (get_party_ai_current_object, ":cur_object", "$g_encountered_party"),
    (assign, reg19, 1),
    (try_begin),
      (eq, ":cur_object", ":object"),
      (assign, reg19, 0), #disable display
    (else_try),
      (this_or_next|le, ":cur_object", 0),
      (neg|party_is_active, ":cur_object"),
      (str_store_string, s16, "str_dplmc_none"),
    (else_try),
      (str_store_party_name, s16, ":cur_object"),
    (try_end),

    (party_get_ai_target_position, pos2, "$g_encountered_party"),
    (position_get_x, reg20, pos2),
    (position_get_y, reg21, pos2),

    #grab the background mesh stuff
    (try_begin),
      (is_between, "$g_encountered_party", centers_begin, centers_end),
      (assign, "$current_town", "$g_encountered_party"),
      (call_script, "script_set_town_picture"),
    (else_try),
      (eq, "$g_encountered_party_template", "pt_looters"),
      (set_background_mesh, "mesh_pic_bandits"),
    (else_try),
      (eq, "$g_encountered_party_template", "pt_mountain_bandits"),
      (set_background_mesh, "mesh_pic_mountain_bandits"),
    (else_try),
      (eq, "$g_encountered_party_template", "pt_steppe_bandits"),
      (set_background_mesh, "mesh_pic_steppe_bandits"),
    (else_try),
      (eq, "$g_encountered_party_template", "pt_taiga_bandits"),
      (set_background_mesh, "mesh_pic_mb_warrior_1"),
    (else_try),
      (this_or_next|eq, "$g_encountered_party_template", "pt_saxon_raiders"),
      (eq, "$g_encountered_party_template", "pt_sea_raiders"),
      (set_background_mesh, "mesh_pic_sea_raiders"),
    (else_try),
      (eq, "$g_encountered_party_template", "pt_forest_bandits"),
      (set_background_mesh, "mesh_pic_forest_bandits"),
    (else_try),
      (this_or_next|eq, "$g_encountered_party_template", "pt_deserters"),
      (eq, "$g_encountered_party_template", "pt_routed_warriors"),
      (set_background_mesh, "mesh_pic_deserters"),
    #SB : dplmc party templates
    (else_try),
      (eq, "$g_encountered_party_template", "pt_center_reinforcements"),
      (set_background_mesh, "mesh_pic_recruits"),
    (else_try),
      (eq, "$g_encountered_party_template", "pt_kingdom_hero_party"),
      (party_stack_get_troop_id, ":leader_troop", "$g_encountered_party", 0),
      (ge, ":leader_troop", 1),
      (troop_get_slot, ":leader_troop_faction", ":leader_troop", slot_troop_original_faction),
      (try_begin),
        (eq, ":leader_troop_faction", fac_kingdom_1),
        (set_background_mesh, "mesh_pic_swad"),
      (else_try),
        (eq, ":leader_troop_faction", fac_kingdom_2),
        (set_background_mesh, "mesh_pic_vaegir"),
      (else_try),
        (eq, ":leader_troop_faction", fac_kingdom_3),
        (set_background_mesh, "mesh_pic_khergit"),
      (else_try),
        (eq, ":leader_troop_faction", fac_kingdom_4),
        (set_background_mesh, "mesh_pic_nord"),
      (else_try),
        (eq, ":leader_troop_faction", fac_kingdom_5),
        (set_background_mesh, "mesh_pic_rhodock"),
      (else_try),
        (eq, ":leader_troop_faction", fac_kingdom_6),
        (set_background_mesh, "mesh_pic_sarranid_encounter"),
      (try_end),
    (try_end),
    ],
    [

      ("talk",
      [],
      "Encounter the party (Shift to goto).",
      [
        (try_begin),
          (this_or_next|key_is_down, key_left_shift),
          (key_is_down, key_right_shift),
          (party_get_position, pos1, "$g_encountered_party"),
          (party_set_position, "p_main_party", pos1),
          (change_screen_map),
        (else_try),
          (call_script, "script_game_event_party_encounter", "$g_encountered_party", -1),
        (try_end),
      ]),

      ("slots",
      [],
      "Dump all slot values.",
      [ #g_encountered_party is the input
        (jump_to_menu, "mnu_display_party_slots"),
      ]),


      ("reinf",
      [],
      "Reinforce party.",
      [

      (try_begin),
        (is_between, "$g_encountered_party", villages_begin, villages_end),
        # (party_add_template, "$g_encountered_party", "pt_village_defenders"),
        (call_script, "script_refresh_village_defenders", "$g_encountered_party"),
      (else_try),
        (is_between, "$g_encountered_party_faction", kingdoms_begin, kingdoms_end),
        (call_script, "script_cf_reinforce_party", "$g_encountered_party"),
      (else_try), #if the above falls through by not reinforcing we grab a random template
        (this_or_next|eq, "$g_encountered_party_faction", "fac_deserters"),
        (is_between, "$g_encountered_party_faction", npc_kingdoms_begin, kingdoms_end),
        (party_stack_get_troop_id, ":troop_id", "$g_encountered_party", 0),
        (store_faction_of_troop, "$g_encountered_party_faction", ":troop_id"),
        (store_random_in_range, ":slot_no", slot_faction_reinforcements_a, slot_faction_num_armies),
        (faction_get_slot, ":party_template", "$g_encountered_party_faction", ":slot_no"),
        (party_add_template, "$g_encountered_party", ":party_template"),
      (else_try),
        # (this_or_next|eq, "$g_encountered_party_faction", "fac_outlaws"),
        # (is_between, "$g_encountered_party_faction", bandit_factions_begin, bandit_factions_end),
        (party_get_template_id, ":party_template", "$g_encountered_party"),
        (party_add_template, "$g_encountered_party", ":party_template"),
      (try_end),
      ]),

    ("exp",
      [],
      "Upgrade party.",
      [
        (party_get_num_companion_stacks, ":num_stacks", "$g_encountered_party"),
        (party_clear, "p_temp_party"),
         (try_for_range_backwards, ":stack", 0, ":num_stacks"),
            (party_stack_get_troop_id, ":id", "$g_encountered_party", ":stack"),
            (try_begin),
              (party_stack_get_size, ":size", "$g_encountered_party", ":stack"),
              # (call_script, "script_game_get_upgrade_xp", ":id"),
              # (store_mul, ":xp", reg0, ":size"),
              (try_begin),
                (troop_is_hero, ":id"),
                (store_character_level, ":level", ":id"),
                (assign, ":end", 100),
                (try_begin), #assign block of exp
                  (le, ":level", 10),
                  (assign, ":xp", 100),
                (else_try),
                  (le, ":level", 25),
                  (assign, ":xp", 1000),
                (else_try), #most people stop before level 30
                  (le, ":level", 35),
                  (assign, ":xp", 10000),
                (else_try),
                  (le, ":level", 50),
                  (assign, ":xp", 30000),
                (else_try),
                  (le, ":level", 60),
                  (assign, ":xp", 1000000),
                (else_try), #good luck, level caps at 63
                  (assign, ":xp", 10000000),
                (try_end),
                (try_for_range, ":unused", 0, ":end"),
                  (party_add_xp_to_stack, "$g_encountered_party", ":stack", ":xp"),
                  (add_xp_to_troop, 1, ":id"), #this actually upgrades the level
                  # (add_xp_as_reward, ":xp"),
                  (store_character_level, ":cur_level", ":id"),
                  (lt, ":level", ":cur_level"), #done
                  (assign, ":end", 0),
                (try_end),
              (else_try),
                (troop_get_upgrade_troop, ":upgrade_troop", ":id", 0),
                (gt, ":upgrade_troop", 0),
                (troop_get_upgrade_troop, ":upgrade_2", ":id", 1),
                (try_begin),
                  (gt, ":upgrade_2", 0),
                  (store_random_in_range, ":random_no", 0, 2),
                  (eq, ":random_no", 0),
                  (assign, ":upgrade_troop", ":upgrade_2"),
                (try_end),
                (party_add_members, "p_temp_party", ":upgrade_troop", ":size"),
                (party_stack_get_num_wounded, ":num_wounded", "$g_encountered_party", ":stack"),
                (party_wound_members, "p_temp_party", ":upgrade_troop", ":num_wounded"),
                (party_remove_members, "$g_encountered_party", ":id", ":size"),
                # (party_add_xp_to_stack, "$g_encountered_party", ":stack", ":xp"),
              (try_end),
            (try_end),
         (try_end),
         (call_script, "script_party_add_party_companions", "$g_encountered_party", "p_temp_party"),
      ]),

      ("wound",
      [],
      "Wound party.",
      [
        (call_script, "script_party_wound_all_members", "$g_encountered_party"),
      ]),
    ("heal",
      [],
      "Heal party.",
      [
        (call_script, "script_party_heal_all_members_aux", "$g_encountered_party"),
      ]),

     ("rename",[],"Rename party.",
       [(assign, "$g_presentation_state", rename_party),
       # (assign, "$g_encountered_party", "p_main_party"),
       (start_presentation, "prsnt_name_kingdom"),
       ]
       ),
      ("exchange",
      [],
      "Exchange with party.",
      [
        (change_screen_exchange_members,1),
      ]),

      ("bandits",
      [(is_between, "$g_encountered_party", centers_begin, centers_end),],
      "Spawn bandits nearby.",
      [
      (set_spawn_radius, 25),
      (try_for_range, ":unused", 0, 10),
        (store_random_in_range, ":party_template", bandit_party_templates_begin, bandit_party_templates_end),
        (spawn_around_party, "$g_encountered_party", ":party_template"),
      (try_end),
      ]),

      ("leave",[],"Leave.",
       [
        (assign, "$g_leave_encounter", 1),
        (change_screen_return),
       ]
      ),
    ]
  ),


  ( #helper menu to show all troop slots
    "display_troop_slots", menu_text_color(0xFF009900),
    "{s1}^{s2}",
    "none",
    [
    # (set_background_mesh, "mesh_pic_cattle"),
    (assign, reg1, "$g_talk_troop"),
    (str_store_troop_name, s1, "$g_talk_troop"),
    (str_store_troop_name_plural, s2, "$g_talk_troop"),
    (store_troop_faction, ":faction_no", "$g_talk_troop"),
    (str_store_faction_name, s3, ":faction_no"),
    (troop_get_class, ":class", "$g_talk_troop"),
    (str_store_class_name, s4, ":class"),
    (store_character_level, reg2, "$g_talk_troop"),
    (str_store_string, s1, "@{reg1}: {s1}, {s2} classified as level {reg2} {s3} {s4}"),
    (try_begin), #upgrades
      (neg|troop_is_hero, "$g_talk_troop"),
      (try_begin),
        (troop_get_upgrade_troop, ":upgrade_0", "$g_talk_troop", 0),
        (gt, ":upgrade_0", 0),
        (str_store_troop_name_plural, s2, ":upgrade_0"),
        (str_store_string, s1, "@{s1}^becomes {s2}"),
        (troop_get_upgrade_troop, ":upgrade_1", "$g_talk_troop", 1),
        (gt, ":upgrade_1", 0),
        (str_store_troop_name_plural, s2, ":upgrade_1"),
        (str_store_string, s1, "@{s1} and {s2}"),
      (try_end),

      (call_script, "script_game_get_upgrade_xp", "$g_talk_troop"),
      (assign, reg10, reg0),
      (call_script, "script_game_get_upgrade_cost", "$g_talk_troop"),
      (assign, reg11, reg0),
      (str_store_string, s1, "@{s1}^costs {reg11} to upgrade with {reg10} xp"),

      (call_script, "script_game_get_troop_wage", "$g_talk_troop", -1),
      (assign, reg12, reg0),
      (call_script, "script_game_get_join_cost", "$g_talk_troop"),
      (assign, reg13, reg0),

      #this is because this script ties a global to the price
      (assign, ":troop_no", "$g_talk_troop"),
      (assign, "$g_talk_troop", ransom_brokers_begin),
      (call_script, "script_game_get_prisoner_price", ":troop_no"),
      (assign, reg14, reg0),
      (assign, "$g_talk_troop", ":troop_no"),

      (str_store_string, s1, "@{s1}^wage of {reg12}, buy costs {reg13} sell costs {reg14}"),
    (else_try),
      (troop_is_hero, "$g_talk_troop"),
      (str_store_string, s2, "@hero"),
      (call_script, "script_cf_troop_debug_range", "$g_talk_troop", s2, 0),
      (str_store_string, s1, "@{s1} is a {s2}"),
      (try_begin),
        (store_troop_gold, ":gold", "$g_talk_troop"),
        (gt, ":gold", 0),
        (assign, reg1, ":gold"),
        (str_store_string, s1, "@{s1} with {reg1} gold"),
      (try_end),
      # (try_begin),
        # (store_partner_quest, ":quest_no"),
        # (ge, ":quest_no", 0),
        # (str_store_quest_name, s2, ":quest_no"),
        # (str_store_string, s1, "@{s1} tasking you with {s2}"),
      # (try_end),
    (try_end),

    (str_clear, s2),
    (try_for_range, reg1, 0, 1000),
      (troop_get_slot, reg0, "$g_talk_troop", reg1),
      (neq, reg0, 0), #if there's a value in here
      (str_store_string, s2, "@{s2}^{reg1}: {reg0}"),
    (try_end),

    (set_fixed_point_multiplier, 100),
    (init_position, pos0),
    (try_begin),
      (str_is_empty, s2),
      (position_set_x, pos0, 17),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 100),
    (else_try),
      (position_set_x, pos0, 60),
      (position_set_y, pos0, 20),
      (position_set_z, pos0, 100),
    (try_end),
    (store_mul, ":troop_no", "$g_talk_troop", 2),
    (set_game_menu_tableau_mesh, "tableau_game_party_window", ":troop_no", pos0),
    ],
    [

    #So apparently this one needs to re-jump to the menu
      ("notes",
      [(is_between, "$g_talk_troop", heroes_begin, heroes_end),],
      "View Notes.",
      [
        (change_screen_notes, 1, "$g_talk_troop"),
      ]),

      ("prev_range",
      [
        (gt, "$g_talk_troop", "trp_player"),
        (call_script, "script_cf_troop_debug_range", "$g_talk_troop", s3, -1),
        (str_store_troop_name, s3, reg0),
      ],
      "Head ({s3}).",
      [
        (call_script, "script_cf_troop_debug_range", "$g_talk_troop", s0, -1),
        (assign, "$g_talk_troop", reg0),
        (jump_to_menu, "mnu_display_troop_slots"),
      ]),

      ("next_range",
      [
        (call_script, "script_cf_troop_debug_range", "$g_talk_troop", s3, 1),
        (str_store_troop_name, s3, reg0),
      ],
      "Tail ({s3}).",
      [
        (call_script, "script_cf_troop_debug_range", "$g_talk_troop", s0, 1),
        (assign, "$g_talk_troop", reg0),
        (jump_to_menu, "mnu_display_troop_slots"),
      ]),

      ("prev",
      [
        (gt, "$g_talk_troop", "trp_player"),
        (store_sub, ":troop_no", "$g_talk_troop", 1),
        (str_store_troop_name, s2, ":troop_no"),
      ],
      "Previous Troop ({s2}).",
      [
        (val_sub, "$g_talk_troop", 1),
        (jump_to_menu, "mnu_display_troop_slots"),
      ]),

      ("next",
      [
        (lt, "$g_talk_troop", "trp_dplmc_recruiter"), #last troop apparently
        (store_add, ":troop_no", "$g_talk_troop", 1),
        (str_store_troop_name, s2, ":troop_no"),
      ],
      "Next Troop ({s2}).",
      [
        (val_add, "$g_talk_troop", 1),
        (jump_to_menu, "mnu_display_troop_slots"),
      ]),

      ("rename",
      [],
      "Rename.",
      [
        (assign, "$g_player_troop", "$g_talk_troop"),
        (assign, "$g_presentation_state", rename_companion),
        (start_presentation, "prsnt_name_kingdom"),
      ]),

      ("change",
      [],
      "Modify slots.",
      [
        (assign, "$g_presentation_state", 0), #start off at first slot
        (assign, "$g_presentation_input", rename_companion),
        (start_presentation, "prsnt_modify_slots"),
      ]),

      ("encounter",
      [
        (troop_is_hero, "$g_talk_troop"),
        (party_get_slot, ":party", "$g_talk_troop", slot_troop_leaded_party),
        (party_is_active, ":party"),
      ],
      "Find leaded party.",
      [
        (party_get_slot, "$g_encountered_party", "$g_talk_troop", slot_troop_leaded_party),
        (jump_to_menu, "mnu_party_cheat"),
      ]),

      ("inventory",
      [],
      "Modify inventory (Shift for Equip).",
      [
        (try_begin),
          (this_or_next|key_is_down, key_left_shift),
          (key_is_down, key_right_shift),
          (change_screen_equip_other, "$g_talk_troop"),
        (else_try),
          (change_screen_loot, "$g_talk_troop"),
        (try_end),
      ]),

       ("gender",[], "Toggle gender.",
         [
           (try_begin),
             (eq, "$g_talk_troop", "trp_player"),
             (store_sub, "$character_gender", tf_female, "$character_gender"),
             (troop_set_type, "trp_player", "$character_gender"),
           (else_try),
             (troop_get_type, ":gender", "$g_talk_troop"),
             (store_sub, ":gender", tf_female, ":gender"),
             (troop_set_type, "$g_talk_troop", ":gender"),
             (try_begin),
               (this_or_next|troop_slot_eq, "$g_talk_troop", slot_troop_occupation, slto_kingdom_hero),
               (troop_slot_eq, "$g_talk_troop", slot_troop_occupation, slto_kingdom_lady),
               (store_troop_faction, ":faction_no", "$g_talk_troop"),
               (call_script, "script_troop_set_title_according_to_faction", "$g_talk_troop", ":faction_no"),
             (try_end),
           (try_end),

         ]
       ),

       ("recruit",[
          (this_or_next|troops_can_join, 1),
          (troops_can_join_as_prisoner, 1),
          (try_begin),
            (troop_is_hero, "$g_talk_troop"),
            (store_troop_count_prisoners, ":count", "$g_talk_troop", "p_main_party"),
            (this_or_next|gt, ":count", 0),
            (main_party_has_troop, "$g_talk_troop"),
            (disable_menu_option),
          (try_end),
          ], "Add to party (Shift for prisoner).",
         [
            (try_begin),
              (this_or_next|key_is_down, key_left_shift),
              (key_is_down, key_right_shift),
              (party_add_prisoners, "p_main_party", "$g_talk_troop", 1),
            (else_try),
              (try_begin),
                (troop_is_hero, "$g_talk_troop"),
                (call_script, "script_recruit_troop_as_companion", "$g_talk_troop"),
              (else_try),
                (party_add_members, "p_main_party", "$g_talk_troop", 1),
              (try_end),
            (try_end),
         ]
       ),


      ("continue",
      [],
      "Continue.",
      [
        (change_screen_map),
      ]),
    ]
  ),

  (
    "dplmc_choose_disguise", 0,
    "You are about to sneak into {s1}. Make sure you don't bring suspicious items or excess siliquae that might be confiscated. {s2}",
    "none",
    [

        (str_store_party_name, s1, "$current_town"),
        #build text
        (try_begin),
          (eq, "$sneaked_into_town", disguise_none),
          (str_store_string, s2, "@Select a suitable disguise for this occasion."),
          (assign, "$temp", 0),
        (else_try),
          (eq, "$sneaked_into_town", disguise_pilgrim),
          (str_store_string, s2, "@As a poor pilgrim with a stout stick and a few tricks up your sleeve, you will be able to blend in with the crowds but not bring much of value with you."),
          (assign, "$temp", 6),
        (else_try),
          (eq, "$sneaked_into_town", disguise_farmer),
          (str_store_string, s2, "@As a farmer, you will be able to a wrangle livestock and smuggle articles of food through."),
          (assign, "$temp", 15),
        (else_try),
          (eq, "$sneaked_into_town", disguise_hunter),
          (str_store_string, s2, "@As a hunter, provisions and raw goods are expected as well as horseflesh."),
          (assign, "$temp", 12),
        (else_try),
          (eq, "$sneaked_into_town", disguise_guard),
          (str_store_string, s2, "@As a caravan guard, you will be able to bear weapons but bring only a few personal belongings."),
          (assign, "$temp", 6),
        (else_try),
          (eq, "$sneaked_into_town", disguise_merchant),
          (str_store_string, s2, "@As a merchant, you will be able to bring any assortment of goods."),
          (assign, "$temp", 32),
        (else_try),
          (eq, "$sneaked_into_town", disguise_bard),
          (str_store_string, s2, "@As a bard, you will be allowed some personal possessions and your instrument."),
          (assign, "$temp", 9),
        (try_end),
        (set_fixed_point_multiplier, 100),
        (init_position, pos0),
        (try_begin),
          (str_is_empty, s2),
          (position_set_x, pos0, 17),
          (position_set_y, pos0, 30),
          (position_set_z, pos0, 100),
        (else_try),
          (position_set_x, pos0, 60),
          (position_set_y, pos0, 20),
          (position_set_z, pos0, 100),
        (try_end),
        (set_game_menu_tableau_mesh, "tableau_game_inventory_window", "trp_player", pos0),
        (troop_get_slot, "$temp_2", "trp_player", slot_troop_player_disguise_sets),
    ],
    [
      ("continue",
      [(gt, "$temp", 0),
       (assign, reg1, "$temp"),],
      "Choose up to {reg1} items to bring.",
      [
        (change_screen_loot, "trp_random_town_sequence"),
      ]),

      ("continue",
      [(neq, "$sneaked_into_town", disguise_none)],
      "Select how much gold to carry.",
      [
        (assign, "$pool_troop", "trp_random_town_sequence"),
        (start_presentation, "prsnt_deposit_withdraw_money"),
      ]),

      ("continue",
      [(neq, "$sneaked_into_town", disguise_none)],
      "Attempt to sneak in...",
      [
        (set_show_messages, 0),
        #do inventory placeholder
        (troop_clear_inventory, "trp_temp_troop"),
        (call_script, "script_dplmc_copy_inventory", "trp_player", "trp_temp_troop"),
        (call_script, "script_dplmc_copy_inventory", "trp_random_town_sequence", "trp_player"),
        (call_script, "script_dplmc_copy_inventory", "trp_temp_troop", "trp_random_town_sequence"),
        #do gold swap
        (store_troop_gold, ":cur_amount", "trp_random_town_sequence"),
        (store_troop_gold, ":cur_gold", "trp_player"),
        (troop_remove_gold, "trp_player", ":cur_gold"),
        (troop_remove_gold, "trp_random_town_sequence", ":cur_amount"),
        (troop_add_gold, "trp_player", ":cur_amount"),
        (troop_add_gold, "trp_random_town_sequence", ":cur_gold"),
        (set_show_messages, 1),

        #replicate Native chances
        (faction_get_slot, ":player_alarm", "$g_encountered_party_faction", slot_faction_player_alarm),
        (party_get_num_companions, ":num_men", "p_main_party"),
        (party_get_num_prisoners, ":num_prisoners", "p_main_party"),
        (val_add, ":num_men", ":num_prisoners"),
        (val_mul, ":num_men", 2),
        (val_div, ":num_men", 3),
        (store_add, ":get_caught_chance", ":player_alarm", ":num_men"),
        (store_random_in_range, ":random_chance", 0, 100),
        (try_begin),
          (this_or_next|ge, "$cheat_mode", 1),
          (this_or_next|ge, ":random_chance", ":get_caught_chance"),
          (eq, "$g_last_defeated_bandits_town", "$g_encountered_party"),
          (assign, "$g_last_defeated_bandits_town", 0),
          # (assign, "$sneaked_into_town", disguise_pilgrim),
          (assign, "$town_entered", 1),
          (jump_to_menu,"mnu_sneak_into_town_suceeded"),
          (assign, "$g_mt_mode", tcm_disguised),
        (else_try),
          (jump_to_menu,"mnu_sneak_into_town_caught"),
        (try_end),
        # (jump_to_menu, "mnu_sneak_into_town_suceeded"),
      ]),

      ("disguise_pilgrim",
      [
        (neq, "$sneaked_into_town", disguise_pilgrim),
      ], "Don the robes of a poor pilgrim.",
      [
        (assign, "$sneaked_into_town", disguise_pilgrim),
      ]),

      #SB : todo, add peasant woman variant
      ("disguise_farmer",
      [(store_and, ":disguise", "$temp_2", disguise_farmer),
       (eq, ":disguise", disguise_farmer),
       (neq, "$sneaked_into_town", disguise_farmer),],
      "Accept your fate as a downtrodden farmer.",
      [
        (assign, "$sneaked_into_town", disguise_farmer),
      ]),
      ("disguise_hunter",
      [(store_and, ":disguise", "$temp_2", disguise_hunter),
       (eq, ":disguise", disguise_hunter),
       (neq, "$sneaked_into_town", disguise_hunter),],
      "Disguise yourself as a skilled {huntsman/huntress}.",
      [
        (assign, "$sneaked_into_town", disguise_hunter),
      ]),
      ("disguise_guard",
      [(store_and, ":disguise", "$temp_2", disguise_guard),
       (eq, ":disguise", disguise_guard),
       (neq, "$sneaked_into_town", disguise_guard),],
      "Pass yourself off as a caravan guard.",
      [
        (assign, "$sneaked_into_town", disguise_guard),
      ]),
      ("disguise_merchant",
      [(store_and, ":disguise", "$temp_2", disguise_merchant),
       (eq, ":disguise", disguise_merchant),
       (neq, "$sneaked_into_town", disguise_merchant),],
      "Adopt the guise of a trader.",
      [
        (assign, "$sneaked_into_town", disguise_merchant),
      ]),
      ("disguise_bard",
      [(store_and, ":disguise", "$temp_2", disguise_bard),
       (eq, ":disguise", disguise_bard),
       (neq, "$sneaked_into_town", disguise_bard),],
      "Try your luck as a bard.",
      [
        (assign, "$sneaked_into_town", disguise_bard),
      ]),

      ("back",
      [],
      "Never mind...",
      [
        #put stuff back
        (set_show_messages, 0), #move all gold
        (call_script, "script_move_inventory_and_gold", "trp_random_town_sequence", "trp_player", -1),
        (set_show_messages, 1),

        (assign, "$sneaked_into_town", disguise_none),
        (jump_to_menu, "mnu_castle_outside"),
      ]),
    ]
  ),


  # (
    # "debug_registers", 0,
    # "{s1}",
    # "none",
    # [
    # (str_clear, s1),
    # ]+
    # [
    # (str_store_string, s1, "@index"+str(x)+":{reg"+str(x)+"}^"),
    # ]
    # for x in range (0, 64),
    # [
      # ("back",
      # [],
      # "Never mind...",
      # [
        # (change_screen_return),
      # ]),
    # ]
  # ),

  # (
    # "debug_preg", 0,
    # "{s1}",
    # "none",
    # [
    # (str_clear, s1),
    # ]+
    # [
    # (position_get_x, reg1, x),
    # (position_get_y, reg2, x),
    # (position_get_z, reg3, x),
    # (str_store_string, s1, "@{s1}^index"+str(x)+":({reg1},{reg2},{reg3})"),

    # ]
    # for x in range (0, pos_belfry_begin),
    # [
      # ("back",
      # [],
      # "Never mind...",
      # [
        # (change_screen_return),
      # ]),
    # ]
  # ),


  # (
    # "debug_sreg", 0,
    # "{s67}",
    # "none",
    # # [
    # # #need to be careful or string will be built too long
    # # # (str_clear, s67), #use last string
    # # ]+
    # [
    # (str_store_string, s67, "@index"+str(x)+":({reg1},{reg2},{reg3})"),

    # ]
    # for x in range (s0, s67),
    # [
      # ("back",
      # [],
      # "Never mind...",
      # [
        # (change_screen_return),
      # ]),
    # ]
  # ),

#new starting as king/emperor
  # ("start_king_1",mnf_disable_all_keys,
  #  "Select your King",
  #  "none",
  #  [(set_background_mesh, "mesh_pic_intro"),],
  #  [
  # ("kingdom_wre",[],"Emperor Majorian of the Western Roman Empire",[(jump_to_menu, "mnu_start_king_wre"),]),
  # ("kingdom_ere",[],"Emperor Leo of the Eastern Roman Empire",[(jump_to_menu, "mnu_start_king_ere"),]),
  # ("kingdom_vis",[],"Rex Theodoric II of the Visigoths",[(jump_to_menu, "mnu_start_king_vis"),]),
  # ("kingdom_ost",[],"Rex Valamir of the Ostrogoths",[(jump_to_menu, "mnu_start_king_ost"),]),
  # ("kingdom_frank",[],"Rex Childeric of the Franks",[(jump_to_menu, "mnu_start_king_frank"),]),
  # ("kingdom_sas",[],"Shahanshah Hormizd III of the Sassanid Empire",[(jump_to_menu, "mnu_start_king_sassanid"),]),
  # ("kingdom_vandal",[],"Vandalrice Gaiseric of the Kingdom of the Vandals and Alans",[(jump_to_menu, "mnu_start_king_vandals"),]),
  # ("kingdom_iberia",[],"King Vakhtang of Iberia",[(jump_to_menu, "mnu_start_king_iberia"),]),
  # ("kingdom_huns",[],"Dengizich of the Huns",[(jump_to_menu, "mnu_start_king_huns"),]),
  # ("kingdom_britons",[],"Ambrosius Aurelianus of the Britons",[(jump_to_menu, "mnu_start_king_britons"),]),
  # ("go_back",[],"Go back",[(jump_to_menu,"mnu_start_game_0"),]),
  #   ]
  # ),
#western roman emperor
#Old aka anthemius
# ("start_king_wre",menu_text_color(0xFF000000)|mnf_disable_all_keys,
# "Imperator Caesar Procopius Anthemius Augustus:\
#  ^\
#  ^Procopius Anthemius was born around the year 420, in Constantinople and was a member of the noble family, Procopii. His mother, Lucina was decended from Flavius Philippus, Praetorian prefect of the East in 346 and was the daughter of Flavius Anthemius.\
#  ^\
#  ^His father was Procopius, Magister Militum per Orientem from 422 to 424. Anthemius went to study in Alexandria in the school of Neoplatonic philosopher Proclus with several other important Roman figures, like Marcellinus (Magister Militum and governor of Illyricum). In 453 he married Marcia Euphemia, daughter of the Eastern Emperor at the time, Marcian and he was elevated to the rank of comes. In 454 he was given the title of patricius and in 455 became one of two magistri militum of the east.\
#  ^\
#  ^In the winter of 466 he defeated a group of huns who had crossed the frozen Danube and were pillaging Dacia. The huns had captured Serdica, and he besieged them and starved the huns until they accepted to fight in the open battle. Here Anthemius would lead his infantry to victory over the huns. On March 25th of 467 Leo, the Eastern Emperor designated Anthemius as the Western Emperor without the consent of Ricimer, the defacto ruler of the West as a means of combatting vandal influence over the Western Roman Empire and sent Anthemius to Rome, backed by Marcellinus. On the 12th of April he was proclaimed Emperor near Rome",
# "none",
# [(set_background_mesh, "mesh_pic_roman_start"),],
# [
#  ("go_reign",[(eq, "$current_startup_quest_phase", 0),],"Continue",[(assign, "$jugador_rey", 1),(call_script, "script_player_is_king"),(change_screen_return),]),
#  ("go_back",[],"Go back.",[(jump_to_menu,"mnu_start_king_1"),]),
# ]
# ),
#  ("start_king_wre",menu_text_color(0xFF000000)|mnf_disable_all_keys,
#  "Imperator Caesar Iulius Valerius Majorianus Augustus:\
#   ^\
#   ^You are Majorian, Emperor of the Pars Occidentalis, the western regions of the Roman Empire. Loyal friend of Flavius Aetius, the Roman general who saved the Empire at the Catalaunian Plains defeating Attila, you proclaimed yourself emperor after Burco, a loyal comes, defeated a group of Alamans who were raiding Liguria.\
#   ^\
#   ^With your power and your soldiers you have now the chance to reclaim the lost provinces in Gallia, Hiberia and Africa. Many lands were lost to the barbarians escaping the Huns: your predecessors failed in the quest, but now it's your turn to restore the glory of Rome. This is the last chance of the Empire, if you fail, there will be no one else to prevent some Germanic tribes, or treacherous foederatus generals, to take Ravenna, Milan or even Rome from you.\
#   ^\
#   ^\
#   ^Majorian will start at war on mutiple fronts: the Burgundians, the Visigoths and the Vandals are all hostile to your power and they occupy some of your richest regions you ought to reconquer for them. Picking Majorian's start, you will have some of the most powerful units in the entire game available in Ravenna to recruit, as well as your ordinary and efficent regular roman soldiers.\
#   ^\
#   ^Make sure to have enough gold to fill your coffers to pay your troops and make sure your many generals are happy with the land and military promotions you give them. Proceed carefully, if the germanic invaders manage to weaken you, more barbarian states will declare war on you, trying to invade Italy.\
#   ^\
#   ^Your northern provinces, controlled by Syagrius, are cut off from the main body of your controlled territories, but the Franks could be useful allies in fighting the Burgundians and reconquer the biggest chunk of Gaul. The Visigoths are indeed your toughest adversaries as they recently mangled the small Kingdom of the Suebi in northern Spain: they have no other enemy but you and the rogue bands of bagaudae raiding the mountainous regions of Northern Spain.\
#   ^\
#   ^The Vandals instead are strong in Carthage and the large amount of cities orbitating around the north-African capital allow their kingdom to store immense amounts of wealth. Although, they are being harassed by the Mauri and other tribes and might become soon an easy target. Better if to pick one enemy at once and do not waste too much manpower and wealth trying to fight them all at the same time: if taken alone, most of those post-roman barbarian kingdoms will be no match for you.\
#   ^\
#   ^Difficulty: Easy\
#   ^\
#   ^Starting allies: Salian Franks (tributaries)\
#   ^\
#   ^Starting enemies: Kingdom of the Visigoths, Kingdom of the Burgundians, Kingdom of the Vandals",
#  "none",
#  [(set_background_mesh, "mesh_pic_roman_start"),],
#  [
#   ("go_reign",[],"Continue",[(assign, "$jugador_rey", 1),(call_script, "script_player_is_king", "fac_kingdom_1"),(change_screen_return),]),
#   ("go_back",[],"Go back.",[(jump_to_menu,"mnu_start_king_1"),]),
#  ]
#  ),
#  ("start_king_ere",menu_text_color(0xFF000000)|mnf_disable_all_keys,
#  "Imperator Caesar Flavius Valerius Leo Augustus:\
#   ^\
#   ^You are Leo the First, Emperor of the East and you rule from the mighty and new city of Constantinople, built by the old Emperor himself. The old Aspar believed himself to be the brightest, he was convinced he would have been your master once you became Emperor. Pah! You're better than that, you outsmart him and all the other generals in tactical thought and wisdom... And I do believe it's time to show him who is the true Emperor of the Pars Orientalis.\
#   ^However, your internal threats aren't the only enemies you're going to face: the situation in your eastern provinces is worrisome. The King of Kings, the persian Shahanshah, is rallying his troops and is about to attack Edessa, Theodosiopolis or Damascus. Our long story of conflicts with the Persians is old and tormented, but it is finally time to put an end to this and secure our eastern borders and the Caucasus once and for all. Pay also attention to the West, Majorian might need your assistence.\
#   ^\
#   ^Unlike for the Western Roman Empire, you have one main opponent that, in turn, is way stronger than most of the barbarian kingdoms north of the Danube. Your fortresses in the East are poorly defended and your generals struggle to reach Constantinople from distant provinces such as Egypt. Plan your campaigns carefully and protect your allies, such as the Kingdom of Lazika, from the hordes of the steppes.\
#   ^In Egypt, furthermore, the myaphisite subjects of the Empire are upset with your rule and might revolt soon, this might keep some of your generals busy in the south and draw part of your manpower away from the Levant and Armenia. The Sasanid Empire is your equal in terms of economy and size of your army so expect large scale engagements and a long and exhausting conflict for your Eastern borders. Make sure to defeat the Persians on open field and go straight to their capital, Ctesiphon. If you manage to conquer it, the way to the East will be open to you and their other cities will fall easier than expected.\
#   ^\
#   ^Difficulty: Medium\
#   ^\
#   ^Starting allies: Kingdom of Lazika (tributaries), Tauri (tributaries)\
#   ^\
#   ^Starting enemies: Eranshar, Kingdom of Kartli, Huns",
#  "none",
#  [(set_background_mesh, "mesh_pic_roman_start"),],
#  [
#   ("go_reign",[],"Continue",[(assign, "$jugador_rey", 2),(call_script, "script_player_is_king", "fac_kingdom_2"),(change_screen_return),]),
#   ("go_back",[],"Go back.",[(jump_to_menu,"mnu_start_king_1"),]),
#  ]
#  ),
#  ("start_king_vis",menu_text_color(0xFF000000)|mnf_disable_all_keys,
#  "Theodoric II, King of the Visigoths:\
#   ^\
#   ^You are Theodoric the Second, son of Theodoric the First, the great hero and martyr of the Catalaunian Plains, where he was killed by Attila's forces in battle. You do not forget the blood you shed for the Empire, nor how little they repaid your kin for your sacrifices. There isn't a single gothic male, within your domains, that do not have their knees swollen, their arms wounded and their heads damaged by spears, arrows and stones while serving Rome.\
#   ^You remember how your father lost his life fighting for Aetius! And now... Now the new Emperor, Majorian, is coming to reclaim the lands rightfully given to you for your people to settle! You can't tolerate this injustice. You will break Majorian, as you just did with the Suebi in Iberia..\
#   ^\
#   ^Theodoric the Second benefits from one of the best starts among the barbarian kingdoms in Europe. He has a large domain, comprised of Aquitania and almost whole of Iberia and is at the head of a powerful army. In Tolosa you will have the chance to recruit the Gardingi, one of the strongest cavalry units in the game, as well as your regular gothic troops and indigenous iberian allies.\
#   ^Beware Majorian, the Roman Empire is way stronger than you and their armies more professional and better armed: make sure to lay a trap for them and fight them only in tactical advantage or numerical superiority, such as near your cities.\
#   ^Make sure to get all the support you can from the Burgundians: the Vandals will hardly help as they are far and already fighting the Mauri. Also, pay a closer look to the Suebi. If Majorian manages to weaken you, they might declare war on you to reclaim their lost land in Spain.\
#   ^\
#   ^Difficulty: Hard\
#   ^\
#   ^Starting allies: Kingdom of the Burgundians\
#   ^\
#   ^Starting enemies: Imperium Romanorum Pars Occidentalis",
#  "none",
#  [(set_background_mesh, "mesh_pic_gothic_start"),],
#  [
#   ("go_reign",[],"Continue",[(assign, "$jugador_rey", 3),(call_script, "script_player_is_king", "fac_kingdom_3"),(change_screen_return),]),
#   ("go_back",[],"Go back.",[(jump_to_menu,"mnu_start_king_1"),]),
#  ]
#  ),
#  ("start_king_ost",menu_text_color(0xFF000000)|mnf_disable_all_keys,
#  "Valamir, King of the Ostrogoths:\
#   ^\
#   ^You are Valamir, king of the Eastern Goths, ruler of the Feld, the great plains of the Danube river. Your prowess is known far and wide as you helped your brothers Gepids in freeing your peoples from the yoke of the Huns, few years back. Now you are free, and with many opportunities in front.\
#   ^First of all, secure your domains in the great plains of the Danube: the tribes of the Skirii, Heruli, Rugii and the Sarmatians fear you and might attack you soon as members of a newborn, anti-gothic, coalition. The two new emperors, Majorian and Leo, are far and busy with their own fights, but if they will ever stregthen their position be sure: they will come for you. King of the Eastern Goths, saddle your horses and grab your spear, there is much to be done.\
#   ^\
#   ^Valamis is at the head of the strongest faction in the Danube area, if we do not count the Eastern Roman Empire. This is an interesting start as it allows you to expand quickly against the smaller tribes of Eastern Germans living along the great river. However, beware: your many vassals serving you might soon turn unhappy if you don't grant them land so be quick, strike first, strike hard and force them into obedience.\
#   ^You have acess to good quality horsemen and a good number of pannonian Huns that settled there during the time of Attila. This gives you a tactical advantage against your neighbours, make sure to use your army at the best of their possibilities and expand your realm to provide a large income for your tribe.\
#   ^\
#   ^Difficulty: Medium\
#   ^\
#   ^Starting allies: None\
#   ^\
#   ^Starting enemies: None",
#  "none",
#  [(set_background_mesh, "mesh_pic_gothic_start"),],
#  [
#   ("go_reign",[],"Continue",[(assign, "$jugador_rey", 4),(call_script, "script_player_is_king", "fac_kingdom_4"),(change_screen_return),]),
#   ("go_back",[],"Go back.",[(jump_to_menu,"mnu_start_king_1"),]),
#  ]
#  ),
#  ("start_king_frank",menu_text_color(0xFF000000)|mnf_disable_all_keys,
#  "Childeric, King of the Salian Franks:\
#   ^\
#   ^You are Childeric, king of the Salian Franks. Your dinasty is destined to greatness: you arose from the dark forests of Germania and befriended the Romans that respect you and value you as great allies at the border of Gallia. Your kin valiantly helped against Attila, few years before at the battle of the Catalaunian plains, and now again are called to help the Romans in their struggle as the new emperor, Majorian, is in peril due to the many tribes that swathe through Gaul the years before.\
#   ^Mayhaps, in this time of confusion, it will be the time to outshine your ancestors, unite the Frankish tribes and expand your domains at the expense of the other nations surrounding you. The Franks ought to rule, and so they shall.\
#   ^\
#   ^The Frankish start is, again, a good germanic start for those who seek an interesting challenge without exhausting confrontations against bigger enemies. You will start tied to Majorian's diplomatic stances, but you will soon be able to field a large army to conquer the Ripuarian Franks, subjugate the Frisians and confront both Saxons and Alamans in their own turf.\
#   ^Use the first stages of the conflicts against the Burgundians and the Visigoths, while helping Rome, to forge your veteran army and amass spoil of wars as the campaigns you will be engaged in after are going to be wealth consuming. Your army is indeed balanced, as you have acess to a good western germanic roster and quality regional troops as well as the famous Antrustiones. \
#   ^\
#   ^Difficulty: Medium\
#   ^\
#   ^Starting allies: Imperium Romanorum Pars Occidentalis\
#   ^\
#   ^Starting enemies: Visigoths, Burgundians.",
#  "none",
#  [(set_background_mesh, "mesh_pic_germanic_start"),],
#  [
#   ("go_reign",[],"Continue",[(assign, "$jugador_rey", 5),(call_script, "script_player_is_king", "fac_kingdom_7"),(change_screen_return),]),
#   ("go_back",[],"Go back.",[(jump_to_menu,"mnu_start_king_1"),]),
#  ]
#  ),
#  ("start_king_sassanid",menu_text_color(0xFF000000)|mnf_disable_all_keys,
#  "Hormizd III, Shahanshah of the Sassanid Empire:\
#  ^\
#  ^Oh great Shahansha, Hormizd the Third, your power outshines all the other monarchs and your glory is known from Hrwm to Qin. There is no greater empire than yours and no braver warriors than your soldiers. Your many subjects acclaim your power while your enemies fear you, such as the 'Emperor' from Constantinople.\
#  ^In the past, when your family was finally recognised as the supreme authority in the realm, the men from the West tried to crush your forces many times but at the end you always managed to prevail. Now, it is finally time to turn your glare West, towards their rich cities and wealthy lands.\
#  ^At the same time, it is of outmost importance to regain the lost provinces in the East, captured by the Xun decades before, such as Sogdia or the lands of the Kusans. Your fate is to rule the Earth, oh King of Kings, and with your supreme authority lead our through struggles and victories.\
#  ^\
#  ^The Sasanid start mirrors the Eastern Roman one. You have one main enemy (untill we add the Iranian Huns next update) that has, more or less, your same power and wealth as well as a strong tributary kingdom in the Caucasus. Your strategy is, of course, to rule in the Levant and in Egypt, taking those lands from the Romans. To do that, you will need your vassals to help you as well the ability to make them support you on large scale campaigns.\
#  ^You start with a good economy and with excellent troops recruitable in your cities. Make large use of your horsemen, as the Romans beat you in infantry engagement, and you will make sure to have a great advantage against them. Furthermore, by increasing your piety and relationship with the zoroastrian world, you will be rewarded with champions heavily armed and recruitable in zoroastrian temples.\
#  ^\
#  ^Difficulty: Easy\
#  ^\
#  ^Starting allies: Kingdom of Kartli (tributaries)\
#  ^\
#  ^Starting enemies: Imperium Romanorum Pars Orientalis, Kingdom of Lazika",
#  "none",
#  [(set_background_mesh, "mesh_pic_sassanid_start"),],
#  [
#   ("go_reign",[],"Continue",[(assign, "$jugador_rey", 6),(call_script, "script_player_is_king", "fac_kingdom_6"),(change_screen_return),]),
#   ("go_back",[],"Go back.",[(jump_to_menu,"mnu_start_king_1"),]),
#  ]
#  ),
#  ("start_king_vandals",menu_text_color(0xFF000000)|mnf_disable_all_keys,
#  "Gaiseric, King of the Vandals and Alans:\
#  ^\
#  ^Great King Gaiseric! You, that led us across the pillars of Hercules and gave us a new home: Carthage! The great city of these seas. Locals told us this city was once a great enemy of Rome. Ah, the irony! As now it belongs to us, for whom the eternal city should be turned into ashes. Gaiseric, your realm couldn't be more prosperous: our lands are rich and the other nations pay us well for the wheat our subjects produce! However, the new emperor, Majorian, eyes our golden shores with envy.\
#  ^He wants to reconquer Africa and steal it from our very own hands! This cannot be. And what can we say about the Mauri from Altava? Those folks think they can have it all. No. They won't have nothing. The Vandals and the Alans will prevail once more and we will make the Mauri and the Romans bend to our knee. You have the power to do it, king Gaiseric.\
#  ^\
#  ^The Vandal start is challenging and not adviced for beginners. The Vandals begin with a strong faction and rich fiefs, they have a decent army and a large income that can support a good retinue. However, they immediatly start at war with two factions: the Romano-Mauri of the Kingdom of Altava, which are very close to your faction, and the Western Roman Empire led by Majorian.\
#  ^They're both strong opponents, with the Romans being largely superior to you in wealth and power. There are also some minor tribes south of Libya and a rogue band of Austurian kidnapping your peasant parties in Numidia.\
#  ^All these things make the Vandal start a quite challenging one. Your best tactic is to immediatly weaken the Romano-Mauri and hope Majorian will delay his campaign to focus on the Visigoths and the Burgundians north. If you manage to reunite North-Africa under a single banner or have the Romano-Mauri become your tributaries, you will  have a chance to resist against Majorian. However, it is no easy businness and will require a campaign of exhausting fights.\
#  ^\
#  ^Difficulty: Hard\
#  ^\
#  ^Starting allies: None\
#  ^\
#  ^Starting enemies: Imperium Romanorum Pars Occidentalis, Kingdom of Altava, Austuriani",
#  "none",
#  [(set_background_mesh, "mesh_pic_gothic_start"),],
#  [
#   ("go_reign",[],"Continue",[(assign, "$jugador_rey", 7),(call_script, "script_player_is_king", "fac_kingdom_15"),(change_screen_return),]),
#   ("go_back",[],"Go back.",[(jump_to_menu,"mnu_start_king_1"),]),
#  ]
#  ),
#  ("start_king_iberia",menu_text_color(0xFF000000)|mnf_disable_all_keys,
#  "Vakhtang, King of the Iberians:\
#  ^\
#  ^You are King Vakhtang, the supreme ruler of Kartli, Iberia in western chronicles. Your family has come from Persia ages ago to rule over the vast lands at the feet of the Caucasus mountains... And they did wonders! Your realm is rich, but surrounded by daring wolves. The Sasanids claim they have authority over your realm and we, sadly, are still too strong to face them. But this will change soon.\
#  ^They are too focused to fight the Romans to care about us... And when the time will come, we will strike. The Kingdom of Lazika, west, rules over lands that are rightfully ours. We have to rally our army and show them who's stronger.\
#  ^North of our towns live the Alans and the barbarians of the mountains, as well as the Huns: we have to pay attention to those nations as they are used to raid our settlements at summer. In time, Kartli will rise and you, King Vakhtang, will be the uncontested ruler of the Caucasus.\
#  ^\
#  ^Kartli starts as a vassal state of the Sasanids. Your diplomacy is strictly tied to the Shahanshah's decision and therefore you will start at war with both the Romans and Lazika. It's your chance to expand west and claim the Kingdom of Lazika for your own.\
#  ^However, beware: Lazika is in decline but they can still field a strong army and are defended by their barbarian clientes in the North, such as the Abasgoi, and of course the Romans who keep Lazika as their tributary state. Your roster is solid, but your economy is not.\
#  ^Make sure to amass wealth and gold before assaulting the cities in the Colchis. Once secured the Kingdom of Lazika, you will get the chance to look North, in the lands of the Alans. They have been severely weakened by the arrival of the Huns one century before and now live at the feet of the mountains pressured by more hordes North.\
#  ^One thing you have to avoid: do not anger the Sasanids as they are far stronger than you and you will need the whole Caucasus on your side to be able to resist them.\
#  ^\
#  ^Difficulty: Medium\
#  ^\
#  ^Starting allies: Eranshar (you are their tributaries)\
#  ^\
#  ^Starting enemies: Kingdom of Lazika, Imperium Romanorum Pars Orientalis",
#  "none",
#  [(set_background_mesh, "mesh_pic_roman_start"),],
#  [
#   ("go_reign",[],"Continue",[(assign, "$jugador_rey", 8),(call_script, "script_player_is_king", "fac_kingdom_16"),(change_screen_return),]),
#   ("go_back",[],"Go back.",[(jump_to_menu,"mnu_start_king_1"),]),
#  ]
#  ),
#  ("start_king_huns",menu_text_color(0xFF000000)|mnf_disable_all_keys,
#  "Dengizich, King of the Huns:\
#  ^\
#  ^Dengizich, son of the Great Attila. You are the king of the Huns... But what's left of us now? When your father died, many tribes revolted and left our Empire. Our subject nations of the Gepids, Ostrogoths, Skirii and Rugii too decided to turn against you and even killed your brother! This cannot be. The world will be ruled by us and no one else.\
#  ^Dengizich, it's now or never: the time to reclaim your father's domains and to force your subjects into submission. First, the tribes that refuse to rejoin your empire need to be crushed: the Saragurs, Oghurs and Onogurs think you are weak and cannot protect them from the Sabirs. It's time to prove they're wrong.\
#  ^After them, the Gepids, west, led the coalition that defeated your brother Ellak at the battle of Nedao, where he lost his life. It's time to avenge him. And when you will finally settle all these unresolved issues with your neighboring nations there will be one left unpaid bill to solve. One with Rome and Constantinople. You will continue what your father started.\
#  ^\
#  ^The Hunni start is indeed one of the most peculiar and fun starts in the game and mixes challenges with an interesting gameplay. You start with a medium-sized faction and few tributaries, one of which is quite powerful (Alania). Around you there will be several rebel hordes you have to defeat.\
#  ^Once the rebellious hordes are dealth with you will have the chance to immediatly expand west and invade the Gepids and possibly the other small polities of the Danube basin. Once your imperium reached a certain extent, you will have the chance to engage with the Eastern Roman Empire and possibly even helps it collapse.\
#  ^However, beware: your army is diverse and full of good units, but horse archers aren't easy to use on the battlefield. Their skirmishing behavior is excellent against infantry but makes them an easy target for the enemy cavalry. Make sure to have a composite army with good footmen and heavy horsemen to help your horse archers annihilate your enemy.\
#  ^\
#  ^Difficulty: Medium/Easy\
#  ^\
#  ^Starting allies: Alania (your tributaries), Bosporan Kingdom (tributaries)\
#  ^\
#  ^Starting enemies: Imperium Romanorum Pars Orientalis, Gepids, Sabirs.",
#  "none",
#  [(set_background_mesh, "mesh_pic_gothic_start"),],
#  [
#   ("go_reign",[],"Continue",[(assign, "$jugador_rey", 9),(call_script, "script_player_is_king", "fac_kingdom_23"),(change_screen_return),]),
#   ("go_back",[],"Go back.",[(jump_to_menu,"mnu_start_king_1"),]),
#  ]
#  ),
#  ("start_king_britons",menu_text_color(0xFF000000)|mnf_disable_all_keys,
#  "Ambrosius Aurelianus, King of the Britons:\
#  ^\
#  ^Ambrosius Aurelianus, last hope of the Britons in this times of great peril. Lead us to victory against the invading forces of Saxons, Angles, Jutes and Frisians coming from the continent to burn our farms, destroy our city and settle with their most terrible kinsmen. We can't let this to happen: rally the men of Britannia and our allies and make them fight against the banner of Rome and Christ once more.\
#  ^Terrible enemies are ramming our doors, not only the Germans from beyond the sea but also the Picts from the North aim to conquer our cities and the Scoti from Hibernia are eager to turn us into their slaves. Listen to our plea, Ambrosius, and save us from our enemies. Rome might have abandoned us, but we still hold her dearly in our hearts.\
#  ^\
#  ^The Romano-Briton start is challenging because you will start at war with several enemies at the same time. They are all weaker and smaller than you, but they can hurt you badly if you don't manage the conflict in the right way. To make things worse, the germanic holdings are still mostly beyond and sea and to reach them will require time and vassals willing to follow you in long distance conflicts.\
#  ^Your army is organised according to roman fashion, but you don't have neither the infrastructures nor the wealth to arm and train them the same way Ravenna and Constantinople did. However, you won't lack elite units and good mounted troops as well as regional auxiliary units to support you and it is possible your economy will be good enough to sustain your army.\
#  ^Make sure, however, to reconquer the settlements lost to the Germans on the coast: from there they will have hard times campaigning in Britannia and you will be finally safe.\
#  ^\
#  ^Difficulty: Medium\
#  ^\
#  ^Starting allies: None\
#  ^\
#  ^Starting enemies: Saxons, Jutes, Angles, Frisians, Picts, Scoti",
#  "none",
#  [(set_background_mesh, "mesh_pic_roman_start"),],
#  [
#   ("go_reign",[],"Continue",[(assign, "$jugador_rey", 10),(call_script, "script_player_is_king", "fac_kingdom_13"),(change_screen_return),]),
#   ("go_back",[],"Go back.",[(jump_to_menu,"mnu_start_king_1"),]),
#  ]
#  ),

# #start as lord
#   ("start_lord_1",mnf_disable_all_keys,
#    "Select a culture group.",
#    "none",
#    [(set_background_mesh, "mesh_pic_intro"),],
#    [
#   ("choice_roman",[],"Roman",[(jump_to_menu,"mnu_start_lord_romans"),]),
#   ("choice_germanic",[],"Germanic",[(jump_to_menu,"mnu_start_lord_germanic"),]),
#   ("choice_others",[],"Others",[(jump_to_menu,"mnu_start_lord_eastern"),]),
#   ("go_back",[],"Go back",[(jump_to_menu,"mnu_start_game_0"),]),
#     ]
#   ),

#   ("start_lord_romans",mnf_disable_all_keys,
#    "Select a faction to join.",
#    "none",
#    [(set_background_mesh, "mesh_pic_intro"),],
#    [
#   ("menu_wre_lord",[],"Western Roman Empire",[(assign, "$jugador_lord", 1),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("menu_ere_lord",[],"Eastern Roman Empire",[(assign, "$jugador_lord", 2),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("menu_briton_lord",[],"Romano-Britons",[(assign, "$jugador_lord", 13),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("menu_mauri_lord",[],"Romano-Mauri",[(assign, "$jugador_lord", 18),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("go_back",[],"Go back",[(jump_to_menu,"mnu_start_lord_1"),]),
#     ]
#   ),

#   ("start_lord_germanic",mnf_disable_all_keys,
#    "Select a faction to join.",
#    "none",
#    [(set_background_mesh, "mesh_pic_intro"),],
#    [
#   ("menu_visigoth_lord",[],"Visigoths",[(assign, "$jugador_lord", 3),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("menu_ostrogoth_lord",[],"Ostrogoths",[(assign, "$jugador_lord", 4),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("menu_frankish_lord",[],"Salian Franks",[(assign, "$jugador_lord", 7),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("menu_suebi_lord",[],"Suebi",[(assign, "$jugador_lord", 8),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("menu_gepid_lord",[],"Gepids",[(assign, "$jugador_lord", 11),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("menu_saxon_lord",[],"Saxons",[(assign, "$jugador_lord", 12),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("menu_vandal_lord",[],"Vandals",[(assign, "$jugador_lord", 14),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("menu_lombard_lord",[],"Langobards",[(assign, "$jugador_lord", 16),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("go_back",[],"Go back",[(jump_to_menu,"mnu_start_lord_1"),]),
#     ]
#   ),

#   ("start_lord_eastern",mnf_disable_all_keys,
#    "Select a faction to join.",
#    "none",
#    [(set_background_mesh, "mesh_pic_intro"),],
#    [
#   ("menu_pictish_lord",[],"Picts",[(assign, "$jugador_lord", 5),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("menu_sassanid_lord",[],"Sassanid",[(assign, "$jugador_lord", 6),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("menu_iberian_lord",[],"Caucasian Iberians",[(assign, "$jugador_lord", 15),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("menu_hun_lord",[],"Huns",[(assign, "$jugador_lord", 19),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("menu_lazikan_lord",[],"Lazika",[(assign, "$jugador_lord", 20),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("menu_alan_lord",[],"Alania",[(assign, "$jugador_lord", 21),(call_script, "script_player_is_lord"),(change_screen_return),]),
#   ("go_back",[],"Go back",[(jump_to_menu,"mnu_start_lord_1"),]),
#     ]
#   ),

  ( "mithras_messenger",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "A messenger approaches, galloping. He stops in front of you, takes a breath and shouts:^^" +
    "'To the {reg59?woman:man}, named {playername}: my master, who shall remain anonymous for now, has sent me to speak with you. " +
    "He asks you to visit him in a tavern in Rome.'",
    "none",
    [
      (set_background_mesh, "mesh_pic_messenger"),
    ],
    [
      ("mithras_quest_1",[],"Tell the messenger that you will visit his master.",
        [
          (str_store_party_name_link, s3, "p_town_8"),
	(setup_quest_text,"qst_mithras_quest"),
          (str_store_string, s2, "@You have recieved a message that someone wants to meet you. He is located in the tavern of {s3}."),
          (call_script, "script_start_quest", "qst_mithras_quest", "trp_player"),
          (quest_set_slot,"qst_mithras_quest",slot_quest_current_state, 1),
          #(add_troop_to_site, "trp_mithraist_iniate", "scn_town_8_tavern", 12), #madsci do this elsewhere

          (leave_encounter),

          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
      ]),
    ]),

  ( "hun_messenger",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "A messenger approaches, galloping. He stops in front of you, takes a breath and exclaims:^^" +
    "'{playername}, you have lead the tribes to victory over those who destroyed our Empire! " +
    "Here, I give you this: The bow of the scourage of God himself. Take this and let us conquer the world!'",
    "none",
    [
      (set_background_mesh, "mesh_pic_messenger"),
    ],
    [
      ("accept_bow",[],"I shall conquer the world!",
        [
          (call_script, "script_change_troop_renown", "trp_player", 250),
          (troop_add_item, "trp_player", "itm_attila_bow", 0), #gets special bow
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
      ]),
    ]),

  ("religion_selection",0,
    "Choose your Religion.",
    "none",
    [],
    [
      ("religion_roman",[],"You are a Chalcedonian Christian.",
    [
    (assign, "$g_player_faith",1),
    (troop_set_slot, "trp_player", slot_troop_religion, slot_religion_christian_chalcedonian),
    (change_screen_return),
    ]),
      ("religion_pagan",[],"You are a Pagan.",
    [
    (assign, "$g_player_faith",2),
    (troop_set_slot, "trp_player", slot_troop_religion, slot_religion_paganism),
    (change_screen_return),
    ]),
      ("religion_arian",[],"You are an Arian Christian.",
    [
    (assign, "$g_player_faith",3),
    (troop_set_slot, "trp_player", slot_troop_religion, slot_religion_christian_arian),
    (change_screen_return),
    ]),
      ("religion_zoroastrian",[],"You are Zoroastrian.",
    [
    (assign, "$g_player_faith",4),
    (troop_set_slot, "trp_player", slot_troop_religion, slot_religion_zoroastrianism),
    (change_screen_return),
    ]),
      ("religion_coptic",[],"You are a Miaphysite Christian.",
    [
    (assign, "$g_player_faith",5),
    (troop_set_slot, "trp_player", slot_troop_religion, slot_religion_christian_miaphysite),
    (change_screen_return),
    ]),
      ("religion_roman_pagan",[],"You are a Roman Pagan.",
    [
    (assign, "$g_player_faith",6),
    (troop_set_slot, "trp_player", slot_troop_religion, slot_religion_roman_paganism),
    (change_screen_return),
    ]),
    ]
  ),
  ("culture_selection",0,
    "Choose your Culture.",
    "none",
    [],
    [
    ("religion_roman",[],"Gothic",
    [
    (troop_set_slot, "trp_player", slot_troop_culture, "fac_culture_1"),
    (change_screen_return),
    ]),
    ("religion_roman",[],"Eastern Germanic",
    [
    (troop_set_slot, "trp_player", slot_troop_culture, "fac_culture_2"),
    (change_screen_return),
    ]),
    ("religion_roman",[],"Romano-Briton",
    [
    (troop_set_slot, "trp_player", slot_troop_culture, "fac_culture_3"),
    (change_screen_return),
    ]),
    ("religion_roman",[],"Northern Germanic",
    [
    (troop_set_slot, "trp_player", slot_troop_culture, "fac_culture_4"),
    (change_screen_return),
    ]),
    ("religion_roman",[],"Pictish",
    [
    (troop_set_slot, "trp_player", slot_troop_culture, "fac_culture_5"),
    (change_screen_return),
    ]),
    ("religion_roman",[],"Sassanid",
    [
    (troop_set_slot, "trp_player", slot_troop_culture, "fac_culture_6"),
    (change_screen_return),
    ]),
    ("religion_roman",[],"Roman",
    [
    (troop_set_slot, "trp_player", slot_troop_culture, "fac_culture_empire"),
    (change_screen_return),
    ]),
    ("religion_roman",[],"Western Germanic",
    [
    (troop_set_slot, "trp_player", slot_troop_culture, "fac_culture_7"),
    (change_screen_return),
    ]),
    ("religion_roman",[],"Caucasian",
    [
    (troop_set_slot, "trp_player", slot_troop_culture, "fac_culture_8"),
    (change_screen_return),
    ]),
    ("religion_roman",[],"Romano-Mauri",
    [
    (troop_set_slot, "trp_player", slot_troop_culture, "fac_culture_11"),
    (change_screen_return),
    ]),
    ("religion_roman",[],"Hunnic",
    [
    (troop_set_slot, "trp_player", slot_troop_culture, "fac_culture_12"),
    (change_screen_return),
    ]),
    ("religion_roman",[],"Nubian",
    [
    (troop_set_slot, "trp_player", slot_troop_culture, "fac_culture_15"),
    (change_screen_return),
    ]),
    ("religion_roman",[],"Caucasian Alan",
    [
    (troop_set_slot, "trp_player", slot_troop_culture, "fac_culture_16"),
    (change_screen_return),
    ]),
    ]
  ),

  ("promotion_clarissimus",0,
    "You have been granted the title of Vir Clarissimus.",
    "none",
    [],
    [
      ("accept",[],"Accept the title.",
    [
    (troop_set_slot, "trp_player", slot_troop_honorary_title, ht_clarissimus),
    (call_script, "script_change_troop_renown", "trp_player", 20),
    (change_screen_return),
    ]),
  ]),

  ("promotion_spectabilis",0,
    "You have been granted the title of Vir Spectabilis.",
    "none",
    [],
    [
      ("accept",[],"Accept the title.",
    [
    (troop_set_slot, "trp_player", slot_troop_honorary_title, ht_spectabilis),
    (call_script, "script_change_troop_renown", "trp_player", 20),
    (change_screen_return),
    ]),
  ]),

  ("promotion_illustris",0,
    "You have been granted the title of Vir Illustris.",
    "none",
    [],
    [
      ("accept",[],"Accept the title.",
    [
    (troop_set_slot, "trp_player", slot_troop_honorary_title, ht_illustris),
    (call_script, "script_change_troop_renown", "trp_player", 20),
    (change_screen_return),
    ]),
  ]),

  ("promotion_officorum",0,
    "You have been promoted to the office of Magister Officiorum.",
    "none",
    [],
    [
      ("rank_officiorum",[],"Accept the position.",
    [
    (assign, "$g_can_recruit_schola",1),
    (assign, "$g_can_recruit_domestici",1),
    (troop_set_slot, "trp_player", slot_troop_military_title, mt_officiorum),
    (call_script, "script_change_troop_renown", "trp_player", 100),
    (change_screen_return),
    ]),
  ]),

("religious_location_generic",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "In the distance you see {s50}, a holy place for the {s51}.^^{s52}",
    "none",
    [

    (str_store_party_name, s50, "$g_encountered_party"),
    (store_faction_of_party, ":fac", "$g_encountered_party"),
    (str_store_faction_name, s51, ":fac"),

    (str_clear, s52),
    (try_begin),
        (store_relation, ":faction_relation", ":fac", "fac_player_supporters_faction"),
        (lt, ":faction_relation", 0),
        (str_store_string, s52, "@You are hostile towards the {s51}."),
    (else_try),
        (store_relation, ":faction_relation", ":fac", "fac_player_supporters_faction"),
        (ge, ":faction_relation", 20),
        (str_store_string, s52, "@You are friendly towards the {s51}."),
    (try_end),

    (try_begin),
      (party_slot_eq, "$g_encountered_party", slot_party_been_sacked, 1),
      (jump_to_menu, "mnu_settlement_looted"),
    (try_end),

      ],
    [
    ("religious_center_1",[
    (store_faction_of_party, ":encountered_faction", "$g_encountered_party"),
    (store_relation, ":faction_relation", ":encountered_faction", "fac_player_supporters_faction"),
    (ge, ":faction_relation", 0),
          (party_get_slot, ":scene", "$g_encountered_party",slot_town_center),
	(gt, ":scene", 0), #madsci valid scene required
      ],"Visit.",[
      (try_begin),
          (eq,"$town_nighttime",1),
          (display_message,"str_monastery_night",0xFFFFAAAA),
      (else_try),
          #setting up walker troops
          (store_faction_of_party, ":fac", "$g_encountered_party"),
          (try_begin),
            (eq, ":fac", "fac_pagans"),
            (party_get_slot, ":culture", "$g_encountered_party", slot_center_culture),
            (faction_get_slot, ":walker_1", ":culture", slot_faction_town_walker_male_troop),
            (faction_get_slot, ":walker_2", ":culture", slot_faction_town_walker_female_troop),
          (else_try),
            (faction_get_slot, ":walker_1", ":fac", slot_faction_tier_2_troop),
            (faction_get_slot, ":walker_2", ":fac", slot_faction_tier_3_troop),
          (try_end),
	(try_begin), #madsci failsafe
	(le, ":walker_1", 0),
	(assign, ":walker_1", "trp_manhunter"),
	(try_end),
	(try_begin),
	(le, ":walker_2", 0),
	(assign, ":walker_2", "trp_manhunter"),
	(try_end),

          (party_get_slot, ":leader", "$g_encountered_party", slot_town_lord),

          (party_get_slot, ":scene", "$g_encountered_party",slot_town_center),
          (set_jump_mission, "mt_religious_center"),
          (modify_visitors_at_site, ":scene"),
          (reset_visitors),

          (set_visitor, 1, ":leader"),

          (set_visitor,2,":walker_1"),
          (set_visitor,3,":walker_2"),
          (set_visitor,4,":walker_1"),
          (set_visitor,5,":walker_2"),
          (set_visitor,6,":walker_1"),
          (set_visitor,7,":walker_2"),
          (set_visitor,8,":walker_1"),
          (set_visitor,9,":walker_2"),
          (set_visitor,10,":walker_1"),
          (set_visitor,11,":walker_2"),
          (set_visitor,12,":walker_1"),
          (set_visitor,13,":walker_2"),
          (set_visitor,14,":walker_1"),
          (set_visitor,15,":walker_2"),
          (set_visitor,16,":walker_1"),
          (set_visitor,17,":walker_2"),
          (set_visitor,18,":walker_1"),
          (set_visitor,19,":walker_2"),
          (set_visitor,20,":walker_1"),

          (set_jump_entry, 0),
          (jump_to_scene, ":scene"),
          (change_screen_mission),
      (try_end),
  ]),

    #specific locations to dedicate player to certain pantheons - germanic - celtic - steppe - roman - egyptian
      ("paganism_dedication_germanic",[
        (troop_get_slot, ":player_religion", "trp_player", slot_troop_religion),
        (eq, ":player_religion", slot_religion_paganism),
        (this_or_next|eq, "$g_encountered_party", "p_religious_site_7"),
        (this_or_next|eq, "$g_encountered_party", "p_religious_site_8"),
        (eq, "$g_encountered_party", "p_religious_site_14"),
        (eq,"$g_paganism_dedication",0),
        ],"Dedicate yourself to the Germanic gods.",
    [
      (val_add, "$piety", 1), #increase in piety
      (assign, "$g_paganism_dedication", 1),
      (call_script, "script_change_player_relation_with_faction", "fac_pagans", 5),
      (display_message,"@You have dedicated yourself to the gods within the Germanic pantheon.",0x6495ed),
	(troop_get_slot, ":player_religion", "trp_player", slot_troop_religion),
	(call_script, "script_change_player_relation_lords_religion", ":player_religion", 5), #madsci buff relation with lords of same religion
      (change_screen_return),
    ]),

      ("paganism_dedication_roman",[
        (troop_get_slot, ":player_religion", "trp_player", slot_troop_religion),
        (eq, ":player_religion", slot_religion_roman_paganism),
        (eq, "$g_encountered_party", "p_religious_site_9"),
        (eq,"$g_paganism_roman_dedication",0),
        ],"Dedicate yourself to the Roman gods.",
    [
      (val_add, "$piety", 1), #increase in piety
      (assign, "$g_paganism_roman_dedication", 1),
      (call_script, "script_change_player_relation_with_faction", "fac_pagans", 5),
      (display_message,"@You have dedicated yourself to the gods within the Roman pantheon.",0x6495ed),
	(troop_get_slot, ":player_religion", "trp_player", slot_troop_religion),
	(call_script, "script_change_player_relation_lords_religion", ":player_religion", 5), #madsci buff relation with lords of same religion
      (change_screen_return),
    ]),

      ("paganism_dedication_celtic",[
        (troop_get_slot, ":player_religion", "trp_player", slot_troop_religion),
        (eq, ":player_religion", slot_religion_paganism),
        (eq, "$g_encountered_party", "p_religious_site_17"),
        (eq,"$g_paganism_dedication",0),
        ],"Dedicate yourself to the Celtic gods.",
    [
      (val_add, "$piety", 1), #increase in piety
      (assign, "$g_paganism_dedication", 2),
      (call_script, "script_change_player_relation_with_faction", "fac_pagans", 5),
      (display_message,"@You have dedicated yourself to the gods within the Celtic pantheon.",0x6495ed),
	(troop_get_slot, ":player_religion", "trp_player", slot_troop_religion),
	(call_script, "script_change_player_relation_lords_religion", ":player_religion", 5), #madsci buff relation with lords of same religion
      (change_screen_return),
    ]),

      ("paganism_dedication_steppe",[
        (troop_get_slot, ":player_religion", "trp_player", slot_troop_religion),
        (eq, ":player_religion", slot_religion_paganism),
        (eq, "$g_encountered_party", "p_religious_site_18"),
        (eq,"$g_paganism_dedication",0),
        ],"Dedicate yourself to the gods of the shamans.",
    [
      (val_add, "$piety", 1), #increase in piety
      (assign, "$g_paganism_dedication", 3),
      (call_script, "script_change_player_relation_with_faction", "fac_pagans", 5),
      (display_message,"@You have dedicated yourself to the gods within the steppe pantheon.",0x6495ed),
	(troop_get_slot, ":player_religion", "trp_player", slot_troop_religion),
	(call_script, "script_change_player_relation_lords_religion", ":player_religion", 5), #madsci buff relation with lords of same religion
      (change_screen_return),
    ]),

      ("paganism_dedication_egyptian",[
        (troop_get_slot, ":player_religion", "trp_player", slot_troop_religion),
        (eq, ":player_religion", slot_religion_roman_paganism),
        (eq, "$g_encountered_party", "p_religious_site_19"),
        (eq,"$g_paganism_roman_dedication",0),
        ],"Dedicate yourself to the Aegyptian gods.",
    [
      (val_add, "$piety", 1), #increase in piety
      (assign, "$g_paganism_roman_dedication", 2),
      (call_script, "script_change_player_relation_with_faction", "fac_pagans", 5),
      (display_message,"@You have dedicated yourself to the gods within the Aegyptian pantheon.",0x6495ed),
	(troop_get_slot, ":player_religion", "trp_player", slot_troop_religion),
	(call_script, "script_change_player_relation_lords_religion", ":player_religion", 5), #madsci buff relation with lords of same religion
      (change_screen_return),
    ]),
      #DEDICATIONS OVER

      ("religious_center_2",[(eq,"$prayer",0),
        (troop_get_slot, ":player_religion", "trp_player", slot_troop_religion),
        (party_get_slot, ":religion_center", "$g_encountered_party", slot_center_religion),
        (eq, ":player_religion", ":religion_center"),
        ],"Offer a sacrifice (+1 piety, 1 hour).",
    [
      (rest_for_hours, 1, 5, 0),
      (val_add, "$piety", 1), #pray for piety
      (store_faction_of_party, ":fac", "$g_encountered_party"),
      (call_script, "script_change_player_relation_with_faction", ":fac", 2),
      (display_message,"@After offering a sacrifice, you feel that you have gotten closer to your god.",0x6495ed),
      (assign, "$prayer",1),
      (change_screen_return),
    ]),
      ("religious_center_3",[(store_troop_gold,":player_gold", "trp_player"),(gt, ":player_gold", 200),(eq,"$memorial_performed",0)],"Ask for a memorial service for your dead companions (+5 honor, +2 piety, -200 siliquae, +10 morale, 2 hours).",
    [
      (rest_for_hours, 2, 5, 0),
      (call_script, "script_change_player_party_morale", 10),
      (troop_remove_gold, "trp_player", 200),
      (call_script, "script_change_player_honor", 5),
      (val_add, "$piety", 2), #pray for piety
      (assign, "$memorial_performed",1),
      (change_screen_return),
    ]),
      ("religious_center_4",[(store_troop_gold,":player_gold", "trp_player"),(gt, ":player_gold", 500)],"Donate 500 siliquae.",
    [
      (troop_remove_gold, "trp_player", 500),
      (val_add, "$piety", 3),
      (call_script, "script_change_player_honor", 8),
      (store_faction_of_party, ":fac", "$g_encountered_party"),
      (call_script, "script_change_player_relation_with_faction", ":fac", 5),
      (change_screen_return),
    ]),
      ("religious_center_5",[],"Raid for gold and valuables.",
    [
    (call_script, "script_change_player_party_morale", 10),
    (call_script, "script_change_player_honor", -5),
    (call_script, "script_change_troop_renown", "trp_player", 5),

    (store_faction_of_party, ":fac", "$g_encountered_party"),
    (call_script, "script_change_player_relation_with_faction", ":fac", -10),

    (troop_get_slot, ":player_religion", "trp_player", slot_troop_religion),
    (party_get_slot, ":religion_center", "$g_encountered_party", slot_center_religion),
    (try_begin),
      (eq, ":player_religion", ":religion_center"),
      (val_sub, "$piety", 10), #sacking religious locations of your religion will lower piety
	(call_script, "script_change_player_relation_lords_religion", ":player_religion", -5), #madsci punish relation with lords of same religion
    (else_try),
      (val_add, "$piety", 2), #sacking other religion's locations will give a small boost to piety (ie sword of the faith)
    (try_end),

    (store_random_in_range, ":monastery_gold", 800, 2250),
    (troop_add_gold, "trp_player", ":monastery_gold"),
    (store_random_in_range, ":monastery_raid_hours", 2, 8),
    (rest_for_hours, ":monastery_raid_hours", 5, 1),
    (party_set_slot,"$g_encountered_party", slot_party_been_sacked, 1), #has to recover for 14 days before being pillaged again
	(party_set_extra_text, "$g_encountered_party", "@(Looted)"),
    (set_background_mesh, "mesh_pic_looted_village"),
    (play_sound, "snd_cow_moo"),
    (party_clear, "$g_encountered_party"),
    (str_store_party_name, s3, "$g_encountered_party"),

    (change_screen_return),
    ]),

     ("leave",[],"Leave.",[(leave_encounter),(change_screen_return)]),
]),

("religious_location_christian",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "In the distance you see {s50}. Secluded from the rest of the world, you watch as the monastics work, pray and perform their daily duties. This is a monastery under the {s51}.^^{s52}",
    "none",
    [

    (str_store_party_name, s50, "$g_encountered_party"),
    (store_faction_of_party, ":fac", "$g_encountered_party"),
    (str_store_faction_name, s51, ":fac"),

    (str_clear, s52),
    (try_begin),
        (store_relation, ":faction_relation", ":fac", "fac_player_supporters_faction"),
        (lt, ":faction_relation", 0),
        (str_store_string, s52, "@You are hostile towards the {s51}."),
    (else_try),
        (store_relation, ":faction_relation", ":fac", "fac_player_supporters_faction"),
        (ge, ":faction_relation", 20),
        (str_store_string, s52, "@You are friendly towards the {s51}."),
    (try_end),

    (try_begin),
      (party_slot_eq, "$g_encountered_party", slot_party_been_sacked, 1),
      (jump_to_menu, "mnu_settlement_looted"),
    (try_end),

      ],
    [
    ("religious_center_1",[
    (store_faction_of_party, ":encountered_faction", "$g_encountered_party"),
    (store_relation, ":faction_relation", ":encountered_faction", "fac_player_supporters_faction"),
    (ge, ":faction_relation", 0),
          (party_get_slot, ":scene", "$g_encountered_party",slot_town_center),
	(gt, ":scene", 0), #madsci make sure scene is valid
      ],"Visit.",[
      (try_begin),
          (eq,"$town_nighttime",1),
          (display_message,"str_monastery_night",0xFFFFAAAA),
      (else_try),
          #setting up walker troops
          (store_faction_of_party, ":fac", "$g_encountered_party"),
          (try_begin),
            (faction_get_slot, ":walker_1", ":fac", slot_faction_tier_2_troop),
            (faction_get_slot, ":walker_2", ":fac", slot_faction_tier_3_troop),
          (try_end),

	(try_begin), #madsci failsafe
	(le, ":walker_1", 0),
	(assign, ":walker_1", "trp_manhunter"),
	(try_end),
	(try_begin),
	(le, ":walker_2", 0),
	(assign, ":walker_2", "trp_manhunter"),
	(try_end),

          (party_get_slot, ":leader", "$g_encountered_party", slot_town_lord),

	(try_begin),
	(le, ":leader", 0),
	(assign, ":leader", "trp_manhunter"),
	(try_end),

          (party_get_slot, ":scene", "$g_encountered_party",slot_town_center),
          (set_jump_mission, "mt_religious_center"),
          (modify_visitors_at_site, ":scene"),
          (reset_visitors),

          (set_visitor, 1, ":leader"),

          (set_visitor,2,":walker_1"),
          (set_visitor,3,":walker_2"),
          (set_visitor,4,":walker_1"),
          (set_visitor,5,":walker_2"),
          (set_visitor,6,":walker_1"),
          (set_visitor,7,":walker_2"),
          (set_visitor,8,":walker_1"),
          (set_visitor,9,":walker_2"),
          (set_visitor,10,":walker_1"),
          (set_visitor,11,":walker_2"),
          (set_visitor,12,":walker_1"),
          (set_visitor,13,":walker_2"),
          (set_visitor,14,":walker_1"),
          (set_visitor,15,":walker_2"),
          (set_visitor,16,":walker_1"),
          (set_visitor,17,":walker_2"),
          (set_visitor,18,":walker_1"),
          (set_visitor,19,":walker_2"),
          (set_visitor,20,":walker_1"),

          (set_jump_entry, 0),
          (jump_to_scene, ":scene"),
          (change_screen_mission),
      (try_end),
  ]),

      ("religious_center_2",[(eq,"$prayer",0),
        (troop_get_slot, ":player_religion", "trp_player", slot_troop_religion),
        (party_get_slot, ":religion_center", "$g_encountered_party", slot_center_religion),
        (eq, ":player_religion", ":religion_center"),
        ],"Pray (+1 piety, 1 hour).",
    [
      (rest_for_hours, 1, 5, 0),
      (val_add, "$piety", 1), #pray for piety
      (store_faction_of_party, ":fac", "$g_encountered_party"),
      (call_script, "script_change_player_relation_with_faction", ":fac", 2),
      (display_message,"@After an hour of praying, you feel your faith has strengthened.",0x6495ed),
      (assign, "$prayer",1),
      (change_screen_return),
    ]),
      ("religious_center_3",[(store_troop_gold,":player_gold", "trp_player"),(gt, ":player_gold", 200),(eq,"$memorial_performed",0)],"Ask for a memorial service for your dead companions (+5 honor, +2 piety, -200 siliquae, +10 morale, 2 hours).",
    [
      (rest_for_hours, 2, 5, 0),
      (call_script, "script_change_player_party_morale", 10),
      (troop_remove_gold, "trp_player", 200),
      (call_script, "script_change_player_honor", 5),
      (val_add, "$piety", 2), #pray for piety
      (assign, "$memorial_performed",1),
      (change_screen_return),
    ]),
      ("religious_center_4",[(store_troop_gold,":player_gold", "trp_player"),(gt, ":player_gold", 500)],"Donate 500 siliquae.",
    [
      (troop_remove_gold, "trp_player", 500),
      (val_add, "$piety", 3),
      (call_script, "script_change_player_honor", 8),
      (store_faction_of_party, ":fac", "$g_encountered_party"),
      (call_script, "script_change_player_relation_with_faction", ":fac", 5),
      (change_screen_return),
    ]),
      ("religious_center_5",[],"Raid for gold and valuables.",
    [
    (call_script, "script_change_player_party_morale", 10),
    (call_script, "script_change_player_honor", -5),
    (call_script, "script_change_troop_renown", "trp_player", 5),

    (store_faction_of_party, ":fac", "$g_encountered_party"),
    (call_script, "script_change_player_relation_with_faction", ":fac", -10),

    (troop_get_slot, ":player_religion", "trp_player", slot_troop_religion),
    (party_get_slot, ":religion_center", "$g_encountered_party", slot_center_religion),
    (try_begin),
      (eq, ":player_religion", ":religion_center"),
      (val_sub, "$piety", 10), #sacking religious locations of your religion will lower piety
    (else_try),
      (val_add, "$piety", 2), #sacking other religion's locations will give a small boost to piety (ie sword of the faith)
    (try_end),

    (store_random_in_range, ":monastery_gold", 800, 2250),
    (troop_add_gold, "trp_player", ":monastery_gold"),
    (store_random_in_range, ":monastery_raid_hours", 2, 8),
    (rest_for_hours, ":monastery_raid_hours", 5, 1),
    (party_set_slot,"$g_encountered_party", slot_party_been_sacked, 1), #has to recover for 14 days before being pillaged again
	(party_set_extra_text, "$g_encountered_party", "@(Looted)"),
    (set_background_mesh, "mesh_pic_looted_village"),
    (play_sound, "snd_cow_moo"),
    (party_clear, "$g_encountered_party"),
    (str_store_party_name, s3, "$g_encountered_party"),
    (leave_encounter),
    (change_screen_return),
    ]),

      ("religious_center_6",[
      (troop_get_slot, ":player_religion", "trp_player", slot_troop_religion),
      (party_get_slot, ":religion_center", "$g_encountered_party", slot_center_religion),
      (neq, ":player_religion", ":religion_center"),
      ], "Seize the monastery.",
    [
    (troop_get_slot, ":player_religion", "trp_player", slot_troop_religion),
    (party_set_slot,"$g_encountered_party",slot_center_religion, ":player_religion"), #player forces out current monks, replaces it with monks of their own faith
    (store_faction_of_party, ":fac", "$g_encountered_party"),
    (call_script, "script_change_player_relation_with_faction", ":fac", -10),
    (val_add, "$piety", 5), #seizing the monastery for your faith will provide piety
    (call_script, "script_change_player_party_morale", 2),
    (call_script, "script_change_player_honor", -5),
    (call_script, "script_change_troop_renown", "trp_player", 5),

    (try_begin),
      (eq, ":player_religion", slot_religion_christian_chalcedonian),
      (call_script, "script_give_center_to_faction_aux", "$g_encountered_party", "fac_roman_christians"),
    (else_try),
      (eq, ":player_religion", slot_religion_christian_arian),
      (call_script, "script_give_center_to_faction_aux", "$g_encountered_party", "fac_arian_christians"),
    (else_try),
      (eq, ":player_religion", slot_religion_christian_miaphysite),
      (call_script, "script_give_center_to_faction_aux", "$g_encountered_party", "fac_coptic_christians"),
    (else_try),
      (eq, ":player_religion", slot_religion_christian_nestorian),
      (call_script, "script_give_center_to_faction_aux", "$g_encountered_party", "fac_nestorian_christians"),
    (else_try),
      (eq, ":player_religion", slot_religion_christian_donatist),
      (call_script, "script_give_center_to_faction_aux", "$g_encountered_party", "fac_donatist_christians"),
    (try_end),

    (jump_to_menu,"mnu_monastery_conquered"),

    ]),

     ("leave",[],"Leave.",[(leave_encounter),(change_screen_return)]),
]),

  ( "settlement_looted",0,
    "This settlement has been looted.",
    "none",
    [(set_background_mesh, "mesh_pic_looted_village"),],
    [("continue",[],"Continue...",[(leave_encounter),(change_screen_return)]),
    ],
  ),

  ( "settlement_burned",0,
    "This settlement has been destroyed.",
    "none",
    [(set_background_mesh, "mesh_pic_looted_village"),],
    [("continue",[],"Continue...",[(leave_encounter),(change_screen_return)]),
    ],
  ),

  ( "monastery_conquered",0,
    "You and your men force your way into the monastic community, driving out the monks, and striking down those who dare oppose you. No doubt you have created martyrs for their faith, but the schismatic heretics have been dealt with...",
    "none",
    [(set_background_mesh, "mesh_pic_looted_village"),],
    [("continue",[],"Continue...",[
      (store_random_in_range, ":monastery_raid_hours", 4, 12),
      (rest_for_hours, ":monastery_raid_hours", 5, 1),
      (leave_encounter),
      (change_screen_return),
      ]),
    ],
  ),

  #hiring farmers
  ("town_recruit_coptic",0,
    "Some locals are interested in joining and trying to find a new life with your soldiers.",
    "none", [ (set_background_mesh, "mesh_pic_recruits"),
    ],
    [("hire_farmers_peasants",[(store_troop_gold, ":gold", "trp_player"),
          (ge, ":gold", 100),], "Hire them. (100 siliquae)",
        [
          (party_add_members,"p_main_party","trp_coptic_youth",6),
          (troop_remove_gold,"trp_player", 100),
          (party_set_slot,"$g_encountered_party",slot_center_volunteer_troop_type,5),#5 days cooldown
          (jump_to_menu,"mnu_religious_location_generic"),
      ]),
      ("return_to_town_menu",[],"Head back.",
        [
          (party_set_slot,"$g_encountered_party",slot_center_volunteer_troop_type,5),#5 days cooldown
          (jump_to_menu,"mnu_religious_location_generic"),
      ]),
    ]),

  ("town_recruit_batavis",0,
    "Some of the garrison are interested in joining your party.",
    "none", [ (set_background_mesh, "mesh_pic_recruits"),
    ],
    [("hire_garrison",[(store_troop_gold, ":gold", "trp_player"),
        (call_script, "script_game_get_join_cost", "trp_pedes_cohortis_batavorum"),
        (assign, reg41, reg0),
        (val_mul, reg41, 5),
        (ge, ":gold", reg41),], "Hire them. ({reg41} siliquae)",
        [
          (party_add_members,"p_main_party","trp_pedes_cohortis_batavorum",5),
          (troop_remove_gold,"trp_player", reg41),
          (party_set_slot,"$g_encountered_party",slot_center_volunteer_troop_type,5),#5 days cooldown
          (jump_to_menu,"mnu_religious_location_generic"),
      ]),
      ("return_to_town_menu",[],"Head back.",
        [
          (jump_to_menu,"mnu_religious_location_generic"),
      ]),
    ]),

  ("attila_sword_location",0,
    "You have found the grove that Ildico has told you about. As you look around for the sword, you see a familiar figure approach you.",
    "none",
    [
      (try_begin),
        (store_troop_health, ":health", "trp_player", 0), #get relative health in 1-100 range and put it into the ":health" variable
        (lt, ":health", 30),
        (val_add, ":health", 35),               #add to it the 5%
        (troop_set_health,   "trp_player", ":health"),   #set it
      (try_end),
    ],
    [
      ("look_for_sword",[(eq,"$sword_found",0),(quest_slot_eq,"qst_sword_of_mars",slot_quest_current_state, 9)],"Approach the figure...",
    [
      (modify_visitors_at_site,"scn_attila_sword_location"),
      (reset_visitors,0),
      (set_visitors,1,"trp_bigilas",1),
      (set_jump_mission,"mt_attila_sword_location_visit"),
      (jump_to_scene,"scn_attila_sword_location"),
      (change_screen_mission),
    ]),

     ("leave",[],"Leave",[(leave_encounter),(change_screen_return)]),
    ]),

  ("abandoned_mithraic_temple",0,
    "You have found a cave where the mithraic temple is hidden...",
    "none",
    [
      (try_begin),
        (store_troop_health, ":health", "trp_player", 0), #get relative health in 1-100 range and put it into the ":health" variable
        (lt, ":health", 30),
        (val_add, ":health", 35),               #add to it the 5%
        (troop_set_health,   "trp_player", ":health"),   #set it
      (try_end),
    ],
    [
      ("approach",[(eq,"$mithraic_temple_explored",0),(quest_slot_eq,"qst_mithras_quest",slot_quest_current_state, 3)],"Look around...",
    [
      (modify_visitors_at_site,"scn_abandoned_mithraic_temple"),
      (reset_visitors,0),
      (set_visitors,1,"trp_mithras_bandit",1),
      (set_jump_mission,"mt_abandoned_temple_visit"),
      (jump_to_scene,"scn_abandoned_mithraic_temple"),
      (change_screen_mission),
    ]),


     ("leave",[],"Leave",[(leave_encounter),(change_screen_return)]),
    ]),


  ("court_of_attila_visit",0,
    "You have found a desolate wooden walled village... the former site of Attila's personal court.",
    "none",
    [],
    [
      ("enter_smithy",[],"Approach the village",[
    (modify_visitors_at_site,"scn_court_of_attila"),
    (reset_visitors),
    (assign, "$g_mt_mode", tcm_default),
    (set_visitor, 1, "trp_greek_scythaboo"),

    (set_jump_entry, 0),
    (scene_set_slot, "scn_court_of_attila", slot_scene_visited, 1),
    (set_jump_mission,"mt_diocletian_palace_visit"),
    (jump_to_scene,"scn_court_of_attila"),
    (change_screen_mission),
    ]),

     ("leave",[],"Leave",[(leave_encounter),(change_screen_return)]),
    ]),

  ("waylands_smithy",0,
    "You have found a small smithy....",
    "none",
    [],
    [
      ("enter_smithy",[],"Approach the smithy",[
      (eq, "$g_encountered_party", "p_waylands_smithy"),
      (modify_visitors_at_site,"scn_waylands_smithy"),
      (assign, "$g_mt_mode", tcm_default),
      (reset_visitors),
      (set_visitor, 1, "trp_wayland"),
      (set_jump_entry, 0),

      (eq, "$g_encountered_party", "p_waylands_smithy"),
      (scene_set_slot, "scn_waylands_smithy", slot_scene_visited, 1),
      (set_jump_mission,"mt_visit_town_castle"),
      (jump_to_scene,"scn_waylands_smithy"),
      (change_screen_mission),
    ]),

     ("leave",[],"Leave",[(leave_encounter),(change_screen_return)]),
    ]),

  (
    "diocletians_palace",0,
    "You approach the old palace...",
    "none",
    [],
    [
      ("enter_palace",[],"Visit the palace.",[
    (modify_visitors_at_site,"scn_diocletians_palace"),
    (reset_visitors),
    (assign, "$g_mt_mode", tcm_default),
    (set_visitor, 1, "trp_old_palace_farmer"),
    (set_visitor,1,"trp_palace_farmer"),
    (set_visitor,2,"trp_palace_farmer"),
    (set_visitor,3,"trp_palace_farmer"),
    (set_visitor,4,"trp_palace_farmer"),
    (set_visitor,5,"trp_palace_farmer"),
    (set_visitor,6,"trp_palace_farmer"),
    (set_visitor,7,"trp_palace_farmer"),
    (set_visitor,8,"trp_palace_farmer"),
    (set_visitor,9,"trp_palace_farmer"),
    (set_visitor,10,"trp_palace_farmer"),

    (try_begin),
      (eq, "$g_diocletian_quest", 0),
      (is_currently_night), #changed so he only appears at night
      (set_visitor,11,"trp_diocletian"),
    (try_end),

    (set_jump_entry, 0),
    (scene_set_slot, "scn_diocletians_palace", slot_scene_visited, 1),
    (set_jump_mission,"mt_diocletian_palace_visit"),
    (jump_to_scene,"scn_diocletians_palace"),
    (change_screen_mission),
  ]),

  ("add_prisoners", #player can purchase farm and put prisoners to work
    [
    (eq, "$g_player_owns_farm", 1),
    (scene_slot_eq, "scn_diocletians_palace", slot_scene_visited, 1),
    (str_clear, s1),
    (party_get_num_prisoners, "$g_num_prisoners", "p_diocletians_palace"),
    (assign, reg1, "$g_num_prisoners"),
    (str_store_string, s1, "@ (Currently {reg1} prisoners)"),
    ],
     "Put prisoners to work in the farms{s1}.",
    [
      (change_screen_exchange_members, 0),
    ]),

      ("leave",[],"Leave.",[(leave_encounter),(change_screen_return)]),
    ]
  ),

  ("slave_labor",mnf_scale_picture, ## mnf_disable_all_keys
    "{s1}",
    "none",
    [
    (set_background_mesh, "mesh_pic_messenger"),
          (str_clear, s1),
        (assign, reg1, "$g_earnings"),
          (troop_add_gold, "trp_player", "$g_earnings"),
      (play_sound, "snd_money_received", 0),
        (try_begin),
          (str_store_string, s1, "@The prisoners you have working in the farm earned you {reg1} siliquae this week."),
        (try_end),
      ],
    [
      ("continue",[], "Continue...",
       [
           (change_screen_return),
        ]),
    ],),

  ("vidigoias_grave",0,
    "You have found the grave of the great Vidigoia",
    "none",
    [],
    [
      ("enter_grave",[],"Approach the grave",[
      (eq, "$g_encountered_party", "p_vidigoias_grave"),
      (modify_visitors_at_site,"scn_vidigoias_grave"),
      (assign, "$g_mt_mode", tcm_default),
      (reset_visitors),
      (set_jump_entry, 0),

      (eq, "$g_encountered_party", "p_vidigoias_grave"),
      (scene_set_slot, "scn_vidigoias_grave", slot_scene_visited, 1),
      (set_jump_mission,"mt_visit_town_castle"),
      (jump_to_scene,"scn_vidigoias_grave"),
      (change_screen_mission),
    ]),

     ("leave",[],"Leave",[(leave_encounter),(change_screen_return)]),
    ]),

  ("alexandria_zealot_battle",0,
    "You wait with Proclus and his students for several hours. You notice a group of armed zealots approaching his villa. You prepare for a fight...",
    "none",
    [(set_background_mesh, "mesh_pic_townriot"),
    ],
    [
      ("continue",[],
       "Continue...",
       [
        (set_jump_mission,"mt_alexandria_revolt"),
        (modify_visitors_at_site,"scn_roman_villa_attack"),
        (reset_visitors),
        (set_jump_entry, 0),
        (set_visitor, 1, "trp_proclus"),
        (set_visitor, 2, "trp_roman_pagan_quest_npc_1"),
        (set_visitor, 3, "trp_roman_pagan_quest_npc_2"),
        (set_visitor, 4, "trp_roman_pagan_quest_npc_3"),
        (set_visitor, 5, "trp_roman_pagan_quest_npc_4"),
        (set_visitor, 6, "trp_roman_pagan_quest_npc_5"),

        (assign, ":num_rebels", 6),
        (store_character_level, ":level", "trp_player"),
        (val_div, ":level", 5),
        (val_add, ":num_rebels", ":level"),
        (set_visitors, 7, "trp_chrisitan_zealot", ":num_rebels"),

        (jump_to_scene, "scn_roman_villa_attack"),
        (change_screen_mission),
        ]),
]),

  (
    "alexandria_zealot_battle_won",0,
    "Your quick action and strong arm have successfully defeated the zealots. " +
    "Surely, anyone with a mind to harass Proclus you will think better of it after this.",
    "none",
    [],
    [
      ("continue", [], "Continue...",
        [(quest_set_slot,"qst_roman_pagan_quest", slot_quest_current_state, 4), #quest state moved forwards to advance the quest
          (modify_visitors_at_site,"scn_roman_villa"),
          (reset_visitors),
          (assign, "$g_mt_mode", tcm_default),
          (set_jump_entry, 1),
          (set_visitor, 2, "trp_proclus"),

          (set_visitor, 5, "trp_roman_pagan_quest_npc_2"),
          (set_visitor, 6, "trp_roman_pagan_quest_npc_3"),
          (set_visitor, 7, "trp_roman_pagan_quest_npc_4"),
          (set_visitor, 8, "trp_roman_pagan_quest_npc_5"),
          #(set_visitor, 9, "trp_aestii_companion"),
          (set_jump_mission,"mt_visit_town_castle"),
          (jump_to_scene,"scn_roman_villa"),
          (change_screen_mission),
      ]),
      ("leave",[],"Leave",[(leave_encounter),(change_screen_return)]), #only can leave after you have won
    ]),

  (
    "alexandria_zealot_battle_lost",0,
    "You and your companions have lost to the zealots... " +
    "Maybe next time you can get them.",
    "none",
    [],
    [
      ("continue", [], "Continue...",
        [ (modify_visitors_at_site,"scn_roman_villa"),
          (reset_visitors),
          (assign, "$g_mt_mode", tcm_default),
          (set_jump_entry, 1),
          (set_visitor, 2, "trp_proclus"),

          (set_visitor, 5, "trp_roman_pagan_quest_npc_2"),
          (set_visitor, 6, "trp_roman_pagan_quest_npc_3"),
          (set_visitor, 7, "trp_roman_pagan_quest_npc_4"),
          (set_visitor, 8, "trp_roman_pagan_quest_npc_5"),
          #(set_visitor, 9, "trp_aestii_companion"),
          (set_jump_mission,"mt_visit_town_castle"),
          (jump_to_scene,"scn_roman_villa"),
          (change_screen_mission),
      ]),
    ]),
#duels

  ("quest_agrippinus_villa",0,
    "You have arrived at the villa.",
    "none",
    [],
    [
    ("enter_villa_visit",[
      (check_quest_active, "qst_agrippinus_quest"),
      (quest_slot_ge, "qst_agrippinus_quest", slot_quest_current_state, 3),
      (quest_slot_lt, "qst_agrippinus_quest", slot_quest_current_state, 7)
        ],"Visit the villa.",[
    (modify_visitors_at_site,"scn_maxi_roman_villa"),
    (reset_visitors),
    (assign, "$g_mt_mode", tcm_default),
    (set_visitor,1,"trp_imperial_town_walker_1"),
    (set_visitor,2,"trp_imperial_town_walker_1"),
    (set_visitor,3,"trp_imperial_town_walker_2"),
    (set_visitor,4,"trp_imperial_town_walker_2"),
    (set_visitor,5,"trp_bucellarius"),
    (set_visitor,6,"trp_bucellarius"),
    (set_visitor,7,"trp_bucellarius"),
    (set_visitor,8,"trp_agrippinus"),
    (set_visitor,9,"trp_titus"),
    (set_visitor,10,"trp_ecdicius_avitus"),

    (set_jump_entry, 0),
    (scene_set_slot, "scn_maxi_roman_villa", slot_scene_visited, 1),
    (set_jump_mission,"mt_diocletian_palace_visit"),
    (jump_to_scene,"scn_maxi_roman_villa"),
    (change_screen_mission),
    ]),

    ("plan_villa_raid", [
      (check_quest_active, "qst_agrippinus_quest"),
      (quest_slot_eq, "qst_agrippinus_quest", slot_quest_current_state, 10),
      ], "Raid the villa",
    [
      (jump_to_menu, "mnu_raid_agrippinus_villa"),
    ]),

    ("leave",[],"Leave",[(leave_encounter),(change_screen_return)]),
    ]),

  ("raid_agrippinus_villa",0,
    "Rallying with Iacobus and his men, you and your companions make your way to the villa in order to arrest Agrippinus. However, as you close in to the villa, Agrippinus and his guards are waiting. He will not turn himself over willingly, there will be a battle...",
    "none", [],
    [

    ("option_1",[],"Fight!",
        [
    (assign, "$temp3", 1),
    (assign, "$temp1", "mnu_raid_agrippinus_villa_won"),
    (assign, "$temp2", "mnu_raid_agrippinus_villa_lost"),

    (set_jump_mission, "mt_agrippinus_villa_fight"),
    (modify_visitors_at_site, "scn_maxi_roman_villa"),
    (reset_visitors),

    (set_visitor, 1, "trp_player"),

    (assign, ":cur_entry", 1), #add player's companions
    (try_for_range, ":companion", companions_begin, companions_end),
      (main_party_has_troop,":companion"),
      (set_visitor, ":cur_entry", ":companion"),
    (try_end),

    (set_visitor, 1, "trp_curiosi_james"),
    (set_visitors, 1, "trp_pedes_domestici", 10),
    (set_visitors, 1, "trp_pedes", 20),

    (set_visitor, 4, "trp_agrippinus"),
    (set_visitors, 4, "trp_bucellarius", 10),
    (set_visitors, 4, "trp_miles_romani", 30),

    (jump_to_scene, "scn_maxi_roman_villa"),
    (change_screen_mission),
      ]),
    ],),

  ("raid_agrippinus_villa_won",0,
    "After a hard fought battle, Agrippinus surrenders himself to you and Iacobus. Your mission is complete, Agrippinus has been apprehended and now awaits his trial in Rome...",
    "none", [],
    [

    ("option_1",[],"Continue...",
        [
        (quest_set_slot,"qst_agrippinus_quest", slot_quest_current_state, 12),
        (succeed_quest, "qst_agrippinus_quest"),
        (disable_party, "p_agrippinus_quest_villa"),
        (leave_encounter),
        (change_screen_return),
        ]),
    ],),

  ("raid_agrippinus_villa_lost",0,
    "You have fallen in battle. Agrippinus and his forces take advantage of this and escape from the villa. Majorian will not be happy to hear the news that you have failed the mission...",
    "none", [],
    [

    ("option_1",[],"Continue...",
        [
        (quest_set_slot,"qst_agrippinus_quest", slot_quest_current_state, 11),
        (fail_quest, "qst_agrippinus_quest"),
        (disable_party, "p_agrippinus_quest_villa"),
        (leave_encounter),
        (change_screen_return),
        ]),
    ],),

  ("nero_grove",0,
    "You have found the Grove of the Nymphs.",
    "none",
    [
      (try_begin),
        (store_troop_health, ":health", "trp_player", 0), #get relative health in 1-100 range and put it into the ":health" variable
        (lt, ":health", 30),
        (val_add, ":health", 35),               #add to it the 5%
        (troop_set_health,   "trp_player", ":health"),   #set it
      (try_end),
    ],
    [
      ("enter",[(eq,"$nero_interaction",0)],"Look around...",
    [
      (modify_visitors_at_site,"scn_grove_of_nymphs"),
      (reset_visitors,0),
      (set_visitors,1,"trp_nero_larper",1),
      (set_jump_mission,"mt_nero_visit"),
      (jump_to_scene,"scn_grove_of_nymphs"),
      (change_screen_mission),
    ]),

     ("leave",[],"Leave",[(leave_encounter),(change_screen_return)]),
    ]),

  ("sinuessa_battle",0,
    "You and your men approach the outskirts of Sinuessa. Visimar and his troops notice your troops approach, and abandon their baggage train to meet your forces...",
    "none",
    [
      (quest_slot_eq,"qst_battle_of_garigliano",slot_quest_current_state, 1),
      (set_background_mesh, "mesh_pic_looted_village"),
      (assign, "$g_enemy_party", "p_sinuessa"),
      (assign, "$g_ally_party", -1),
      (call_script, "script_encounter_calculate_fit"),
    ],
    [
      ("continue",[],
       "To battle!",
       [
        (try_begin),
          (store_troop_health, ":health", "trp_player", 0), #get relative health in 1-100 range and put it into the ":health" variable
          (lt, ":health", 30),
          (val_add, ":health", 35),               #add to it the 5%
          (troop_set_health,   "trp_player", ":health"),   #set it
        (try_end),

        (assign, "$g_battle_result", 0),
        (assign, "$g_engaged_enemy", 1),
        (call_script, "script_calculate_battle_advantage"),
        (set_battle_advantage, reg0),
        (set_party_battle_mode),

        (set_jump_mission,"mt_sinuessa_battle"),
        (jump_to_scene, "scn_roman_village_battle"),
        (change_screen_mission),
        ]),
]),

  (
    "sinuessa_battle_won",0,
    "Your men defeat the raiding vandal warband, and as the survivors retreat to their ships with what loot they could carry, they were cut down. Visimar has perished in the fighting." +
    "With their defeat, you and your troops share the loot that the enemy had stolen; spoils for a great victory!",
    "none",
    [],
    [
      ("continue", [], "Continue...",
        [(quest_set_slot,"qst_battle_of_garigliano", slot_quest_current_state, 2), #quest state moved forwards to advance the quest
        (str_clear, s2),
        (str_clear, s9),
        (str_store_troop_name_link, s9, "trp_kingdom_1_lord"),
        (str_store_string, s2, "@You have defeated Visimar and the raiding Vandal warband. Return to {s9} to report your victory."),
        (add_quest_note_from_sreg, "qst_battle_of_garigliano", 4, s2, 0),
        (call_script, "script_troop_add_gold", "trp_player", 600),
        (troop_add_items, "trp_player", "itm_wine",1), #loot rewards
        (troop_add_items, "trp_player", "itm_pottery",1),
        (troop_add_items, "trp_player", "itm_linen",1),

        (add_xp_as_reward,500),
        (call_script, "script_change_troop_renown", "trp_player", 15),
        (call_script, "script_change_player_honor", 5),
        (call_script, "script_change_player_relation_with_faction", "fac_kingdom_1", 6),
        (call_script, "script_change_player_relation_with_center", "p_town_11", 2), #grants additional relation to nearby villages/towns
        (call_script, "script_change_player_relation_with_center", "p_village_195", 2), #grants additional relation to nearby villages/towns
        (call_script, "script_succeed_quest", "qst_battle_of_garigliano"),



        (leave_encounter),
        (change_screen_return),
        (disable_party, "p_sinuessa"),
      ]),
    ]),

  (
    "sinuessa_battle_lost",0,
    "Visimar and his raiding party have defeated you, and retreat back to their ships with their loot, fearing another Roman attack..." +
    "You luckily survive, however Majorian will not be happy with your loss...",
    "none",
    [],
    [
      ("continue", [], "Continue...",
        [
        (call_script, "script_fail_quest", "qst_battle_of_garigliano"),
        (call_script, "script_change_troop_renown", "trp_player", -10),
        (call_script, "script_change_player_relation_with_troop", "trp_kingdom_1_lord", -5),
        (disable_party, "p_sinuessa"),
        (leave_encounter),
        (change_screen_return),
      ]),
    ]),

  (
    "silingi_village",0,
    "You approach the village",
    "none",
    [],
    [
      ("enter_village",[],"Visit the Village.",[
    (modify_visitors_at_site,"scn_silingi_village"),
    (reset_visitors),
    (assign, "$g_mt_mode", tcm_default),
    (set_visitor, 1, "trp_silingi_chief"),
    (set_visitor,1,"trp_silingi_warrior"),
    (set_visitor,2,"trp_silingi_warrior"),
    (set_visitor,3,"trp_silingi_warrior"),
    (set_visitor,4,"trp_silingi_warrior"),
    (set_visitor,5,"trp_refugee"),
    (set_visitor,6,"trp_refugee"),
    (set_visitor,7,"trp_refugee"),
    (set_visitor,8,"trp_palace_farmer"),
    (set_visitor,9,"trp_palace_farmer"),
    (set_visitor,10,"trp_palace_farmer"),

    (set_jump_entry, 0),
    (scene_set_slot, "scn_silingi_village", slot_scene_visited, 1),
    (set_jump_mission,"mt_diocletian_palace_visit"),
    (jump_to_scene,"scn_silingi_village"),
    (change_screen_mission),
  ]),

      ("leave",[],"Leave.",[(leave_encounter),(change_screen_return)]),
    ]
  ),

  (
    "venedi_battle",menu_text_color(0xFF000000)|mnf_disable_all_keys, #doccinga coastal assault
    "Villagers begin to flee as the men hastily prepare. The battle is inevitable. The men of the village gather behind their chief, ready to fight.",
    "none",
    [
      (try_begin),
        (store_troop_health, ":health", "trp_player", 0), #get relative health in 1-100 range and put it into the ":health" variable
        (lt, ":health", 30),
        (val_add, ":health", 35),               #add to it the 5%
        (troop_set_health,   "trp_player", ":health"),   #set it
      (try_end),
      (set_background_mesh, "mesh_pic_nord"),
      (assign, "$g_enemy_party", "p_venedi_outpost_quest"),
      (assign, "$g_ally_party", -1),
      (call_script, "script_encounter_calculate_fit"),
    ],
    [
      ("battle",[
        ],"To battle!",
        [
           (assign, "$g_battle_result", 0),
           (modify_visitors_at_site,"scn_venedi_outpost"),
           (reset_visitors),
           (set_visitor,0,"trp_player"), #player
           (call_script, "script_party_count_fit_for_battle", "p_main_party"),

           (set_visitors,2,"trp_venedi_chief", 1), #sallied up front
           (set_visitors,2,"trp_venedi_warrior", 60), #sallied up front
           (set_visitors,3,"trp_venedi_skirmisher", 10), #center of village

           (set_visitors,4,"trp_venedi_skirmisher", 20), #skirmishers, also up front

          (jump_to_scene, "scn_venedi_outpost"),
          (set_jump_mission,"mt_venedi_battle"),
          (change_screen_mission),
      ]),
    ]),

  (
    "venedi_outpost",0,
    "{!}{s5}",
    "none",
    [
        (str_store_string,s5,"@You and your men approach the village. In the distance you see women and children between the cottages, watching warily. " +
        "A number of men, few in number but with an aggressive demeanor, come to meet you. A man in a tall, feathered helmet approaches you."),
    ],
    [
      ("talk_to_chief",[ (check_quest_active,"qst_silingi_quest"),(quest_slot_eq,"qst_silingi_quest",slot_quest_current_state, 2),
        ],
        "Talk to the men.",[
          (modify_visitors_at_site,"scn_conversation_scene"),#player entry point 16, and then 17, 18, 19 for NPC's, opposite the player. 17 must be g_talk troop
          (reset_visitors),
          (set_visitor,0,"trp_player"),
          (set_visitor,17,"trp_venedi_chief"),
          (set_jump_mission,"mt_conversation_encounter"),
          (jump_to_scene,"scn_conversation_scene"),
          (change_screen_map_conversation, "trp_venedi_chief"),
      ]),

      ("leave",[
        ],"Leave.",
        [
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),
      ]),
    ]),

  (
    "venedi_battle_won",0,
    "Your men defeat the Venedi warriors. You take the chief's helmet, as proof they have been defeated." +
    "With their defeat, you and your troops loot the now abandoned village...",
    "none",
    [],
    [
      ("continue", [], "Continue...",
        [(quest_set_slot,"qst_silingi_quest", slot_quest_current_state, 3),
        (str_clear, s2),
        (str_store_string, s2, "@You have defeated the Venedi. Return to the Silingi village to report the news."),
        (add_quest_note_from_sreg, "qst_silingi_quest", 4, s2, 0),
        (call_script, "script_troop_add_gold", "trp_player", 500),
        (troop_add_items, "trp_player", "itm_furs",2), #loot rewards
        (troop_add_items, "trp_player", "itm_dried_meat",1),
        (troop_add_items, "trp_player", "itm_amber",2),

        (add_xp_as_reward,500),
        (call_script, "script_change_troop_renown", "trp_player", 15),
        (call_script, "script_change_player_honor", 2),
        (leave_encounter),
        (change_screen_return),
        (disable_party, "p_venedi_outpost_quest"),
      ]),
    ]),

  (
    "venedi_battle_lost",0,
    "With your defeat, the Silingi will not be able to free themselves from the yolk of the Venedi... Gaiseric will not be happy with this news.",
    "none",
    [],
    [
      ("continue", [], "Continue...",
        [
        (call_script, "script_fail_quest", "qst_silingi_quest"),
        (call_script, "script_change_troop_renown", "trp_player", -15),
        (call_script, "script_change_player_relation_with_troop", "trp_kingdom_15_lord", -5),
        (disable_party, "p_silingi_village"),
        (disable_party, "p_venedi_outpost_quest"),
        (leave_encounter),
        (change_screen_return),
      ]),
    ]),


#wolfmen/cynocephalus quest
  ("wolfmen_forest",0,
    "As you approach a dense forest, you pass through a small village. As your men resupply, they hear stories of violent savages who gather in the densest part of the forest. "
    + "Although the villagers fear these warriors, it seems they leave offerings to them so that they may be pleased and spared from their violence. "
    + "Still, some of your men deflect these fears as mere superstition. As you leave the village and head into the woods, you hope the rumors of their ferocity are not true..."
    ,
    "none",
    [
    (try_begin),
      (store_time_of_day,reg12),
      (ge,reg12,5),
      (lt,reg12,21),
      (assign,"$town_nighttime",0),
    (else_try),
      (assign,"$town_nighttime",1),
    (try_end),
    ],
    [
      ("continue_day",[(eq,"$town_nighttime",0),],"Come back at night...",
      [(leave_encounter),(change_screen_return)]),

      ("continue_night",[(eq,"$town_nighttime",1),
        (check_quest_active, "qst_the_wolfmen"),
        (quest_slot_eq, "qst_the_wolfmen", slot_quest_current_state, 1),
        ],"Set up camp for the night...",[

        (quest_set_slot, "qst_the_wolfmen", slot_quest_current_state, 2), #sets state to 2
        (jump_to_menu, "mnu_wolfmen_ambush"),
    ]),

    ("leave",[],"Leave",[(leave_encounter),(change_screen_return)]),
    ]),

 ("wolfmen_ambush",0,
    "While you and your host are resting for the night in a clearance in the middle of the woods, you suddenly hear the howling of wolves and frightening cries that wake you up. "
    + "You and your companions quickly grab your weapons, your soldiers are already rushing outside their tents. All you could see in the night is a large number of dark silhouettes approaching you quickly. "
    + "You draw your sword, whether these are bandits or wolves, you are going to face them. As soon as these dark figures approach you, you realise the Cynocephali have found you first.",
    "none", [],
    [
    ("option_1", [],"Ambush!",
    [
      (set_jump_mission, "mt_wolfmen_ambush"),
      (modify_visitors_at_site, "scn_wolfmen_ambush"),
      (reset_visitors),


      (set_visitor, 22, "trp_player"),

      (assign, ":cur_entry", 23), #entry points 23 to 30
      (try_for_range, ":companion", companions_begin, companions_end),
          (le, ":cur_entry", 30),
          (main_party_has_troop,":companion"),
          (set_visitor, ":cur_entry", ":companion"),
          (val_add, ":cur_entry", 1),
      (try_end),

      # set number of waves player has to fight
      (try_begin),
          (quest_slot_eq, "qst_the_wolfmen", slot_quest_current_state, 2),
          (assign, "$temp", 10000), # # used to count number of waves, having 10,000 waves is like invinite, player is supposed to lose this last fight
      (try_end),

      (set_visitors, 15, "trp_cynocephalus", 2),
      (set_visitors, 16, "trp_cynocephalus", 2),
      (set_visitors, 17, "trp_cynocephalus", 2),
      (set_visitors, 18, "trp_cynocephalus", 2),

      (jump_to_scene, "scn_wolfmen_ambush"),
      (change_screen_mission),
      ]),
    ]),

  ("wolfmen_ambush_lost",0,
    "You and your soldiers fought at the best of your abilities but eventually these wolf-warriors got the better of it and manage to wound you and capture you. You wake up some time later, treated and in a wooden cage in a rough encampment in the woods. "
    + "You can see most of your soldiers in the other cages, your officers as well. Two times per day a man comes to offer you food, you initially refuse but at the end hunger and fatigue push you to accept their offer, your soldiers do the same.",
    "none",
    [],
    [

    ("continue",[],"Continue...",[
      (store_current_hours, ":cur_hour"),
      (val_add, ":cur_hour", 12),
      (quest_set_slot, "qst_the_wolfmen", slot_quest_gold_reward, ":cur_hour"),
      (rest_for_hours, 30, 10, 0),
      (change_screen_map),
      ]),
    ]),

  ("wolfmen_1",0,
    "Finally your captors open your cage and set you free, they escort you to the centre of their encampment, next to a fireplace, where the oldest of them resided, a scarred man with a long white beard and a body that still recounted its vigorous youth.",
    "none",
    [],
    [

    ("continue",[],"Talk to the man...",[
      (quest_set_slot, "qst_the_wolfmen", slot_quest_current_state, 4),
      (assign, "$temp1", 4),
      (assign, "$talk_context", 0),
      (set_jump_mission, "mt_conversation_generic"),
      (modify_visitors_at_site, "scn_wolfmen_lair"),
      (reset_visitors),
      (try_for_range, ":entry", 16, 19),
          (mission_tpl_entry_set_override_flags, "mt_conversation_generic", ":entry", af_override_horse),
      (try_end),

      (mission_tpl_entry_set_override_flags, "mt_conversation_generic", 0, af_override_everything),
      (mission_tpl_entry_clear_override_items, "mt_conversation_generic", 0),
      (mission_tpl_entry_add_override_item, "mt_conversation_generic",0, "itm_linen_tunic"),
      (mission_tpl_entry_add_override_item, "mt_conversation_generic",0, "itm_wrapping_boots"),

      (set_visitor, 0, "trp_player"),
      (set_visitor, 16, "trp_berserker_leader"),
      (set_visitor, 17, "trp_cynocephalus"),
      (set_visitor, 18, "trp_cynocephalus"),

      (assign, ":cur_entry", 2), #entry points 2 to 4
      (try_for_range, ":companion", companions_begin, companions_end),
        (le, ":cur_entry", 4),
        (main_party_has_troop,":companion"),
        (set_visitor, ":cur_entry", ":companion"),
        (val_add, ":cur_entry", 1),
      (try_end),

      (jump_to_scene, "scn_wolfmen_lair"),
      (change_screen_mission),

      ]),
    ]),

  ("wolfmen_duel",0,
    "After a few hours of rest, you are given your arms and armor back. After arming yourself, you approach the old shaman. He steps aside and summons an old, strong warrior to come forth. His gaze is feirce, almost as if he is a beast gazing on its prey. He draws his sword, and points it towards you. You have just the time to draw your blade as well that the warrior will begin charging at you. The duel has begun!",
    "none",
    [
          (set_fixed_point_multiplier, 100),
          (position_set_x, pos0, 70),
          (position_set_y, pos0, 5),
          (position_set_z, pos0, 75),
          (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", "trp_cynocephalus_boss", pos0),
],
    [

    ("continue",[],"Fight!",[
      (quest_set_slot, "qst_the_wolfmen", slot_quest_current_state, 5),
       (modify_visitors_at_site,"scn_wolfmen_lair"),
       (reset_visitors),
       (set_visitor,0,"trp_player"), #player
       (set_visitor,1,"trp_cynocephalus_boss"), #warrior

       (set_jump_mission,"mt_wolfmen_duel"),
       (jump_to_scene, "scn_wolfmen_lair"),
       (change_screen_mission),
      ]),
    ]),

  ("wolfmen_duel_won",0,
    "The fight was tough but you finally manage to beat the champion. The moment you can strike the final blow you have to decide if to spare the warrior or kill him. Everyone's yelling at you 'DEATH DEATH DEATH!', but what does your soul tell you?",
    "none",
    [
          (set_fixed_point_multiplier, 100),
          (position_set_x, pos0, 70),
          (position_set_y, pos0, 5),
          (position_set_z, pos0, 75),
          (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", "trp_cynocephalus_boss", pos0),
	(call_script, "script_play_victorious_sound"),
],
    [
     ("choice_1",[],"Kill him!",[
      (call_script, "script_change_troop_renown", "trp_player", 10),
      (assign, "$temp1", 4),
      (assign, "$talk_context", 0),
      (set_jump_mission, "mt_conversation_generic"),
      (modify_visitors_at_site, "scn_wolfmen_lair"),
      (reset_visitors),
      (try_for_range, ":entry", 0, 19),
          (mission_tpl_entry_set_override_flags, "mt_conversation_generic", ":entry", af_override_horse),
      (try_end),

      (set_visitor, 0, "trp_player"),
      (set_visitor, 16, "trp_berserker_leader"),
      (set_visitor, 17, "trp_cynocephalus"),
      (set_visitor, 18, "trp_cynocephalus"),

      (assign, ":cur_entry", 2), #entry points 2 to 4
      (try_for_range, ":companion", companions_begin, companions_end),
        (le, ":cur_entry", 4),
        (main_party_has_troop,":companion"),
        (set_visitor, ":cur_entry", ":companion"),
        (val_add, ":cur_entry", 1),
      (try_end),

      (jump_to_scene, "scn_wolfmen_lair"),
      (change_screen_mission),

      ]),

     ("choice_2",[],"Spare the warrior.",[
      (call_script, "script_change_troop_renown", "trp_player", -10),
      (assign, "$temp1", 4),
      (assign, "$talk_context", 0),
      (set_jump_mission, "mt_conversation_generic"),
      (modify_visitors_at_site, "scn_wolfmen_lair"),
      (reset_visitors),
      (try_for_range, ":entry", 0, 19),
          (mission_tpl_entry_set_override_flags, "mt_conversation_generic", ":entry", af_override_horse),
      (try_end),

      (set_visitor, 0, "trp_player"),
      (set_visitor, 16, "trp_berserker_leader"),
      (set_visitor, 17, "trp_cynocephalus"),
      (set_visitor, 18, "trp_cynocephalus"),

      (assign, ":cur_entry", 2), #entry points 2 to 4
      (try_for_range, ":companion", companions_begin, companions_end),
        (le, ":cur_entry", 4),
        (main_party_has_troop,":companion"),
        (set_visitor, ":cur_entry", ":companion"),
        (val_add, ":cur_entry", 1),
      (try_end),

      (jump_to_scene, "scn_wolfmen_lair"),
      (change_screen_mission),

      ]),
    ]),


  ("wolfmen_duel_lost",0,
    "The warrior cuts your belly open and leaves you rotting on the ground. Your men rush to save you, some of them luckily were experienced healers and manage you treat you. Once you recover, the cynocephali are gone, nowhere to be found.",
    "none",
    [
          (set_fixed_point_multiplier, 100),
          (position_set_x, pos0, 70),
          (position_set_y, pos0, 5),
          (position_set_z, pos0, 75),
          (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", "trp_cynocephalus_boss", pos0),
],
    [
     ("leave",[],"Leave",[
      (call_script, "script_fail_quest", "qst_the_wolfmen"),
      (call_script, "script_change_troop_renown", "trp_player", -10),
      (add_xp_as_reward, 200),
      (call_script, "script_end_quest", "qst_the_wolfmen"),
      (disable_party,"p_wolfmen_lair"),
      (change_screen_map),
      (rest_for_hours, 0,0,0),
      (change_screen_map),
      ]),
    ]),

#ritual sacrifice - communion with (Wotan) - wolf sacrafice
#lack of social taboos, all manners of evil and trickery were allowed
#association with darkness, becoming one with the wolf/savagery

#1 participate in rituals
#2 join in some thievery
#2 participation in desecration of the dead after winning battle
#3 participation in more esoteric rituals
#4 raid village

#morality will determine if the player will partake in the final raid against the village he comes into contact with in the beginning of the quest

  ("wolfmen_initiation_1",0,
    "After accepting your initation into the brotherhood, you are offered to participate in their strange rituals and rites. At first, you opt to observe them. "
    + "The warriors approch a grand oak, with a stone altar placed in front. You watch as the old shaman offers a variety of rites to Wotan. Several of the warriors bring a lamb from a recent raid to the shaman. "
    + "The shaman kills the animal, sprinkling some of the blood onto the altar. He then divides up the creature, offering some to Wotan through the burning of its flesh; while the rest is gathered for the warriors to eat and partake in the feast...",
    "none",
    [(quest_set_slot,"qst_the_wolfmen", slot_quest_current_state, 8)],
    [

    ("option_1",[],"Partake in the feast.",[
      (val_sub, "$g_wolf_quest_morality", 1),

      (store_current_hours, ":cur_hour"),
      (val_add, ":cur_hour", 24),
      (quest_set_slot, "qst_the_wolfmen", slot_quest_gold_reward, ":cur_hour"),
      (rest_for_hours, 30, 10, 0),
      (change_screen_map),

      ]),

    ("option_2",[],"Opt out.",[
      (val_add, "$g_wolf_quest_morality", 1),

      (store_current_hours, ":cur_hour"),
      (val_add, ":cur_hour", 24),
      (quest_set_slot, "qst_the_wolfmen", slot_quest_gold_reward, ":cur_hour"),
      (rest_for_hours, 30, 10, 0),
      (change_screen_map),
      ]),

    ]),

  ("wolfmen_initiation_2",0,
    "As the day falls into dusk, one of the warriors approaches you. He asks you if you would join him and a few other warriors on a quick raid to steal some cattle from a nearby village... ",
    "none",
    [(quest_set_slot,"qst_the_wolfmen", slot_quest_current_state, 9)],
    [

    ("option_1",[],"Join them.",[
(call_script, "script_get_closest_village", "p_main_party"),
(call_script, "script_change_player_relation_with_center", reg0, -1),
      (val_sub, "$g_wolf_quest_morality", 1),

      (store_current_hours, ":cur_hour"),
      (val_add, ":cur_hour", 24),
      (quest_set_slot, "qst_the_wolfmen", slot_quest_gold_reward, ":cur_hour"),
      (rest_for_hours, 30, 10, 0),
      (change_screen_map),
      ]),

    ("option_2",[],"Stay back.",[
      (val_add, "$g_wolf_quest_morality", 1),

      (store_current_hours, ":cur_hour"),
      (val_add, ":cur_hour", 24),
      (quest_set_slot, "qst_the_wolfmen", slot_quest_gold_reward, ":cur_hour"),
      (rest_for_hours, 30, 10, 0),
      (change_screen_map),
      ]),

    ]),

  ("wolfmen_initiation_3",0,
    "You and the Cynocephali ambush a small band of warriors on behalf of the Langobards. The warriors, not expecting to fight beasts who claimed to be men routed. As the fled, the warriors chased them down, cutting down every last man. The fight is short and violent. "
    + "With their victory, the warriors begin to howl like wolfs, gnashing their teeth, striking their shields. Soon the men begin to loot the dead; not long after you spot some of the warriors mutilating the corpses of their once foes; some even drinking their blood...",
    "none",
    [(quest_set_slot,"qst_the_wolfmen", slot_quest_current_state, 10)],
    [

    ("option_1",[],"Join them.",[
      (val_sub, "$g_wolf_quest_morality", 1),

      (store_current_hours, ":cur_hour"),
      (val_add, ":cur_hour", 24),
      (quest_set_slot, "qst_the_wolfmen", slot_quest_gold_reward, ":cur_hour"),
      (rest_for_hours, 30, 10, 0),
      (change_screen_map),
      ]),

    ("option_2",[],"Stay back.",[
      (val_add, "$g_wolf_quest_morality", 1),

      (store_current_hours, ":cur_hour"),
      (val_add, ":cur_hour", 24),
      (quest_set_slot, "qst_the_wolfmen", slot_quest_gold_reward, ":cur_hour"),
      (rest_for_hours, 30, 10, 0),
      (change_screen_map),
      ]),
    ]),

  ("wolfmen_initiation_4",0,
    "Once again, you join the Cynocephali as they partake in their rites to Wotan. You see the Old Shaman approach the bloody stone altar by the sacred tree. However, this time he is joined by a battered prisoner from a previous raid... "
    + "The prisoner is lead to the altar, prayers and the dedication of the prisoner are directed to Wotan. Suddenly, the old shaman slits the prisoner's throat, his blood splattering onto the altar. Along with the prisoner, several other animals are sacrificed. "
    + "The warriors gather around to partake in Wotan's grand feast... ",
    "none",
    [(quest_set_slot,"qst_the_wolfmen", slot_quest_current_state, 11)],
    [

    ("option_1",[],"Partake in the feast.",[
      (val_sub, "$g_wolf_quest_morality", 1),

      (store_current_hours, ":cur_hour"),
      (val_add, ":cur_hour", 24),
      (quest_set_slot, "qst_the_wolfmen", slot_quest_gold_reward, ":cur_hour"),
      (rest_for_hours, 30, 10, 0),
      (change_screen_map),
      ]),

    ("option_2",[],"Stay back.",[
      (val_add, "$g_wolf_quest_morality", 1),

      (store_current_hours, ":cur_hour"),
      (val_add, ":cur_hour", 24),
      (quest_set_slot, "qst_the_wolfmen", slot_quest_gold_reward, ":cur_hour"),
      (rest_for_hours, 30, 10, 0),
      (change_screen_map),
      ]),
    ]),

  ("wolfmen_initiation_5",0,
    "As you spend more of your days among the Cynocephali, you have learned many of their rituals and way of life. You have become familiar to what it means to live on the edge of society, away from the rules and taboos that society enforces. "
    + "You feel a sense of brotherhood with the warriors, as you join them in their hunts, battles and raids. One morning, a thick fog falls over the forest, the Old Shaman approaches you. He has one more task for you. "
    + "You must lead a raid against a small village on the edge of the forest. Although the villagers attempted to appease the Cynocephali, they found themselves on the wrong side of the conflict, and therefore must be dealt with... ",
    "none",
    [(quest_set_slot,"qst_the_wolfmen", slot_quest_current_state, 12)],
    [

    ("option_1",[(le, "$g_wolf_quest_morality", 0)],"Lead the raid.", #must be at least 0 to participate
        [

    (assign, "$temp1", "mnu_wolfmen_raid_won"),
    (assign, "$temp2", "mnu_wolfmen_raid_lost"),

    (modify_visitors_at_site, "scn_wolfmen_raid"),
    (reset_visitors),

    (mission_tpl_entry_set_override_flags, "mt_wolfmen_raid", 58, af_override_horse),
    (mission_tpl_entry_set_override_flags, "mt_wolfmen_raid", 58, af_override_head),
    (mission_tpl_entry_clear_override_items, "mt_wolfmen_raid", 58),
    (mission_tpl_entry_add_override_item, "mt_wolfmen_raid",58, "itm_wolf_skin_1"),

    (set_visitor, 58, "trp_player"),

    #Defenders
    (set_visitors, 51, "trp_cynocephalus", 15),
    (set_visitor, 52,  "trp_berserker_leader"),
    (set_visitors, 53, "trp_cynocephalus", 5),
    (set_visitors, 54, "trp_cynocephalus", 3),
    (set_visitors, 55, "trp_cynocephalus", 3),
    (set_visitors, 56, "trp_cynocephalus", 5),
    (set_visitors, 57, "trp_cynocephalus", 3),

    #defenders
    (set_visitors, 50, "trp_eastern_germanic_spearman", 15),
    (set_visitors, 50, "trp_eastern_germanic_retainer", 6),
    (set_visitors, 50, "trp_eastern_germanic_noble", 1),
    (set_visitors, 50, "trp_germanic_civilian", 8),
    (set_visitors, 50, "trp_peasant_woman", 6),

    (jump_to_scene, "scn_wolfmen_raid"),
    (set_jump_mission, "mt_wolfmen_raid"),


    (change_screen_mission),
      ]),

    ("option_2",[(ge, "$g_wolf_quest_morality", 1)],"Stay back.",[ #must be positive morality

      (jump_to_menu, "mnu_wolfmen_initiation_fail"),
      ]),

    ]),

  ("wolfmen_raid_won",0,
    "The last of the defenders are cut down; the air is filled with the stench of death. In the once peaceful village, frenzy ensues. The Cynocephali have their way with what remains of the village, not as men, but as beasts. "
    + "The terror lasts all night. In the morning, the old shaman approaches you. You have finished your initation, you have now been set apart from society; You have become one with the Cynocephali. As you leave, the old shaman wishes you well, pledging his loyalty to you when the time comes...",
    "none",
    [(quest_set_slot,"qst_the_wolfmen", slot_quest_current_state, 13)],
    [

    ("option_1",[],"Farewell",[
      (assign, "$player_ability", 1),
      (assign, "$g_wolf_quest", 3), #can recruit
      (succeed_quest, "qst_the_wolfmen"),
      (add_xp_as_reward, 1000),
      (call_script, "script_end_quest", "qst_the_wolfmen"),
      (disable_party,"p_wolfmen_lair"),
      (call_script, "script_change_troop_renown", "trp_player", 25),
      (call_script, "script_change_player_honor", -25),
      (troop_add_item, "trp_player","itm_wolf_skin_1", 0),
      (change_screen_map),
      (rest_for_hours, 0,0,0),
      (change_screen_map),
      ]),

    ]),

  ("wolfmen_raid_lost",0,
    "Despite your advantage, you have been cut down by the village defenders. Despite surviving your wounds, by the time you recover, the village has been ransacked, and the Cynocephali are no longer to be seen...",
    "none", [(quest_set_slot,"qst_the_wolfmen", slot_quest_current_state, 13)],
    [
    ("option_1",[],"Continue...",
        [
        (call_script, "script_change_troop_renown", "trp_player", -25),
        (call_script, "script_fail_quest", "qst_the_wolfmen"),
        (call_script, "script_end_quest", "qst_the_wolfmen"),
        (disable_party,"p_wolfmen_lair"),
        (change_screen_map),
        (rest_for_hours, 0,0,0),
        (change_screen_map),
        ]),
    ],),

  ("wolfmen_initiation_fail",0,
    "As you observe the raid from a distance, you hear the clashing of blades and screams of terror. After several hours, you see the warriors hastily return to their camp to enjoy their spoils. "
    + "The next morning, the old shaman approaches you. You see his face full of disappointment. He tells you that you will not be initiated into the brotherhood, and asks you to leave. He still pledges his warriors to you when the time comes, but you will never be seen as an equal to them... ",
    "none",
    [(quest_set_slot,"qst_the_wolfmen", slot_quest_current_state, 13)],
    [

    ("option_1",[],"Farewell",[
      (assign, "$g_wolf_quest", 3), #can recruit
      (succeed_quest, "qst_the_wolfmen"),
      (add_xp_as_reward, 800),
      (call_script, "script_end_quest", "qst_the_wolfmen"),
      (disable_party,"p_wolfmen_lair"),
      (call_script, "script_change_troop_renown", "trp_player", 15),
      (call_script, "script_change_player_honor", 5),
      (change_screen_map),
      (rest_for_hours, 0,0,0),
      (change_screen_map),
      ]),

    ]),

  ("black_river_pirates",0,
    "After several hours of rowing, you see a ransacked village on the riverbank. Smoke emanates from several burnt houses in varying states of destruction, some reduced to a single standing wall. "
    + "There are no bodies - the young were carried off into slavery and the old were thrown into the river torrents, or so you presume. "
    + "All markers of Roman sophistication - tended gardens, terracotta amphorae, even funerary stelae have been desecrated. Beyond mere robbery, something else is evident here - hatred. "
    + "Your thoughts are interrupted when a longship emerges from a nearby confluence. A loud crash shakes your vessel. You have been rammed by river pirates! ",
    "none", [],
    [

    ("option_1",[],"Fight!",
        [
    (assign, "$temp3", 1),
    (assign, "$temp1", "mnu_black_river_pirates_won"),
    (assign, "$temp2", "mnu_black_river_lost"),
    (assign, "$g_battle_result", 0),

    (set_jump_mission, "mt_agrippinus_villa_fight"),
    (modify_visitors_at_site, "scn_black_river_ambush"),
    (reset_visitors),

    (try_for_range, ":entry", 1, 4),
          (mission_tpl_entry_set_override_flags, "mt_agrippinus_villa_fight", ":entry", af_override_horse),
    (try_end),

    (set_visitor, 1, "trp_player"),

    (assign, ":cur_entry", 1), #add player's companions
    (try_for_range, ":companion", companions_begin, companions_end),
      (main_party_has_troop,":companion"),
      (set_visitor, ":cur_entry", ":companion"),
    (try_end),

    (set_visitor, 1, "trp_br_gerontius"),
    (set_visitors, 1, "trp_roman_marine", 6),

    (set_visitors, 4, "trp_taiga_bandit", 8),
    (set_visitors, 4, "trp_eastern_germanic_spearman", 6),

    (jump_to_scene, "scn_black_river_ambush"),
    (change_screen_mission),
      ]),
    ],),

  ("black_river_pirates_won",0,
    "After narrowly fending off your attackers, the longship rows out of sight just as precipitously as it had appeared. Relieved, if somewhat shaken - your shipmates clear the deck of dead pirates before returning to their oars. "
    + "The surrounding woodland soon vanishes behind the stern of your vessel and a sea of grass devours all that meets the eye - Pannonia. You see a ruined fort in the distance, the sole testament to a bygone Roman occupation for miles. "
    + "Dozens of defensive structures once dotted the Limes Sarmatiae, most reclaimed by the steppe as the military apparatus of the former province disintegrated. Long have the limitanei abandoned this stretch of river, or so you think - until you spot a handful of soldiers manning the ramparts... ",
    "none", [],
    [

    ("option_1",[],"Continue...",
        [
        (quest_set_slot,"qst_black_river", slot_quest_current_state, 3),
        (set_jump_mission, "mt_visit_minor_town"),
        (modify_visitors_at_site, "scn_black_river_fort"),
        (reset_visitors),
        #guards
        (set_visitor, 1, "trp_roman_marine"),
        (set_visitor, 2, "trp_roman_marine"),
        (set_visitor, 3, "trp_sagittarius"),
        (set_visitor, 4, "trp_sagittarius"),
        (set_visitor, 5, "trp_sagittarius"),
        (set_visitor, 6, "trp_tiro"),
        (set_visitor, 7, "trp_tiro"),
        (set_visitor, 8, "trp_roman_civilian"),
        (set_visitor, 9, "trp_pedes"), #comitatus
        (set_visitor, 10, "trp_pedes"),
        (set_visitor, 11, "trp_pedes"),
        (set_visitor, 12, "trp_eques_stablesiani"),
        #villagers
        (set_visitor, 13, "trp_imperial_town_walker_2"),
        (set_visitor, 14, "trp_imperial_town_walker_1"),
        (set_visitor, 15, "trp_imperial_town_walker_2"),
        (set_visitor, 16, "trp_imperial_town_walker_1"),
        (set_visitor, 17, "trp_imperial_town_walker_2"),
        (set_visitor, 18, "trp_imperial_town_walker_1"),
        (set_visitor, 19, "trp_imperial_town_walker_2"),
        (set_visitor, 20, "trp_imperial_town_walker_1"),
        (set_visitor, 21, "trp_imperial_town_walker_2"),
        (set_visitor, 22, "trp_imperial_town_walker_1"),
        (set_visitor, 23, "trp_imperial_town_walker_2"),
        (set_visitor, 24, "trp_imperial_town_walker_1"),
        (set_visitor, 25, "trp_imperial_town_walker_2"),
        (set_visitor, 26, "trp_imperial_town_walker_1"),
        (set_visitor, 27, "trp_imperial_town_walker_2"),
        (set_visitor, 28, "trp_imperial_town_walker_1"),
        (set_visitor, 29, "trp_imperial_town_walker_2"),
        (set_visitor, 30, "trp_imperial_town_walker_1"),
        (set_visitor, 31, "trp_imperial_town_walker_2"),
        (set_visitor, 32, "trp_imperial_town_walker_1"),

        (set_visitor, 35, "trp_br_angelus"),

        #50 attackers spawn
        #51 defender cav spawn (attack)
        #52 defender inf spawn (hold position)
        #53 defender archers
        #54 defender archers
        #55 defender archers
        #56 defender archers
        #57 defender archers

        (set_jump_entry, 0),
        (assign, "$talk_context", tc_town_talk),
        (jump_to_scene, "scn_black_river_fort"),
        (change_screen_mission),
        ]),
    ],),

  ("noricum_sarmatian_attack",0,
    "Soldiers cry out, a horde of Iazyges have been spotted! Archers begin to man the walls, while a small force of equites mount their horses to delay the horde. Your companions and crewmates, realizing the situation, disembark to help defend the fort. Both cives and milites quickly arm themselves and form up by the gate -- losing could spell the death of everyone...",
    "none", [],
    [

    ("option_1",[],"Fight!",
        [
    (assign, "$temp1", "mnu_noricum_sarmatian_attack_won"),
    (assign, "$temp2", "mnu_black_river_lost"),

    (modify_visitors_at_site, "scn_black_river_fort"),
    (reset_visitors),

    (set_visitor, 58, "trp_player"),

    (assign, ":cur_entry", 58), #add player's companions
    (try_for_range, ":companion", companions_begin, companions_end),
      (main_party_has_troop,":companion"),
      (set_visitor, ":cur_entry", ":companion"),
    (try_end),

    #Defenders
    (set_visitors, 51, "trp_eques_promoti", 20), #25
    (set_visitors, 51, "trp_eques_stablesiani", 5),

    (set_visitors, 52, "trp_tiro", 20),
    (set_visitors, 52, "trp_pedes", 10),
    (set_visitors, 52, "trp_roman_civilian", 15),
    (set_visitors, 52, "trp_roman_marine", 6),

    (set_visitor, 52,  "trp_br_angelus"), #heros
    (set_visitor, 52,  "trp_br_gerontius"), #2

    (set_visitors, 53, "trp_sagittarius", 5), #20
    (set_visitors, 54, "trp_sagittarius", 5),
    (set_visitors, 55, "trp_sagittarius", 3),
    (set_visitors, 56, "trp_sagittarius", 3),
    (set_visitors, 57, "trp_sagittarius", 3),

    (set_visitors, 50, "trp_steppe_bandit", 10),
    (set_visitors, 50, "trp_steppe_rider", 70),
    (set_visitors, 50, "trp_steppe_cataphract", 10), #90

    (jump_to_scene, "scn_black_river_fort"),
    (set_jump_mission, "mt_noricum_sarmatian_attack"),
    (change_screen_mission),
      ]),
    ],),

  ("noricum_sarmatian_attack_won",0,
    "You win the holdout precious time by repelling the Iazyges, for which the tenacious defenders treat you and your weary shipmates to a long night of drinking and feasting. The following morning you receive a parting gift from Angelus - a sword wielded by his father, before resuming your voyage upriver. "
    + "Several more hours of uneventful rowing follow until at last, you reach the villa - now an uninhabitable ruin shrouded in vegetation. Fearing ghosts - your shipmates refuse to follow you inside the eerie structure, yet its elegance is not lost on you. Marveling at the fresco-adorned walls of the atrium, you contemplate a world where the bright light of Rome shines no more. Would people ever live this splendidly again?",
    "none", [],
    [

    ("option_1",[],"Continue...",
        [
	(troop_add_item, "trp_player","itm_aquincum_spatha_2",imod_masterwork), #madsci give reward, change item maybe?
        (quest_set_slot,"qst_black_river", slot_quest_current_state, 5),

        (modify_visitors_at_site,"scn_black_river_villa"),
        (reset_visitors),

        (set_visitor, 0, "trp_player"),

        (assign, ":cur_entry", 0), #add player's companions
        (try_for_range, ":companion", companions_begin, companions_end),
          (main_party_has_troop,":companion"),
          (set_visitor, ":cur_entry", ":companion"),
        (try_end),

        (set_visitor,1,"trp_br_hathus"),
        (set_jump_mission,"mt_br_abandoned_villa_visit"),
        (jump_to_scene,"scn_black_river_villa"),
        (change_screen_mission),
        ]),
    ],),

  ("black_river_villa_won",0,
    "Having dealt with the raucous Langobards, the halls of the villa fall silent. Wasting no time, you begin the arduous task of unearthing Amatus' fortune - eventually finding it beneath a yew tree in the garden. "
    + "Eyeing what must be around 50,000 siliquae in the hoard, you haul the last of it onto your vessel by sunset. As you sail downriver, you take a final glance at the crumbling villa before it disappears from the horizon - forever vanishing into the mist of time.",
    "none", [],
    [

    ("option_1",[],"Continue...",
        [
        (quest_set_slot,"qst_black_river", slot_quest_current_state, 7),
        (succeed_quest, "qst_black_river"),
        (call_script, "script_troop_add_gold", "trp_player", 50000),
        (call_script, "script_change_troop_renown", "trp_player", 15),
        (leave_encounter),
        (change_screen_return),
        ]),
    ],),

  ("black_river_lost",0, #shared for losing during any of the acts
    "Your skill is no match for the overwhelming force of the enemy, and you are stricken down in melee. Thinking you dead, they move on to slaughter your shipmates and plunder the vessel before setting it ablaze. You are tossed with the corpses into the Danuvius but cling to debris as you drift downriver, waking up on a sandbar some distance away...",
    "none", [],
    [
    ("option_1",[],"Continue...",
        [
        (call_script, "script_change_troop_renown", "trp_player", -10),
        (call_script, "script_fail_quest", "qst_black_river"),
        (call_script, "script_end_quest", "qst_black_river"),
        (leave_encounter),
        (change_screen_return),
        ]),
    ],),

#Severinus Quest
  ("severinus_asturis_1",0,
    "Off to the distance, you spot the small town of Asturis. Once a bustling town under the empire, now lies in disrepair. Despite this, many citizens still reside within the walls. "
    + "After passing through the gates, you see the citizens gathered around a man, who speaks loudly to the croud...",
    "none", [],
    [

    ("option_1",[
      ],"Listen to the man...",
        [
      (assign, "$g_severinus_quest", 2),
      (assign, "$temp1", 4),
      (assign, "$talk_context", 0),
      (set_jump_mission, "mt_conversation_generic"),
      (modify_visitors_at_site, "scn_asturis_1"),
      (reset_visitors),
      (try_for_range, ":entry", 0, 19),
          (mission_tpl_entry_set_override_flags, "mt_conversation_generic", ":entry", af_override_horse),
      (try_end),

      (set_visitor, 0, "trp_player"),

      (set_visitor, 1, "trp_severinus"),
      #objectors
      (set_visitor, 16, "trp_severinus_quest_npc_3"),
      (set_visitor, 17, "trp_severinus_quest_npc_4"),
      (set_visitor, 18, "trp_severinus_quest_npc_5"),

      #crowd
      (set_visitor, 2, "trp_roman_civilian_quest_1"),
      (set_visitor, 3, "trp_roman_civilian_quest_2"),
      (set_visitor, 4, "trp_roman_civilian_quest_1"),
      (set_visitor, 5, "trp_roman_civilian_quest_2"),
      (set_visitor, 6, "trp_roman_civilian_quest_1"),
      (set_visitor, 7, "trp_roman_civilian_quest_2"),
      (set_visitor, 8, "trp_roman_civilian_quest_1"),

      (jump_to_scene, "scn_asturis_1"),
      (change_screen_mission),

      ]),

    ],),

  ("severinus_comagenis_1",0,
    "After leaving the town of Asturis, you travel westward along the Danube, to the Roman town of Comagena. Although once a fortress for the Romans, the wall is in disrepair. "
    + "Passing through the abandoned vici outside the walls, you approach the gate and notice the guards do not seem to be of Roman origin...",
    "none", [],
    [

    ("option_1",[
      ],"Approach the gate...",
        [
      (assign, "$g_severinus_quest", 4),
      (assign, "$temp1", 4),
      (assign, "$talk_context", 0),
      (set_jump_mission, "mt_conversation_generic"),
      (modify_visitors_at_site, "scn_conversation_scene"),
      (reset_visitors),
      (try_for_range, ":entry", 0, 19),
          (mission_tpl_entry_set_override_flags, "mt_conversation_generic", ":entry", af_override_horse),
      (try_end),

      (set_visitor, 0, "trp_player"),

      (set_visitor, 16, "trp_severinus"),
      (set_visitor, 17, "trp_severinus_quest_npc_6"),

      (jump_to_scene, "scn_conversation_scene"),
      (change_screen_mission),
        ]),
    ],),

  ("severinus_comagenis_2",0,
    "Once inside the walls, you sparsley notice any townsfolk. Those who are out on the streets keep their distance. As you approach the center of the town, Severinus spots the local church, and beckons you to follow him inside... "
    + "As you enter the church, you notice many of the locals have gathered inside, seeking both spiritual and physical aid from the local clergy. Severinus finds a spot infront of the people, and begins to speak.",
    "none", [],
    [

    ("option_1",[ #where severinus is revealed to have predicted the destruction of asturis
      ],"Quietly observe the monk...",
        [
      (assign, "$g_severinus_quest", 5),
      (assign, "$temp1", 4),
      (assign, "$talk_context", 0),
      (set_jump_mission, "mt_conversation_generic"),
      (modify_visitors_at_site, "scn_comagena_church"),
      (reset_visitors),
      (try_for_range, ":entry", 0, 19),
          (mission_tpl_entry_set_override_flags, "mt_conversation_generic", ":entry", af_override_horse),
      (try_end),

      (set_visitor, 0, "trp_player"),

      (set_visitor, 1, "trp_severinus"),
      #objectors
      (set_visitor, 16, "trp_roman_civilian_quest_1"),
      (set_visitor, 17, "trp_roman_civilian_quest_2"),
      (set_visitor, 18, "trp_severinus_quest_npc_6"),
      (set_visitor, 19, "trp_severinus_quest_npc_7"),

      #crowd
      (set_visitor, 2, "trp_refugee"),
      (set_visitor, 3, "trp_refugee"),
      (set_visitor, 4, "trp_refugee"),

      (jump_to_scene, "scn_comagena_church"),
      (change_screen_mission),

        ]),
    ],),

  ("severinus_comagenis_3",0,
    "Following the advice of the Holy man, the citizens of Comagena gather in the church, in prayer, fasting and confession. On the third day's evening, during the celebration of the Eucharist, the earth begins to shake... Earthquake! "
    + "Chaos ensues, the guards, thinking themselves under siege, flee the city and in their terror, turn on one another. Their fighting is heard until nightfall, until the last of the barbarians is killed. The citizens return into the streets, astonished at what had just happened.",
    "none", [],
    [

    ("option_1",[ #mission where the gothic troops have a pvp match, sets up next menu
      ],"Earthquake!",
        [
      (assign, "$temp1", 4),
      (assign, "$talk_context", 0),
      (set_jump_mission, "mt_conversation_generic"),
      (modify_visitors_at_site, "scn_comagena_church"),
      (reset_visitors),
      (try_for_range, ":entry", 0, 19),
          (mission_tpl_entry_set_override_flags, "mt_conversation_generic", ":entry", af_override_horse),
      (try_end),

      (set_visitor, 0, "trp_player"),

      (set_visitor, 1, "trp_severinus"),
      #objectors
      (set_visitor, 16, "trp_roman_civilian_quest_1"),
      (set_visitor, 17, "trp_roman_civilian_quest_2"),
      (set_visitor, 18, "trp_severinus_quest_npc_6"),
      (set_visitor, 19, "trp_severinus_quest_npc_7"),

      #crowd
      (set_visitor, 2, "trp_refugee"),
      (set_visitor, 3, "trp_refugee"),
      (set_visitor, 4, "trp_refugee"),

      (jump_to_scene, "scn_comagena_church"),
      (change_screen_mission),
        ]),
    ],),

  ("severinus_comagenis_4",0,
    "After joining the townspeople of Comagena in their celebrations, you and Severinus stay in town for a few days, to resupply for you next journey. "
    + "One morning while in the town square, Severinus relays to you that his next stop will be in Favianis, a village upon hearing of his exploits, wished for him to come and provide spiritual aid.",
    "none", [],
    [

    ("option_1",[
      ],"Onwards!",
        [
        (jump_to_menu, "mnu_severinus_favianis_1"),
        ]),
    ],),

  ("severinus_favianis_1",0,
    "As you travel to the town of Favianis, you join a group of starving refugees on the way. The land near the town had been stricken with a cruel famine. "
    + "As you approach the town, Severinus stops and prays for some time. He then leads you into the town's square, where a crowd gathers before him. He beckons for you to come and speak to him...",
    "none", [],
    [

    ("option_1",[
      ],"Listen to him.",
        [
        (assign, "$g_severinus_quest", 6),
        (set_jump_mission, "mt_visit_minor_town"),
        (modify_visitors_at_site, "scn_favianis"),
        (reset_visitors),
        #guards
        (set_visitor, 1, "trp_miles_primorum_noricorum"),
        (set_visitor, 2, "trp_miles_primorum_noricorum"),
        (set_visitor, 3, "trp_sagittarius"),
        (set_visitor, 4, "trp_sagittarius"),
        (set_visitor, 5, "trp_sagittarius"),
        (set_visitor, 6, "trp_miles_primorum_noricorum"),
        (set_visitor, 7, "trp_miles_primorum_noricorum"),
        (set_visitor, 8, "trp_severinus_quest_npc_1"), #npc to be found
        (set_visitor, 9, "trp_pedes"),
        (set_visitor, 10, "trp_pedes"),
        (set_visitor, 11, "trp_pedes"),
        (set_visitor, 12, "trp_severinus_quest_npc_2"),
        #villagers
        (set_visitor, 13, "trp_imperial_town_walker_2"),
        (set_visitor, 14, "trp_imperial_town_walker_1"),
        (set_visitor, 15, "trp_imperial_town_walker_2"),
        (set_visitor, 16, "trp_imperial_town_walker_1"),
        (set_visitor, 17, "trp_imperial_town_walker_2"),
        (set_visitor, 18, "trp_imperial_town_walker_1"),
        (set_visitor, 19, "trp_imperial_town_walker_2"),
        (set_visitor, 20, "trp_imperial_town_walker_1"),
        (set_visitor, 21, "trp_imperial_town_walker_2"),
        (set_visitor, 22, "trp_imperial_town_walker_1"),
        (set_visitor, 23, "trp_imperial_town_walker_2"),
        (set_visitor, 24, "trp_imperial_town_walker_1"),
        (set_visitor, 25, "trp_imperial_town_walker_2"),
        (set_visitor, 26, "trp_imperial_town_walker_1"),
        (set_visitor, 27, "trp_imperial_town_walker_2"),
        (set_visitor, 28, "trp_imperial_town_walker_1"),
        (set_visitor, 29, "trp_imperial_town_walker_2"),
        (set_visitor, 30, "trp_imperial_town_walker_1"),
        (set_visitor, 31, "trp_imperial_town_walker_2"),
        (set_visitor, 32, "trp_imperial_town_walker_1"),

        (set_visitor, 35, "trp_severinus"),

        (set_jump_entry, 0),
        #(assign, "$talk_context", tc_town_talk),
        (jump_to_scene, "scn_favianis"),
        (change_screen_mission),

        ]),
    ],),

  ("severinus_favianis_2",0,
    "With Procula following, you both head back towards the town square. Severinus is preaching to the people of Favianis.",
    "none", [],
    [

    ("option_1",[
      ],"Approach Severinus.",
        [
        (assign, "$g_severinus_quest", 7),
        (assign, "$temp1", 4),
        (assign, "$talk_context", 0),
        (set_jump_mission, "mt_conversation_generic"),
        (modify_visitors_at_site, "scn_favianis"),
        (reset_visitors),
        (try_for_range, ":entry", 0, 19),
            (mission_tpl_entry_set_override_flags, "mt_conversation_generic", ":entry", af_override_horse),
        (try_end),

        (set_visitor, 0, "trp_player"),

        (set_visitor, 1, "trp_roman_civilian_quest_1"),
        (set_visitor, 12, "trp_severinus_quest_npc_2"),
        (set_visitor, 13, "trp_roman_civilian_quest_2"),
        (set_visitor, 14, "trp_severinus_quest_npc_1"),
        (set_visitor, 15, "trp_roman_civilian_quest_1"),
        (set_visitor, 16, "trp_roman_civilian_quest_2"),

        (set_visitor, 35, "trp_severinus"),

        (set_jump_entry, 0),
        (jump_to_scene, "scn_favianis"),
        (change_screen_mission),
        ]),
    ],),

  ("severinus_favianis_3",0,
    "Procula's hoard of goods were able to relieve the starving people of Favianis for several days. Once the supply was low, many townsfolk were worried what would happen when they ran out. However, unexpectedly several merchant vessels worth of food arrived from Raetia, bringing an abundance of food."
    + "The townsfolk begain to praise God with uninterrupted devotion, which carried on for several days. However, during this time, local bandits raided the lands outside of the walls of the town, taking captive both cattle and people."
    + "Many townsfolk and those effected by the attacks began to tell of the injustices Severinus. Once again beckons for you to join him in talking to the local tribune, a man by the name of Mamertinus in the local church.",
    "none", [],
    [

    ("option_1",[
      ],"Speak to Mamertinus.",
        [
      (assign, "$g_severinus_quest", 8),
      (assign, "$temp1", 4),
      (assign, "$talk_context", 0),
      (set_jump_mission, "mt_conversation_generic"),
      (modify_visitors_at_site, "scn_comagena_church"),
      (reset_visitors),
      (try_for_range, ":entry", 0, 19),
          (mission_tpl_entry_set_override_flags, "mt_conversation_generic", ":entry", af_override_horse),
      (try_end),

      (set_visitor, 0, "trp_player"),

      (set_visitor, 1, "trp_severinus"),

      (set_visitor, 16, "trp_severinus_quest_npc_2"),

      (jump_to_scene, "scn_comagena_church"),
      (change_screen_mission),
        ]),
    ],),

  ("severinus_favianis_4",0,
    "On Severinus's orders, you join Mamertinus and a small group of poorly armed soldiers. Following his directions, you come by a brook which is called Tiguntia, and there you spot a group of bandits and their camp...",
    "none", [],
    [

    ("option_1",[],"Attack!",
        [
    (assign, "$temp3", 1),
    (assign, "$temp1", "mnu_severinus_favianis_5"),
    (assign, "$temp2", "mnu_severinus_favianis_5"),

    (set_jump_mission, "mt_agrippinus_villa_fight"),
    (modify_visitors_at_site, "scn_tiguntia"),
    (reset_visitors),

    (set_visitor, 1, "trp_player"),

    (set_visitor, 1, "trp_severinus_quest_npc_2"),
    (set_visitors, 1, "trp_miles_primorum_noricorum", 15),
    (set_visitors, 1, "trp_pedes", 6),

    (set_visitors, 4, "trp_brigand", 8),
    (set_visitors, 4, "trp_robber", 10),

    (jump_to_scene, "scn_tiguntia"),
    (change_screen_mission),
      ]),
    ],),


  ("severinus_favianis_5",0,
    "The surviving bandits flee, as you and Mamertinus's men celebrate their victory over them. The men quickly gather the captives, their weapons and armor, as well as what the bandits had looted, and brought them to town. As commanded, you bring the captive bandits to Severinus. Severinus quickly moves towards them giving them food and water. He then addresses the captured bandits...",
    "none", [],
    [

    ("option_1",[],"Listen...",
        [
      (assign, "$g_severinus_quest", 9),
      (assign, "$temp1", 4),
      (assign, "$talk_context", 0),
      (set_jump_mission, "mt_conversation_generic"),
      (modify_visitors_at_site, "scn_comagena_church"),
      (reset_visitors),
      (try_for_range, ":entry", 0, 19),
          (mission_tpl_entry_set_override_flags, "mt_conversation_generic", ":entry", af_override_horse),
      (try_end),

      (set_visitor, 0, "trp_player"),

      (set_visitor, 1, "trp_severinus"),

      (set_visitor, 2, "trp_looter"),
      (set_visitor, 3, "trp_looter"),
      (set_visitor, 4, "trp_looter"),

      (set_visitor, 16, "trp_severinus_quest_npc_2"),
      (set_visitor, 17, "trp_severinus_quest_npc_8"),

      (jump_to_scene, "scn_comagena_church"),
      (change_screen_mission),
      ]),

    ],),

    (   "asturis_ruins",0,
        "You arrive at an abandoned Asturis. Once a bustling town on the danube, has now been reduced to a ghost town. Its inhabitants killed or captured by a group of huns, the town now remains uninhabitated, or so you think...",
        "none",[],
        [
        ("enter",[(eq,"$asturis_ruins",0),],"Approach the town...",[
        (set_jump_mission,"mt_asturis_ruins"),
        (modify_visitors_at_site,"scn_asturis_2"),
        (reset_visitors),
        (try_begin),
            (gt,"trp_robber", 0),
            (assign,reg(0),"trp_looter"),
            (assign,reg(1),"trp_looter"),
            (assign,reg(2),"trp_robber"),
            (assign,reg(3),"trp_robber"),
          (else_try),
            (assign,reg(0),"trp_looter"),
            (assign,reg(1),"trp_looter"),
            (assign,reg(2),"trp_robber"),
            (assign,reg(3),"trp_bandit"),
        (try_end),
        (shuffle_range,0,4),
        (set_visitor,1,reg(0)),
        (set_visitor,2,reg(1)),
        (set_visitor,3,reg(2)),
        (set_visitor,4,reg(3)),
        (set_visitor,5,reg(0)),
        (set_visitor,6,"trp_brigand"),
        (set_visitor,7,"trp_brigand"),
        (set_visitor,8,reg(3)),
        (set_visitor,9,reg(0)),
        (set_visitor,10,reg(1)),
        (set_visitor,11,reg(2)),
        (set_visitor,12,reg(3)),
        (set_visitor,13,"trp_brigand"),
        (set_visitor,14,"trp_brigand"),
        (set_visitor,15,reg(2)),
        (set_visitor,16,"trp_bandit"),
        (set_visitor,17,reg(2)),
        (set_visitor,18,reg(3)),
        (set_visitor,19,reg(0)),
        (set_visitor,20,reg(1)),
        (set_visitor,21,reg(2)),
        (set_visitor,22,reg(3)),
        (set_visitor,23,"trp_unique_bandit_2"),
        (set_visitor,24,"trp_bandit"),

        (assign, ":cur_entry", 0), #add player's companions
        (try_for_range, ":companion", companions_begin, companions_end),
          (main_party_has_troop,":companion"),
          (set_visitor, ":cur_entry", ":companion"),
        (try_end),

        (set_jump_entry, 0),
        (scene_set_slot, "scn_asturis_2", slot_scene_visited, 1),

        (jump_to_scene,"scn_asturis_2"),
        (change_screen_mission),
        ]),
        ("leave",[],"Leave...",[(change_screen_map),]),
    ],
  ),

#Battle of Bolia
("battle_of_bolia",0,
  "Reaching the outskirts of where the coalition of Suebi, Heruli, Gepids and Scirii have encamped, you join forces with Valamir and his allies. After some time, gothic scouts have reported that the coalition forces have left their camp, and have headed towards you and your allies...",
  "none",[
    ## let allies joins
    (assign, ":counter", 0),
    (try_for_parties, ":party_no"),
      (party_is_active, ":party_no"),
      (party_stack_get_troop_id, ":leader", ":party_no", 0),

      (this_or_next|eq, ":leader", "trp_kingdom_4_lord"),
      (this_or_next|eq, ":leader", "trp_knight_4_1"),
      (eq, ":leader", "trp_knight_4_2"),
      (str_store_troop_name, s22, ":leader"),
      (display_message, "@{s22} joined the battle on your side!", message_positive),
      (party_quick_attach_to_current_battle, ":party_no", 0),
      (val_add, ":counter", 1),
    (try_end),
    (try_begin),
      (lt, ":counter", 3),
      (display_message, "@Your allies still need time to prepare, come back later.", message_alert),
    (try_end),
    (ge, ":counter", 3), # if not all allies joined player cannot start battle

    # let enemies join
    (try_for_range, ":unused", 0, 1),
      (party_add_template, "p_coalition_camp", "pt_danubian_suebi_army"),
      (party_add_template, "p_coalition_camp", "pt_heruli_army"),
      (party_add_template, "p_coalition_camp", "pt_iazyges_army"),
    (try_end),
    (party_quick_attach_to_current_battle, "p_coalition_camp", 1), #enemies

    # calculate battle variables (mainly necessary if there are also allies)
    (assign, "$g_enemy_party", "$g_encountered_party"),
    (assign, "$g_ally_party", -1),
    (call_script, "script_encounter_calculate_fit"),
    (try_begin),
      (eq, "$new_encounter", 1),
      (assign, "$new_encounter", 0),
      (assign, "$g_encounter_is_in_village", 0),
      (assign, "$g_encounter_type", 0),
      (call_script, "script_encounter_init_variables"),
      (assign, "$encountered_party_hostile", 1),
      (assign, "$encountered_party_friendly", 0),
    (try_end),
  ],[
  ("continue",[],"To battle!",[
      (quest_set_slot, "qst_battle_of_bolia", slot_quest_current_state, 2),
      (assign, "$g_battle_result", 0),
      (assign, "$g_engaged_enemy", 1),
      (assign, "$g_next_menu", "mnu_battle_of_bolia_won"),#victory menu
      (assign, "$temp4", "mnu_battle_of_bolia_lost"),#victory menu

      # as its a larger battle we should also calculate battle advantage
      (call_script, "script_calculate_battle_advantage"),
      (set_battle_advantage, reg0),

      (set_party_battle_mode),
      (set_jump_mission,"mt_lead_charge_quest"),#can be used for any quest battle
      (jump_to_scene, "scn_custom_battle_plains_5"),
      (change_screen_mission),
    ]),
]),

  ("battle_of_bolia_won",0,
    "You win!",
    "none", [],
    [
    ("option_1",[],"Continue...",
        [
        (quest_set_slot,"qst_battle_of_bolia", slot_quest_current_state, 3),
        (succeed_quest, "qst_battle_of_bolia"),
        (call_script, "script_change_troop_renown", "trp_player", 50),
        (disable_party, "p_coalition_camp"),
        (leave_encounter),
        (change_screen_return),
        ]),
    ],),

  ("battle_of_bolia_lost",0,
    "You Lose!",
    "none", [],
    [
    ("option_1",[],"Continue...",
        [
        (call_script, "script_change_troop_renown", "trp_player", -50),
        (call_script, "script_fail_quest", "qst_battle_of_bolia"),
        (disable_party, "p_coalition_camp"),
        (leave_encounter),
        (change_screen_return),
        ]),
    ],),
#abandoned silver mine
  ("abandoned_silver_mine",0,
    "Iberia was once known for its abundant silver mines, however as the years have gone by, many of the mines have dried up, leaving them abandoned and in disrepair...",
    "none",
    [],
    [
      ("explore_mine",[(eq, "$abandoned_silver_mine", 0),],"Explore the mines...",[
          (try_begin),
            (store_troop_health, ":health", "trp_player", 0), #get relative health in 1-100 range and put it into the ":health" variable
            (lt, ":health", 30),
            (val_add, ":health", 35),               #add to it the 5%
            (troop_set_health,   "trp_player", ":health"),   #set it
          (try_end),

          (set_jump_mission,"mt_abandoned_silver_mine"),
          (modify_visitors_at_site,"scn_abandoned_silver_mine"),
          (reset_visitors),

          (assign, ":cur_entry", 1),
          (try_for_range, ":companion", companions_begin, companions_end),
            (main_party_has_troop,":companion"),
            (set_visitor, ":cur_entry", ":companion"),
          (try_end),

          (set_visitor,8,"trp_bagaudae_king"),

          (set_visitor,9,"trp_forest_bandit_recruit"), #guards
          (set_visitor,10,"trp_forest_bandit_recruit"),
          (set_visitor,11,"trp_forest_bandit_recruit"),
          (set_visitor,12,"trp_forest_bandit"),
          (set_visitor,13,"trp_forest_bandit"),
          (set_visitor,14,"trp_bagaudae_footman"),
          (set_visitor,15,"trp_bagaudae_footman"),

          (set_jump_entry, 0),
          (scene_set_slot, "scn_abandoned_silver_mine", slot_scene_visited, 1),

          (jump_to_scene,"scn_abandoned_silver_mine"),
          (change_screen_mission),
    ]),

    ("leave",[],"Leave",[(leave_encounter),(change_screen_return)]),
    ]),


#MINOR FACTIONS
( "minor_faction_town",menu_text_color(0xFF000000)|mnf_disable_all_keys,
  "In the distance you see {s50}. It is the capital of the {s51}.^^{s52}^^{s49}",
  "none",[
    (try_begin),
        (eq, "$g_encountered_party", "p_dani_village"),
        (check_quest_active, "qst_haddingrs_revenge"),
        (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 37),
        (jump_to_menu, "mnu_haddingrs_revenge_final_feast"),
    (else_try),
        (eq, "$g_encountered_party", "p_dani_village"),
        (check_quest_active, "qst_haddingrs_revenge"),
        (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 29),
        (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_temp_slot_2, 1),
        (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_temp_slot_3, 1),
        (jump_to_menu, "mnu_haddingrs_revenge_camp"),
    (else_try),
        (eq, "$g_encountered_party", "p_dani_village"),
        (check_quest_active, "qst_haddingrs_revenge"),
        (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 26),
        (jump_to_menu, "mnu_haddingrs_revenge_camp"),
    (else_try),
        (eq, "$g_encountered_party", "p_dani_village"),
        (check_quest_active, "qst_haddingrs_revenge"),
        (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 10),
        (jump_to_menu, "mnu_haddingrs_revenge_guthormr_talk"),
    (else_try),
        (this_or_next|eq, "$g_encountered_party", "p_augundzi_village"),
        (eq, "$g_encountered_party", "p_dani_village"),
        (check_quest_active, "qst_haddingrs_revenge"),
        (quest_slot_ge, "qst_haddingrs_revenge", slot_quest_current_state, 7),
        (neg|quest_slot_ge, "qst_haddingrs_revenge", slot_quest_current_state, 28),
        (jump_to_menu, "mnu_auto_return_to_map"),
        (display_message, "@The garrison is hostile towards you. You are not allowed to enter.", message_alert),
    (else_try),
        (eq, "$g_encountered_party", "p_dani_village"),
        (check_quest_active, "qst_haddingrs_revenge"),
        (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 4),
        (jump_to_menu, "mnu_haddingrs_revenge_escape"),
    (else_try),
        (eq, "$g_encountered_party", "p_dani_village"),
        (check_quest_active, "qst_haddingrs_revenge"),
        (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 3),
        # (leave_encounter),
        (jump_to_menu, "mnu_haddingrs_revenge_imprisoned"),
    (try_end),

    (try_begin),
        (eq, "$g_encountered_party", "p_dani_village"),
        (neg|check_quest_active, "qst_finnsburh_quest_2"),
        (neg|check_quest_active, "qst_haddingrs_revenge"),
        (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 0),
        (quest_slot_eq, "qst_finnsburh_quest_2", slot_quest_current_state, 12),
        (troop_slot_ge, "trp_augundzi_king", slot_troop_met, 1),
        (quest_get_slot, ":days", "qst_finnsburh_quest_2", slot_quest_dont_give_again_period),
        (ge, ":days", 1),
        (store_current_day, ":cur_day"),
        (ge, ":cur_day", ":days"),
        (jump_to_menu,"mnu_haddingrs_revenge_meeting_guthormr"),
    (try_end),

    (try_begin),
        (check_quest_active, "qst_ernak_quest"),
        (quest_slot_eq, "qst_ernak_quest", slot_quest_current_state, 1),
        (try_begin),
            (quest_slot_eq, "qst_ernak_quest", slot_quest_target_onoguroi, 1),
            (eq, "$g_encountered_party", "p_onoguroi_village"),
            (jump_to_menu, "mnu_onoguroi_intro"),
        (else_try),
            (quest_slot_eq, "qst_ernak_quest", slot_quest_target_saraguroi, 1),
            (eq, "$g_encountered_party", "p_saraguroi_village"),
            (jump_to_menu, "mnu_saraguroi_intro"),
        (else_try),
            (quest_slot_eq, "qst_ernak_quest", slot_quest_target_kutriguroi, 1),
            (eq, "$g_encountered_party", "p_kutriguroi_village"),
            (jump_to_menu, "mnu_kutriguroi_intro"),
        (else_try),
            (quest_slot_eq, "qst_ernak_quest", slot_quest_target_kutriguroi, 3),
            (eq, "$g_encountered_party", "p_kutriguroi_village"),
            (jump_to_menu, "mnu_kutriguroi_victory"),
        (try_end),
    (try_end),

    (str_clear, s49),
    (try_begin),
        (check_quest_active, "qst_finnsburh_quest_2"),
        (eq, "$g_encountered_party", "p_dani_village"),
        (try_begin),
            (quest_slot_eq, "qst_finnsburh_quest_2", slot_quest_current_state, 1),
            (str_store_string, s49, "@The Dani are currently gathering forces to attack Finn's hall. New ships are built and old ones repaired. Spears, swords and axes are sharpened and the shields, helmets and armours are polished."),
        (else_try),
            (quest_slot_eq, "qst_finnsburh_quest_2", slot_quest_current_state, 2),
            (str_store_string, s49, "@The preparations of the Dani are over. A sizeable fleet is waiting at the shore, ready to disembark. You see that also the Juti king and his warband has joined the forces."),
        (try_end),
    (try_end),
    (try_begin), #check for quest
        (check_quest_active, "qst_finnsburh_quest"),
        (quest_slot_eq, "qst_finnsburh_quest", slot_quest_current_state, 4),
        (jump_to_menu, "mnu_finnsburg_quest_6"),
    (else_try),
        (check_quest_active, "qst_finnsburh_quest"),
        (this_or_next|quest_slot_eq, "qst_finnsburh_quest", slot_quest_current_state, 7),
        (this_or_next|quest_slot_eq, "qst_finnsburh_quest", slot_quest_current_state, 8),
        (this_or_next|quest_slot_eq, "qst_finnsburh_quest", slot_quest_current_state, 9),
        (this_or_next|quest_slot_eq, "qst_finnsburh_quest", slot_quest_current_state, 10),
        (quest_slot_eq, "qst_finnsburh_quest", slot_quest_current_state, 11),
        (jump_to_menu, "mnu_finnsburg_quest_8"),
    (try_end),

    (try_begin), #first checks if the party has been burned
	      (eq, "$g_encountered_party_faction", "fac_neutral"),
        (jump_to_menu, "mnu_settlement_burned"),
    (try_end),

    (try_begin), #first checks if the party has been sacked
        (party_slot_eq, "$g_encountered_party", slot_party_been_sacked, 1),
        (jump_to_menu, "mnu_settlement_looted"),
    (try_end),

    (assign, "$current_town","$g_encountered_party"),
    (store_faction_of_party, ":fac", "$g_encountered_party"),
    (str_store_faction_name, s51, ":fac"),

    (try_begin),
        (party_get_slot, ":center_lord", "$current_town", slot_town_lord),
        (ge, ":center_lord", 0),
        (set_fixed_point_multiplier, 100),
        (position_set_x, pos0, 70),
        (position_set_y, pos0, 5),
        (position_set_z, pos0, 75),
        (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", ":center_lord", pos0),
    (try_end),

    (str_store_party_name, s50, "$g_encountered_party"),
    (str_clear, s52),
    (try_begin),
        (store_relation, ":faction_relation", ":fac", "fac_player_supporters_faction"),
        (lt, ":faction_relation", 0),
        (str_store_string, s52, "@The {s51} are hostile to you."),
    (try_end),
    (try_begin),
        (faction_slot_eq, "$g_encountered_party_faction", slot_faction_player_tributary, 1),
        (str_store_string, s52, "@The {s51} are a tributary of you. You may hire new troops here."),
    (try_end),
  ],[
  ("sneak_into",
  [(store_faction_of_party, ":encountered_faction", "$g_encountered_party"),
   (store_relation, ":faction_relation", ":encountered_faction", "fac_player_supporters_faction"),
  (lt, ":faction_relation", 0),
    (party_get_slot, ":scene", "$g_encountered_party",slot_town_center),
(gt, ":scene", 0), #madsci
(try_begin),
(party_get_icon, ":icon", "$g_encountered_party"),
(this_or_next|eq, ":icon", "icon_ship"),
(this_or_next|eq, ":icon", "icon_steppe_lord"),
(eq, ":icon", "icon_nomad_camp"),
(str_store_string, s11, "@camp"),
(else_try),
(str_store_string, s11, "@town"),
(try_end),
(try_begin), #dont do this if in water
(party_get_current_terrain, ":terrain", "$g_encountered_party"),
(this_or_next|eq, ":terrain", rt_deep_water),
(this_or_next|eq, ":terrain", rt_bridge),
(this_or_next|eq, ":terrain", rt_river),
(eq, ":terrain", rt_water),
(disable_menu_option),
(try_end),
  ],
    "Sneak into the {s11}.",
  [
    (store_faction_of_party, ":fac", "$g_encountered_party"),

    (faction_get_slot, ":troop_1", ":fac", slot_faction_tier_1_troop), #skirm
    (faction_get_slot, ":troop_2", ":fac", slot_faction_tier_2_troop), #inf
    (faction_get_slot, ":troop_3", ":fac", slot_faction_tier_3_troop), #cav/noble
    (faction_get_slot, ":walker_1", ":fac", slot_faction_tier_4_troop), #townwalker 1
    (faction_get_slot, ":walker_2", ":fac", slot_faction_tier_5_troop), #townwalker 2
    (faction_get_slot, ":merchant_1", ":fac", slot_faction_prison_guard_troop), #goods merchant
    (faction_get_slot, ":merchant_2", ":fac", slot_faction_castle_guard_troop), #gear merchant
    (faction_get_slot, ":leader", ":fac", slot_faction_leader),

#masci failsafes needed, otherwise the game will spawn clones of the player
(try_begin),
(le, ":troop_1", 0),
(assign, ":troop_1", "trp_manhunter"),
(try_end),
(try_begin),
(le, ":troop_2", 0),
(assign, ":troop_2", "trp_manhunter"),
(try_end),
(try_begin),
(le, ":troop_3", 0),
(assign, ":troop_3", "trp_manhunter"),
(try_end),
(try_begin),
(le, ":walker_1", 0),
(assign, ":walker_1", "trp_manhunter"),
(try_end),
(try_begin),
(le, ":walker_2", 0),
(assign, ":walker_2", "trp_manhunter"),
(try_end),
(try_begin),
(le, ":merchant_2", 0),
(assign, ":merchant_2", "trp_manhunter"),
(try_end),
(try_begin),
(le, ":merchant_1", 0),
(assign, ":merchant_1", "trp_manhunter"),
(try_end),
(try_begin),
(le, ":leader", 0),
(assign, ":leader", "trp_manhunter"),
(try_end),


    (party_get_slot, ":scene", "$g_encountered_party",slot_town_center),
    (set_jump_mission, "mt_visit_minor_town"),
    (modify_visitors_at_site, ":scene"),
    (reset_visitors),
    #guards
    (set_visitor, 1, ":troop_2"),
    (set_visitor, 2, ":troop_2"),
    (set_visitor, 3, ":troop_2"),
    (set_visitor, 4, ":troop_2"),
    (set_visitor, 5, ":troop_2"),
    (set_visitor, 6, ":troop_1"),
    (set_visitor, 7, ":troop_1"),
    (set_visitor, 8, ":troop_1"),
    (set_visitor, 9, ":troop_3"), #comitatus
    (set_visitor, 10, ":troop_3"),
    (set_visitor, 11, ":troop_3"),
    (set_visitor, 12, ":troop_3"),
    #villagers
    (set_visitor, 13, ":walker_2"),
    (set_visitor, 14, ":walker_1"),
    (set_visitor, 15, ":walker_2"),
    (set_visitor, 16, ":walker_1"),
    (set_visitor, 17, ":walker_2"),
    (set_visitor, 18, ":walker_1"),
    (set_visitor, 19, ":walker_2"),
    (set_visitor, 20, ":walker_1"),
    (set_visitor, 21, ":walker_2"),
    (set_visitor, 22, ":walker_1"),
    (set_visitor, 23, ":walker_2"),
    (set_visitor, 24, ":walker_1"),
    (set_visitor, 25, ":walker_2"),
    (set_visitor, 26, ":walker_1"),
    (set_visitor, 27, ":walker_2"),
    (set_visitor, 28, ":walker_1"),
    (set_visitor, 29, ":walker_2"),
    (set_visitor, 30, ":walker_1"),
    (set_visitor, 31, ":walker_2"),
    (set_visitor, 32, ":walker_1"),

    (set_visitor, 33, ":merchant_1"),
    (set_visitor, 34, ":merchant_2"),

    (set_visitor, 35, ":leader"),

    (assign, "$talk_context", tc_town_talk),
    (jump_to_scene, ":scene"),
    (mission_tpl_entry_set_override_flags, "mt_visit_minor_town", 0, af_override_everything),
    (mission_tpl_entry_add_override_item, "mt_visit_minor_town", 0, "itm_roman_peasant_tunic_10"),
    (mission_tpl_entry_add_override_item, "mt_visit_minor_town", 0, "itm_roman_civilian_hood_closed_3"),
    (mission_tpl_entry_add_override_item, "mt_visit_minor_town", 0, "itm_wrapping_boots"),
    (set_jump_entry, 0),
    (change_screen_mission),
  ]),

  ("attack_town",[
    (neg|faction_slot_eq, "$g_encountered_party_faction", slot_faction_player_tributary, 1),
    (assign, reg50, 0),
    (try_begin),
      (check_quest_active, "qst_finnsburh_quest_2"),
      (this_or_next|eq, "$g_encountered_party", "p_frisian_village"),
      (eq, "$g_encountered_party", "p_dani_village"),
      (assign, reg50, 1),
    (else_try),
      (check_quest_active, "qst_haddingrs_revenge"),
      (this_or_next|eq, "$g_encountered_party", "p_frisian_village"),
      (eq, "$g_encountered_party", "p_dani_village"),
      (assign, reg50, 1),
    (try_end),
    (eq, reg50, 0),
    (try_begin),
      (party_get_icon, ":icon", "$g_encountered_party"),
      (this_or_next|eq, ":icon", "icon_ship"),
      (this_or_next|eq, ":icon", "icon_steppe_lord"),
      (eq, ":icon", "icon_nomad_camp"),
      (str_store_string, s11, "@camp"),
    (else_try),
      (str_store_string, s11, "@town"),
    (try_end),
    (try_begin), #dont do this if in water
      (party_get_current_terrain, ":terrain", "$g_encountered_party"),
      (this_or_next|eq, ":terrain", rt_deep_water),
      (this_or_next|eq, ":terrain", rt_bridge),
      (this_or_next|eq, ":terrain", rt_river),
      (eq, ":terrain", rt_water),
      (disable_menu_option),
    (try_end),
    (try_begin), #dont let the player attack if the player is unable to fight due to being wounded
      (troop_is_wounded, "trp_player"),
      (disable_menu_option),
      (str_store_string, s11, "@{s11}. (you are wounded)"),
    (try_end),
  ],"Attack the {s11}.",[
    (try_begin), #madsci if this is a moving camp it will stop when attacked
      (party_get_icon, ":icon", "$g_encountered_party"),
      (eq, ":icon", "icon_steppe_lord"), #the camp is on the move
      (party_set_icon, "$g_encountered_party", "icon_nomad_camp"),
      (party_set_ai_behavior, "$g_encountered_party", ai_bhvr_hold),
      (party_set_flags, "$g_encountered_party", pf_always_visible, 1),
      (party_set_flags, "$g_encountered_party", pf_is_static, 1),
      (party_set_flags, "$g_encountered_party", pf_quest_party, 0),
    (try_end),
    # (try_begin),
    #     (call_script, "script_party_count_members_with_full_health", "p_main_party"), #player must have 100 troops fit for battle, ie not injured
    #     (gt, reg0, 100),
    (party_set_morale, "$g_encountered_party", 100),#enemy has high morale
    (jump_to_menu, "mnu_attack_minor_town"),
    (faction_get_slot, ":troop", "$g_encountered_party_faction", slot_faction_leader),
    (call_script, "script_change_player_relation_with_faction", "$g_encountered_party_faction", -120),#make sure you are at war
    (call_script, "script_change_player_relation_with_troop", ":troop", -10),
    # (else_try),
    #     (display_message,"@You need to have at least 100 men fit for battle."),
    # (try_end),
  ]),

  ("king_meet",
    [(store_faction_of_party, ":encountered_faction", "$g_encountered_party"),
    (store_relation, ":faction_relation", ":encountered_faction", "fac_player_supporters_faction"),
      (lt, ":faction_relation", 0),
(party_stack_get_troop_id, ":siege_leader_id","$g_encountered_party",0), #madsci make sure there is someone you can actually talk to
(gt, ":siege_leader_id", 0),
(faction_slot_eq, ":encountered_faction", slot_faction_leader, ":siege_leader_id"),
],
       "Request to meet their king.",
      [(call_script, "script_get_meeting_scene"),
      (assign, ":meeting_scene", reg0),
      (modify_visitors_at_site,":meeting_scene"),
      (reset_visitors),
      (set_visitor,0,"trp_player"),
      (party_stack_get_troop_id, ":siege_leader_id","$g_encountered_party",0),
      (party_stack_get_troop_dna,":siege_leader_dna","$g_encountered_party",0),
      (set_visitor,17,":siege_leader_id",":siege_leader_dna"),
      (set_jump_mission,"mt_conversation_encounter"),
      (jump_to_scene,":meeting_scene"),
      (assign, "$talk_context", tc_siege_commander),
      (change_screen_map_conversation, ":siege_leader_id"),
  ]),


  ("recruit_minor_town",[(is_between, "$g_encountered_party",minor_towns_begin, minor_towns_end),
    (store_faction_of_party, ":encountered_faction", "$g_encountered_party"),
    (store_relation, ":faction_relation", ":encountered_faction", "fac_player_supporters_faction"),
    (this_or_next|ge, ":faction_relation", 30),
    (faction_slot_eq, "$g_encountered_party_faction", slot_faction_player_tributary, 1),
    ]
    ,"Recruit Volunteers.",
    [
      (assign, "$temp_troop", -1),
      (assign, reg43, 1),
      (assign, "$temp4", 1),
      (start_presentation, "prsnt_barracks"),
    ]),

  ("minor_town_visit",
    [(store_faction_of_party, ":encountered_faction", "$g_encountered_party"),
    (store_relation, ":faction_relation", ":encountered_faction", "fac_player_supporters_faction"),
    (ge, ":faction_relation", 0),
(party_get_slot, ":scene", "$g_encountered_party",slot_town_center), #madsci make sure valid scene exists
(gt, ":scene", 0),
(try_begin),
(party_get_icon, ":icon", "$g_encountered_party"),
(this_or_next|eq, ":icon", "icon_ship"),
(this_or_next|eq, ":icon", "icon_steppe_lord"),
(eq, ":icon", "icon_nomad_camp"),
(str_store_string, s11, "@camp"),
(else_try),
(str_store_string, s11, "@town"),
(try_end),
(try_begin), #dont do this if in water
(party_get_current_terrain, ":terrain", "$g_encountered_party"),
(this_or_next|eq, ":terrain", rt_deep_water),
(this_or_next|eq, ":terrain", rt_bridge),
(this_or_next|eq, ":terrain", rt_river),
(eq, ":terrain", rt_water),
(disable_menu_option),
(try_end),
],
       "Visit the {s11}.",[
    (store_faction_of_party, ":fac", "$g_encountered_party"),
    (faction_get_slot, ":troop_1", ":fac", slot_faction_tier_1_troop), #skirm
    (faction_get_slot, ":troop_2", ":fac", slot_faction_tier_2_troop), #inf
    (faction_get_slot, ":troop_3", ":fac", slot_faction_tier_3_troop), #cav/noble
    (faction_get_slot, ":walker_1", ":fac", slot_faction_tier_4_troop), #townwalker 1
    (faction_get_slot, ":walker_2", ":fac", slot_faction_tier_5_troop), #townwalker 2
    (faction_get_slot, ":merchant_1", ":fac", slot_faction_prison_guard_troop), #goods merchant
    (faction_get_slot, ":merchant_2", ":fac", slot_faction_castle_guard_troop), #gear merchant
    (faction_get_slot, ":leader", ":fac", slot_faction_leader),

#masci failsafes needed, otherwise the game will spawn clones of the player
(try_begin),
(le, ":troop_1", 0),
(assign, ":troop_1", "trp_manhunter"),
(try_end),
(try_begin),
(le, ":troop_2", 0),
(assign, ":troop_2", "trp_manhunter"),
(try_end),
(try_begin),
(le, ":troop_3", 0),
(assign, ":troop_3", "trp_manhunter"),
(try_end),
(try_begin),
(le, ":walker_1", 0),
(assign, ":walker_1", "trp_manhunter"),
(try_end),
(try_begin),
(le, ":walker_2", 0),
(assign, ":walker_2", "trp_manhunter"),
(try_end),
(try_begin),
(le, ":merchant_2", 0),
(assign, ":merchant_2", "trp_manhunter"),
(try_end),
(try_begin),
(le, ":merchant_1", 0),
(assign, ":merchant_1", "trp_manhunter"),
(try_end),
(try_begin),
(le, ":leader", 0),
(assign, ":leader", "trp_manhunter"),
(try_end),

    (party_get_slot, ":scene", "$g_encountered_party",slot_town_center),
    (set_jump_mission, "mt_visit_minor_town"),
    (modify_visitors_at_site, ":scene"),
    (reset_visitors),
    #guards
    (set_visitor, 1, ":troop_2"),
    (set_visitor, 2, ":troop_2"),
    (set_visitor, 3, ":troop_2"),
    (set_visitor, 4, ":troop_2"),
    (set_visitor, 5, ":troop_2"),
    (set_visitor, 6, ":troop_1"),
    (set_visitor, 7, ":troop_1"),
    (set_visitor, 8, ":troop_1"),
    (set_visitor, 9, ":troop_3"), #comitatus
    (set_visitor, 10, ":troop_3"),
    (set_visitor, 11, ":troop_3"),
    (set_visitor, 12, ":troop_3"),
    #villagers
    (set_visitor, 13, ":walker_2"),
    (set_visitor, 14, ":walker_1"),
    (set_visitor, 15, ":walker_2"),
    (set_visitor, 16, ":walker_1"),
    (set_visitor, 17, ":walker_2"),
    (set_visitor, 18, ":walker_1"),
    (set_visitor, 19, ":walker_2"),
    (set_visitor, 20, ":walker_1"),
    (set_visitor, 21, ":walker_2"),
    (set_visitor, 22, ":walker_1"),
    (set_visitor, 23, ":walker_2"),
    (set_visitor, 24, ":walker_1"),
    (set_visitor, 25, ":walker_2"),
    (set_visitor, 26, ":walker_1"),
    (set_visitor, 27, ":walker_2"),
    (set_visitor, 28, ":walker_1"),
    (set_visitor, 29, ":walker_2"),
    (set_visitor, 30, ":walker_1"),
    (set_visitor, 31, ":walker_2"),
    (set_visitor, 32, ":walker_1"),

    (set_visitor, 33, ":merchant_1"),
    (set_visitor, 34, ":merchant_2"),

    (set_visitor, 35, ":leader"),
    (try_begin),
        (eq, "$g_encountered_party", "p_iazyges_village"),
        (troop_slot_eq, "trp_npc25", slot_troop_occupation, slto_inactive), #babai
	(neg|troop_slot_eq, "trp_npc25", slot_troop_playerparty_history, pp_history_scattered),
	(neg|main_party_has_troop, "trp_npc25"),
        (set_visitor, 42, "trp_npc25"),
    (try_end),

    (try_begin),
        (neg|check_quest_active, "qst_finnsburh_quest"),
        (neg|check_quest_active, "qst_finnsburh_quest_2"),
        (eq, "$g_encountered_party", "p_dani_village"),
        (set_visitor, 42, "trp_dani_guthormr"),
        (set_visitor, 43, "trp_dani_haddingr"),
    (try_end),

    (try_begin),
        (neg|check_quest_active, "qst_finnsburh_quest"),
        (neg|check_quest_active, "qst_finnsburh_quest_2"),
        (neg|quest_slot_ge, "qst_finnsburh_quest_2", slot_quest_current_state, 3),
        (eq, "$g_encountered_party", "p_frisian_village"),
        (set_visitor, 48, "trp_finn_aethelbald"),
        (set_visitor, 47, "trp_finn_garulf"),
    (try_end),

    (try_begin),
        (eq, "$g_encountered_party", "p_dani_village"),
        (troop_slot_eq, "trp_dani_hengest", slot_troop_occupation, slto_inactive),# hangest is not a lord yet
        (quest_slot_eq, "qst_finnsburh_quest", slot_quest_current_state, 0),
        (set_visitor, 36, "trp_dani_hocing"),
        (set_visitor, 37, "trp_dani_sigeferth"),
        (set_visitor, 38, "trp_dani_eaha"),
        (set_visitor, 39, "trp_dani_hengest"),
        (set_visitor, 40, "trp_dani_ordlaf"),
        (set_visitor, 41, "trp_dani_guthlaf"),
    (else_try),
        (eq, "$g_encountered_party", "p_dani_village"),
        (check_quest_active, "qst_finnsburh_quest_2"),
        (quest_slot_eq, "qst_finnsburh_quest_2", slot_quest_current_state, 2),
        # (set_visitor, 36, "trp_dani_hocing"),#dead
        # (set_visitor, 37, "trp_dani_sigekferth"),#dead
        # (set_visitor, 38, "trp_dani_eaha"),#dead
        (set_visitor, 42, "trp_dani_hengest"),
        (set_visitor, 43, "trp_dani_ordlaf"),
        (set_visitor, 44, "trp_dani_guthlaf"),
        (set_visitor, 45, "trp_dani_guthormr"),
        (set_visitor, 46, "trp_dani_haddingr"),
        (set_visitor, 47, "trp_kingdom_19_lord"),#the juti king
    (try_end),
    #50 attackers spawn
    #51 defender gathering point
    #52 defender inf spawn
    #53 defender archers
    #54 defender archers
    #55 defender archers

    (set_jump_entry, 0),
    (assign, "$talk_context", tc_town_talk),
    (jump_to_scene, ":scene"),
    (change_screen_mission),
        ]),

    ("castle_wait",
    [
      (ge, "$g_encountered_party_relation", 0),
      (assign, ":can_rest", 1),
      (str_clear, s1),
      (try_begin),
        (party_get_num_companions, ":num_men", "p_main_party"),
        (store_div, reg1, ":num_men", 4),
        (val_add, reg1, 1),
        (str_store_string, s1, "@ ({reg1} siliquae per night)"),
        (store_troop_gold, ":gold", "trp_player"),
        (lt, ":gold", reg1),
        (assign, ":can_rest", 0),
      (try_end),
      (eq, ":can_rest", 1),
(try_begin),
(party_get_icon, ":icon", "$g_encountered_party"),
(this_or_next|eq, ":icon", "icon_ship"),
(eq, ":icon", "icon_steppe_lord"), #dont let the player rest here if the camp is on the move
(str_store_string, s1, "@ (the camp is on the move)"),
(disable_menu_option),
(try_end),
    ],
    "Wait here for some time{s1}.",
    [
      (assign, "$auto_enter_town", "$current_town"),
      (assign, "$g_town_visit_after_rest", 1),
      (assign, "$g_last_rest_center", "$current_town"),
      (assign, "$g_last_rest_payment_until", -1),
      (rest_for_hours_interactive, 24 * 7, 5, 0), #rest while not attackable
      (change_screen_return),
    ]),

      ("leave",[],"Leave.",[(change_screen_map),]),
    ]),


  ( "attack_minor_town",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "You order your troops to march towards the {s11}. The {s51} have noticed your advance and prepare to defend their homes...",
    "none",
    [
(try_begin),
(party_get_icon, ":icon", "$g_encountered_party"),
(this_or_next|eq, ":icon", "icon_ship"),
(this_or_next|eq, ":icon", "icon_steppe_lord"),
(eq, ":icon", "icon_nomad_camp"),
(str_store_string, s11, "@camp"),
(else_try),
(str_store_string, s11, "@town"),
(try_end),
    (str_store_faction_name, s51, "$g_encountered_party_faction"),

    (try_begin),
        (eq, "$g_encountered_party", "p_aestii_village"),
        (check_quest_active, "qst_aestii_rebel_quest"),
        (quest_slot_eq,"qst_aestii_rebel_quest",slot_quest_current_state, 3),
        (quest_get_slot, ":quest_target_party", "qst_aestii_rebel_quest", slot_quest_target_party),
        (party_quick_attach_to_current_battle, ":quest_target_party", 0),
        (display_message,"@Shvarnas and his men have joined your troops in the assault!"),
        (quest_set_slot,"qst_aestii_rebel_quest", slot_quest_current_state, 5), #for dialogue

        (modify_visitors_at_site,"scn_conversation_scene"),
        (reset_visitors),
        (set_visitor,0,"trp_player"),
        (set_visitor,11,"trp_aestii_rebel_king"),
        (set_visitor,17,"trp_aestii_king"),
        (set_jump_mission,"mt_conversation_encounter"),
        (jump_to_scene,"scn_conversation_scene"),
        (change_screen_map_conversation, "trp_aestii_king"),
    (try_end),
     ],
    [("continue",
       [],
       "Attack!",
       [
    (try_begin),
        (assign, "$g_battle_result", 0),
        (assign, "$g_engaged_enemy", 1),
        (call_script, "script_calculate_battle_advantage"),
        (set_battle_advantage, reg0),
        (set_party_battle_mode),
        (party_get_slot, ":exterior_scene", "$g_encountered_party", slot_town_center),
        (set_jump_mission,"mt_minor_village_attack"),
        (jump_to_scene, ":exterior_scene"),
        (assign, "$g_next_menu", "mnu_minor_town_fight"),
        (jump_to_menu, "mnu_battle_debrief"),
        (change_screen_mission),
    (try_end),
    ]),
  ]),


  ( "minor_town_fight",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "{s11}",
    "none",
    [
    (str_clear, s11),
    (try_begin),
       (eq, "$g_battle_result", 1),
       (eq, "$g_enemy_fit_for_battle", 0),
       (str_store_string, s11, "@You were victorious!"),
       (try_begin),
         (gt, "$g_friend_fit_for_battle", 1),
         (set_background_mesh, "mesh_pic_victory"),
       (try_end),
     (assign, "$g_next_menu", "mnu_minor_town_loot"),
     (assign, "$loot_screen_shown", 0),

     (else_try),
       (eq, "$g_battle_result", -1),
       (ge, "$g_enemy_fit_for_battle",1),
       (this_or_next|le, "$g_friend_fit_for_battle",0),
       (le, "$playerparty_postbattle_regulars", 0),
       (str_store_string, s11, "@The battle was lost. Your forces were utterly crushed."),
       (set_background_mesh, "mesh_pic_defeat"),

       (try_begin), #checks if the quest is active, to fail it
          (check_quest_active, "qst_aestii_rebel_quest"),
          (eq, "$g_encountered_party", "p_aestii_village"),
          (party_leave_cur_battle, "pt_aestii_rebel_party"),
          (remove_party, "pt_aestii_rebel_party"),
          (call_script, "script_fail_quest", "qst_aestii_rebel_quest"),
       (try_end),

     (assign, "$g_next_menu", "mnu_minor_faction_town"),

     (else_try),
       (eq, "$g_battle_result", -1),
       (str_store_string, s11, "@Your companions carry you away from the fighting."),
       (set_background_mesh, "mesh_pic_wounded"),

       (try_begin), #checks if the quest is active, to fail it
          (check_quest_active, "qst_aestii_rebel_quest"),
          (eq, "$g_encountered_party", "p_aestii_village"),
          (party_leave_cur_battle, "pt_aestii_rebel_party"),
          (remove_party, "pt_aestii_rebel_party"),
          (call_script, "script_fail_quest", "qst_aestii_rebel_quest"),
       (try_end),

     (assign, "$g_next_menu", "mnu_minor_faction_town"),

     (else_try),
       (eq, "$g_battle_result", 1),
       (str_store_string, s11, "@You have defeated the enemy."),
       (try_begin),
         (gt, "$g_friend_fit_for_battle", 1),
         (set_background_mesh, "mesh_pic_victory"),
       (try_end),
     (assign, "$g_next_menu", "mnu_minor_town_loot"),
     (assign, "$loot_screen_shown", 0),

     (else_try),
       (eq, "$g_battle_result", 0),
       (str_store_string, s11, "@You have retreated from the fight."),
      (assign, "$g_next_menu", "mnu_minor_faction_town"),
     (try_end),
    ],
    [("continue",
       [(jump_to_menu, "$g_next_menu"),],
       "Continue ...",
       []),
  ]),

  ( "minor_town_loot",mnf_disable_all_keys,
    "The {s11} is in your hand. What do you want to do?",
    "none",
    [
(try_begin),
(party_get_icon, ":icon", "$g_encountered_party"),
(this_or_next|eq, ":icon", "icon_ship"),
(this_or_next|eq, ":icon", "icon_steppe_lord"),
(eq, ":icon", "icon_nomad_camp"),
(str_store_string, s11, "@camp"),
(else_try),
(str_store_string, s11, "@town"),
(try_end),
      (set_background_mesh, "mesh_pic_victory"),

      (try_begin), #given to the player if they defeat the mordens for the first time
        (eq, "$g_encountered_party", "p_morden_village"),
        (eq, "$borok_spatha", 0),
        (troop_add_item, "trp_player", "itm_borok_spatha",0),
        (assign, "$borok_spatha", 1),
      (try_end),
    ],
    [

      ("continue_aestii_quest",[
        (eq, "$g_encountered_party", "p_aestii_village"),
        (check_quest_active, "qst_aestii_rebel_quest"),
        ],"Install Shvarnas as king",
        [
      (faction_set_slot, "fac_minor_aestii", slot_faction_leader, "trp_aestii_rebel_king"),
      (party_add_leader, "p_aestii_village", "trp_aestii_rebel_king"),
      (party_set_slot, "p_aestii_village", slot_town_lord, "trp_aestii_rebel_king"),
      (quest_set_slot,"qst_aestii_rebel_quest", slot_quest_current_state, 7), #for dialogue
      (faction_set_slot, "fac_minor_aestii", slot_faction_reinforcements_a, "pt_aestii_party_2"), #changes the template

      (try_for_range, ":unused", 0, 9), #readd troops to garrison
        (party_add_template, "p_aestii_village", "pt_aestii_party_2"),
      (try_end),

      (faction_get_slot, ":king", "$g_encountered_party_faction", slot_faction_leader),
      (call_script, "script_change_player_relation_with_troop", ":king", 30),
      (call_script, "script_set_player_relation_with_faction", "$g_encountered_party_faction", 50),
      (call_script, "script_change_troop_renown", "trp_player", 50),
      (quest_get_slot, ":quest_target_party", "qst_aestii_rebel_quest", slot_quest_target_party),
	(try_begin),
	(gt, ":quest_target_party", 0), #madsci make sure its a valid party
	(party_is_active, ":quest_target_party"),
      	(party_leave_cur_battle, ":quest_target_party"),
      	(remove_party, ":quest_target_party"),
	(try_end),

      (assign, "$talk_context", 0),
      (set_jump_mission, "mt_conversation_generic"),
      (modify_visitors_at_site, "scn_aestii_town"),

      (reset_visitors),
      (try_for_range, ":entry", 34, 38),
          (mission_tpl_entry_set_override_flags, "mt_conversation_generic", ":entry", af_override_horse|af_override_weapons|af_override_head),
      (try_end),

      (set_visitor, 35, "trp_aestii_rebel_king"), #new king
      (set_visitor, 36, "trp_aestii_king"), #former king, now prisoner
      (set_visitor, 37, "trp_player"), #player
      (jump_to_scene, "scn_aestii_town"),
      (change_screen_mission),
      #(change_screen_map),
      ]),

      ("continue_tributary",[
        (assign, ":block", 0),
        (try_begin),
          (eq, "$g_encountered_party", "p_aestii_village"),
          (check_quest_active, "qst_aestii_rebel_quest"),
          (assign, ":block", 1),
        (try_end),
        (eq, ":block", 0),
        ],"Establish a tributary state",
        [
      (str_store_troop_name, s40, "trp_player"),
      (add_faction_note_from_sreg, "$g_encountered_party_faction", 3, "@They are a tributary of {s40}.", 0),
      (faction_get_slot, ":king", "$g_encountered_party_faction", slot_faction_leader),
      (call_script, "script_change_player_relation_with_troop", ":king", -20),
      (call_script, "script_set_player_relation_with_faction", "$g_encountered_party_faction", 0),
      (faction_set_slot, "$g_encountered_party_faction", slot_faction_player_tributary, 1),
      (call_script, "script_change_troop_renown", "trp_player", 10),
	(try_begin),
	(is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
        (store_relation, ":reln", "$g_encountered_party_faction", "$players_kingdom"),
        (lt, ":reln", 0),
	(set_relation, "$g_encountered_party_faction", "$players_kingdom", 0), #make neutral towards the players faction if subjugated
	(try_end),
	(try_for_range, ":other_faction", npc_kingdoms_begin, npc_kingdoms_end),
	(neq, "$players_kingdom", ":other_faction"),
        (store_relation, ":reln", "$g_encountered_party_faction", ":other_faction"),
        (gt, ":reln", 0),
	(set_relation, "$g_encountered_party_faction", ":other_faction", 0), #this minor is no longer someone else ally if the player subjugate them
	(try_end),
      (change_screen_map),
      ]),

      ("continue_pillage",[
        (assign, ":block", 0), #conditions to have it so these dont show up if the aestii quest is active + in the aestii settlement
        (try_begin),
          (eq, "$g_encountered_party", "p_aestii_village"),
          (check_quest_active, "qst_aestii_rebel_quest"),
          (assign, ":block", 1),
        (try_end),
        (eq, ":block", 0),
        ],"Pillage the settlement",
        [
          (jump_to_menu, "mnu_minor_town_pillage"),
      ]),

	#madsci destroy the settlement?
      ("continue_burn_and_raze",[
        (assign, ":block", 0),
        (try_begin),
          (eq, "$g_encountered_party", "p_aestii_village"),
          (check_quest_active, "qst_aestii_rebel_quest"),
          (assign, ":block", 1),
	(else_try),
	  (this_or_next|eq, "$g_encountered_party", "p_dani_village"),
          (eq, "$g_encountered_party", "p_frisian_village"),
          (this_or_next|check_quest_active, "qst_finnsburh_quest"),
          (check_quest_active, "qst_finnsburh_quest_2"),
          (assign, ":block", 1),
	(else_try),
          (check_quest_active, "qst_ernak_quest"),
	  (this_or_next|eq, "$g_encountered_party", "p_onoguroi_village"),
	  (this_or_next|eq, "$g_encountered_party", "p_saraguroi_village"),
	  (this_or_next|eq, "$g_encountered_party", "p_kutriguroi_village"),
          (eq, "$g_encountered_party", "p_sabiroi_village"),
          (assign, ":block", 1),
        (try_end),
        (eq, ":block", 0),
        ],"Burn and raze the settlement",
        [
	(str_store_party_name, s5, "$g_encountered_party"),
	(party_set_name, "$g_encountered_party", "@Ruins of {s5}"),
	(party_set_faction, "$g_encountered_party", "fac_neutral"),
	(party_set_flags, "$g_encountered_party", pf_hide_defenders, 1),
	(party_set_flags, "$g_encountered_party", pf_show_faction, 0),
	(party_set_flags, "$g_encountered_party", pf_label_medium, 0),
	(party_set_flags, "$g_encountered_party", pf_label_small, 1),
	(party_set_slot, "$g_encountered_party", slot_town_lord, -1),
	(call_script, "script_remove_hero_prisoners", "$g_encountered_party"),
	(party_clear, "$g_encountered_party"),
		(try_begin),
		(assign, ":has_settlements", 0),
			(try_for_range, ":center_no", towns_begin, minor_towns_end),
			(eq, ":has_settlements", 0),
			(neq, ":center_no", "$g_encountered_party"),
			(this_or_next|is_between, ":center_no", centers_begin, centers_end),
			(is_between, ":center_no", minor_towns_begin, minor_towns_end),
			(store_faction_of_party, ":party_faction", ":center_no"),
			(eq, ":party_faction", "$g_encountered_party_faction"),
			(assign, ":has_settlements", 1),
			(try_end),
		(eq, ":has_settlements", 0),
		(faction_set_slot, "$g_encountered_party_faction", slot_faction_state, sfs_defeated),
			(try_for_parties, ":other_party"),
			(gt, ":other_party", last_static_party),
			(store_faction_of_party, ":other_party_faction", ":other_party"),
			(eq, ":other_party_faction", "$g_encountered_party_faction"),
			(party_set_faction, ":other_party", "fac_outlaws"),
			(try_end),
			(try_begin),
			(faction_get_slot, ":faction_leader", "$g_encountered_party_faction", slot_faction_leader),
			(gt, ":faction_leader", 0),
				(try_begin),
				(troop_get_slot, ":cur_prisoner_of_party", ":faction_leader", slot_troop_prisoner_of_party),
				(is_between, ":cur_prisoner_of_party", walled_centers_begin, walled_centers_end),
				(call_script, "script_remove_troop_from_prison", ":faction_leader"),
				(party_remove_prisoners, ":cur_prisoner_of_party", ":faction_leader", 1),
				(try_end),
				(try_begin),
				(troop_slot_eq, ":faction_leader", slot_troop_prisoner_of_party, -1),
				(neg|main_party_has_troop, ":faction_leader"),
				(troop_set_slot, ":faction_leader", slot_troop_occupation, dplmc_slto_dead),
				(try_end),
				(try_begin),
				(troop_get_slot, ":leader_party", ":faction_leader", slot_troop_leaded_party),
				(gt, ":leader_party", 0),
				(party_is_active, ":leader_party"),
				(remove_party, ":leader_party"),
				(try_end),
			(try_end),
		(try_end),
	(change_screen_map),
      ]),
    ],
  ),

  ( "minor_town_pillage",mnf_disable_all_keys,
    "Your men pillage the settlement, taking all they can find. You have collected {reg7} siliquae.",
    "none",
    [
    (set_background_mesh, "mesh_pic_victory"),
    # 1.PLUNDER MONEY - based off of prosperity, more prosperous settlements will get the player more gold
    (party_get_slot, ":prosperity_factor", "$g_encountered_party", slot_town_prosperity),
    (party_get_slot, ":wealth", "$g_encountered_party", slot_town_wealth),

    (party_get_skill_level, ":looting_skill", "p_main_party", "skl_looting"),

    #if 45 * 100 = 4500 / 2 = 2250 total, greater than what the player would get from tributes
    (val_add, ":prosperity_factor", ":looting_skill"),#looting skill makes factor better
    (val_mul, ":prosperity_factor", 100), #multiplies by 100

    (val_add, ":wealth", ":prosperity_factor"),
    (val_div, ":wealth", 2),

    (try_begin),
        (lt, "$player_honor", -90),
        (val_mul, ":wealth", 15),
        (val_div, ":wealth", 10),
    (else_try),
        (lt, "$player_honor", -70),
        (val_mul, ":wealth", 14),
        (val_div, ":wealth", 10),
    (else_try),
        (lt, "$player_honor", -40),
        (val_mul, ":wealth", 13),
        (val_div, ":wealth", 10),
    (else_try),
        (lt, "$player_honor", -20),
        (val_mul, ":wealth", 12),
        (val_div, ":wealth", 10),
    (try_end),

    (troop_add_gold, "trp_player", ":wealth"),
    (assign, reg7, ":wealth"),
    (call_script, "script_change_troop_renown", "trp_player", 10),

    (party_get_slot, ":prosperity_total", "$g_encountered_party", slot_town_prosperity),
    (val_sub, ":prosperity_total", 5), #lose 5 prosperity per sack
    (party_set_slot, "$g_encountered_party", slot_town_prosperity, ":prosperity_total"),
    (party_set_slot,"$g_encountered_party", slot_party_been_sacked, 1), #has to recover for 7 days before being pillaged again
	  (party_set_extra_text, "$g_encountered_party", "@(Looted)"),
    ],

    [("continue",[],"Continue...",
        [(change_screen_map),]),
    ],),

  (
    "siege_event_test",0,
    "Select an event",
    "none",
    [

    ],
    [
      ("event04",[],"Event04",[ (jump_to_menu,"mnu_event_siege_04"),],),
      ("event04",[],"Event05",[ (jump_to_menu,"mnu_event_siege_05"),],),
      ("event04",[],"Event06",[ (jump_to_menu,"mnu_event_siege_06"),],),
      ("event04",[],"Event07",[ (jump_to_menu,"mnu_event_siege_07"),],),
      ("event04",[],"Event08",[ (jump_to_menu,"mnu_event_siege_08"),],),
      ("event04",[],"Event09",[ (jump_to_menu,"mnu_event_siege_09"),],),
      ("event04",[],"Event10",[ (jump_to_menu,"mnu_event_siege_10"),],),
      ("event04",[],"Event11",[ (jump_to_menu,"mnu_event_siege_11"),],),
      ("event04",[],"Event12",[ (jump_to_menu,"mnu_event_siege_12"),],),
      ("event04",[],"Event13",[ (jump_to_menu,"mnu_event_siege_13"),],),
      ("event04",[],"next page",[ (jump_to_menu,"mnu_siege_event_test2"),],),


  ],),
  (
    "siege_event_test2",0,
    "Select an event",
    "none",
    [    ],
    [
      ("event04",[],"Event14",[ (jump_to_menu,"mnu_event_siege_14"),],),
      ("event04",[],"Event15",[ (jump_to_menu,"mnu_event_siege_15"),],),
      ("event04",[],"Event16",[ (jump_to_menu,"mnu_event_siege_16"),],),
      ("event04",[],"Event17",[ (jump_to_menu,"mnu_event_siege_17"),],),
      ("event04",[],"Event18",[ (jump_to_menu,"mnu_event_siege_18"),],),
      ("event04",[],"Event19",[ (jump_to_menu,"mnu_event_siege_19"),],),
      ("event04",[],"Event20",[ (jump_to_menu,"mnu_event_siege_20"),],),
      ("event04",[],"Event21",[ (jump_to_menu,"mnu_event_siege_21"),],),
      ("event04",[],"Event22",[ (jump_to_menu,"mnu_event_siege_22"),],),
      ("event04",[],"Event23",[ (jump_to_menu,"mnu_event_siege_23"),],),
      ("event04",[],"next page",[ (jump_to_menu,"mnu_siege_event_test3"),],),


  ],),
  (
    "siege_event_test3",0,
    "Select an event",
    "none",
    [],
    [
      ("event04",[],"Event24",[ (jump_to_menu,"mnu_event_siege_24"),],),
      ("event04",[],"Event25",[ (jump_to_menu,"mnu_event_siege_25"),],),
      ("event04",[],"Event26",[ (jump_to_menu,"mnu_event_siege_26"),],),
      ("event04",[],"Event27",[ (jump_to_menu,"mnu_event_siege_27"),],),
      ("event04",[],"Event28",[ (jump_to_menu,"mnu_event_siege_28"),],),
      ("event04",[],"Event29",[ (jump_to_menu,"mnu_event_siege_29"),],),
  ],),


  ( "event_01",menu_text_color(0xFF000000)|mnf_disable_all_keys, #cow
    "While you and your men are travelling, you spot a lone cow, grazing in a pasture.",
    "none",
    [(set_background_mesh, "mesh_pic_cattle")],
    [
      ("choice_1_1",[(this_or_next|troop_slot_eq, "trp_player", slot_troop_religion, slot_religion_paganism),(troop_slot_eq, "trp_player", slot_troop_religion, slot_religion_roman_paganism)],"Sacrafice the animal to the gods.", #must be pagan
        [
          (display_message, "@Both the gods and your men are pleased by this action."), #increase morale + piety
          (call_script, "script_change_player_party_morale", 3),
          (val_add, "$piety", 4),
          (change_screen_return, 0),
        ]
      ),
      ("choice_1_2",[],"Kill the animal!",
        [
          (display_message, "@You and your men get to enjoy fresh beef!"),
          (troop_add_items, "trp_player","itm_cattle_meat",2),
          (call_script, "script_change_player_party_morale", 1),
          (change_screen_return, 0),
        ]
      ),
      ("choice_1_3",[],"Take it with you.",
        [
          (troop_add_item, "trp_player","itm_cow_1",0),
          (change_screen_return, 0),
        ]
      ),
      ("choice_1_4",[],"Pass by the animal and ignore it.",
        [
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_02",menu_text_color(0xFF000000)|mnf_disable_all_keys, #refugees
    "While you and your men are travelling, a group of 5 refugees approach. They ask you and your men for alms.",
    "none",
    [],
    [
      ("choice_2_1",[(store_troop_gold,":money","trp_player"),(gt,":money",499)],"Give them 500 siliquae.",
        [
          (display_message, "@The group leaves, greatful for your charity."),
          (val_add, "$piety", 3),
          (troop_remove_gold,"trp_player",500),
          (change_screen_return, 0),
        ]
      ),
      ("choice_2_2",[],"Offer them to join your party.",
        [
          (display_message, "@They are greateful for your offer, and join you and your men as followers."),
          (party_add_members, "p_main_party", "trp_refugee", 5),
          (change_screen_return, 0),
        ]
      ),
      ("choice_2_3",[],"Kill them!",
        [
          (display_message, "@The group screams in terror as your troops descent upon them. After they have perished, your men loot their corpses for what little they had..."),
          (call_script, "script_change_player_honor", -5),
          (val_sub, "$piety", 8),
          (call_script, "script_troop_add_gold", "trp_player", 110),
          (change_screen_return, 0),
        ]
      ),
      ("choice_2_4",[],"Ignore them.",
        [
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_03",menu_text_color(0xFF000000)|mnf_disable_all_keys, #huns
    "You spot a small group of huns approaching your party. They ask for your acquaintance, and wish to join you for a small fee of 300 siliquae.",
    "none",
    [],
    [
      ("choice_3_1",[(store_troop_gold,":money","trp_player"),(gt,":money",299)],"Take them in.",
        [
          (display_message, "@They gather their supplies and join your ranks."),
          (party_add_members, "p_main_party", "trp_hunnic_skirmisher", 3),
          (troop_remove_gold,"trp_player",300),
          (change_screen_return, 0),
        ]
      ),
      ("choice_3_2",[],"Attack them, they must have valuables!",
        [
          (display_message, "@Your troops kill the group, and loot their corpses. Indeed, they did have money..."),
          (call_script, "script_troop_add_gold", "trp_player", 450),
          (call_script, "script_change_player_honor", -2),
          (change_screen_return, 0),
        ]
      ),
      ("choice_3_3",[],"Ignore their request.",
        [
          (display_message, "@Disheartened, the group of huns ride away."),
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_04",menu_text_color(0xFF000000)|mnf_disable_all_keys, #scout
    "One of you scouts shows up with a bag on his back. You don't want to appear suspicious, but a fight-ready soldier would never carry such a bag. It sounds like... many heavy coins. You decide to.",
    "none",
    [],
    [
      ("choice_4_1",[],"Confiscate the bag and punish the soldier.",
        [
          (call_script, "script_troop_add_gold", "trp_player", 250),
          (call_script, "script_change_player_party_morale", -6),
          (display_message, "@The scout, who has stolen money, spreads the rumor among your men that you are greedy."),
          (change_screen_return, 0),
        ]
      ),
      ("choice_4_2",[],"Allow him to keep it. He risks his life for you, so he deserves it.",
        [
          (display_message, "@The scout hides his treasure without anyone else knowing."),
          (change_screen_return, 0),
        ]
      ),
      ("choice_4_3",[],"Force him to share the benefits with the whole army.",
        [
          (call_script, "script_change_player_party_morale", 8),
          (display_message, "@The distribution of the coins brings happiness to the rest of your men, and they think that you are a fair leader."),
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_05",menu_text_color(0xFF000000)|mnf_disable_all_keys, #poet
    "You've heard that a poet has written panegyric about your noble deeds.",
    "none",
    [
      (set_background_mesh, "mesh_pic_messenger"),
    ],
    [
      ("choice_5_1",[],"Excellent news!",
        [
          (call_script, "script_change_troop_renown", "trp_player", 3),
          (display_message, "@Your fame grows with the poet's speech, but soon he replaces your name with that of another lord who pays him."),
          (change_screen_return, 0),
        ]
      ),
      ("choice_5_2",[ (store_troop_gold, ":gold", "trp_player"),(ge, ":gold", 300),],"Reward him with 300 siliquae. Let this speech be read across the land, so all my know of your exploits.",
        [
          (troop_remove_gold, "trp_player", 300),
          (call_script, "script_change_troop_renown", "trp_player", 9),
          (display_message, "@Your fame grows higher with the panegyric."),
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_06",menu_text_color(0xFF000000)|mnf_disable_all_keys, #beggar
    "You spot a poor beggar on the road. He looks tired, cold and hungry. He looks up at you and says that if he doesn't get some money to buy food with soon, he will starve.",
    "none",
    [],
    [
      ("choice_6_1",[(store_troop_gold,":money","trp_player"),(gt,":money",49)],"Give him 50 siliquae, to buy bread at the local market.",
        [
          (display_message, "@The man thanks you, and wanders off to the nearest village to buy some bread for himself."),
          (val_add, "$piety", 1),
          (troop_remove_gold,"trp_player",50),
          (change_screen_return, 0),
        ]
      ),
      ("choice_6_2",[(store_troop_gold,":money","trp_player"),(gt,":money",199)],"Give him 200 siliquae, to buy food at the local market.",
        [
          (display_message, "@The man praises you, and before he leaves, says he will tell all of your deeds."),
          (val_add, "$piety", 2),
          (call_script, "script_change_troop_renown", "trp_player", 1),
          (troop_remove_gold,"trp_player",200),
          (change_screen_return, 0),
        ]
      ),
      ("choice_6_3",[],"How dare he even look at me? Kill him!",
        [
          (display_message, "@The man yells, but his cries are not heard. Your men kill him and find he had nothing of value to you..."),
          (call_script, "script_change_player_honor", -5),
          (val_sub, "$piety", 5),
          (change_screen_return, 0),
        ]
      ),
      ("choice_6_4",[ #must be Miaphysite or Chalcedonian (St. Martin is canonized by both groups)
        (eq, "$g_st_martin", 0),
        (this_or_next|troop_slot_eq, "trp_player", slot_troop_religion, slot_religion_christian_chalcedonian),
        (this_or_next|troop_slot_eq, "trp_player", slot_troop_religion, slot_religion_christian_miaphysite),
        (troop_slot_eq, "trp_player", slot_troop_religion, slot_religion_christian_nestorian),
        (ge, "$piety", 10),
        ],"Gift him your cloak, and feed him some of your food.",
        [
          (display_message, "@The man thanks you, and goes on his way. Later, you experience a dream, where Christ appears to you. You wake up, and find a strange axe next to you..."),
          (val_add, "$piety", 5),
          (assign, "$g_st_martin", 1),
          (troop_add_item, "trp_player","itm_st_martin_axe",0),
          (change_screen_return, 0),
        ]
      ),
      ("choice_6_5",[],"Ignore him.",
        [
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_07",menu_text_color(0xFF000000)|mnf_disable_all_keys, #monks
    "While you and your men are travelling, you pass a group of Chalcedonian Christian monks.",
    "none",
    [],
    [
      ("choice_7_1",[(store_troop_gold,":money","trp_player"),(gt,":money",499)],"Give them 500 siliquae.",
        [
          (display_message, "@The group leaves, greatful for your charity."),
          (call_script, "script_change_player_relation_with_faction", "fac_roman_christians", 2),
          (val_add, "$piety", 2),
          (troop_remove_gold,"trp_player",500),
          (change_screen_return, 0),
        ]
      ),
      ("choice_7_2",[(store_troop_gold,":money","trp_player"),(gt,":money",999)],"Give them 1000 siliquae.",
        [
          (display_message, "@The group leaves, greatful for your charity."),
          (call_script, "script_change_player_relation_with_faction", "fac_roman_christians", 5),
          (val_add, "$piety", 5),
          (troop_remove_gold,"trp_player",1000),
          (change_screen_return, 0),
        ]
      ),
      ("choice_7_3",[],"Kill them!",
        [
          (display_message, "@The group of monks scream and pray as your troops attack them, alas they are no match. Your men find some money on their corpses."),
          (call_script, "script_change_player_honor", -5),
          (call_script, "script_change_player_relation_with_faction", "fac_roman_christians", -5),
          (try_begin),
            (troop_slot_eq, "trp_player", slot_troop_religion, slot_religion_christian_chalcedonian),
            (val_sub, "$piety", 10), #only removes piety for christians
          (try_end),
          (call_script, "script_troop_add_gold", "trp_player", 600),
          (change_screen_return, 0),
        ]
      ),
      ("choice_7_4",[],"Leave them be.",
        [
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_08",mnf_scale_picture|menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "During a break, some of your men, drunk, start to fight for the last drink of wine. Both draw their weapons and appear ready to kill.",
    "none",
    [
      (set_background_mesh, "mesh_pic_camp"),
    ],
    [
      ("choice_8_1",[],"Allow them to fight for the amusement of the rest of your men.",
        [
          (call_script, "script_change_player_honor", -1),
          (call_script, "script_change_player_party_morale", 2),
          (str_clear,s1),
          (str_store_string,s1,"@Your men gather around, cheering and betting. The atmosphere is tense. Suddenly, the disputes around you become more widespread. Other men draw their weapons, and a fight on a larger scale ensues. Before you can impose order again, several men die."),
          (display_message, "@{s1}"),
          (store_random_in_range, ":p_leave", 4, 8),
          (assign, ":num_troops", ":p_leave"),
          (try_for_range, ":unused", 0, ":num_troops"),
            (call_script, "script_cf_party_remove_random_regular_troop", "p_main_party"),
          (try_end),

         (change_screen_return, 0),
        ]
      ),
      ("choice_8_2",[],"You prohibit drinking while on campaign. Punish both drunks with death.",
        [
          (call_script, "script_change_player_honor", 1),
          (str_clear,s1),
          (str_store_string,s1,"@Your reputation increases among your men when you return to the road, leaving behind two corpses hanging from a tree."),
          (display_message, "@{s1}"),

          (store_random_in_range, ":p_leave", 2, 4),
          (assign, ":num_troops", ":p_leave"),
          (try_for_range, ":unused", 0, ":num_troops"),
            (call_script, "script_cf_party_remove_random_regular_troop", "p_main_party"),
          (try_end),
          (change_screen_return, 0),
        ]
      ),
      ("choice_8_3",[],"Stop the fight and punish the men with lashes.",
        [
          (call_script, "script_change_troop_renown", "trp_player", -6),
          (call_script, "script_change_player_party_morale", -1),

          (str_clear,s1),
          (str_store_string,s1,"@Your men complain of not being able to enjoy a good fight, seeing that drunkenness on campaign is punishable by few lashes."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_09",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "You come across some old, forgotten graves. Some seem to have wealthy individuals buried in them...",
    "none",
    [],
    [
      ("choice_9_1",[],"Dig them up in search for loot!",
        [
          (call_script, "script_change_troop_renown", "trp_player", -20),
          (call_script, "script_change_player_party_morale", -10),
          (call_script, "script_change_player_relation_with_faction", "fac_roman_christians", -2),
          (call_script, "script_change_player_relation_with_faction", "fac_coptic_christians", -2),
          (call_script, "script_change_player_relation_with_faction", "fac_arian_christians", -2),
          (call_script, "script_change_player_relation_with_faction", "fac_pagans", -2),
          (call_script, "script_change_player_relation_with_faction", "fac_roman_pagans", -2),
          (call_script, "script_change_player_relation_with_faction", "fac_zoroastrians", -2),
          (call_script, "script_troop_add_gold", "trp_player", 600),
          (troop_add_item, "trp_player","itm_samson_spatha_2_rich",0),
          (str_clear,s1),
          (str_store_string,s1,"@In one of the graves is the remains of a corpse, and with it a sword of a wealthy warrior. It turns out to be magnificent weapon, once the rust is removed to reveal its high quality. Now it is yours -- if you do not mind the bad luck that attends grave robbers."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]
      ),
      ("choice_9_2",[],"Tend to the graves and pay your respects.",
        [
          (call_script, "script_change_player_honor", 1),
          (call_script, "script_change_player_party_morale", -2), #reminded of possible death
          (str_clear,s1),
          (str_store_string,s1,"@As you tend to the graves, you and your men are reminded of your inevitable death. Although the names of the souls buried are long forgotten, you take comfort in the hopes that after you die, the world may remember you."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]
      ),
      ("choice_9_3",[],"Leave the place.",
        [
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_10",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "While you camp, a delegation of people from a nearby village approach. They say they have had a bad harvest and ask you for money to feed their children.",
    "none",
    [],
    [
      ("choice_10_1",[(store_troop_gold,":money","trp_player"),(ge,":money",5000),],"Give them 5000 siliquae.",
        [
          (troop_remove_gold, "trp_player", 5000),
          (try_for_range, ":center_no", centers_begin, centers_end),
            (store_distance_to_party_from_party, ":dist", "p_main_party", ":center_no"),
            (lt, ":dist", 20), #20 km
            (call_script, "script_change_player_relation_with_center", ":center_no", 6),
          (try_end),
          (str_clear,s1),
          (str_store_string,s1,"@The farmers give you thanks and promise to name the next one of their children after you."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]
      ),
      ("choice_10_2",[(store_troop_gold,":money","trp_player"),(ge,":money",1000),],"Give them 1000 siliquae.",
        [
          (troop_remove_gold, "trp_player", 1000),
          (try_for_range, ":center_no", centers_begin, centers_end),
            (store_distance_to_party_from_party, ":dist", "p_main_party", ":center_no"),
            (lt, ":dist", 20), #20 km
            (call_script, "script_change_player_relation_with_center", ":center_no", 3),
          (try_end),
          (str_clear,s1),
          (str_store_string,s1,"@The farmers give you thanks. They seem relieved and very happy."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]
      ),
      ("choice_10_3",[],"You tell them you do not have enough money to share.",
        [
          (change_screen_return, 0),
        ]
      ),
      ("choice_10_4",[],"Ignore them.",
        [
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_11",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Along the way, you find a sick woman. Her skin has a yellow tone, and she coughs constantly. She's from a nearby village, but as no one there knows how to cure her illness, they have sent her to the roadside to see if a traveler knows a cure.",
    "none",
    [],
    [
      ("choice_11_1",[(store_troop_gold,":money","trp_player"),(ge,":money",1000),],"Give her 1000 siliquae to hire a good physician.",
        [
          (troop_remove_gold, "trp_player", 1000),
          (try_for_range, ":center_no", centers_begin, centers_end),
            (store_distance_to_party_from_party, ":dist", "p_main_party", ":center_no"),
            (lt, ":dist", 10), #10 km
            (call_script, "script_change_player_relation_with_center", ":center_no", 1),
          (try_end),
          (str_clear,s1),
          (str_store_string,s1,"@She thanks you and heads for the nearest town."),
          (display_message, "@{s1}"),
          (change_screen_return,0),
        ]
      ),
      ("choice_11_2",[(call_script, "script_get_max_skill_of_player_party", "skl_wound_treatment"),
          (assign, ":max_skill", reg0),
          (assign, ":max_skill_owner", reg1),
          (ge, ":max_skill", 2),
          (try_begin),
            (eq, ":max_skill_owner", "trp_player"),
            (assign, reg3, 1),
          (else_try),
            (assign, reg3, 0),
            (str_store_troop_name, s3, ":max_skill_owner"),
          (try_end),
        ],"As the best physician, {reg3?you order:{s3} orders} a blood-letting.",
        [
        (try_for_range, ":center_no", centers_begin, centers_end),
            (store_distance_to_party_from_party, ":dist", "p_main_party", ":center_no"),
            (lt, ":dist", 10), #10 km
            (call_script, "script_change_player_relation_with_center", ":center_no", 3),
        (try_end),
        (str_clear,s1),
        (str_store_string,s1,"@She thanks you profusely and heads back to her village, a little weak from the ordeal."),
        (display_message, "@{s1}"),
        (add_xp_as_reward, 500),
        (change_screen_return,0),
        ]
      ),
      ("choice_11_3",[],"Ignore her. Her illness could be contagious.",
        [
          (change_screen_return,0),
        ]),
    ]),

  ( "event_12",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Plague has spread around the camp, and fears grow among your men...",
    "none",
    [],
    [
      ("choice_12_1",[(store_troop_gold,":money","trp_player"),(ge,":money",2000),],"Hire a local medicus to help your men for 2000 siliquae.",
        [
          (troop_remove_gold, "trp_player", 2000),
          (store_random_in_range, ":p_leave", 1, 3),
          (assign, ":num_troops", ":p_leave"),
          (try_for_range, ":unused", 0, ":num_troops"),
            (call_script, "script_cf_party_remove_random_regular_troop", "p_main_party"),
          (try_end),
          (str_clear,s1),
          (str_store_string,s1,":p_leave"),
          (display_message, "@Some of your men head to the nearest village to recruit a medicus, however {s1} of your men died while waiting for them to return. The rest that had it were able to recover due to the medicus's help."),
          (change_screen_return,0),
        ]
      ),
      ("choice_12_2",[(call_script, "script_get_max_skill_of_player_party", "skl_wound_treatment"),
          (assign, ":max_skill", reg0),
          (assign, ":max_skill_owner", reg1),
          (ge, ":max_skill", 4),
          (try_begin),
            (eq, ":max_skill_owner", "trp_player"),
            (assign, reg3, 1),
          (else_try),
            (assign, reg3, 0),
            (str_store_troop_name, s3, ":max_skill_owner"),
          (try_end),
        ],"As the best physician, {reg3?you order:{s3} orders} will tend to the sick.",
        [
        (str_clear,s1),
        (str_store_string,s1,"@Thanks to your quick thinking, your men eventually recover, none perishing from the disease."),
        (display_message, "@{s1}"),
        (add_xp_as_reward, 800),
        (change_screen_return,0),
        ]
      ),
      ("choice_12_3",[],"Ignore the situation.",
        [
          (store_random_in_range, ":p_leave", 2, 6),
          (assign, ":num_troops", ":p_leave"),
          (try_for_range, ":unused", 0, ":num_troops"),
            (call_script, "script_cf_party_remove_random_regular_troop", "p_main_party"),
          (try_end),
          (str_clear,s1),
          (str_store_string,s1,":p_leave"),
          (display_message, "@Luckily, those who got the disease stayed away from the rest of the party. However, {s1} of those who got it, perished."),
          (change_screen_return,0),
        ]),
    ]),

  ( "event_13",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "You happen to find a purse filled with coins.",
    "none",
    [],
    [
      ("choice_12_1",[],"You take the coins and give them to nearby beggars.",
        [
          (call_script, "script_change_player_honor", 1),
          (str_clear,s1),
          (str_store_string,s1,"@The beggars thank you for your gift."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]
      ),
      ("choice_12_2",[],"You keep the purse for yourself.",
        [
          (call_script, "script_troop_add_gold", "trp_player", 100),
          (change_screen_return, 0),
        ]
      ),
      ("choice_13_3",[],"Distribute the coins among your men.",
        [
          (call_script, "script_change_player_party_morale", 2),
          (str_clear,s1),
          (str_store_string,s1,"@Although little, your men appreciate your generocity towards them."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_14",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "A country farmer stands before you on the road with a weeping girl behind him. He points his finger accusingly at one of your men, saying that he raped his daughter and must be punished.",
    "none",
    [],
    [
      ("choice_14_1",[],"Brand the man and cast him out of your party.",
        [
          (call_script, "script_change_player_party_morale", -2),
          (call_script, "script_change_troop_renown", "trp_player", 6),
          (call_script, "script_change_player_honor", 1),
          (str_clear,s1),
          (str_store_string,s1,"@Your men resent the punishment, but recognize your authority. The action sets a precedent for discipline."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]
      ),
      ("choice_14_2",[],"It is a hard world, and a man must take what he can.",
        [
          (call_script, "script_change_player_honor", -1),
          (call_script, "script_change_troop_renown", "trp_player", -6),
          (str_clear,s1),
          (str_store_string,s1,"@Offended by your contempt for his request, the farmer leaves and spreads the claim of your villainy."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_15",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "A group of bandits approaches your camp. As your men reach for their arms, the bandits put down their weapons and say they come in peace. The leader of the bandits approaches you and asks if they may join you.",
    "none",
    [(set_background_mesh, "mesh_pic_bandits"),
    ],
    [
      ("choice_15_1",[],"Of course! My party always welcomes bloodthirsty men!",
        [
          (call_script, "script_change_player_party_morale", -5),
          (party_add_members, "p_main_party", "trp_bandit", 6),

          (str_clear,s1),
          (str_store_string,s1,"@New troops join your party."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]
      ),
      ("choice_15_2",[],"I'm sorry. We have no room for your kind!",
        [
          (str_clear,s1),
          (str_store_string,s1,"@The bandits turn away, greatly disappointed."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]
      ),
      ("choice_15_3",[],"Prove yourselves worthy by raiding a village!",
        [
          (call_script, "script_change_player_party_morale", -8),
          (call_script, "script_troop_add_gold", "trp_player", 800),
          (call_script, "script_change_player_honor", -5),
          (call_script, "script_change_troop_renown", "trp_player", -6),
          (party_add_members, "p_main_party", "trp_bandit", 6),
          (str_clear,s1),
          (str_store_string,s1,"@After two hours, the bandits return with some loot and someone's head..."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]
      ),
      ("choice_15_4",[],"Kill them all!",
        [
          (call_script, "script_change_troop_renown", "trp_player", -6),
          (call_script, "script_change_player_honor", 1),
          (call_script, "script_troop_add_gold", "trp_player", 120),
          (str_clear,s1),
          (str_store_string,s1,"@Your men kill all the bandits."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_16",mnf_scale_picture|menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "You and your men set up camp, once everything has set up, you lie in your tent. Some of your men gather around the fire, and start talking and drinking together...",
    "none",
    [(set_background_mesh, "mesh_pic_camp"),
    ],
    [
      ("choice_16_1",[],"Join your men around the fire and share some tales.",
        [
          (call_script, "script_change_player_party_morale", 5),
          (call_script, "script_change_troop_renown", "trp_player", -5),
          (str_clear,s1),
          (str_store_string,s1,"@While you share tales and listen, your men are reminded you are not so different than them, bringing comfort and camaraderie to them."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]
      ),
      ("choice_16_2",[(store_troop_gold,":money","trp_player"),(ge,":money",200)],"Reward them with extra food and wine!",
        [
          (troop_remove_gold, "trp_player", 200),
          (call_script, "script_change_player_party_morale", 2),
          (str_clear,s1),
          (str_store_string,s1,"@You got out and buy more bread and wine, and share it with your comrades. They greatly appreciate what you have done for them, raising their spirits."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]
      ),
      ("choice_16_3",[(eq,"$character_gender",tf_male)],"Invite a woman into your tent...",
        [
          (call_script, "script_change_player_honor", -2),
          (call_script, "script_change_troop_renown", "trp_player", 2),
          (change_screen_return, 0),
        ]
      ),
      ("choice_16_4",[],"Stay in your tent.",
        [
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_17",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "{s4}",
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),
      (assign, ":continue", 0),

      (str_clear, s4),
      (store_random_in_range, ":random", 0, 9),
      (try_begin),
        (le, ":random", 5), #positive
        (store_random_in_range, ":active_npc", "trp_kingdom_1_lord", kingdom_ladies_begin),
        (call_script, "script_troop_get_player_relation",  ":active_npc"),
        (assign, ":relation", reg0),
        #                       (troop_get_slot, ":relation", ":active_npc", slot_troop_player_relation),
        (gt, ":relation", 15), #good relation = send gift
        (assign, ":continue", 1),
        (str_store_troop_name, s12, ":active_npc"),
        (str_store_string, s4, "@A messenger sent from {s12} arrives and gives you a present of silver and jewelry in appreciation of your friendship."),
        (troop_add_gold, "trp_player", 1000),
      (else_try),
        (store_random_in_range, ":active_npc", "trp_kingdom_1_lord", kingdom_ladies_begin),
        (call_script, "script_troop_get_player_relation",  ":active_npc"),
        (assign, ":relation", reg0),
        #                         (troop_get_slot, ":relation", ":active_npc", slot_troop_player_relation),
        (lt, ":relation", -15), #bad relation = send insult
        (assign, ":continue", 1),
        (str_store_troop_name, s12, ":active_npc"),
        (str_store_string, s4, "@A messenger sent from {s12} arrives and gives you a message with all kinds of insults and profanities, {s12} invites you to go and look for him if you have guts which {s12} believes you don't, as you're a notorious coward."),
        (call_script, "script_change_troop_renown", "trp_player", -6),
      (try_end),

      (try_begin),
        (eq, ":continue", 0),
        (change_screen_return),
      (try_end),
      (eq, ":continue", 1),
    ],
    [
      ("choice_17",[],"Continue.",
        [
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_18",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "While travelling through a small village, a group of women approach you and your men. They offer that they can host your men, however for a fee of 800 siliquae.",
    "none",
    [
    ],
    [
      ("choice_18_1",[(store_troop_gold,":money","trp_player"),(ge,":money",800)],"Pay the fee and allow your men to join them.",
        [
          (troop_remove_gold, "trp_player", 800),
          (call_script, "script_change_player_party_morale", 10),
          (call_script, "script_change_player_honor", -1),
          (val_sub, "$piety", 2),
          (str_clear,s1),
          (str_store_string,s1,"@Many of your mean eagerly join them to the village."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]
      ),
      ("choice_18_2",[],"Thank them for their offer, however continue on your way.",
        [
          (val_add, "$piety", 2),
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_19",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "An old farmer approaches your men, demanding to see you. When he stands before you, he claims {s2}. He demands 350 siliquae in compensation for what had happened.",
    "none",
    [
    (str_clear,s2),
    (store_random_in_range, ":r", 0, 4),
    (try_begin),
    (eq, ":r", 0),
      (str_store_string,s2,"@that one of your soldiers killed some of his livestock. He points to one of your officers, and says he was the one who did it"),
    (else_try),
      (eq, ":r", 1),
      (str_store_string,s2,"@that one of your soldiers drunkenly assaulted him while stumbling through his farm. He points at one of your soldiers, and claims it was him who did it. \
        He is known for being a drunkard, but denies assaulting him"),
    (else_try),
      (eq, ":r", 2),
      (str_store_string,s2,"@that some of your men broke into his cellar and stole his wine"),
    (else_try),
      (eq, ":r", 3),
      (str_store_string,s2,"@that one of your men, while travelling by his farm, got a little too close to his daughter, and when he approached the soldier, threatened him and his daughter"),
    (try_end),

    ],
    [
      ("choice_19_1",[],"Punish the soldier for his actions.",
        [
          (call_script, "script_change_player_party_morale", -2),
          (call_script, "script_change_troop_renown", "trp_player", 2),
          (call_script, "script_change_player_honor", 1),
          (str_clear,s1),
          (str_store_string,s1,"@Your men resent the punishment, but recognize your authority. The action sets a precedent for discipline."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]
      ),
      ("choice_19_2",[(store_troop_gold,":money","trp_player"),(ge,":money",350)],"Pay the old farmer.",
        [
          (call_script, "script_change_player_honor", 2),
          (troop_remove_gold, "trp_player", 350),
          (str_clear,s1),
          (str_store_string,s1,"@The farmer leaves, still annoyed at what had happened, but appreciated you listening to him and paying compensation."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]
      ),
      ("choice_19_3",[],"Ignore the farmer.",
        [
          (call_script, "script_change_player_honor", -1),
          (str_clear,s1),
          (str_store_string,s1,"@Offended by your contempt for his request, the farmer leaves, cursing you and your party."),
          (display_message, "@{s1}"),
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_20",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "While you camp, a delegation of people from nearby approach. They seem to have a problem with their landowner and want your advice. " +
    "Apparently, drought have devastated the area, so they are poor now, but must still pay taxes to their landowner. As the landwoner does not care about them, they ask whether they should not pay and prepare to fight if the landowner attacks them or whether they should pay and let their families starve.",
    "none",
    [],
    [
      ("choice_20_1",[(store_troop_gold,":money","trp_player"),(ge,":money",5000),],"Give them 5000 siliquae for paying their taxes and buying food.",
        [
          (troop_remove_gold, "trp_player", 5000),
          (try_for_range, ":center_no", centers_begin, centers_end),
            (store_distance_to_party_from_party, ":dist", "p_main_party", ":center_no"),
            (lt, ":dist", 10), #10 km
            (call_script, "script_change_player_relation_with_center", ":center_no", 10),
          (try_end),
          (str_clear,s1),
          (str_store_string,s1,"@The farmers give you thanks and promise to name the next one of their children after you."),
          (display_message, "@{s1}"),

          (change_screen_return,0),
        ]
      ),
      ("choice_20_2",[(store_troop_gold,":money","trp_player"),(ge,":money",1000),],"Give them 1000 siliquae for paying their taxes.",
        [
          (troop_remove_gold, "trp_player", 1000),
          (try_for_range, ":center_no", centers_begin, centers_end),
            (store_distance_to_party_from_party, ":dist", "p_main_party", ":center_no"),
            (lt, ":dist", 10), #10 km
            (call_script, "script_change_player_relation_with_center", ":center_no", 4),
          (try_end),
          (str_clear,s1),
          (str_store_string,s1,"@The farmers give you thanks. They seem relieved and very happy."),
          (display_message, "@{s1}"),

          (change_screen_return,0),
        ]
      ),
      ("choice_20_3",[],"You tell them they should fight rather than pay.",
        [
          (try_for_range, ":center_no", centers_begin, centers_end),
            (store_distance_to_party_from_party, ":dist", "p_main_party", ":center_no"),
            (lt, ":dist", 10), #10 km
            (call_script, "script_change_player_relation_with_center", ":center_no", 1),
          (try_end),
          (str_clear,s1),
          (str_store_string,s1,"@The farmers thank you. Perhaps their lord will understand the situation."),
          (display_message, "@{s1}"),

          (change_screen_return,0),
        ]
      ),
      ("choice_20_4",[],"They should pay, or the landowner would kill more of them than hunger.",
        [
          (str_clear,s1),
          (str_store_string,s1,"@The farmers thank you, although they are not happy with your counsel. It will cost the lives of many of their children next winter."),
          (display_message, "@{s1}"),

          (change_screen_return,0),
        ]
      ),
      ("choice_20_4",[],"Ignore them.",
        [
          (call_script, "script_change_troop_renown", "trp_player", -3),
          (change_screen_return,0),#phaiak
        ]),
    ]),

  ( "event_21",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "You receive news that a group of veteran warriors has heard of your fame and wishes to join you. However, they ask more pay than you typically pay for such troops.",
    "none",
    [],
    [
      ("choice_21_1",[],"They are welcome.",
        [
          (display_message, "@Three veterans join your army."),
          (call_script, "script_change_troop_renown", "trp_player", 9),
          (party_add_members, "p_main_party", "trp_hired_blade", 3),
          (change_screen_return, 0),
        ]
      ),
      ("choice_21_2",[],"I do not need more troops.",
        [
          (display_message, "@The veterans leave, defaming your name."),
          (call_script, "script_change_troop_renown", "trp_player", -3),
          (change_screen_return, 0),
        ]
      ),
      ("choice_21_3",[],"Kill them. Surely they will yield some good loot.",
        [
          (display_message, "@Among the bodies, your men find 800 siliquae."),
          (call_script, "script_change_player_honor", -5),
          (troop_add_gold, "trp_player", 800),
          (call_script, "script_change_troop_renown", "trp_player", -16),
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_pilos_1",menu_text_color(0xFF000000)|mnf_disable_all_keys, #pilos monks
    "While you and your men are travelling, you pass a group of strange pilgrims, wearing bronze, pointed helmets. They claim they are heading to Ravenna, to meet the great Pilos.",
    "none",
    [],
    [
      ("choice_pilos_1",[(store_troop_gold,":money","trp_player"),(gt,":money",499)],"Give them 500 siliquae for their journey.",
        [
          (display_message, "@The group leaves, greatful for your charity."),
          (val_add, "$piety", 2),
          (call_script, "script_change_player_honor", 5),
          (troop_remove_gold,"trp_player",500),
          (assign, "$g_unique_event_1", 1),
          (change_screen_return, 0),
        ]
      ),
      ("choice_pilos_2",[],"Kill them!",
        [
          (display_message, "@The group of pilgrims scream and pray as your troops attack them, alas they are no match. Your men find some money on their corpses, as well as their strange helmets."),
          (call_script, "script_change_player_honor", -5),
          (call_script, "script_troop_add_gold", "trp_player", 1000),
          (troop_add_item, "trp_player","itm_pilos_helmet",0),
          (assign, "$g_unique_event_1", 1),
          (change_screen_return, 0),
        ]
      ),
      ("choice_pilos_3",[],"Leave them be.",
        [
          (assign, "$g_unique_event_1", 1),
          (change_screen_return, 0),
        ]),
    ]),

  ( "event_aurelian_1",menu_text_color(0xFF000000)|mnf_disable_all_keys, #pilos monks
    "While you and your men are travelling, you run into a strange merchant. He claims to have information on some rare armor, and says he will tell you for 5000 siliquae.",
    "none",
    [],
    [
      ("choice_aurelian_1",[(store_troop_gold,":money","trp_player"),(gt,":money",4999)],"Give him 5000 siliquae.",
        [
          (display_message, "@The man tells you that in Aurelianorum, there is a supposed crazed man who has ownership of the armor who is giving it away, however one must pass his test to get it..."),
          (troop_remove_gold,"trp_player",5000),
          (assign, "$g_aurelian_hint", 1),
          (assign, "$g_unique_event_2", 1),
          (change_screen_return, 0),
        ]),
      ("choice_aurelian_2",[],"Ignore him.",
        [
          (assign, "$g_aurelian_hint", 0),
          (assign, "$g_unique_event_2", 1),
          (change_screen_return, 0),
        ]),
    ]),

("event_arran_revolt",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "News from Eranshahr warn you of a new war! The king of Arran, Vache II, relative to the Shahanshah, raised his armies and is now challenging the Shahanshah in order to contest his authority. ^"+"Vache II and his allies have grown strong resentment towards the King of Kings and now they wish to declare themselves independent. ^"+"Furthermore, Vache II has exiled the Persian Fire Priests and reembraced his old faith in Christ, that he was forced to abandon some years before.",
    "none",
    [(set_background_mesh, "mesh_pic_sarranid_encounter"),
  ],
    [
     ("continue_revolt_1",[
   ],"Continue...",
       [
    (change_screen_map),
        ],
       ),
    ]
),

#Siege Events
  ##################
  #####################SIEGE WARFARE RANDOM EVENTS
  ####siege warfare random event chief

  #si no tiene hecho letrinas y saneamiento
  (
    "event_siege_01",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "One of your advisers tells you that he has found rats in the provisions that your men are eating. This could have been prevented with sanitation!",
    "none",
    [(set_background_mesh, "mesh_pic_mb_warrior_1"),

    ],
    [
      ("choice_01_1a",[],"That is terrible! Destroy the contaminated supplies.",
        [
          (assign, ":number_of_foods_player_has", 0),
          (try_for_range, ":cur_edible", food_begin, food_end),

            (call_script, "script_cf_player_has_item_without_modifier", ":cur_edible", imod_rotten),
            (val_add, ":number_of_foods_player_has", 1),
            (store_random_in_range, ":food_lose", 0, 2),
            (try_begin),
              (gt, ":number_of_foods_player_has", 0),
              (try_begin),
                (eq, ":food_lose", 0), #35%
                (troop_remove_item, "trp_player", ":cur_edible"),
              (else_try),
              (try_end),
            (else_try),
              (eq, ":number_of_foods_player_has", 0),
              (display_message, "@Your men have nothing to eat!", 0xFF0000),
              (call_script, "script_change_player_party_morale", -8),
              (assign, ":number_of_foods_player_has", 1),
              #NPC companion changes begin
              (try_begin),
                (call_script, "script_party_count_fit_regulars", "p_main_party"),
                (gt, reg0, 0),
                (call_script, "script_objectionable_action", tmt_egalitarian, "str_men_hungry"),
              (try_end),
              #NPC companion changes end
            (try_end),
          (try_end),
          (display_message, "@Part of your food was destroyed.", 0xFF0000),
          (change_screen_return),
        ]
      ),
      ("choice_01_2a",[],"My men must eat. Kill as many rats as you can.",
        [
          (jump_to_menu,"mnu_ratas_siege"),
        ]
      ),
    ]
  ),

  ###matar ratas submenu
  ("ratas_siege",0,
    "Before all the rats are exterminated, many of your men fall sick and die. ^^Your casualties: {s8}",
    "none", [  (set_background_mesh, "mesh_pic_mb_warrior_1"),
      (call_script, "script_inflict_casualties_to_party_vc", "p_main_party", 8),
      (call_script, "script_collect_friendly_parties"),
    ],

    [("back_to_siegea",[],"Done.",
        [
          (call_script, "script_change_player_party_morale", -5),
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
      ]),
    ],
  ),
  #matar ratas acaba
  #bajas enfermedad
  (
    "event_siege_02",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Poor hygiene in your camp has led to dysentery. The men start dying all around you. This could have been prevented with sanitation!",
    "none",
    [(set_background_mesh, "mesh_pic_mb_warrior_1"),

    ],
    [
      ("choice_02_1b",[],"Hire a physician to try to help the sick (1000 siliquae).",
        [
          (store_troop_gold, ":gold", "trp_player"),
          (try_begin),
            (ge, ":gold", 1000),
            (troop_remove_gold, "trp_player", 1000),
            (jump_to_menu,"mnu_enfermedad2_siege"),
          (else_try),
            (display_message, "@You don't have enough siliquae. How embarrassing!"),
            (jump_to_menu,"mnu_enfermedad_siege"),
          (try_end),
        ]
      ),
      ("choice_02_2b",[],"There is nothing I can do.",
        [
          (jump_to_menu,"mnu_enfermedad_siege"),
        ]
      ),
      ("choice_02_3b",[],"Pray to your god.",
        [
          (jump_to_menu,"mnu_enfermedad3_siege"),
        ]
      ),
      ("choice_02_4b",[
          (party_get_skill_level, ":heal", "p_main_party", skl_wound_treatment),
          (ge, ":heal", 5),
        ],"I or my companions can cure them.",
        [
          (jump_to_menu,"mnu_enfermedad4_siege"),
        ]
      ),
    ]
  ),

  ("enfermedad_siege",0,
    "Death governs your camp. Many of your men are sick and dying. ^^Your casualties: {s8}",
    "none", [  (set_background_mesh, "mesh_pic_mb_warrior_1"),
      (call_script, "script_inflict_casualties_to_party_vc", "p_main_party", 10),
      (call_script, "script_collect_friendly_parties"),
    ],

    [("back_to_siegeb",[],"Damn.",
        [
          (call_script, "script_change_player_party_morale", -8),
          (call_script, "script_change_troop_renown", "trp_player", -10),
          (call_script, "script_change_player_honor", -5),
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
      ]),
    ],
  ),
  ("enfermedad2_siege",0,
    "Some men die from the disease, but most manage to recover thanks to the physician you hired. ^^Your casualties: {s8}",
    "none", [  (set_background_mesh, "mesh_pic_mb_warrior_1"),
      (call_script, "script_inflict_casualties_to_party_vc", "p_main_party", 2),
      (call_script, "script_collect_friendly_parties"),
    ],

    [("back_to_siegeb",[],"Back to siege.",
        [
          (call_script, "script_change_player_party_morale", 5),
          (call_script, "script_change_troop_renown", "trp_player", 5),
          (call_script, "script_change_player_honor", 1),
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
      ]),
    ],
  ),
  ("enfermedad3_siege",0,
    "Death governs your camp. Many of your men are sick and dying. Perhaps your god has saved some lives. ^^Your casualties: {s8}",
    "none", [  (set_background_mesh, "mesh_pic_mb_warrior_1"),
      (call_script, "script_inflict_casualties_to_party_vc", "p_main_party", 9),
      (call_script, "script_collect_friendly_parties"),
    ],

    [("back_to_sieged",[],"Done.",
        [
          (call_script, "script_change_player_party_morale", -5),
          (call_script, "script_change_troop_renown", "trp_player", -15),
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
      ]),
    ],
  ),

  ("enfermedad4_siege",0,
    "Thanks to your healing abilities, you manage to save many men, but some still die. ^^Your casualties: {s8}",
    "none", [  (set_background_mesh, "mesh_pic_mb_warrior_1"),
      (call_script, "script_inflict_casualties_to_party_vc", "p_main_party", 2),
      (call_script, "script_collect_friendly_parties"),
    ],

    [("back_to_siegees",[],"Back to siege.",
        [
          (call_script, "script_change_player_honor", 1),
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
      ]),
    ],
  ),
  ###bajas enfermedad acaba

  (
    "event_siege_03",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "There is so much garbage, vermin and other nasty things that your camp seems to be more of a pigsty. Your men are unhappy. This could have been prevented with sanitation!",
    "none",
    [ (set_background_mesh, "mesh_pic_mb_warrior_1"),
    ],
    [
      ("choice_03_4c",[
          (party_get_skill_level, ":leadership", "p_main_party", skl_leadership),
          (ge, ":leadership", 6),
        ],"I will give an inspiring speech to gain time.",
        [
          (call_script, "script_change_player_party_morale", -1),
          (change_screen_return),
        ]
      ),
      ("choice_03_2c",[],"I will see what I can do.",
        [
          (call_script, "script_change_player_party_morale", -6),
          (change_screen_return),
        ]
      ),
    ]
  ),

  ###acaba enfermedades chief
  #seguir
  #eventos incursion, infiltracion y emboscadas
  (
    "event_siege_04",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Some enemies have managed to infiltrate at night and burn some of your supplies. Part of your food was destroyed.",
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),
      (assign, ":number_of_foods_player_has", 0),
      (try_for_range, ":cur_edible", food_begin, food_end),

        (call_script, "script_cf_player_has_item_without_modifier", ":cur_edible", imod_rotten),
        (val_add, ":number_of_foods_player_has", 1),
        (store_random_in_range, ":food_lose", 0, 3),
        (try_begin),
          (gt, ":number_of_foods_player_has", 0),
          (try_begin),
            (eq, ":food_lose", 0), #25%
            (troop_remove_item, "trp_player", ":cur_edible"),
          (else_try),
          (try_end),
        (else_try),
          (eq, ":number_of_foods_player_has", 0),
          (display_message, "@Your men have nothing to eat!", 0xFF0000),
          (call_script, "script_change_player_party_morale", -8),
          (assign, ":number_of_foods_player_has", 1),
          #NPC companion changes begin
          (try_begin),
            (call_script, "script_party_count_fit_regulars", "p_main_party"),
            (gt, reg0, 0),
            (call_script, "script_objectionable_action", tmt_egalitarian, "str_men_hungry"),
          (try_end),
          #NPC companion changes end
        (else_try),
        (try_end),
      (try_end),
      (display_message, "@Part of your food was destroyed.", 0xFF0000),
    ],
    [
      ("choice_04_1d",[],"Punish the men who were on duty that night.",
        [
          (call_script, "script_change_player_party_morale", -4), #discipline concept need.
          (call_script, "script_change_troop_renown", "trp_player", 5), #JuJu70- must be a renown change and not duplicate morale malus
          (display_message,"@Your men think that you are a strong leader."),
          (change_screen_return),
        ]
      ),
      ("choice_04_2d",[],"No, do nothing!",
        [
          (call_script, "script_change_troop_renown", "trp_player", -15),
          (display_message,"@Your men think that you are a weak leader."),
          (change_screen_return),
        ]
      ),
    ]
  ),

  (
    "event_siege_05",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "During the night, your men captured and executed a group of enemies who tried to infiltrate and burn supplies. ^^Enemy casualties: {s8}",
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),
      (call_script, "script_inflict_casualties_to_party_vc", "$g_enemy_party", 4),
      (party_collect_attachments_to_party, "$g_enemy_party", "p_collective_enemy"),
    ],
    [
      ("choice_05_1e",[],"Congratulate them for doing their job well.",
        [
          # (call_script, "script_change_player_party_morale", 5),
          (change_screen_return),
        ]
      ),
      ("choice_05_2e",[],"Reward each with a brooch (300 siliquae).",
        [
          (store_troop_gold, ":gold", "trp_player"),
          (try_begin),
            (ge, ":gold", 300),
            (call_script, "script_change_troop_renown", "trp_player", 5),
            (call_script, "script_change_player_party_morale", 5),
            (troop_remove_gold, "trp_player", 300),
          (else_try),
            (display_message, "@You don't have enough siliquae. How embarrassing!"),
    #        (call_script, "script_change_troop_renown", "trp_player", -5),
          (try_end),
          (change_screen_return),
        ]
      ),
      ("choice_05_3e",[],"Reward them with a night off with pay (200 siliquae).",
        [(set_background_mesh, "mesh_pic_mb_warrior_1"),
          (store_troop_gold, ":gold", "trp_player"),
          (try_begin),
            (ge, ":gold", 200),
            (troop_remove_gold, "trp_player", 200),
            (call_script, "script_change_player_party_morale", 5),
          (else_try),
            (display_message, "@You don't have enough siliquae. How embarrassing!"),
    #        (call_script, "script_change_troop_renown", "trp_player", -5),
            (call_script, "script_change_player_party_morale", -2),
          (try_end),
          (change_screen_return),
        ]
      ),
      ("choice_05_4e",[],"Do nothing. You are a stern leader.",
        [
          (call_script, "script_change_player_party_morale", -5),
          (call_script, "script_change_player_honor", -5),
          (display_message,"@Your men think that you are a strong leader."),
          (change_screen_return),
        ]
      ),
    ]
  ),


  (
    "event_siege_06",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "{reg59?Lady:Sir}, our food supply routes may be in danger. Our scouts have discovered enemy raiders behind our lines.^^" +
    "We could avoid such problems by blockading the place.^^Do you want to send men to protect the routes and pursue the enemy?",
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),
    ],
    [
      ("choice_06_1f",[],"Send men.",
        [
          (jump_to_menu,"mnu_encuentro_avituallamiento"),
        ]
      ),
      ("choice_06_2f",[ (store_troop_gold, ":gold", "trp_player"),(ge, ":gold", 500),],"Send messengers to pay them off (500 siliquae).",
        [
          (troop_remove_gold, "trp_player", 500),
          (jump_to_menu,"mnu_encuentro_avituallamiento2"),
        ]
      ),
      ("choice_06_3f",[],"Do nothing.",
        [
          (assign, ":number_of_foods_player_has", 0),
          (try_for_range, ":cur_edible", food_begin, food_end),

            (call_script, "script_cf_player_has_item_without_modifier", ":cur_edible", imod_rotten),
            (val_add, ":number_of_foods_player_has", 1),
            (store_random_in_range, ":food_lose", 0, 3),
            (try_begin),
              (gt, ":number_of_foods_player_has", 0),
              (try_begin),
                (eq, ":food_lose", 0), #25%
                (troop_remove_item, "trp_player", ":cur_edible"),
              (else_try),
              (try_end),
            (else_try),
              (eq, ":number_of_foods_player_has", 0),
              (display_message, "@Your men have nothing to eat!", 0xFF0000),
              (call_script, "script_change_player_party_morale", -8),
              (assign, ":number_of_foods_player_has", 1),
              #NPC companion changes begin
              (try_begin),
                (call_script, "script_party_count_fit_regulars", "p_main_party"),
                (gt, reg0, 0),
                (call_script, "script_objectionable_action", tmt_egalitarian, "str_men_hungry"),
              (try_end),
              #NPC companion changes end
            (try_end),
          (try_end),
          (display_message, "@Part of your food was destroyed.", 0xFF0000),
          (change_screen_return),
        ]
      ),
    ]
  ),

  #submenu encuentro avituallamiento
  ("encuentro_avituallamiento",0,
    "You dispatch a group of men to protect and pursue the enemies that plague your supply routes. Your men attempt to corner the enemy to force him to fight until death. There are some losses, but your men manage to win the battle and secure the supply routes.^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none", [
      (call_script, "script_simulate_battle_with_parties", 40, "$g_enemy_party", 40, 0, 0),
    ],

    [("back_to_siegeg2",[],"Well done.",
        [
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
      ]),
    ],
  ),
  ("encuentro_avituallamiento2",0,
    "{!}{s4}",
    "none", [

      (str_clear, s4),
      (set_background_mesh, "mesh_pic_messenger"),
      (store_random_in_range, ":options", 0,5),
      (try_begin),
        (le, ":options", 1),
        (call_script, "script_simulate_battle_with_parties", 50, "$g_enemy_party", 50, 0, 0),
        (str_store_string, s4, "@While your messengers try to negotiate with the enemy raiders, a squad of your men appears by chance, and a battle begins. " +
        "Your men manage to destroy the looters and fix the problem, but at the cost of some lives.^^Your casualties: {s8}^^Enemy casualties: {s10}"),
      (else_try),
        (le, ":options", 3),
        (str_store_string, s4, "@The enemy raiders accept the deal, take the money, and promise not to attack your supplies for some weeks."),
        (set_background_mesh, "mesh_pic_messenger"),
      (else_try),
        (str_store_string, s4, "@The raiders take the money, kill the messengers, and continue to damage your supply routes."),
        (set_background_mesh, "mesh_pic_messenger"),

        #comida
        (assign, ":number_of_foods_player_has", 0),
        (try_for_range, ":cur_edible", food_begin, food_end),

          (call_script, "script_cf_player_has_item_without_modifier", ":cur_edible", imod_rotten),
          (val_add, ":number_of_foods_player_has", 1),
          (store_random_in_range, ":food_lose", 0, 3),
          (try_begin),
            (gt, ":number_of_foods_player_has", 0),
            (try_begin),
              (eq, ":food_lose", 0), #25%
              (troop_remove_item, "trp_player", ":cur_edible"),
            (else_try),
            (try_end),
          (else_try),
            (eq, ":number_of_foods_player_has", 0),
            (display_message, "@Your men have nothing to eat!", 0xFF0000),
            (call_script, "script_change_player_party_morale", -8),
            (assign, ":number_of_foods_player_has", 1),
            #NPC companion changes begin
            (try_begin),
              (call_script, "script_party_count_fit_regulars", "p_main_party"),
              (gt, reg0, 0),
              (call_script, "script_objectionable_action", tmt_egalitarian, "str_men_hungry"),
            (try_end),
            #NPC companion changes end
          (try_end),
        (try_end),
        (display_message, "@Part of your food was destroyed.", 0xFF0000),
        ###messengers
        (store_random_in_range, ":p_leave", 4, 8),
        (assign, ":num_troops", ":p_leave"),
        (try_for_range, ":unused", 0, ":num_troops"),
          (call_script, "script_cf_party_remove_random_regular_troop", "p_main_party"),
        (try_end),
      (try_end),

    ],

    [("back_to_siegeg3",[],"Very well.",
        [
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
      ]),
    ],
  ),
  ####encuentro avituallamiento acaba


  (
    "event_siege_07",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Our scouts have found that the defenders have poisoned the water with dead animals. Do you want to buy water and ask the merchants to bring it via our supply route?",
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),
    ],
    [
      ("choice_07_1g",[],"Yes (600 siliquae).",
        [
          (store_troop_gold, ":gold", "trp_player"),
          (try_begin),
            (ge, ":gold", 600),
            (troop_remove_gold, "trp_player", 600),
            (change_screen_return),
          (else_try),
            (display_message, "@You don't have enough siliquae. You order water to be rationed and wells to be dug."),
            (call_script, "script_change_troop_renown", "trp_player", -10),
            (jump_to_menu,"mnu_sed_siege"),
          (try_end),
        ]
      ),
      ("choice_07_2g",[],"No. Ration water and dig wells.",
        [
          (jump_to_menu,"mnu_sed_siege"),
        ]
      ),
      ("choice_07_3g",[],"Without water, we cannot continue. Abandon the siege.",
        [
          (call_script, "script_lift_siege", "$g_player_besiege_town", 0),
          (assign, "$g_player_besiege_town", -1),
          (change_screen_return),
        ]
      ),
    ]
  ),

  ###perdidas por sed mientras cavan pozos
  ("sed_siege",0,
    "Water is running out, and your men weaken. Driven by the madness of thirst, some of them drink poisoned water and die. Finally, a well is completed and you get water for the time being. You can continue the siege. ^^Your casualties from poisoned water:{s8}",
    "none", [  (set_background_mesh, "mesh_pic_messenger"),
      (call_script, "script_inflict_casualties_to_party_vc", "p_main_party", 4),
      (call_script, "script_collect_friendly_parties"),
    ],

    [("back_to_siegeh",[],"Fate is inexorable.",
        [
          (call_script, "script_change_player_party_morale", -5),
          (call_script, "script_change_troop_renown", "trp_player", -15),
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
      ]),
    ],
  ),
  ####sed acaba

  (
    "event_siege_08",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Bad news: one of our men has deserted to the enemy. It may be because of his low morale or because they have offered him money. Whatever it is, the enemy may know our plans.",
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),
    ],
    [
      ("choice_08_1h",[],"Offer 400 siliquae. I don't want more desertions.",
        [
          (store_troop_gold, ":gold", "trp_player"),
          (try_begin),
            (ge, ":gold", 400),
            (call_script, "script_change_player_party_morale", 5),
            (troop_remove_gold, "trp_player", 400),
          (else_try),
            (display_message, "@You don't have enough siliquae. How embarrassing!"),
            (call_script, "script_change_player_party_morale", -5),
   #         (call_script, "script_change_troop_renown", "trp_player", -15),
          (try_end),
          (change_screen_return),
        ]
      ),
      ("choice_08_2h",[],"Offer 800 siliquae to minimize temptation.",
        [
          (store_troop_gold, ":gold", "trp_player"),
          (try_begin),
            (ge, ":gold", 800),
            (call_script, "script_change_player_party_morale", 4),
            (troop_remove_gold, "trp_player", 800),
            (call_script, "script_change_player_party_morale", 10),
            (call_script, "script_change_troop_renown", "trp_player", 5),
          (else_try),
            (display_message, "@You don't have enough siliquae. How embarrassing!"),
            (call_script, "script_change_player_party_morale", -5),
      #      (call_script, "script_change_troop_renown", "trp_player", -15),
          (try_end),
          (change_screen_return),
        ]
      ),
      ("choice_08_3h",[],"Do not worry. I can always change plans.",
        [
          (change_screen_return),
        ]
      ),
    ]
  ),
  (
    "event_siege_09",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "A deserter from the enemy has joined our ranks. He has informed us that {s2}.",
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),
      (store_random_in_range, ":rand_no", 1, 10),
      (try_begin),
        (ge, ":rand_no", 8),
        (str_store_string , s2, "@the enemy thinks reinforcements will soon arrive."),
      (else_try),
        (ge, ":rand_no", 5),
        (str_store_string , s2, "@fear and discontent are spreading inside."),
      (else_try),
        (ge, ":rand_no", 3),
        (str_store_string , s2, "@he likes the wife of his former master, and he will fight by your side if you give her to him after the conquest."),
      (else_try),
        (ge, ":rand_no", 0),
        (str_store_string , s2, "@the enemy's morale is low, and we should attack."),
      (try_end),
    ],
    [
      ("choice_09_1i",[],"He is welcome to our ranks.",
        [
          (party_add_members, "p_main_party", "trp_watchman", 1),
          (call_script, "script_change_player_party_morale", -5),
          (change_screen_return),
        ]
      ),
      ("choice_09_2i",[],"I do not want deserters among my men. Kill him.",
        [
          (call_script, "script_change_player_honor", -5),
          (change_screen_return),
        ]
      ),
      ("choice_09_3i",[],"I'm sure he's a spy. Return him to the enemy.",
        [
          (change_screen_return),
        ]
      ),
    ]
  ),

  (
    "event_siege_10",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Our men and the enemy do not insult each other as much any more, and sometimes talk to each other. This can affect their fighting spirit when we attack. What shall we do?",
    "none",
    [
      (set_background_mesh, "mesh_pic_messenger"),
    ],
    [
      ("choice_10_1j",[],"Allow it. The enemy's fighting spirit is also affected.",
        [
          (call_script, "script_change_player_honor", 5),
          (call_script, "script_change_troop_renown", "trp_player", -15),
          (change_screen_return),
        ]
      ),
      ("choice_10_2j",[],"What? Forbid it and punish the offenders.",
        [
          (call_script, "script_change_player_honor", -5),
          (call_script, "script_change_player_party_morale", -5),
          (change_screen_return),
        ]
      ),
    ]
  ),
  ###frio invierno bajas
  (
    "event_siege_11",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "The cold of winter always takes its toll when it comes. Some men have died of cold, flu and other minor illnesses. ^^Your casualties: {s8}",
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),
      (call_script, "script_inflict_casualties_to_party_vc", "p_main_party", 4),
      (call_script, "script_collect_friendly_parties"),
    ],
    [
      ("choice_11_1j",[],"Requiescat in pace.",
        [
          (change_screen_return),
        ]
      ),
    ]
  ),

  (
    "event_siege_12",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "A farmer comes to you and says that one of your men has raped his daughter, who lives in a village near your siege camp. The farmer desires wergild (compensation) of 100 siliquae. What do you do?",
    "none",
    [
      (set_background_mesh, "mesh_pic_messenger"),
    ],
    [
      ("choice_12_1j",[],"Pay the wergild.",
        [   (store_troop_gold, ":gold", "trp_player"),
          (try_begin),
            (ge, ":gold", 100),
            (troop_remove_gold, "trp_player", 100),
            (display_message, "@wergild is paid."),
            (call_script, "script_change_player_honor", 1),
            (call_script, "script_change_troop_renown", "trp_player", -5),
          (else_try),
            (display_message, "@You don't have enough siliquae. How embarrassing!"),
      #      (call_script, "script_change_troop_renown", "trp_player", -15),
          (try_end),
          (change_screen_return),
        ]
      ),
      ("choice_12_2j",[],"Pay the wergild and punish your warrior.",
        [   (store_troop_gold, ":gold", "trp_player"),
          (try_begin),
            (ge, ":gold", 100),
            (troop_remove_gold, "trp_player", 100),
            (display_message, "@The wergild is paid and your warrior whipped."),
            (call_script, "script_change_player_honor", 1),
            (call_script, "script_change_player_party_morale", -5),
          (else_try),
            (display_message, "@You don't have enough siliquae. How embarrassing!"),
  #          (call_script, "script_change_troop_renown", "trp_player", -15),
          (try_end),
          (change_screen_return),
        ]
      ),
      ("choice_12_3j",[],"Refuse to pay for damage done to the Enemy.",
        [
          (call_script, "script_change_player_honor", -5),
          (call_script, "script_change_player_party_morale", 5),
          (change_screen_return),
        ]
      ),
      ("choice_12_4j",[],"Kill the farmer and his daughter.",
        [
          (call_script, "script_change_player_honor", -10),
          (jump_to_menu,"mnu_no_paymentandkill"),
        ]
      ),
    ]
  ),

  (
    "no_paymentandkill",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "In revenge, the men of the nearby villages joined together and attacked your foraging parties. ^^Your casualties: {s8}",
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),
      (call_script, "script_inflict_casualties_to_party_vc", "p_main_party", 3),
      (call_script, "script_collect_friendly_parties"),
    ],
    [
      ("choice_nppayment_2j",[],"Damn!",
        [
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
        ]
      ),
    ]
  ),

  #escaramuza pequena
  (
    "event_siege_13",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "A group of enemies attacked our men by surprise and then quickly withdrew.^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none",
    [
      (call_script, "script_simulate_battle_with_parties", 20, "$g_enemy_party", 80, 0, 0),
    ],
    [
      ("choice_13_1b",[],"Be more cautious (Solution: blockade the place).",
        [
          (change_screen_return),
        ]
      ),
    ]
  ),

  (
    "event_siege_14",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "While foraging, a group of enemies encountered a group of our men.^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none",
    [
      (call_script, "script_simulate_battle_with_parties", 30, "$g_enemy_party", 30, 0, 0),
    ],
    [
      ("choice_14_1b",[],"Be more cautious (Solution: blockade the place).",
        [
          (change_screen_return),
        ]
      ),
    ]
  ),

  (
    "event_siege_15",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "We were attacked by an enemy force while raiding neighboring villages. The villagers joined the enemy, causing us many casualties.^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none",
    [
      (call_script, "script_simulate_battle_with_parties", 30, "$g_enemy_party", 90, 0, 0),
    ],
    [
      ("choice_15_1b",[],"Be more cautious (Solution: blockade the place).",
        [
          (change_screen_return),
        ]
      ),
    ]
  ),

  (
    "event_siege_16",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "The enemy and our men came upon each other near a river, and the fight for water caused numerous casualties on both sides.^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none",
    [
      (call_script, "script_simulate_battle_with_parties", 20, "$g_enemy_party", 30, 0, 0),
    ],
    [
      ("choice_16_1b",[],"Be more cautious (Solution: blockade the place).",
        [
          (change_screen_return),
        ]
      ),
    ]
  ),

  (
    "event_siege_17",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "The enemy sallied out through a secret passage, attacking us before swiftly retreating back to the protection of their walls.^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none",
    [
      (call_script, "script_simulate_battle_with_parties", 20, "$g_enemy_party", 100, 0, 0),
    ],
    [
      ("choice_17_1b",[],"Be more cautious (Solution: blockade the place).",
        [
          (change_screen_return),
        ]
      ),
    ]
  ),

  (
    "event_siege_18",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Some of your men have abducted women from the surrounding villages and brought them to the siege camp for fun.",
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),

    ],
    [
      ("choice_18_1b",[],"You allow it and ask for the most beautiful woman.",
        [
          (call_script, "script_change_player_honor", -5),
          (call_script, "script_change_player_party_morale", 5),
          (party_add_members, "p_main_party", "trp_refugee", 6),
          (jump_to_menu,"mnu_no_paymentandkill"),
        ]
      ),
      ("choice_18_2b",[],"Order the release of the women and punish the kidnappers.",
        [
          (call_script, "script_change_player_party_morale", -10),
          (call_script, "script_change_player_honor", 5),
          (change_screen_return),
        ]
      ),
    ]
  ),

  (
    "event_siege_19",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "The enemy is trying to break our blockade, and our men are trying to contain them.^^Your casualties: {s8}^^Enemy casualties: {s10}", #enemy desesperate, player adventage
    "none",
    [
      (call_script, "script_simulate_battle_with_parties", 25, "$g_enemy_party", 75, 0, 0),
    ],
    [
      ("choice_19_1b",[],"Send some men while I take others to force them to withdraw.",
        [
          (store_random_in_range, ":rand", 0, 7),
          (try_begin),
            (le, ":rand", 3),
            (jump_to_menu,"mnu_no_defendiendo"),
          (else_try),
            (jump_to_menu,"mnu_defendiendo_circunvallation"),
          (try_end),
        ]
      ),
      ("choice_19_2b",[],"Send all the men to protect that part of the circumvallation.",
        [
          (store_random_in_range, ":rand", 0, 7),
          (try_begin),
            (le, ":rand", 3),
            (jump_to_menu,"mnu_defendiendo_mal"),
          (else_try),
            (jump_to_menu,"mnu_defendiendo_circunvallation"),
          (try_end),
        ]
      ),
      ("choice_19_3b",[],"Do not worry. Our wall is strong.",
        [
          (jump_to_menu,"mnu_no_defendiendo"),
        ]
      ),
    ]
  ),

  ###ataque a circunvallation por defensores
  (
    "no_defendiendo",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "The enemy has overcome our defenses and burned our small camps and checkpoints, breaking our blockade.^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none",
    [
      (call_script, "script_simulate_battle_with_parties", 20, "$g_enemy_party", 80, 0, 0),
    ],
    [
      ("defendiendo_1bnd",[],"We must build the blockade again.",
        [
          (party_set_slot,"$g_encountered_party",slot_center_blockaded,0),
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
        ]
      ),
    ]
  ),
  (
    "defendiendo_circunvallation",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "We have managed to repel the enemy, who returned to the protection of his walls...^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none",
    [
      (call_script, "script_simulate_battle_with_parties", 20, "$g_enemy_party", 40, 0, 0),
    ],
    [
      ("defendiendo_1dcir",[],"Well done.",
        [
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
        ]
      ),
    ]
  ),
  (
    "defendiendo_mal",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Another group of enemies took advantage of our troops being here and set fire to another part of our blockade.^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none",
    [
      (call_script, "script_simulate_battle_with_parties", 30, "$g_enemy_party", 90, 0, 0),
    ],
    [
      ("defendiendo_1mal",[],"Damn!",
        [
          (party_set_slot,"$g_encountered_party",slot_center_blockaded,0),
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
        ]
      ),
    ]
  ),
  #####ataque a circunvallation acaba

  ###ataque a maquinas de asedio
  (
    "event_siege_20",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "The enemy is trying to burn our assault equipment.^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none",
    [
      (call_script, "script_simulate_battle_with_parties", 40, "$g_enemy_party", 120, 0, 0),
    ],
    [
      ("choice_20_1b",[],"Send some men while I take others to force them to withdraw.",
        [
          (store_random_in_range, ":rand", 0, 8),
          (try_begin),
            (le, ":rand", 3),
            (jump_to_menu,"mnu_defendiendo_mal_equip"),
          (else_try),
            (le, ":rand", 5),
            (jump_to_menu,"mnu_no_defendiendo_equip"),
          (else_try),
            (jump_to_menu,"mnu_defendiendo_equip"),
          (try_end),
        ]
      ),
      ("choice_20_2b",[],"Quickly. Send all men to protect the equipment.",
        [
          (store_random_in_range, ":rand", 0, 8),
          (try_begin),
            (le, ":rand", 3),
            (jump_to_menu,"mnu_defendiendo_mal_equip"),
          (else_try),
            (jump_to_menu,"mnu_defendiendo_equip"),
          (try_end),
        ]
      ),
      ("choice_20_3b",[],"Do not worry. Our men will guard it.",
        [
          (jump_to_menu,"mnu_no_defendiendo_equip"),
        ]
      ),
    ]
  ),
  ###ataque a equipamiento de asedio
  (
    "no_defendiendo_equip",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "The enemy has overcome our defenses and burned down our equipment.^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none",
    [
      (call_script, "script_simulate_battle_with_parties", 25, "$g_enemy_party", 100, 0, 0),
    ],
    [
      ("defendiendo_1bnde",[],"We must begin construction again.",
        [
          (assign, "$g_siege_method", 0),
          (assign, "$g_mantlets_1", 0),
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
        ]
      ),
    ]
  ),
  (
    "defendiendo_equip",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "We have managed to repel the enemy, who returned to the protection of his walls.^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none",
    [
      (call_script, "script_simulate_battle_with_parties", 25, "$g_enemy_party", 50, 0, 0),
    ],
    [
      ("defendiendo_1heq",[],"Well done.",
        [
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
        ]
      ),
    ]
  ),
  (
    "defendiendo_mal_equip",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Another group of enemies has surrounded our positions and burned down our siege equipment on the other side.^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none",
    [
      (call_script, "script_simulate_battle_with_parties", 30, "$g_enemy_party", 90, 0, 0),
    ],
    [
      ("defendiendo_1vmal",[],"Damn!",
        [
          (assign, "$g_siege_method", 0),
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
        ]
      ),
    ]
  ),
  #####ataque a equipamiento acaba


  #continuamos aqui
  (
    "event_siege_21",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Your guards discovered several men trying to sneak out at night to escape your blockade.",
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),

    ],
    [
      ("choice_21_1b",[],"Allow them to escape.",
        [
          (call_script, "script_change_player_party_morale", -5),
          (store_random_in_range, ":p_leave", 8, 12),
          (assign, ":num_troops", ":p_leave"),
          (try_for_range, ":unused", 0, ":num_troops"),
            (call_script, "script_cf_party_remove_random_regular_troop", "$g_encountered_party"),
          (try_end),

          (change_screen_return),
        ]
      ),
      ("choice_21_2b",[],"Kill them.",
        [
          (call_script, "script_change_player_honor", -5),
          (store_random_in_range, ":p_leave", 8, 12),
          (assign, ":num_troops", ":p_leave"),
          (try_for_range, ":unused", 0, ":num_troops"),
            (call_script, "script_cf_party_remove_random_regular_troop", "$g_encountered_party"),
          (try_end),
          (change_screen_return),
        ]
      ),
    ]
  ),

  (
    "event_siege_22",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "At night, your guards report that they observed a group of enemies dressed in sheepskins heading to a nearby stream. Right now, they are filling leather sacks with water to bring back to the settlement.",
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),

    ],
    [
      ("atacar_emboscada_player2",[],"Go there with any companions who want to join.",
        [
          (try_begin),
            (store_troop_health, ":health", "trp_player", 0), #get relative health in 1-100 range and put it into the ":health" variable
            (lt, ":health", 30),
            (val_add, ":health", 35),               #add to it the 5%
            (troop_set_health,   "trp_player", ":health"),   #set it
          (try_end),

          (store_random_in_range, ":scene_a_usar", 0,3),
          (try_begin),
            (eq, ":scene_a_usar", 1),
            (assign, ":scene_to_use", "scn_custom_battle_plains_2"),
          (else_try),
            (eq, ":scene_a_usar", 2),
            (assign, ":scene_to_use", "scn_custom_battle_plains_5"),
          (else_try),
            (assign, ":scene_to_use", "scn_custom_battle_forest_4"),
          (try_end),

          (set_jump_mission,"mt_ambush_riversw"),
          (modify_visitors_at_site,":scene_to_use"),
          #### tropas cambiar por las del asentamiento
          (reset_visitors, 0),
          (set_visitor,0,"trp_player"), #player
          (assign, ":cur_entry", 1),
          (try_for_range, ":companion", companions_begin, companions_end),
            (main_party_has_troop,":companion"),
            (set_visitor, ":cur_entry", ":companion"),
            (val_add, ":cur_entry", 1),
          (try_end),

          (assign, ":num_troops", 8),
          (try_for_range, ":unused", 0, ":num_troops"),
            (call_script, "script_cf_party_remove_random_regular_troop", "$g_encountered_party"),
            (assign, ":lost_troop", reg0),
            #(try_for_range, ":visiterator", 17, 18), #possible 17 and 31, but this add 8 enemies each 1 entry point
            (assign, ":visiterator", 17),
            (set_visitor, ":visiterator", ":lost_troop"),
            #  (try_end),
          (try_end),
          (jump_to_scene,":scene_to_use"),
          (change_screen_mission),
      ]),

      ("choice_22_1b",[],"Send men to ambush the enemy in sheepskins.",
        [
          (store_random_in_range, ":rand", 0, 3),
          (try_begin),
            (eq, ":rand", 0),
            (jump_to_menu,"mnu_victoria_ovejas"),
          (else_try),
            (eq, ":rand", 1),
            (jump_to_menu,"mnu_derrota_ovejas"),
          (else_try),
            (jump_to_menu,"mnu_tablas_ovejas"),
          (try_end),
        ]
      ),
      ("choice_22_2b",[],"Do nothing.",
        [
          (change_screen_return),
        ]
      ),
    ]
  ),

  #####atacar ovejas chief
  (
    "victoria_ovejas",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Your soldiers surrounded the enemy in sheepskins and fell upon them by surprise, spreading death.^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none",
    [
      (call_script, "script_simulate_battle_with_parties", 50, "$g_enemy_party", 30, 0, 0),
    ],
    [
      ("defendiendo_1lovej",[],"Perfect!",
        [
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
        ]
      ),
    ]
  ),
  (
    "derrota_ovejas",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "It's a trap! {reg59?Lady:Sir}, the men dressed in sheepskins were a decoy to bring out our men and ambush them. Many were killed before returning to the protection of our circumvallation.^^Your casualties: {s8}^^Enemy casualties: {s10}",
    "none",
    [
      (call_script, "script_simulate_battle_with_parties", 20, "$g_enemy_party", 100, 0, 0),
    ],
    [
      ("defendiendo_1poveja",[],"That is terrible.",
        [
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
        ]
      ),
    ]
  ),
  (
    "tablas_ovejas",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Your soldiers were deployed to surround the enemy, but they were too slow and noisy. The men in sheepskins sensed the threat and returned to the settlement quickly.",
    "none",
    [ (set_background_mesh, "mesh_pic_messenger"),
    ],
    [
      ("defendiendo_1oveja2",[],"Well, next time.",
        [
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
        ]
      ),
    ]
  ),
  ###atacar ovejas acaba

  (
    "event_siege_23",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Today a mercenary who wants to join our ranks came to our camp. He says he is an exile from the place that we are besieging, and he wants revenge.",
    "none",
    [
      (set_background_mesh, "mesh_pic_mb_warrior_1"),
    ],
    [
      ("choice_23_1b",[],"Accept him.",
        [
          (party_add_members, "p_main_party", "trp_mercenary_horseman", 1),
          (call_script, "script_change_player_relation_with_center", "$g_encountered_party", -20),

          (change_screen_return),
        ]
      ),
      ("choice_23_2b",[],"I don't need more men.",
        [
          (change_screen_return),
        ]
      ),
    ]
  ),

  (
    "event_siege_24",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "We have accumulated the heads of enemies and dead peasants. Do you want to launch them over the walls to undermine the morale of the enemy and cause disease?",
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),

    ],
    [
      ("choice_24_1b",[],"What? You're a crazy maniac. Do not do that!",
        [
          (call_script, "script_change_player_honor", 5),
          (change_screen_return),
        ]
      ),
      ("choice_24_2b",[],"Sure, it will be useful when negotiating their surrender.",
        [
          (call_script, "script_change_player_honor", -5),
          (jump_to_menu,"mnu_cabezas_moral"),
        ]
      ),
    ]
  ),


  ###cabezas
  (
    "cabezas_moral",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "The heads are launched into the settlement. From the outside, you hear the cries and tears of the citizens when they recognize a loved one. War is merciless, and you've proven you're the most terrible of foes.",
    "none",
    [ (set_background_mesh, "mesh_pic_messenger"),
    ],
    [
      ("defendiendo_1q",[],"This will help them give up... or die...",
        [
          (assign, "$g_cabezas_dentro", 1),
          (call_script, "script_change_player_party_morale", -5),
          (call_script, "script_change_troop_renown", "trp_player", 5),
          (display_message,"@Your men think you're heartless and fear you."),
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
        ]
      ),
    ]
  ),
  ###cabezas acaba

  (
    "event_siege_25",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "A merchant offers a group of dancers to entertain your men during the night.",
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),

    ],
    [
      ("choice_25_1b",[],"This will just distract and tire my men.",
        [
          (call_script, "script_change_player_party_morale", -8),
          (change_screen_return),
        ]
      ),
      ("choice_25_2b",[],"Hire dancers just for yourself (100 siliquae).",
        [
          (store_troop_gold, ":gold", "trp_player"),
          (try_begin),
            (ge, ":gold", 100),
            (troop_remove_gold, "trp_player", 100),
            (add_xp_as_reward,100),
            (display_message, "@You feel happy."),
            (call_script, "script_change_player_party_morale", -4),
          (else_try),
            (display_message, "@You don't have enough siliquae. How embarrassing!"),
    #        (call_script, "script_change_troop_renown", "trp_player", -5),
          (try_end),
          (change_screen_return),
        ]
      ),
      ("choice_25_3b",[],"Hire dancers for your men (500 siliquae).",
        [
          (store_troop_gold, ":gold", "trp_player"),
          (try_begin),
            (ge, ":gold", 500),
            (troop_remove_gold, "trp_player", 500),
            (display_message, "@You feel good for helping."),
            (call_script, "script_change_player_party_morale", 8),
          (else_try),
            (display_message, "@You don't have enough siliquae. How embarrassing!"),
   #         (call_script, "script_change_troop_renown", "trp_player", -5),
            (call_script, "script_change_player_party_morale", -2),
          (try_end),
          (change_screen_return),
        ]
      ),
    ]
  ),

  (
    "event_siege_26",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "A group of bandits approaches your camp. As your men reach for their arms, the bandits put down their weapons and say they come in peace. The leader of the bandits steps forward and asks if they may join you.",
    "none",
    [
      (set_background_mesh, "mesh_pic_mb_warrior_1"),
    ],
    [
      ("choice_26_1b",[],"Of course! Such promising men are always welcome!",
        [
          (call_script, "script_change_player_party_morale", -8),
          (call_script, "script_change_player_honor", -2),
          (party_add_members, "p_main_party", "trp_mountain_bandit", 5),
          (display_message, "@New troops join your party."),
          (change_screen_return),
        ]
      ),
      ("choice_26_2b",[],"I'm sorry. We have no room for your kind!",
        [
          (display_message, "@The bandits leave, angry."),
          (change_screen_return),
        ]
      ),
      ("choice_26_3b",[],"Prove yourselves worthy by raiding a village.",
        [
          (jump_to_menu,"mnu_sanguinario_p"),
        ]
      ),
      ("choice_26_4b",[],"Kill them all!",
        [
          (call_script, "script_troop_add_gold", "trp_player", 100),
          (call_script, "script_change_player_honor", 1),
          #   (call_script, "script_change_troop_renown", "trp_player", -10),
          (display_message, "@Your men kill all the bandits."),
          (change_screen_return),
        ]
      ),
    ]
  ),

  (
    "sanguinario_p",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "After two hours, the bandits return with some loot and someone's head...",
    "none",
    [
      (set_background_mesh, "mesh_pic_mb_warrior_1"),
      (call_script, "script_troop_add_gold", "trp_player", 500),
      (call_script, "script_change_player_honor", -10),
      #   (call_script, "script_change_troop_renown", "trp_player", -10),
      (call_script, "script_change_player_party_morale", -8),
    ],
    [
      ("choice_26_3b",[],"Well done! An officer will show you to your places.",
        [
          (party_add_members, "p_main_party", "trp_mountain_bandit", 5),
          #     (display_message, "@After tow hours the bandits return with some loot and the chiefs head..."),
          (change_screen_map),
        ]
      ),
    ]
  ),

  (
    "event_siege_27",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Several merchants approach you wanting to sell goods in the camp that has formed close to yours with the wives of the soldiers, prostitutes, refugees, children and other followers of the army.",
    "none",
    [
      (set_background_mesh, "mesh_pic_messenger"),
    ],
    [
      ("choice_27_1b",[],"They (and their money) are welcome.",
        [
          (call_script, "script_troop_add_gold", "trp_player", 400),
          (call_script, "script_change_player_party_morale", 5),

          (store_random_in_range, ":p_leave", 5, 10),
          (assign, ":num_troops", ":p_leave"),
          (try_for_range, ":unused", 0, ":num_troops"),
            (call_script, "script_cf_party_remove_random_regular_troop", "p_main_party"),
          (try_end),
          (display_message, "@At night, some of your men make off with happy widows."),

          (change_screen_return), #menos disciplina
        ]
      ),
      ("choice_27_2b",[],"There are enough merchants already.",
        [
          (call_script, "script_change_player_party_morale", -5),
          (change_screen_return), #mas disciplina
        ]
      ),
      ("choice_27_3b",[],"Kill them and steal their money.",
        [
          (call_script, "script_change_player_honor", -15),
          (call_script, "script_change_player_party_morale", -10),
          #            (call_script, "script_change_troop_renown", "trp_player", -30),
          (call_script, "script_troop_add_gold", "trp_player", 1600),
          (change_screen_return),
        ]
      ),
    ]
  ),

  (
    "event_siege_28",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "To make the food last longer, the defenders threw out their women, children and elderly. You can see them moving towards your circumvallation, begging for food.",
    "none",
    [ (set_background_mesh, "mesh_pic_messenger"),
    ],
    [
      ("choice_28_1b",[],"Send soldiers to kill the children and elderly, taking the women.",
        [
          (call_script, "script_change_player_honor", -20),
          (call_script, "script_change_player_party_morale", 5),
          #   (call_script, "script_change_troop_renown", "trp_player", -15),
          (party_add_members, "p_main_party", "trp_refugee", 8),
          (change_screen_return),
        ]
      ),
      ("choice_28_2b",[(store_troop_gold, ":gold", "trp_player"),(ge, ":gold", 1000),],"Buy food for them (1000 siliquae). Then let them leave.",
        [
          (troop_remove_gold, "trp_player", 1000),
          (display_message, "@You feel good for helping."),
          (call_script, "script_change_player_honor", 5),
          (call_script, "script_change_player_party_morale", -5),
          (call_script, "script_change_troop_renown", "trp_player", -5),
          (display_message,"@Your men think that you are a weak leader."),
          (call_script, "script_change_player_relation_with_center", "$g_encountered_party", 10),
          (display_message,"@Your enemies appreciate your pity. Perhaps this will help you when you negotiate their surrender."),
          (change_screen_return),
        ]
      ),
      ("choice_28_3b",[],"Do not give them anything. Allow them to die of starvation.",
        [
          (call_script, "script_change_player_honor", -5),
          (call_script, "script_change_troop_renown", "trp_player", 5),
          (display_message,"@Your men think that you are a strong leader."),
          (call_script, "script_change_player_relation_with_center", "$g_encountered_party", -10),
          (display_message, "@You know that in the coming days, dozens of children, women and elderly will die before your eyes, languishing from hunger."),
          (change_screen_return),
        ]
      ),
    ]
  ),

  (
    "event_siege_29",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "One of your soldiers, angered by the long siege, rapes the wife of one of your officers.",
    "none",
    [
      (set_background_mesh, "mesh_pic_messenger"),
    ],
    [
      ("choice_29_1b",[],"Ignore the situation.",
        [
          (call_script, "script_change_player_honor", -5),
          (call_script, "script_change_troop_renown", "trp_player", -5),
          (display_message,"@Your officer seems upset."),
          (jump_to_menu,"mnu_lucha_oficial"),
          (change_screen_return),
        ]
      ),
      ("choice_29_2b",[],"Punish the soldier.",
        [
          (call_script, "script_change_player_party_morale", -4),
          (call_script, "script_change_troop_renown", "trp_player", 5),
          (display_message,"@Your men think that you are a strong leader."),
          (display_message,"@Your officer seems upset."),
          (jump_to_menu,"mnu_lucha_oficial"),
        ]
      ),
      ("choice_29_3b",[],"Execute the soldier.",
        [
          (call_script, "script_change_player_party_morale", -8),
          (call_script, "script_change_troop_renown", "trp_player", 5),
          (display_message,"@Your men think that you are a very strong leader."),
          (display_message,"@Your officer seems happy."),

          (assign, ":num_troops", 1),
          (try_for_range, ":unused", 0, ":num_troops"),
            (call_script, "script_cf_party_remove_random_regular_troop", "p_main_party"),
          (try_end),
          (change_screen_return),
        ]
      ),
      ("choice_29_4b",[(store_troop_gold, ":gold", "trp_player"),(ge, ":gold", 1000),],"Pay wergild (compensation) to the officer (1000 siliquae).",
        [
          (troop_remove_gold, "trp_player", 1000),
          (display_message, "@The wife is pregnant, and the officer asks for a high compensation. To avoid rumors and problems, you pay."),
          (change_screen_return),
        ]
      ),
    ]
  ),

  ###soldado problematico
  (
    "lucha_oficial",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Your officer kills the soldier and there is a brawl between some friends of the soldier and those loyal to your officer, leaving some dead.",
    "none",
    [(set_background_mesh, "mesh_pic_messenger"),
      (store_random_in_range, ":p_leave", 6, 12),
      (assign, ":num_troops", ":p_leave"),
      (try_for_range, ":unused", 0, ":num_troops"),
        (call_script, "script_cf_party_remove_random_regular_troop", "p_main_party"),
      (try_end),

      (set_background_mesh, "mesh_pic_mb_warrior_1"),
    ],
    [
      ("defendiendo_1z",[],"That is terrible.",
        [
          (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
        ]
      ),
    ]
  ),
  ####siege warfare acaba chief random event

("rome_conquered",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Once again this century, the ancient capitol of Rome has been taken, this time by the {s22}. The once great city has fallen further into ruin!",
    "none",
    [
    (str_store_faction_name, "$g_notification_menu_var1"),
    ],
    [
      ("option_1",
        [],
        "Continue.",
        [
        (faction_get_slot, ":leader", "$g_notification_menu_var1", slot_faction_leader),
        (call_script, "script_change_troop_renown", ":leader", 80),
        (change_screen_map),
      ]),
  ]),

("constantinople_conquered",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "The walls that held off Attila, once thought impenitrable have failed, and the great city of Constantinople has fallen to {s22}!",
    "none",
    [
    (str_store_faction_name, "$g_notification_menu_var1"),
    ],
    [
      ("option_1",
        [],
        "Continue.",
        [
        (faction_get_slot, ":leader", "$g_notification_menu_var1", slot_faction_leader),
        (call_script, "script_change_troop_renown", ":leader", 100),
        (change_screen_map),
      ]),
  ]),

("ctesiphon_conquered",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "The grand capitol of both the Parthians, and their successors, the Sassanids, Ctesiphon has fallen to the {s22}!",
    "none",
    [
    (str_store_faction_name, "$g_notification_menu_var1"),
    ],
    [
      ("option_1",
        [],
        "Continue.",
        [
        (faction_get_slot, ":leader", "$g_notification_menu_var1", slot_faction_leader),
        (call_script, "script_change_troop_renown", ":leader", 80),
        (change_screen_map),
      ]),
  ]),

  ( "recruit_bagadua_lord",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "Basilius, the so called 'king' of the bagaudae you let escape approaches you. He requests vassalage.",
    "none",
    [],
    [

      ("choice_1",[],"Accept him.",
        [
	(troop_set_slot, "trp_knight_bagadua_1", slot_troop_occupation, slto_kingdom_hero),
	(call_script, "script_change_troop_faction", "trp_knight_bagadua_1", "$players_kingdom"),
	(troop_set_note_available,"trp_knight_bagadua_1",1),
	(troop_set_slot, "trp_knight_bagadua_1", slot_troop_wealth, 10000),
		(try_begin),
		(is_between, "$g_player_court", walled_centers_begin, walled_centers_end),
		(call_script, "script_create_kingdom_hero_party", "trp_knight_bagadua_1", "$g_player_court"),
		(try_end),
	(faction_set_slot, "fac_forest_bandits", slot_faction_leader, "trp_generic_agitator"),
	(change_screen_return, 0),
        ]
      ),
      ("choice_2",[],"Reject his offer.",
        [
          (change_screen_return, 0),
        ]),
    ]),

#+freelancer start
#menu_world_map_soldier
    ("world_map_soldier",0,
    "You are in the service of {s6}.",
    "none",
    [
   #(set_background_mesh, "mesh_pic_soldier_world_map"), #madsci this blocks text
   (troop_get_slot, "$enlisted_party", "$enlisted_lord", slot_troop_leaded_party), #CABA - to refresh it? maybe not necessessary
   (str_store_troop_name, s6, "$enlisted_lord"),
        (try_begin),
          (set_fixed_point_multiplier, 100),
          (position_set_x, pos0, 70),
          (position_set_y, pos0, 5),
          (position_set_z, pos0, 75),
          (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", "$enlisted_lord", pos0),
        (try_end),
  ],
  [
    ("join_commander_battle",[
	(gt, "$enlisted_party", 0),
	(party_is_active, "$enlisted_party"),
      (party_get_battle_opponent, ":commander_opponent", "$enlisted_party"),
      (gt, ":commander_opponent", 0),
    ],"Follow the commander into battle.",[
        (party_set_slot, "p_freelancer_party_backup", slot_party_last_in_combat, 1), #needed to catch post-battle and detach any attached parties

      (try_begin),
        (neg|troop_is_guarantee_horse, "$player_cur_troop"),
        (troop_get_inventory_slot, ":horse", "trp_player", ek_horse),
        (gt, ":horse", 0),
        (troop_get_inventory_slot_modifier, ":horse_imod", "trp_player", ek_horse),
        (set_show_messages, 0),
        (troop_add_item, "trp_player", ":horse", ":horse_imod"),
        (troop_set_inventory_slot, "trp_player", ek_horse, -1),
        (set_show_messages, 1),
      (try_end),
      (start_encounter, "$enlisted_party"),
      (change_screen_map),
    ]),

        ("enter_town",[
	(gt, "$enlisted_party", 0),
	(party_is_active, "$enlisted_party"),
      (party_get_attached_to, reg5, "$enlisted_party"),
      (gt, reg5, 0),
      (this_or_next|party_slot_eq, reg5, slot_party_type, spt_town),
      (party_slot_eq, reg5, slot_party_type, spt_castle),
    ] ,"Enter stationed town.",
        [(start_encounter, reg5),(change_screen_map),]),

    ("commander",[
	(gt, "$enlisted_party", 0),
	(party_is_active, "$enlisted_party"),
	(party_get_battle_opponent, ":commander_opponent", "$enlisted_party"),
	(lt, ":commander_opponent", 0),],
       "Request audience with your commander.",
        [(jump_to_menu, "mnu_commander_aud"),]),

    ("revolt",[
	(gt, "$enlisted_party", 0),
	(party_is_active, "$enlisted_party"),
	(neg|party_slot_eq, "$enlisted_party", slot_party_on_water, 1), #madsci not if in water
	(party_get_attached_to, reg0, "$enlisted_party"),
        (lt, reg0, 0)],"Revolt against the commander!",
        [(jump_to_menu, "mnu_ask_revolt"),]),

    ("revolt_disabled",[
	(gt, "$enlisted_party", 0),
	(party_is_active, "$enlisted_party"),
	(party_get_attached_to, reg0, "$enlisted_party"),
	(this_or_next|party_slot_eq, "$enlisted_party", slot_party_on_water, 1), #madsci not if in water
    	(gt, reg0, 0),
    	(disable_menu_option)],"You cannot revolt now. Bide your time.", []),

    ("desert",[
	(gt, "$enlisted_party", 0),
	(party_is_active, "$enlisted_party"),
	(neg|party_slot_eq, "$enlisted_party", slot_party_on_water, 1), #madsci not if in water
],"Desert the army. (keep equipment but lose relations)",
        [(jump_to_menu, "mnu_ask_desert"),]),

	  ("regiment_destroyed", [
			(this_or_next|le, "$enlisted_party", 0),
			(neg|party_is_active, "$enlisted_party"),
			(str_store_troop_name, s4, "$enlisted_lord"),
	], "{s4}'s party has been destroyed.",
	   [
	        (call_script, "script_freelancer_event_player_captured"),
			(try_begin),
			(gt, "$g_enemy_party", 0),
			(party_is_active,"$g_enemy_party"),
	       	 	(assign, "$g_encountered_party", "$g_enemy_party"),
			(else_try),
			(call_script, "script_get_closest_hostile_party", "p_main_party"),
			(gt, reg0, 0),
			(assign, "$g_encountered_party", reg0),
			(else_try),
			(store_random_in_range, "$g_encountered_party", towns_begin, towns_end),
			(try_end),
	        (jump_to_menu, "mnu_captivity_start_wilderness"),
		]),

    ("report",[
	(gt, "$enlisted_party", 0),
	(party_is_active, "$enlisted_party"),
],"Commander's Report",
    [(start_presentation, "prsnt_taragoth_lords_report"),]),

    ("return_to_duty",[
			(gt, "$enlisted_party", 0),
			(party_is_active, "$enlisted_party"),
			(party_get_battle_opponent, ":commander_opponent", "$enlisted_party"),
			(assign, ":opp", 0),
				(try_begin),
				(gt, ":commander_opponent", 0),
				(store_faction_of_party, ":opp_faction", ":commander_opponent"),
				(store_faction_of_party, ":en_faction", "$enlisted_party"),
				(eq, ":opp_faction", ":en_faction"),
				(assign, ":opp", 1),
				(try_end),
			(this_or_next|eq, ":opp", 1),
			(this_or_next|lt, ":commander_opponent", 0),
		        (troop_is_wounded, "trp_player"),
    ],"Return to duty.",
        [
(try_begin),
(party_get_battle_opponent, ":commander_opponent", "$enlisted_party"),
(gt, ":commander_opponent", 0),
(store_faction_of_party, ":opp_faction", ":commander_opponent"),
(store_faction_of_party, ":en_faction", "$enlisted_party"),
(eq, ":opp_faction", ":en_faction"),
(party_leave_cur_battle, "$enlisted_party"), #madsci bugfix
	(try_begin),
	(party_get_attached_to, ":player_town", "$enlisted_party"),
	(gt, ":player_town", 0),
	(is_between, ":player_town", walled_centers_begin, walled_centers_end),
	(party_detach, "$enlisted_party"),
	(call_script, "script_party_set_ai_state", "$enlisted_party",  spai_patrolling_around_center, ":player_town"),
	(try_end),
(try_end),
(change_screen_map),
(assign, "$g_infinite_camping", 1),
(rest_for_hours_interactive, 24 * 365, 5, 1),
    ]),
    ]),

 ("fruhling",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "The snow is melting, the flowers prosper, it is spring",
    "none",
    [  ],
    [
     ("continue",[],"Aestas...",
       [
     (assign, "$season", 1),
     (assign, "$shader_season", 0),##shader
	   (change_screen_map),
        ]
       ),
    ]
 ),

 ("winter",menu_text_color(0xFF000000)|mnf_disable_all_keys,
    "The leaves are fallen, cold winds are coming, it is winter",
    "none",
    [],
    [
     ("continue",[],"Hiems...",
       [
      (assign, "$season", 0),
      (assign, "$shader_season", 3),##shader
      (try_for_parties, ":party"),
        (call_script, "script_game_get_party_speed_multiplier", ":party"),
      (try_end),
	   (change_screen_map),
        ]
       ),
    ]
 ),


#menu_aud_with_commander
  (
    "commander_aud",0,
    "Your request for a meeting is relayed to your commander's camp, and finally {s6} appears from his tent to speak with you.",
    "none",
    [(set_background_mesh, "mesh_pic_soldier_world_map"),(str_store_troop_name, s6, "$enlisted_lord")],
    [
      ("continue",[],
       "Continue...",
       [
    (try_begin),
      (party_get_attached_to, reg0, "$enlisted_party"),
        (lt, reg0, 0),
      (start_encounter, "$enlisted_party"),
      (change_screen_map),
    (else_try),
      #Fake that it is a party encounter when enlisted party in a town (lines taken from script_game_event_party_encounter)
      (assign, "$g_encountered_party", "$enlisted_party"),
      (store_faction_of_party, "$g_encountered_party_faction","$g_encountered_party"),
      (store_relation, "$g_encountered_party_relation", "$g_encountered_party_faction", "fac_player_faction"),
      (party_get_slot, "$g_encountered_party_type", "$g_encountered_party", slot_party_type),
      (party_get_template_id,"$g_encountered_party_template","$g_encountered_party"),
      (assign, "$talk_context", tc_party_encounter),
      (call_script, "script_setup_party_meeting", "$g_encountered_party"),
    (try_end),
        ]),
    ("reject_talk_lord",[],"No, nevermind.",
        [(change_screen_map),]),
    ]
  ),

    #menu_ask_revolt
    ("ask_revolt",0,
    "Are you sure you want to revolt?",
    "none",
    [(set_background_mesh, "mesh_pic_soldier_rebel"),(str_store_troop_name, s6, "$enlisted_lord")],[
    ("confirm_revolt",[],"Yes, {s6} will be the death of us all, it is time to act!",
        [(jump_to_menu, "mnu_revolt"),]),

    ("reject_revolt",[],"No, I am loyal to {s6}.",
        [(change_screen_return),]),
    ]),

    #menu_revolt
    ("revolt",0,
    "Do you want to release the prisoners to help your men?",
    "none",
    [
        (set_background_mesh, "mesh_pic_soldier_rebel"),
    (assign, "$cant_leave_encounter", 1),
        (call_script, "script_freelancer_event_player_revolts"),
    ],
    [
        ("revolt_prisoners",[],"Yes, I will take the risk for a greater advantage.",
        [
      (set_spawn_radius, 0),
      (spawn_around_party, "$enlisted_party", "pt_deserters"),
      (assign, ":revolt_joiners", reg0),
      (quest_set_slot, "qst_freelancer_revolt", slot_quest_target_party, ":revolt_joiners"),

      #loop adding commander's prisoners to player party as troops
            (party_get_num_prisoner_stacks, ":num_stacks", "$enlisted_party"),
            (try_for_range, ":cur_stack", 0, ":num_stacks"),
                (party_prisoner_stack_get_troop_id , ":prisoner_troop", "$enlisted_party", ":cur_stack"),
                (ge, ":prisoner_troop", 1),
                (party_prisoner_stack_get_size, ":stack_size", "$enlisted_party", ":cur_stack"),
                (party_remove_prisoners, "$enlisted_party", ":prisoner_troop", ":stack_size"),
                (party_add_members, ":revolt_joiners", ":prisoner_troop", ":stack_size"),
            (try_end),
      (party_attach_to_party, ":revolt_joiners", "p_main_party"),
            (start_encounter, "$enlisted_party"),
            (change_screen_map),
        ]),

        ("revolt_no_prisoners",[],"No, I don't trust prisoners.",
        [
      (start_encounter, "$enlisted_party"),
            (change_screen_map),
        ]),

    ]),


    #menu_ask_desert
    ("ask_desert",0,
    "Do you want to desert?",
    "none",
    [(set_background_mesh, "mesh_pic_soldier_desert"),],[
        ("confirm_desert",[],"Yes, this is pointless.",
        [(jump_to_menu, "mnu_desert"),]),

        ("reject_desert",[],"No, I am loyal to my commander.",
        [(change_screen_return),]),
    ]),

    #menu_desert
    ("desert",0,
    "While in the army you've made some good friends. Some could possibly follow you.",
    "none",
    [
        (set_background_mesh, "mesh_pic_soldier_desert"),

    (call_script, "script_freelancer_detach_party"),
    (call_script, "script_freelancer_event_player_deserts"),
  ],
    [
        ("desert_party",[],"Try to convince them to follow you.",[
            #1 in 4 chance of being caught with others
            (store_random_in_range, ":chance_caught", 0, 4),
            (try_begin),
                (eq, ":chance_caught", 0),
        (assign, "$g_encountered_party", "$enlisted_party"),
            (jump_to_menu, "mnu_captivity_start_wilderness"),
            (else_try),
                (call_script, "script_get_desert_troops"),
        (call_script, "script_party_restore"),
                (call_script, "script_set_parties_around_player_ignore_player", 2, 4),
            (try_end),
            (change_screen_map),(display_message, "@You have deserted, and are now wanted!"), ]),

        ("desert_alone",[],"No, I have a better chance alone.",[
            #1 in 10 chance of being caught alone
            (store_random_in_range, ":chance_caught", 0, 10),
            (try_begin),
                (eq, ":chance_caught", 0),
                (assign, "$g_encountered_party", "$enlisted_party"),
            (jump_to_menu, "mnu_captivity_start_wilderness"),
            (else_try),
          (call_script, "script_party_restore"),
                (call_script, "script_set_parties_around_player_ignore_player", 2, 4),
            (try_end),
            (change_screen_map),
      (display_message, "@You have deserted, and are now wanted!"), ]),
    ]

    ),

    #menu_upgrade_path
   ("upgrade_path",0,
    "In recognition of your excellent service, your commander is considering you for a promotion.",
    "none",[
    (set_background_mesh, "mesh_pic_soldier_world_map"),
    (assign, reg1, 0),
    (assign, reg2, 0),
    ],
    [
        ("upgrade_path_1",[
            (troop_get_upgrade_troop, ":path_1_troop", "$player_cur_troop", 0),
            (ge, ":path_1_troop", 0),
      (assign, reg1, 1),
      (try_begin),
        (call_script, "script_cf_freelancer_player_can_upgrade", ":path_1_troop"), #returns s0
        (assign, reg1, 0),
      (else_try),
        (disable_menu_option),
      (try_end),
            (str_store_troop_name, s66, ":path_1_troop"),],
        "{s66}{s0}.",[
            (call_script, "script_freelancer_unequip_troop", "$player_cur_troop"),
      (troop_get_upgrade_troop, "$player_cur_troop", "$player_cur_troop", 0),
      (store_troop_faction, ":commander_faction", "$enlisted_lord"),
      (faction_set_slot, ":commander_faction", slot_faction_freelancer_troop, "$player_cur_troop"),
      (call_script, "script_freelancer_equip_troop", "$player_cur_troop"),
      (str_store_troop_name, s5, "$player_cur_troop"),
      (str_store_troop_name_link, s13, "$enlisted_lord"),
      (str_store_faction_name_link, s14, ":commander_faction"),
      (str_store_string, s1, "@Enlisted as a {s5} in the party of {s13} of {s14}."),
      (add_troop_note_from_sreg, "trp_player", 3, s1, 0),

        (str_store_string, s5, "@Current rank: {s5}"),
            (add_quest_note_from_sreg, "qst_freelancer_enlisted", 3, s5, 1),
      (troop_get_xp, reg0, "trp_player"),
      (quest_set_slot, "qst_freelancer_enlisted", slot_quest_freelancer_start_xp, reg0),

      (call_script, "script_freelancer_get_upgrade_xp", "$player_cur_troop"),
      (quest_set_slot, "qst_freelancer_enlisted", slot_quest_freelancer_upgrade_xp, reg0),
            (change_screen_map),]),

        ("upgrade_path_2",[
            (troop_get_upgrade_troop, ":path_2_troop", "$player_cur_troop", 1),
            (ge, ":path_2_troop", 1),
      (assign, reg2, 1),
      (str_clear, s65),
      (try_begin),
        (call_script, "script_cf_freelancer_player_can_upgrade", ":path_2_troop"), #returns s0
        (assign, reg2, 0),
      (else_try),
        (disable_menu_option),
      (try_end),
            (str_store_troop_name, s67, ":path_2_troop"),],
        "{s67}{s0}.",[
            (call_script, "script_freelancer_unequip_troop", "$player_cur_troop"),
      (troop_get_upgrade_troop, "$player_cur_troop", "$player_cur_troop", 1),
      (store_troop_faction, ":commander_faction", "$enlisted_lord"),
      (faction_set_slot, ":commander_faction", slot_faction_freelancer_troop, "$player_cur_troop"),
      (call_script, "script_freelancer_equip_troop", "$player_cur_troop"),
      (str_store_troop_name, s5, "$player_cur_troop"),
      (str_store_troop_name_link, s13, "$enlisted_lord"),
      (str_store_faction_name_link, s14, ":commander_faction"),
      (str_store_string, s1, "@Enlisted as a {s5} in the party of {s13} of {s14}."),
      (add_troop_note_from_sreg, "trp_player", 3, s1, 0),

        (str_store_string, s5, "@Current rank: {s5}"),
            (add_quest_note_from_sreg, "qst_freelancer_enlisted", 3, s5, 1),
      (troop_get_xp, reg0, "trp_player"),
      (quest_set_slot, "qst_freelancer_enlisted", slot_quest_freelancer_start_xp, reg0),
      (call_script, "script_freelancer_get_upgrade_xp", "$player_cur_troop"),
      (quest_set_slot, "qst_freelancer_enlisted", slot_quest_freelancer_upgrade_xp, reg0),
            (change_screen_map),]),

    ("upgrade_wait", [(this_or_next|eq, reg1, 1),(eq, reg2, 1)], "Wait until next week.", [(change_screen_map)]),
    ]),

 ("epidemic_outbreak",0,
    "Sickness and death!^^{s10} is haunted by an outbreak of {s0}. {s1}^The people pray to the gods begging them to redeem them.^{s33}",
    "none", [
    (str_store_party_name, s10, "$g_notification_menu_var1"),
    (party_get_slot, ":disease", "$g_notification_menu_var1", slot_center_disease),
    (call_script, "script_get_event_details", ":disease"),
    (set_background_mesh, "mesh_pic_cattle"),
    (str_clear, s33),
    (try_begin),
        (party_slot_eq, "$g_notification_menu_var1", slot_town_lord, "trp_player"),
        (str_store_string, s33, "@You may order a quarantine for the settlement. However, such measures will upset the population as the majority of the population do not believe that it has any effect at all."),
    (try_end),
    ],
    [
    ("option_1", [(party_slot_eq, "$g_notification_menu_var1", slot_town_lord, "trp_player"),],"Order a quarantine.",
    [(jump_to_menu, "mnu_auto_return_to_map"),
    (party_get_slot, ":disease", "$g_notification_menu_var1", slot_center_disease),
    (val_sub, ":disease", 1),
    (party_set_slot, "$g_notification_menu_var1", slot_center_disease, ":disease"),
    (call_script, "script_change_player_relation_with_center", "$g_notification_menu_var1", -10),
    ]),

    ("option_2", [(party_slot_eq, "$g_notification_menu_var1", slot_town_lord, "trp_player"),],"Do nothing.",
    [(jump_to_menu, "mnu_auto_return_to_map"),]),

    ("option_3", [(neg|party_slot_eq, "$g_notification_menu_var1", slot_town_lord, "trp_player"),],"Continue.",
    [(jump_to_menu, "mnu_auto_return_to_map"),]),


    ],),
 ("disaster_event",0,
    "Disaster!^^{s10} was hit by a disastrous {s0}. {s1}^The people pray to the gods that the disaster may end soon.",
    "none", [
    (str_store_party_name, s10, "$g_notification_menu_var1"),
    (party_get_slot, ":event", "$g_notification_menu_var1", slot_center_event),
    (call_script, "script_get_event_details", ":event"),
    (set_background_mesh, "mesh_pic_cattle"),
    ],
    [
    ("option_1", [(party_slot_eq, "$g_notification_menu_var1", slot_town_lord, "trp_player"),],"Damn it.",
    [(jump_to_menu, "mnu_auto_return_to_map"),]),

    ("option_1", [(neg|party_slot_eq, "$g_notification_menu_var1", slot_town_lord, "trp_player"),],"Continue.",
    [(jump_to_menu, "mnu_auto_return_to_map"),]),

    ],),

#################BIG CHUNGUS FINNSBURG QUEST BEGINN
## HAIL TO LOMBARDY
 ("finnsburg_quest_1",0,
    "The journey towards the land of the Frisians is long and tiring. The northern sea is often tumultuous and life on the ship isn't easy, however, Hnaef's men remain calm, knowing that their journey has just started and the most has yet to come.",
    "none", [
    (play_track, "track_cutscene_longboat_track",1),
    ],
    [
    ("option_1", [],"Continue.",
    [
    (add_xp_as_reward, 1500),

    (assign, "$g_next_menu", "mnu_finnsburg_quest_2"),
    (assign, "$tutorial_state", 0),
    (set_jump_mission, "mt_longboat_cutscene"),
    (modify_visitors_at_site, "scn_cutscene_longboat"),
    (reset_visitors),


    (try_begin),
        (eq,"$character_gender", tf_female),
        (troop_set_type,"trp_multiplayer_profile_troop_male", tf_female),
    (else_try),
        (troop_set_type,"trp_multiplayer_profile_troop_male", tf_male),
    (try_end),
    (str_store_troop_face_keys, s1, "trp_player"),
    (troop_set_face_keys, "trp_multiplayer_profile_troop_male", s1),
    (call_script, "script_dplmc_copy_inventory", "trp_player", "trp_multiplayer_profile_troop_male"),

    (set_visitor, 0, "trp_player"),
    (set_visitor, 1, "trp_dani_eaha"),
    (set_visitor, 2, "trp_dani_guthlaf"),
    (set_visitor, 3, "trp_dani_hengest"),
    (set_visitor, 4, "trp_dani_hocing"),
    (set_visitor, 5, "trp_dani_ordlaf"),
    (set_visitor, 6, "trp_dani_sigeferth"),
    (set_visitor, 7, "trp_multiplayer_profile_troop_male"),
    (set_visitor, 8, "trp_scandinavian_freeman"),
    (set_visitor, 9, "trp_scandinavian_freeman"),
    (set_visitor, 10, "trp_scandinavian_freeman"),
    (set_visitor, 11, "trp_scandinavian_freeman"),

    (jump_to_scene, "scn_cutscene_longboat"),
    (change_screen_mission),

    ]),
    # ("option_1", [],"test scene.",
    # [
    # (jump_to_scene, "scn_cutscene_longboat"),
    # (change_screen_mission),
    # ]),

    ],),
 ("finnsburg_quest_2",0,
    "One day, you take advantage of the bright sky to have a chat with the members of the crew.",
    "none", [
    ],
    [
    ("option_1", [],"Continue.",
    [
    (assign, "$g_next_menu", "mnu_finnsburg_quest_3"),
    (set_jump_mission, "mt_longboat_cutscene_2"),
    (modify_visitors_at_site, "scn_cutscene_longboat_2"),
    (reset_visitors),

    (set_visitor, 0, "trp_player"),
    (set_visitor, 1, "trp_dani_eaha"),
    (set_visitor, 2, "trp_dani_guthlaf"),
    (set_visitor, 3, "trp_dani_hengest"),
    (set_visitor, 4, "trp_dani_hocing"),
    (set_visitor, 5, "trp_dani_ordlaf"),
    (set_visitor, 6, "trp_dani_sigeferth"),
    (set_visitor, 8, "trp_scandinavian_freeman"),
    (set_visitor, 9, "trp_scandinavian_freeman"),
    (set_visitor, 10, "trp_scandinavian_freeman"),
    (set_visitor, 11, "trp_scandinavian_freeman"),

    (jump_to_scene, "scn_cutscene_longboat_2"),
    (change_screen_mission),
    ]),
     # ("option_1", [],"test scene.",
    # [
    # (jump_to_scene, "scn_cutscene_longboat_2"),
    # (change_screen_mission),
    # ]),
    ],),
 ("finnsburg_quest_3",0,
    "The longship finally reaches the Frisian village, you can spot some fires along the beach to signal the presence of the settlement. A big square can be seen just beyond the beach, where traders and other salesmen sell their goods from beyond the sea. A small group of men await the Danes at the beach: it is Finn and his men wave at the sailors, signalling them to land next to them.",
    "none", [
    (quest_set_slot, "qst_finnsburh_quest", slot_quest_current_state, 2),
    ],
    [
    ("option_1", [],"Continue.",
    [
    #36 player, 37-42 dani
      #43-46 fin
    (set_jump_mission, "mt_longboat_landing_1"),
    (assign, "$g_next_menu", "mnu_finnsburg_quest_4"),
    (modify_visitors_at_site, "scn_frisian_town"),
    (reset_visitors),
    (assign, "$temp", "trp_frisian_king"),
    (set_visitor, 36, "trp_player"),
    (set_visitor, 38, "trp_dani_eaha"),
    (set_visitor, 39, "trp_dani_guthlaf"),
    (set_visitor, 40, "trp_dani_hengest"),
    (set_visitor, 37, "trp_dani_hocing"),
    (set_visitor, 41, "trp_dani_ordlaf"),
    (set_visitor, 42, "trp_dani_sigeferth"),
    (set_visitor, 43, "trp_finn_garulf"),
    (set_visitor, 44, "trp_frisian_king"),
    (set_visitor, 45, "trp_finn_aethelbald"),
    (set_visitor, 46, "trp_finn_guthere"),

    (jump_to_scene, "scn_frisian_town"),
    (change_screen_mission),


    ]),
     # ("option_1", [],"test scene.",
    # [
    # (jump_to_scene, "scn_frisian_town"),
    # (change_screen_mission),
    # ]),
    ],),
 ("finnsburg_quest_4",0,
    "The group of champions heads towards Finn's hall. Hildeburh and her maidens have naerly finished the preparations for the feast. While entering, one of the maidens, who carries a large jug of mead, gives you an ambiguous wink."
    +" You remember her face, she may be of use later on.",
    "none", [
    (quest_set_slot, "qst_finnsburh_quest", slot_quest_current_state, 3),
    (play_track, "track_finnsburg_feast_track",1),
          (set_fixed_point_multiplier, 100),
          (position_set_x, pos0, 70),
          (position_set_y, pos0, 5),
          (position_set_z, pos0, 75),
          (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", "trp_finn_hildeburh", pos0),
    ],
    [
    ("option_1", [],"Continue.",
    [
    #36 player, 37-42 dani
      #43-46 fin
    (set_jump_mission, "mt_longboat_landing_1"),
    (assign, "$g_next_menu", "mnu_finnsburg_quest_5"),
    (modify_visitors_at_site, "scn_finns_hall_interior"),
    (reset_visitors),
    (assign, "$temp", "trp_finn_hildeburh"),
    (set_visitor, 0, "trp_player"),
    (set_visitor, 1, "trp_dani_eaha"),
    (set_visitor, 2, "trp_dani_guthlaf"),
    (set_visitor, 3, "trp_dani_hengest"),
    (set_visitor, 4, "trp_dani_hocing"),
    (set_visitor, 5, "trp_dani_ordlaf"),
    (set_visitor, 6, "trp_dani_sigeferth"),
    (set_visitor, 7, "trp_finn_garulf"),
    (set_visitor, 8, "trp_frisian_king"),
    (set_visitor, 9, "trp_finn_aethelbald"),
    (set_visitor, 10, "trp_finn_guthere"),
    (set_visitor, 11, "trp_finn_hildeburh"),
    (set_visitor, 12, "trp_town_walker_2"),
    (set_visitor, 13, "trp_town_walker_2"),
    (set_visitor, 14, "trp_town_walker_2"),
    (set_visitor, 15, "trp_town_walker_2"),

    (jump_to_scene, "scn_finns_hall_interior"),
    (change_screen_mission),


    ]),
    # ("option_1", [],"test scene.",
    # [
    # (jump_to_scene, "scn_finns_hall_interior"),
    # (change_screen_mission),
    # ]),
    ],),

 ("finnsburg_quest_5",0,
    "Generous amounts of food are served, although not of great varied. Plenty of mead is brought by the maidens. You recognize the face of the maid serving you, it's the one giving you the wink. You smile when she looks into your direction. She notices your sign and stays close to you. "+
    "^While the mead is dimming your mind, while the music is whistling through your ears and the food is warming your belly you feel the desires of flesh. The maiden would be an easy match for you...."
    +"^You take another glance at the maid, closely observing how her curves are stretching her dress. Now its time to decide...",
    "none", [
    (quest_set_slot, "qst_finnsburh_quest", slot_quest_current_state, 4),
    (party_relocate_near_party, "p_main_party", "p_frisian_village", 0),
    (disable_party),

    (store_time_of_day,":cur_time_of_day"),#0 to 24
    (val_add, ":cur_time_of_day", 1),
    (assign, reg22, 48),
    (val_sub,reg22,":cur_time_of_day"),
    (val_mod,reg22,24),
    (val_add,reg22, 1),
    ],
    [
    ("option_1", [],"...give the maid a wink and spend the rest of the feast with her.",
    [
    (assign, "$auto_enter_town", "p_frisian_village"),
    (assign, "$g_town_visit_after_rest", 1),
    (assign, "$g_last_rest_center", "p_frisian_village"),
    (assign, "$g_last_rest_payment_until", -1),
    (rest_for_hours, reg22, 3, 0),
    (change_screen_map),

    (add_xp_as_reward, 1500),
    (display_message, "@You ignore everything around you and focus on the maid. Her embrace gives you many joys..."),
    ]),
    ("option_2", [],"...drink, eat and ensure that the name of your host is honored properly, the woman isn't important.",
    [
    (assign, "$auto_enter_town", "p_frisian_village"),
    (assign, "$g_town_visit_after_rest", 1),
    (assign, "$g_last_rest_center", "p_frisian_village"),
    (assign, "$g_last_rest_payment_until", -1),
    (rest_for_hours, reg22, 3, 0),
    (call_script, "script_change_troop_renown", "trp_player", 15),
    (display_message, "@By honoring the name of your host propery you spread not only his but also your own fame..."),
    (change_screen_map),
    ]),

    ("option_3", [],"...stay modest, everything else is sinful.",
    [
    (assign, "$auto_enter_town", "p_frisian_village"),
    (assign, "$g_town_visit_after_rest", 1),
    (assign, "$g_last_rest_center", "p_frisian_village"),
    (assign, "$g_last_rest_payment_until", -1),
    (rest_for_hours, reg22, 3, 0),
    (val_add, "$piety", 5),
    (display_message, "@Staying modest increases your piety, however being modest brings no fame..."),
    (change_screen_map),
    ]),

    ],),
 ("finnsburg_quest_6",0,
    "You wake up by the sound of spears hitting the shields and cries of men outside the hall. The other Dani warriors have already got their equipment. "
    +"You hurry up to pull on your armour and grab your weapons.",
    "none", [
    (add_quest_note_from_sreg, "qst_finnsburh_quest", 3, "@Finn has betrayed the Dani and ordered to kill all Dani champions.", 0),
    (quest_set_slot, "qst_finnsburh_quest", slot_quest_current_state, 5),
    ],
    [
    ("option_1", [],"Continue",
    [
    (set_jump_mission, "mt_finns_hall_murder"),
    (assign, "$g_next_menu", "mnu_finnsburg_quest_7"),
    (modify_visitors_at_site, "scn_finns_hall_interior"),
    (reset_visitors),
    (set_visitor, 25, "trp_player"),
    (set_visitor, 22, "trp_dani_eaha"),
    (set_visitor, 27, "trp_dani_guthlaf"),
    (set_visitor, 23, "trp_dani_hengest"),
    (set_visitor, 24, "trp_dani_hocing"),
    (set_visitor, 28, "trp_dani_ordlaf"),
    (set_visitor, 26, "trp_dani_sigeferth"),

    (set_visitor, 18, "trp_finn_garulf"),
    (set_visitor, 19, "trp_frisian_king"),
    (set_visitor, 20, "trp_finn_aethelbald"),
    (set_visitor, 21, "trp_finn_guthere"),

    (assign, "$temp", "trp_frisian_king"),
    (jump_to_scene, "scn_finns_hall_interior"),
    (change_screen_mission),
    ]),
    # ("option_1", [],"test scene.",
    # [
    # #attacker entries: 16 and 17,
    # #18,19,20,21 entry outside of 17
    # #22,23,24,25,26,27,28 inside near 17
    # (jump_to_scene, "scn_finns_hall_interior"),
    # (change_screen_mission),
    # ]),
    ],),
 ("finnsburg_quest_7",0,
    "Since Garulf Guthlafing, a Jutish champion, died by Sigeferth's hands, Finn kept sending more men each night to assault his hall. "
    +"Although being undersiege in the hall the Dani champions are optimistic. The food and mead is plenty, there is enough room to sleep and defending the door is easier than storming it.",
    "none", [
    (add_quest_note_from_sreg, "qst_finnsburh_quest", 4, "@Finn has ordered to lay siege to his own hall. You have to defend against Frisian attacks.", 0),
    (quest_set_slot, "qst_finnsburh_quest", slot_quest_current_state, 7),
          (set_fixed_point_multiplier, 100),
          (position_set_x, pos0, 70),
          (position_set_y, pos0, 5),
          (position_set_z, pos0, 75),
          (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", "trp_finn_garulf", pos0),
    ],
    [
    ("option_1", [],"Continue",
    [
    (store_time_of_day,":cur_time_of_day"),#0 to 24
    (val_add, ":cur_time_of_day", 1),
    (assign, reg22, 48),
    (val_sub,reg22,":cur_time_of_day"),
    (val_mod,reg22,24),
    (val_add,reg22, 1),

    (assign, "$auto_enter_town", "p_frisian_village"),
    (assign, "$g_town_visit_after_rest", 1),
    (assign, "$g_last_rest_center", "p_frisian_village"),
    (assign, "$g_last_rest_payment_until", -1),
    (rest_for_hours, reg22, 15, 0),
    (change_screen_map),
    ]),

    ],),
 ("finnsburg_quest_8",mnf_scale_picture,
    "Finn's men try another assault. His son is leading the troops. It is time to fight!",
    "none", [
    (try_begin),
        (quest_slot_eq, "qst_finnsburh_quest", slot_quest_current_state, 11),
        (jump_to_menu, "mnu_finnsburg_quest_final_battle_talk"),
    (try_end),
    (set_background_mesh, "mesh_pic_sea_raiders"),
    ],
    [
    ("option_1", [],"To battle Dani champions!",
    [
    (set_jump_mission, "mt_finns_hall_battle"),
    (modify_visitors_at_site, "scn_finns_hall_interior"),
    (reset_visitors),

    # (try_begin),
        # (quest_slot_eq, "qst_finnsburh_quest", slot_quest_current_state, 12),
        # (troop_set_health, "trp_dani_eaha", 25),
        # (troop_set_health, "trp_dani_guthlaf", 25),
        # (troop_set_health, "trp_dani_hengest", 25),
        # (troop_set_health, "trp_dani_hocing", 25),
        # (troop_set_health, "trp_dani_ordlaf", 25),
        # (troop_set_health, "trp_dani_sigeferth", 25),
    # (else_try),
    (troop_set_health, "trp_dani_eaha", 100),
    (troop_set_health, "trp_dani_guthlaf", 100),
    (troop_set_health, "trp_dani_hengest", 100),
    (troop_set_health, "trp_dani_hocing", 100),
    (troop_set_health, "trp_dani_ordlaf", 100),
    (troop_set_health, "trp_dani_sigeferth", 100),
    # (try_end),


    (set_visitor, 25, "trp_player"),
    (set_visitor, 22, "trp_dani_eaha"),
    (set_visitor, 27, "trp_dani_guthlaf"),
    (set_visitor, 23, "trp_dani_hengest"),
    (set_visitor, 24, "trp_dani_hocing"),
    (set_visitor, 28, "trp_dani_ordlaf"),
    (set_visitor, 26, "trp_dani_sigeferth"),

    (set_visitor, 17, "trp_finn_aethelbald"),

    (assign, ":number_1", 3),
    (assign, ":number_2", 1),

    # set number of waves player has to fight
    (try_begin),
        (quest_slot_eq, "qst_finnsburh_quest", slot_quest_current_state, 7),
        (assign, "$temp", 2), # used to count number of waves
    (else_try),
        (quest_slot_eq, "qst_finnsburh_quest", slot_quest_current_state, 8),
        (assign, "$temp", 3), # used to count number of waves
    (else_try),
        (quest_slot_eq, "qst_finnsburh_quest", slot_quest_current_state, 9),
        (assign, "$temp", 4), # used to count number of waves
    (else_try),
        (quest_slot_eq, "qst_finnsburh_quest", slot_quest_current_state, 10),
        (assign, "$temp", 5), # used to count number of waves
    (else_try),
        (quest_slot_eq, "qst_finnsburh_quest", slot_quest_current_state, 12),
        (assign, "$temp", 10000), # # used to count number of waves, having 10,000 waves is like invinite, player is supposed to lose this last fight
    (try_end),

    (set_visitors, 17, "trp_frisian_freeman", ":number_1"),
    (set_visitors, 17, "trp_frisian_companion", ":number_2"),

    (try_begin),
        (quest_slot_eq, "qst_finnsburh_quest", slot_quest_current_state, 12),
        (set_visitors, 16, "trp_frisian_freeman", ":number_1"),
        (set_visitors, 16, "trp_frisian_companion", ":number_2"),
    (try_end),

    (jump_to_scene, "scn_finns_hall_interior"),
    (change_screen_mission),

    ]),

    ],),
    ("finnsburg_quest_final_battle_talk",0,
    "The men are getting tired as the assaults continue. You can feel that the last battle has come. Maybe you will die today, however it doesn't matter as you will die fighting, honoring your word and your name.",
    "none", [
    # (set_background_mesh, "mesh_pic_sea_raiders"),
    ],
    [
    ("option_1", [],"Continue",
    [
    (set_jump_mission, "mt_longboat_landing_1"),
    (assign, "$g_next_menu", "mnu_finnsburg_quest_8"),
    (modify_visitors_at_site, "scn_finns_hall_interior"),
    (reset_visitors),
    (assign, "$temp", "trp_dani_hocing"),
    (set_visitor, 0, "trp_player"),
    (set_visitor, 1, "trp_dani_eaha"),
    (set_visitor, 7, "trp_dani_guthlaf"),
    (set_visitor, 8, "trp_dani_hengest"),
    (set_visitor, 9, "trp_dani_hocing"),
    (set_visitor, 10, "trp_dani_ordlaf"),
    (set_visitor, 11, "trp_dani_sigeferth"),
    (jump_to_scene, "scn_finns_hall_interior"),
    (change_screen_mission),      ]),

    ],),

    ("finnsburg_quest_battle_won",mnf_scale_picture,
    "Finn's men are forced to retreat. However they will regroup and come back next night.",
    "none", [
    (set_background_mesh, "mesh_pic_victory"),
    (quest_get_slot, ":state", "qst_finnsburh_quest", slot_quest_current_state),
    (val_add, ":state", 1),
    (quest_set_slot, "qst_finnsburh_quest", slot_quest_current_state, ":state"),
    ],
    [
    ("option_1", [],"Continue",
    [
    (store_time_of_day,":cur_time_of_day"),#0 to 24
    (val_add, ":cur_time_of_day", 1),
    (assign, reg22, 48),
    (val_sub,reg22,":cur_time_of_day"),
    (val_mod,reg22,24),
    (val_add,reg22, 1),
    (assign, "$auto_enter_town", "p_frisian_village"),
    (assign, "$g_town_visit_after_rest", 1),
    (assign, "$g_last_rest_center", "p_frisian_village"),
    (assign, "$g_last_rest_payment_until", -1),
    (rest_for_hours, reg22, 15, 0),
    (change_screen_map),
     ]),

    ],),
    ("finnsburg_quest_battle_final",mnf_scale_picture,
    "You wake up with a terrible headache. Luckily you are alive. But you find out the only Danes who survived are Hengist, Ordlaf and Guthlaf. Hnaef lies dead on the ground, as well as Sigeferth and Eaha. Hnaef was mortally wounded by a blow that hit his head. Hengist and the other survivors all agreed to sign peace with Finn Folcwalding and the Frisians. It looks, however, that in the middle of the fray, even Aethelbald, Finn's heir, died fighting against Hnaef."
    +" You treat your wounds. Then Finn, Hildeburh and other Frisian warriors enter the hall through the gate.",
    "none", [
    (set_background_mesh, "mesh_pic_defeat"),
    (quest_set_slot, "qst_finnsburh_quest", slot_quest_current_state, 13),
    ],
    [
    ("option_1", [],"Glory to the fallen, their names will be remembered!",
    [
    (set_jump_mission, "mt_longboat_landing_1"),
    (assign, "$g_next_menu", "mnu_finnsburg_quest_final_feast"),
    (modify_visitors_at_site, "scn_finns_hall_interior"),
    (reset_visitors),
    (assign, "$temp", "trp_dani_hengest"),
    (set_visitor, 0, "trp_player"),
    # (set_visitor, 1, "trp_dani_eaha"),#dead
    (set_visitor, 2, "trp_dani_guthlaf"),
    (set_visitor, 3, "trp_dani_hengest"),
    # (set_visitor, 4, "trp_dani_hocing"),#dead
    (set_visitor, 5, "trp_dani_ordlaf"),
    # (set_visitor, 6, "trp_dani_sigeferth"),#dead
    # (set_visitor, 7, "trp_finn_garulf"),#dead
    (set_visitor, 8, "trp_frisian_king"),
    # (set_visitor, 9, "trp_finn_aethelbald"),#dead
    (set_visitor, 10, "trp_finn_guthere"),
    (set_visitor, 11, "trp_finn_hildeburh"),
    (jump_to_scene, "scn_finns_hall_interior"),
    (change_screen_mission),
     ]),
     ]),

    ("finnsburg_quest_final_feast",mnf_scale_picture,
    "First, the dead were removed and prepared for burial. Then the hall was cleaned and a great feast was organised the same day, where both Frisians and Danes took part. You, confused by the situation, stuck with the participants, and tried to enjoy the banquet. The evening after, Hnaef and Aethelbald corpses were burned on a pyre next to the beach. You and the Danes slept again in the village. You wake up in the morning and notice Hengist and Guthlaf speaking: Guthlaf placed Hnaef's sword on Hengist's lap.",
    "none", [
    (set_background_mesh, "mesh_pic_defeat"),
    (quest_set_slot, "qst_finnsburh_quest", slot_quest_current_state, 14),
    ],
    [
    ("option_1", [],"Continue...",
    [
    (set_jump_mission, "mt_longboat_landing_1"),
    (assign, "$g_next_menu", "mnu_finnsburg_quest_final_end"),
    (modify_visitors_at_site, "scn_finns_hall_interior"),
    (reset_visitors),
    (assign, "$temp", "trp_dani_guthlaf"),
    (set_visitor, 0, "trp_player"),
    # (set_visitor, 1, "trp_dani_eaha"),#dead
    (set_visitor, 2, "trp_dani_guthlaf"),
    (set_visitor, 7, "trp_dani_hengest"),
    # (set_visitor, 4, "trp_dani_hocing"),#dead
    (set_visitor, 11, "trp_dani_ordlaf"),
    # (set_visitor, 6, "trp_dani_sigeferth"),#dead

    (jump_to_scene, "scn_finns_hall_interior"),
    (change_screen_mission),
     ]),

    ],),

    ("finnsburg_quest_final_end",mnf_scale_picture,
    "You advanterous journey has not ended yet. You still need to return to Heorot. Your men are still waiting there for you."
    +"^^You join the next merchant ship travelling to Heorot. After you arrive, you find your men mainly drunken and in company of the local wenches. They have become lazy and some seem to be way fatter than before."
    +" The Dani women indeed showed them too much hospitality. It takes you a whole day to restore order and discipline.",
    "none", [
    (set_background_mesh, "mesh_pic_camp"),
    ],
    [
    ("option_1", [],"Continue...",
    [
    (rest_for_hours, 24, 16, 0),
    (party_relocate_near_party, "p_main_party", "p_dani_village", 1),
    (enable_party, "p_main_party"),
    (change_screen_map),
     ]),

    ],),
    ("finn_2_quest_start",mnf_scale_picture,
    "A messenger approaches your warband. He brings news from Hengist and gives you a letter, it reads:"+
    "^^'{playername}, the time to avenge Hnaef has arrived! Come to Heorot as fast as possible. The Dani host is awaiting you.'",
    "none", [
    (set_background_mesh, "mesh_pic_messenger"),
    ],
    [
    ("option_1", [],"The time has come!",
    [
    (quest_set_slot, "qst_finnsburh_quest_2", slot_quest_current_state, 2),
    (add_quest_note_from_sreg, "qst_finnsburh_quest_2", 2, "@You recieved the message that the preparations have concluded. Gather as many men as possible and travel to Heorot as fast as possible!", 0),
    (add_quest_note_from_sreg, "qst_finnsburh_quest_2", 7, "str_empty_string", 0),
    (change_screen_map),
     ]),

    ],),
    ("finnsburg_revenge_1",0,
    "A large fleet made up of Danes, Jutes and your men set sail from southern Scandza, heading towards the shores of Frisia. As the fleet comes closer to Frisia, the weather changes all of a sudden and a great storm begins."
    +" The wind is howling and you see thunders all around you. You fear, the whole operation would come to a sudden end due to the whims of nature. While you look around, you see the other warriors cheering and performing shield taunts."
    +" Hengist, standing next to you insures you that this is a good omen. Then he walks towards the bow of the ship and starts invoking the gods of the sky, the ocean and Dunraz, the great thunderer.",
    "none", [
    (quest_set_slot, "qst_finnsburh_quest_2", slot_quest_current_state, 4),
    ],
    [

    ("option_1", [],"Continue...",
    [
    (add_xp_as_reward, 1500),

    (assign, "$g_next_menu", "mnu_finnsburg_revenge_2"),
    (assign, "$tutorial_state", 0),
    (set_jump_mission, "mt_fleet_cutscene"),
    (modify_visitors_at_site, "scn_cutscene_longboat_fleet"),
    (reset_visitors),


    (try_begin),
        (eq,"$character_gender", tf_female),
        (troop_set_type,"trp_multiplayer_profile_troop_male", tf_female),
    (else_try),
        (troop_set_type,"trp_multiplayer_profile_troop_male", tf_male),
    (try_end),
    (str_store_troop_face_keys, s1, "trp_player"),
    (troop_set_face_keys, "trp_multiplayer_profile_troop_male", s1),
    (call_script, "script_dplmc_copy_inventory", "trp_player", "trp_multiplayer_profile_troop_male"),

    (set_visitor, 0, "trp_player"),
    (set_visitor, 1, "trp_kingdom_19_lord"),
    (set_visitor, 2, "trp_dani_guthlaf"),
    (set_visitor, 3, "trp_dani_hengest"),
    (set_visitor, 4, "trp_dani_haddingr"),
    (set_visitor, 5, "trp_dani_ordlaf"),
    (set_visitor, 6, "trp_dani_guthormr"),
    (set_visitor, 7, "trp_multiplayer_profile_troop_male"),
    (set_visitor, 8, "trp_scandinavian_comes"),

    (try_for_range, ":entry", 9, 75),
        (set_visitors, ":entry", "trp_scandinavian_freeman", 2),
    (try_end),

    (jump_to_scene, "scn_cutscene_longboat_fleet"),
    (change_screen_mission),
    ]),

    ],),
    ("finnsburg_revenge_2",0,
    "As soons as the storm started it ends and finally the fleet arrives the marshy coast of Frisia. Hengist decides to set up the camp in the woods, to conceal his forces from Finn the Frisian."+
    "^^While you were resting next to the fireplace with your men, you hear some of the guards screaming aloud: 'They found us, they are attacking, wake up!'"+
    "^The Frisians spotted the camp and are now assaulting your base with their men. Finn Folcwalding, however, doesn't seem to be there.",
    "none", [
    (quest_set_slot, "qst_finnsburh_quest_2", slot_quest_current_state, 5),
    ],
    [

    ("option_1", [],"To battle, champions!",
    [
    #0 player,
    #1-10 dani
    #11-20 frisi
    #21-26 frisi reinforcements
    # (assign, "$g_is_quick_battle", 1),

    (set_jump_mission, "mt_finn_camp_battle"),
    (assign, "$g_next_menu", "mnu_finnsburg_revenge_3"),
    (modify_visitors_at_site, "scn_finnquest_dani_camp"),
    (reset_visitors),
    (set_visitor, 0, "trp_player"),
    (set_visitor, 1, "trp_kingdom_19_lord"),
    (set_visitor, 2, "trp_dani_guthlaf"),
    (set_visitor, 3, "trp_dani_hengest"),
    (set_visitor, 4, "trp_dani_guthormr"),
    (set_visitor, 5, "trp_dani_ordlaf"),
    (set_visitor, 6, "trp_dani_haddingr"),
    (set_visitor, 7, "trp_scandinavian_comes"),


    (try_for_range, ":entry", 11, 21),
        (set_visitors, ":entry", "trp_northern_germanic_freeman", 4),
        (set_visitors, ":entry", "trp_northern_germanic_warrior", 1),
        (set_visitors, ":entry", "trp_frisian_freeman", 8),
        (set_visitors, ":entry", "trp_frisian_companion", 1),
    (try_end),

    (assign, ":stack_no", 1),
    (party_get_num_companion_stacks, ":end", "p_main_party"),
    (try_for_range, ":entry", 1, 11),
        (try_begin),
            (lt, ":stack_no", ":end"),
            (party_stack_get_troop_id, ":troop_no", "p_main_party", ":stack_no"),
            (party_stack_get_size, ":size", "p_main_party", ":stack_no"),
            (val_min, ":size", 3),
            (set_visitors, ":entry", ":troop_no", ":size"),
            (val_add, ":stack_no", 1),
            # (display_message, "@Added player troop"),
        (try_end),
        (set_visitors, ":entry", "trp_scandinavian_freeman", 3),
        (set_visitors, ":entry", "trp_scandinavian_retainer", 2),
        (set_visitors, ":entry", "trp_scandinavian_comes", 2),
        (set_visitors, ":entry", "trp_dane_vanguard", 2),
        (set_visitors, ":entry", "trp_jute_swordsman", 4),
    (try_end),
    (assign, "$temp", 3),
    (jump_to_scene, "scn_finnquest_dani_camp"),
    (change_screen_mission),
    ]),
    # ("option_1", [],"Test scene",
    # [
    # (jump_to_scene, "scn_finnquest_dani_camp"),
    # (change_screen_mission),
    # ]),

    ],),


    ("finnsburg_revenge_3",0,
    "You do your best to bring the wounded men on the ships while you reorganise your forces and follow the main host, led by Hengist, outside the forest towards the Frisian village. The village is heavily defended by hundreds of men, to prevail it won't be easy.",
    "none", [
    (quest_set_slot, "qst_finnsburh_quest_2", slot_quest_current_state, 6),
    ],
    [

    ("option_1", [],"Continue",
    [
    #0 player,
    #1-10 dani
    #11-20 frisi
    #21-26 frisi reinforcements
    # (assign, "$g_is_quick_battle", 1),

    (set_jump_mission, "mt_finn_camp_battle"),
    (assign, "$g_next_menu", "mnu_finnsburg_revenge_final"),
    (modify_visitors_at_site, "scn_frisian_town"),
    (reset_visitors),
    (set_visitor, 0, "trp_player"),
    (set_visitor, 1, "trp_kingdom_19_lord"),
    (set_visitor, 2, "trp_dani_guthlaf"),
    (set_visitor, 3, "trp_dani_hengest"),
    (set_visitor, 4, "trp_dani_guthormr"),
    (set_visitor, 5, "trp_dani_ordlaf"),
    (set_visitor, 6, "trp_dani_haddingr"),
    (set_visitor, 7, "trp_scandinavian_comes"),


    (try_for_range, ":entry", 11, 31),
        (set_visitors, ":entry", "trp_northern_germanic_freeman", 3),
        (set_visitors, ":entry", "trp_northern_germanic_warrior", 1),
        (set_visitors, ":entry", "trp_frisian_freeman", 3),
        (set_visitors, ":entry", "trp_frisian_companion", 1),
    (try_end),

    (assign, ":stack_no", 1),
    (party_get_num_companion_stacks, ":end", "p_main_party"),
    (try_for_range, ":entry", 1, 11),
        (try_begin),
            (lt, ":stack_no", ":end"),
            (party_stack_get_troop_id, ":troop_no", "p_main_party", ":stack_no"),
            (party_stack_get_size, ":size", "p_main_party", ":stack_no"),
            (val_min, ":size", 3),
            (set_visitors, ":entry", ":troop_no", ":size"),
            (val_add, ":stack_no", 1),
            # (display_message, "@Added player troop"),
        (try_end),
        (set_visitors, ":entry", "trp_scandinavian_freeman", 2),
        (set_visitors, ":entry", "trp_scandinavian_retainer", 2),
        (set_visitors, ":entry", "trp_scandinavian_comes", 2),
        (set_visitors, ":entry", "trp_dane_vanguard", 2),
        (set_visitors, ":entry", "trp_jute_swordsman", 3),
    (try_end),
    (assign, "$temp", 1),
    (jump_to_scene, "scn_frisian_town"),
    (change_screen_mission),

    ]),
    # ("option_1", [],"Test scene",
    # [
    # (jump_to_scene, "scn_frisian_town"),
    # (change_screen_mission),
    # ]),
     ],),

    ("finnsburg_revenge_lost",mnf_scale_picture,
    "You fall on the ground with multiple injuries. As you awake you discover that the Dani and Iuti army was defeated. Your own warband suffered high casualties too."
    +" Shame on the defeated. There names shall be forgotten.",
    "none", [
    (set_background_mesh, "mesh_pic_defeat"),
    ],
    [

    ("option_1", [],"Vae victis...",
    [
    (call_script, "script_fail_quest", "qst_finnsburh_quest_2"),
    (call_script, "script_end_quest", "qst_finnsburh_quest_2"),
    (call_script, "script_change_troop_renown", "trp_player", -25),
    (call_script, "script_party_inflict_attrition", "p_main_party", 75),
    (change_screen_map),
    ]),

    ],),
    ("finnsburg_revenge_final",0,
    "The ranks of the Frisians and the Jutish mercenaries are soon broke by your men and Hengist's. A few of the remaining warriors take refuge in the hall, with Finn Folcwalding and his retainer Guthere, protecting Hildeburh. You, Hengist, Guthlaf, Ordlaf, Guthormr and Hadding enter the hall alone, to face the last Frisians in an heroic duel.",
    "none", [
    (quest_set_slot, "qst_finnsburh_quest_2", slot_quest_current_state, 8),
    #(set_background_mesh, "mesh_pic_looted_village"), #madsci this blocks too much text
          (set_fixed_point_multiplier, 100),
          (position_set_x, pos0, 70),
          (position_set_y, pos0, 5),
          (position_set_z, pos0, 75),
          (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", "trp_frisian_king", pos0),
    ],
    [

    ("option_1", [],"The time of revenge has come!",
    [
    (set_jump_mission, "mt_finns_hall_battle"),
    (modify_visitors_at_site, "scn_finns_hall_interior"),
    (reset_visitors),

    (troop_set_health, "trp_dani_guthlaf", 100),
    (troop_set_health, "trp_dani_hengest", 100),
    (troop_set_health, "trp_dani_haddingr", 100),
    (troop_set_health, "trp_dani_ordlaf", 100),
    (troop_set_health, "trp_dani_guthormr", 100),

    (set_visitor, 0, "trp_frisian_king"),
    (set_visitor, 1, "trp_finn_guthere"),
    (set_visitor, 2, "trp_finn_hildeburh"),
    (set_visitor, 3, "trp_frisian_companion"),
    (set_visitor, 4, "trp_frisian_companion"),
    (set_visitor, 5, "trp_frisian_companion"),
    (set_visitor, 6, "trp_frisian_companion"),

    (set_visitor, 25, "trp_player"),
    (set_visitor, 27, "trp_dani_guthlaf"),
    (set_visitor, 23, "trp_dani_hengest"),
    (set_visitor, 24, "trp_dani_guthormr"),
    (set_visitor, 28, "trp_dani_ordlaf"),
    (set_visitor, 26, "trp_dani_haddingr"),

    (assign, "$temp", -2),

    (jump_to_scene, "scn_finns_hall_interior"),
    (change_screen_mission),

    ]),

    ],),

    ("finn_quest_final_banquet_1",0,
    "The dead are buried and a great feast is organized to honor the victory, to honor the fallen and finally to celebrate the coronation of the new king of the Frisians!",
    "none", [

    ],
    [

    ("option_1", [],"Glory to the victors! Vae victis!",
    [
    (quest_set_slot, "qst_finnsburh_quest_2", slot_quest_current_state, 11),
    (set_jump_mission, "mt_final_feast"),
    (modify_visitors_at_site, "scn_finns_hall_interior"),
    (reset_visitors),

    (assign, "$g_next_menu", "mnu_finn_quest_final_banquet_2"),

    (set_visitor, 0, "trp_player"),
    (set_visitor, 1, "trp_dani_guthlaf"),
    (set_visitor, 2, "trp_dani_hengest"),
    (set_visitor, 3, "trp_dani_guthormr"),
    (set_visitor, 4, "trp_dani_ordlaf"),
    (set_visitor, 5, "trp_dani_haddingr"),
    (set_visitor, 6, "trp_jute_swordsman"),
    (set_visitor, 7, "trp_jute_swordsman"),
    (set_visitor, 8, "trp_jute_swordsman"),
    (set_visitor, 9, "trp_scandinavian_comes"),
    (set_visitor, 10, "trp_scandinavian_comes"),
    (set_visitor, 11, "trp_scandinavian_comes"),
    (set_visitor, 12, "trp_finn_hildeburh"),
    (set_visitor, 13, "trp_musican_male"),
    (set_visitor, 14, "trp_musican_female"),

    (assign, "$temp", -2),

    (jump_to_scene, "scn_finns_hall_interior"),
    (change_screen_mission),

    ]),

    ],),

 ("finn_quest_final_banquet_2",0,
    "Everything is almost the same as during the first feast. Generous amounts of food are served, although not of great varied. Plenty of mead is brought by the maidens. And finally, you spot again the maiden, who was very kind towards you during the first feast. Again you smile when she looks into your direction. She notices your sign and aigain stays close to you. "
    +"^^However, there is an important difference. Many men are dead now, and their name will always be remembered. Among the greatest are Hnaef, Sigeferth and Eaha! Why did they have to die? You don't know. Maybe it was their fate. You only know, it is part of the life of a warrior: Death and pain, chaos and destruction are the soul of a warrior. However, after the battle comes the feast! And the warrios who survived can call themselves lucky: You see Hengest in company of two maidens, you see Guthlaf and Ordlaf in a drinking competition. Guthormr is singing and Haddingr is dancing on a table."
+"^^You decide to join them, nothing can hold you now. Its the time after the battle, the time of joy. You sing with Guthormr, dance with Haddingr, drink with Guthlaf and Ordlaf and you secretly sneak between Hengest and his maidens and give each of them a kiss, while Hengest is laughing."
+"^^The mead is dimming the minds,  the music is whistling and the food is warming the bellies. Finally, desires of flesh slowly bring an end to the festivities. Every warrior is in company of at least one maiden. The one who smiled at you is already lying by your side as the musicians finally stop playing....",
    "none", [
    (quest_set_slot, "qst_finnsburh_quest_2", slot_quest_current_state, 12),
    (party_relocate_near_party, "p_main_party", "p_frisian_village", 0),
    (store_current_day, ":day"),
    (val_add, ":day", 40),
    (val_max, ":day", 1),
    (quest_set_slot, "qst_finnsburh_quest_2", slot_quest_dont_give_again_period, ":day"),
    (call_script, "script_end_quest", "qst_finnsburh_quest_2"),
    (call_script, "script_change_troop_renown", "trp_player", 5),
    (call_script, "script_change_player_honor", 1),
    (add_xp_as_reward,2000),
    ],
    [
    ("option_1", [],"Today we feast, tomorrow we battle! This is the fate of a warrior!",
    [
    (assign, "$auto_enter_town", "p_frisian_village"),
    (assign, "$g_town_visit_after_rest", 1),
    (assign, "$g_last_rest_center", "p_frisian_village"),
    (assign, "$g_last_rest_payment_until", -1),
    (rest_for_hours, 4, 3, 0),
    (change_screen_map),
    ]),


    ],),

#################BIG CHUNGUS FINNSBURG QUEST END
("visit_nero",0,
    "You open the door and enter a long shaft. You follow it. You feel like have walked through this tunnel before. After a while you see light at the end of the tunnel. In front of you stretches a large garden, or at least what is left of it. The Romans seem to be using this place as dump. It stinks disgustingly. Right behind the garden you spot the ruins of a palace complex. You climb up a stair to enter it.",
    "none", [
    ],
    [
    ("option_1", [],"Continue.",
    [
      (assign, "$temp", 2),
      (set_jump_mission, "mt_visit_rome_secrets"),
      (modify_visitors_at_site,"scn_imperial_palace"),
      (reset_visitors),
      (set_visitor, 0, "trp_player"),
      (jump_to_scene, "scn_imperial_palace"),
      (change_screen_mission),
    ]),
],),

### ERNAK QUEST
("onoguroi_intro",mnf_scale_picture,
    "The great steppes stretched out before you, a vast expanse of grass and dirt that seemed to go on forever. In the distance, you could see the camp of the Onogurs, a tribe of fierce warriors who had left the Huns after Attila's death. You inform them that you have been sent by Ernak, son of Attila, to speak with their chief, Atalgar, and convince him to join Ernak's clan in a grand alliance. You are led to Atalgar's tent, where the chief sat cross-legged on a furskin rug, surrounded by his advisors. Atalgar is an old man, with a lined face and a mane of white hair. His eyes are sharp and wise, and he welcomes you with a mix of curiosity and suspicion.",
    "none", [
      (set_background_mesh, "mesh_pic_khergit"),
    ],
    [
    ("option_1", [],"Continue.",
    [
      (call_script, "script_setup_minor_Faction_king_meeting"),
    ]),
],),
("saraguroi_intro",0,
    "As you approach the Kutrigur camp, you spot Ilterish conversing with a mysterious Hun. As he drew closer, the Hun revealed himself as Aydar, an ambassador of the Sabirs, and began attempting to persuade Ilterish to join forces with Khan Gostun.",
    "none", [
      (set_background_mesh, "mesh_pic_khergit"),
    ],
    [
    ("option_1", [],"Continue.",
    [
      (call_script, "script_setup_minor_Faction_king_meeting"),
    ]),
],),
("kutriguroi_intro",mnf_scale_picture,
    "You see a wide-open space with dozens of yurts scattered throughout. The yurts are made of felt, with wooden frames and a central opening for smoke to escape. The camp is alive with activity, with women cooking over open fires and children playing and chasing each other around.^^In the center of the camp, there is a large yurt that stands out from the others. It is adorned with colorful tapestries and banners, and guards stand at the entrance, watching everyone who passes by. This is clearly the dwelling of the Saragur chieftain, Bulyak.^^You approache the guards and announce that you are send by Ernak to speak with Bulyak. The guards nod and allow you to pass into the yurt. Inside, you find Bulyak seated on a large rug, surrounded by his advisors and warriors.^^Bulyak is a tall man with a muscular build, and his face bears the scars of many battles. He wears a fur-lined robe and a leather belt adorned with a large silver buckle. His eyes are sharp and intelligent, and he greets you with a nod.",
    "none", [
      (set_background_mesh, "mesh_pic_khergit"),
    ],
    [
    ("option_1", [],"Continue.",
    [
        (party_get_slot, ":meeting_scene", "$g_encountered_party", slot_town_center),
        (faction_get_slot, ":meeting_troop", "$g_encountered_party_faction", slot_faction_leader),
        (set_jump_mission, "mt_longboat_landing_1"),
        (assign, "$g_next_menu", "mnu_auto_return_to_map"),
        (modify_visitors_at_site, ":meeting_scene"),
        (reset_visitors),
        (assign, "$temp", ":meeting_troop"),
        (set_visitor, 35, ":meeting_troop"),
        (set_visitor, 35,"trp_sabir_aydar"),
        (set_visitor, 13, "trp_player"),
        (jump_to_scene, ":meeting_scene"),
        (change_screen_mission),
    ]),
],),
("kutriguroi_victory",mnf_scale_picture,
    "Your arrival is already eagerly awaited. The warriors greet you and lead you to their chief. The Sabir ambassador is also here.",
    "none", [
      (set_background_mesh, "mesh_pic_khergit"),
    ],
    [
    ("option_1", [],"Continue.",
    [
        (party_get_slot, ":meeting_scene", "$g_encountered_party", slot_town_center),
        (faction_get_slot, ":meeting_troop", "$g_encountered_party_faction", slot_faction_leader),
        (set_jump_mission, "mt_longboat_landing_1"),
        (assign, "$g_next_menu", "mnu_auto_return_to_map"),
        (modify_visitors_at_site, ":meeting_scene"),
        (reset_visitors),
        (assign, "$temp", ":meeting_troop"),
        (set_visitor, 35, ":meeting_troop"),
        (set_visitor, 35,"trp_sabir_aydar"),
        (set_visitor, 13, "trp_player"),
        (jump_to_scene, ":meeting_scene"),
        (change_screen_mission),
    ]),
],),

("village_of_the_lekhs",mnf_scale_picture,
    "{s20}",
    "none", [
      (try_begin),
          (check_quest_active, "qst_ernak_quest"),
          (quest_slot_eq, "qst_ernak_quest", slot_quest_target_saraguroi, 2),
          (str_store_string, s20, "@Ambush! The Lekhs are attacking!"),
      (else_try),
          (str_store_string, s20, "@You spot a small village in the distance."),
      (try_end),
      (set_background_mesh, "mesh_pic_khergit"),
  ],
    [
    ("option_1", [
        (check_quest_active, "qst_ernak_quest"),
        (quest_slot_eq, "qst_ernak_quest", slot_quest_target_saraguroi, 2),
    ],"Continue.",
    [
        (assign, "$g_battle_result", 0),
        (assign, "$g_engaged_enemy", 1),
        (assign, "$g_next_menu", "mnu_lekh_victory"),#victory menu
        (assign, "$temp4", "mnu_ernak_defeat"),#victory menu
        (set_party_battle_mode),
        (set_jump_mission,"mt_lead_charge_quest"),#can be used for any quest battle
        (jump_to_scene, "scn_battle_caucasian_mountains_6"),
        (change_screen_mission),
    ]),

    ("option_2", [
        (neg|quest_slot_eq, "qst_ernak_quest", slot_quest_target_saraguroi, 2),
    ],"Leave.",
    [
      (change_screen_map),
    ]),
],),
("lekh_victory",mnf_scale_picture,
    "You defeated the Lekh ambush. Their chief is already awaiting you in their village. It is time for negotiations.^^You approach the village. All of a sudden, a cloud darkens the sky and all birds are gone. A thunder roams in the distance. For a moment, you think you hear a voice whispering:^'All creaturs living in the vast steppe, from the flowers to the horses, call for blood to grow.'",
    "none", [
      (set_background_mesh, "mesh_pic_victory"),
      (party_set_flags, "p_village_of_the_lekhs", pf_hide_defenders, 0),
    ],
    [
    ("option_1", [
    ],"Continue.",
    [
        (set_jump_mission, "mt_visit_lekhs"),
        (modify_visitors_at_site, "scn_village_of_lekhs"),
        (reset_visitors),
        (set_visitor, 35, "trp_lekh_chief"),
        (set_visitor, 19, "trp_caucasian_townswoman"),
        (set_visitor, 18, "trp_caucasian_townswoman"),
        (set_visitor, 17, "trp_caucasian_townswoman"),
        (set_visitor, 16, "trp_caucasian_townswoman"),
        (set_visitor, 15, "trp_caucasian_townswoman"),
        (set_visitor, 14, "trp_caucasian_townswoman"),
        (set_visitor, 13, "trp_caucasian_townswoman"),
        (set_visitor, 12, "trp_caucasian_townswoman"),
        (set_visitor, 11, "trp_caucasian_townswoman"),
        (set_visitor, 10, "trp_caucasian_townswoman"),
        (set_visitor, 9, "trp_caucasian_townswoman"),
        (set_visitor, 8, "trp_caucasian_townswoman"),
        (set_visitor, 7, "trp_caucasian_townswoman"),
        (set_visitor, 6, "trp_caucasian_townswoman"),
        (set_visitor, 5, "trp_caucasian_townswoman"),
        (set_visitor, 4, "trp_caucasian_townswoman"),
        (set_visitor, 3, "trp_caucasian_townswoman"),
        (set_visitor, 2, "trp_caucasian_townswoman"),
        (set_visitor, 1, "trp_caucasian_townswoman"),
        (set_visitor, 0, "trp_player"),
        (jump_to_scene, "scn_village_of_lekhs"),
        (change_screen_mission),
    ]),
],),
("lekh_plunder",mnf_scale_picture,
    "You give the order to plunder the village. There is no resistance.",
    "none", [
      (set_background_mesh, "mesh_pic_victory"),
    ],
    [
    ("option_1", [
    ],"Continue.",
    [
        (set_jump_mission, "mt_lekh_plunder"),
        (modify_visitors_at_site, "scn_village_of_lekhs"),
        (reset_visitors),
        (try_for_range, ":entry", 1, 20),
            (set_visitors, ":entry", "trp_caucasian_townswoman", 3),
        (try_end),
        (jump_to_scene, "scn_village_of_lekhs"),
        (jump_to_menu, "mnu_auto_return_to_map"),
        (change_screen_mission),
    ]),
],),

("ruins_of_olpia_pontica",mnf_scale_picture,
    "{s20}",
    "none", [
      (try_begin),
          (check_quest_active, "qst_ernak_quest"),
          (quest_slot_eq, "qst_ernak_quest", slot_quest_target_kutriguroi, 2),
          (str_store_string, s20, "@As you approach the ruins of Olbia Pontica, you are struck by the desolation of the once thriving Greco-Sarmatian city. The place is now a barren wasteland, devoid of any semblance of civilization. The old port lies abandoned, its docks broken and rotting, while the main town is in ruins, its buildings reduced to rubble and dust.^^Amidst this desolation, you can see a few huts scattered here and there, their roofs sagging and their walls crumbling. The only signs of life come from the horses tied around the ruins, their whinnies and neighs echoing through the empty streets.^^As you make your way through the ruins, you notice a gruesome sight: the heads of bandits, impaled on spikes, their empty eyes staring out at the desolation around them. Clearly, the Sabirs have been here before you, and they have dealt with the bandits in their own brutal way.^^You must proceed with caution, for the Sabirs are still lurking in the ruins, waiting for anyone who might challenge their claim to the ancient artifact. As you move through the desolate streets, you can hear Sabir voices, their harsh words echoing through the ruins."),
      (else_try),
          (str_store_string, s20, "@You spot the ruins of Olpia Pontica in the distance."),
      (try_end),
      #(set_background_mesh, "mesh_pic_looted_village"), #madsci this blocks text
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 62),
      (position_set_y, pos0, 30),
      (position_set_z, pos0, 170),
      (set_game_menu_tableau_mesh, "tableau_center_note_mesh", "p_ruins_of_oplia_pontica", pos0),
    ],
    [
    ("option_1", [
        (check_quest_active, "qst_ernak_quest"),
        (quest_slot_eq, "qst_ernak_quest", slot_quest_target_kutriguroi, 2),
    ],"Continue.",
    [
        (set_jump_mission, "mt_olpia_mission"),
        (modify_visitors_at_site, "scn_ruins_of_olpia_pontica"),
        (reset_visitors),
        (set_visitor, 7, "trp_sabir_horse_archer"),
        (set_visitor, 6, "trp_sabir_cataphract"),
        (set_visitor, 5, "trp_sabir_horse_archer"),
        (set_visitor, 4, "trp_sabir_cataphract"),
        (set_visitor, 3, "trp_sabir_horse_archer"),
        (set_visitor, 2, "trp_sabir_cataphract"),
        (set_visitor, 1, "trp_sabir_horse_archer"),
        (set_visitor, 0, "trp_player"),
        (jump_to_scene, "scn_ruins_of_olpia_pontica"),
        (change_screen_mission),
    ]),
    ("option_2", [],"Leave.",
    [
      (change_screen_map),
    ]),
],),

("olpia_victory",mnf_scale_picture,
    "You have defeated the Sabirs. Among the loot you find the Ancient helmet of Farzoy. It is rusty, old and ugly. Return to the Kutriguroi and bring their chief the helmet.^^While you stand there looking at the dead you hear a thunder in the distance. It reminds you of the power and majesty of nature, which has both shaped and been shaped by the people who once called this place home. Even now, birds fly around, a living link to the past that echoes through the ages.",
    "none", [
      (set_background_mesh, "mesh_pic_victory"),
    ],
    [
    ("option_1", [],"Continue.",
    [
      (call_script, "script_change_troop_renown", "trp_player", 10),
      (quest_set_slot, "qst_ernak_quest", slot_quest_target_kutriguroi, 3),
      (add_quest_note_from_sreg, "qst_ernak_quest", 7, "@Kutriguroi task (Completed): You have obtained the ancient helmet of Farzoy, return to the Kutriguroi.",0),
      (jump_to_menu, "mnu_auto_return_to_map"),

    ]),

],),

("ernak_defeat",mnf_scale_picture,
    "You have been defeated. Ernak's task has failed!",
    "none", [
      (set_background_mesh, "mesh_pic_defeat"),
    ],
    [
    ("option_1", [],"Continue.",
    [
      (call_script, "script_change_troop_renown", "trp_player", -50),
      (call_script, "script_change_player_relation_with_troop", "trp_knight_23_8", -200),
      (quest_set_slot, "qst_ernak_quest", slot_quest_current_state, -2),
      (call_script, "script_fail_quest", "qst_ernak_quest"),
      (call_script, "script_end_quest", "qst_ernak_quest"),
      (jump_to_menu, "mnu_auto_return_to_map"),
    ]),
],),

("camp_of_tatra",mnf_scale_picture,
    "You spot a camp in the distance.",
    "none", [
      (set_background_mesh, "mesh_pic_khergit"),
    ],
    [
    ("option_1", [(quest_slot_eq, "qst_ernak_quest", slot_quest_target_onoguroi, 4),],"Join the forces of the Onogurs.",
    [
        (jump_to_menu, "mnu_camp_of_tatra_speech"),
    ]),
    ("option_1", [],"Leave.",
    [
      (change_screen_map),
    ]),
]),
("camp_of_tatra_speech",mnf_scale_picture,
    "As the party arrived at the Sabir camp, they were greeted by the imposing figure of Tatra, a rough warlord from the steppes with a thick beard and piercing eyes. He looked at the group with disdain, sizing them up and down as if they were nothing more than cattle.",
    "none", [
      (set_background_mesh, "mesh_pic_khergit"),
    ],
    [
    ("option_1", [],"Continue.",
    [
      (quest_set_slot, "qst_ernak_quest", slot_quest_target_onoguroi, 5),
      (set_jump_mission, "mt_longboat_landing_1"),
      (assign, "$g_next_menu", "mnu_camp_of_tatra_battle"),
      (modify_visitors_at_site, "scn_onoguroi_town"),
      (reset_visitors),
      (assign, "$temp", "trp_sabir_tatra"),
      (set_visitor, 13, "trp_onoguroi_king"),
      (set_visitor, 35, "trp_sabir_tatra"),
      (set_visitor, 13, "trp_player"),
      (jump_to_scene, "scn_onoguroi_town"),
      (change_screen_mission),
    ]),
]),
("camp_of_tatra_battle",mnf_scale_picture,
    "A last sacrifice is made to the sky-gods. During the ceremony a falcon is sighted. This is a good omen. The warriors are ready and battle can start.",
    "none", [
      (set_background_mesh, "mesh_pic_khergit"),
    ],
    [
    ("option_1", [],"Ride, ride, ride!",
    [
        (quest_set_slot, "qst_ernak_quest", slot_quest_target_onoguroi, 6),
        (party_quick_attach_to_current_battle, "p_onoguroi_village", 0),
        (assign, "$g_battle_result", 0),
        (assign, "$g_engaged_enemy", 1),
        (assign, "$g_next_menu", "mnu_tartar_victory"),#victory menu
        (assign, "$temp4", "mnu_ernak_defeat"),#victory menu
        (set_party_battle_mode),
        (set_jump_mission,"mt_lead_charge_quest"),#can be used for any quest battle
        (jump_to_scene, "scn_random_scene_new_steppe_custom_10"),
        (change_screen_mission),
    ]),

]),

("tartar_victory",mnf_scale_picture,
    "The battle is won and the steppe is red with the blood of the Sabirs. Alka is found and safe.^^The Onogurs loot everything that has at least some value. Then they fetch some bottles to get drunk. You sit there and observe everything closely. Suddenly, Alka approaches.",
    "none", [
      (set_background_mesh, "mesh_pic_victory"),
    ],
    [
    ("option_1", [],"Continue.",
    [
      (quest_set_slot, "qst_ernak_quest", slot_quest_target_onoguroi, 7),
      (set_jump_mission, "mt_longboat_landing_1"),
      (assign, "$g_next_menu", "mnu_camp_of_tatra_battle"),
      (modify_visitors_at_site, "scn_onoguroi_town"),
      (reset_visitors),
      (assign, "$temp", "trp_hun_alka"),
      (set_visitor, 14, "trp_onoguroi_king"),
      (set_visitor, 35, "trp_hun_alka"),
      (set_visitor, 13, "trp_player"),
      (jump_to_scene, "scn_onoguroi_town"),
      (change_screen_mission),
    ]),
],),

("ernak_oath",mnf_scale_picture,
    "You follow Ernak through his camp. Now you notice the multitude of warriors that are gathered in and around it. You have never seen as many Huns in your whole life lifetime. The sound of neighing horses and clashing weapons filled the air as you pass through the throngs of soldiers.^^At the center of the camp, the chieftains are waiting, flanked by their trusted advisors and generals. The chieftains greet prince Ernak and you. They thank you for your efforts in reuniting the tribes.",
    "none", [
      (set_background_mesh, "mesh_pic_khergit"),
    ],
    [
    ("option_1", [],"Continue.",
    [
      (set_jump_mission, "mt_longboat_landing_1"),
      (assign, "$g_next_menu", "mnu_ernak_feast"),
      (modify_visitors_at_site, "scn_the_oath"),
      (reset_visitors),
      (assign, "$temp", "trp_knight_23_8"),
      (set_visitor, 0, "trp_player"),
      (set_visitor, 1, "trp_knight_23_8"),
      (set_visitor, 2, "trp_onoguroi_king"),
      (set_visitor, 3, "trp_saraguroi_king"),
      (set_visitor, 4, "trp_kutriguroi_king"),
      (try_for_range, ":entry", 5, 35),
          (set_visitors, ":entry", "trp_hunnic_horse_archer", 2),
      (try_end),
      (jump_to_scene, "scn_the_oath"),
      (change_screen_mission),
    ]),
],),

("ernak_feast",mnf_scale_picture,
    "After the battle comes the feast and after the feast the battle. Everyone knows that the Sabirs are waiting for a chance to attack, but nevertheless the warriors celebrate with great joy.^^As the feast continues, Ilterish, Bulyak and Atalgar sit together and laugh heartily, reminiscing about their past adventures and battles. They were clearly happy to have each other as allies and Ernak as their leader.^^But their joy was short-lived. Suddenly, the sound of a galloping horse echoed throughout the camp, catching everyone's attention. The warriors looked up and saw a lone rider approaching them. It is Aydar, the Sabir messenger.",
    "none", [
      (set_background_mesh, "mesh_pic_khergit"),
    ],
    [
    ("option_1", [],"Continue.",
    [
      (set_jump_mission, "mt_longboat_landing_1"),
      (assign, "$g_next_menu", "mnu_ernak_final_battle"),
      (modify_visitors_at_site, "scn_the_oath"),
      (reset_visitors),
      (assign, "$temp", "trp_knight_23_8"),
      (set_visitor, 0, "trp_player"),
      (set_visitor, 1, "trp_knight_23_8"),
      (mission_tpl_entry_set_override_flags, "mt_longboat_landing_1", 36, 0),
      (set_visitor, 36, "trp_sabir_aydar"),
      (jump_to_scene, "scn_the_oath"),
      (change_screen_mission),
    ]),
],),

("ernak_final_battle",mnf_scale_picture,
    "Aydar rides away with the bird, mouse, frog and five arrows, visibly confused. Ernak knows the time Gostun would have spent trying to decipher the message was for him very valuable as it allows himself to prepare the warriors and saddle the horses.^^An entire day passes. Finally Ernak sallies outside the camp leading his army, towards Gostun's host.",
    "none", [
      (set_background_mesh, "mesh_pic_khergit"),
    ],
    [
    ("option_1", [],"Continue.",
    [
      (assign,"$g_battle_won",0),
      (quest_set_slot, "qst_ernak_quest", slot_quest_current_state, 5),
      (set_jump_mission, "mt_ernak_final_battle"),
      #1-15 huns
      #16-30 sabirs
      #31,32 sabir heroes
      #33 ernak
      #34,35,36,37 player and other kings
      (modify_visitors_at_site, "scn_final_battle"),
      (reset_visitors),
      (set_visitor, 34, "trp_player"),
      (set_visitor, 33, "trp_knight_23_8"),
      (set_visitor, 35, "trp_kutriguroi_king"),
      (set_visitor, 36, "trp_saraguroi_king"),
      (set_visitor, 37, "trp_onoguroi_king"),
      (set_visitor, 31, "trp_sabir_aydar"),
      (set_visitor, 32, "trp_sabiroi_king"),

      (assign, ":stack_no", 1),
      (party_get_num_companion_stacks, ":end", "p_main_party"),
      (try_for_range, ":entry", 1, 16),
          (set_visitors, ":entry", "trp_hunnic_skirmisher", 1),
          (set_visitors, ":entry", "trp_hunnic_horse_archer", 5),
          (set_visitors, ":entry", "trp_hunnic_veteran", 1),
          (try_begin),
              (lt, ":stack_no", ":end"),
              (party_stack_get_troop_id, ":troop_no", "p_main_party", ":stack_no"),
              (party_stack_get_size, ":size", "p_main_party", ":stack_no"),
              (ge, ":size", 1),
              (val_min, ":size", 2),
              (set_visitors, ":entry", ":troop_no", ":size"),
              (val_add, ":stack_no", 1),
          (try_end),
          (quest_slot_eq, "qst_ernak_quest", slot_quest_target_saraguroi, 20),
          (set_visitors, ":entry", "trp_lekh_horseman", 1),
      (try_end),

      (try_for_range, ":entry", 16, 31),
          (set_visitors, ":entry", "trp_sabir_horse_archer", 5),
          (set_visitors, ":entry", "trp_sabir_cataphract", 2),
      (try_end),
      (jump_to_scene, "scn_final_battle"),
      (change_screen_mission),
    ]),
],),

("ernak_final_battle_victory",mnf_scale_picture,
    "The aftermath of the battle between the Huns and the Sabirs is one of devastation for the latter. The Sabirs suffer a crushing defeat at the hands of the Huns, led by prince Ernak, son of Attila. The battlefield is strewn with the bodies of the fallen Sabirs, and the survivors are fleeing towards the river Raha, hoping to escape the wrath of the victorious Huns.^^Meanwhile, Prince Ernak is hailed as a hero by his people. He has proven his mettle in battle and has secured a decisive victory over his enemies.^^The Huns celebrated their triumph with great fervour, with the leaders of the tribes gathering to honour the prince and his army.",
    "none", [
      #temp = 1 player killed, temp = 2 player life
      (set_background_mesh, "mesh_pic_victory"),
      (try_begin),
          (eq, "$temp", 1),
      (else_try),
          (add_xp_as_reward, 1000),
          (troop_add_gold, "trp_player", 5000),
          (call_script, "script_change_player_relation_with_troop", "$g_talk_troop", 15),
          (call_script, "script_change_player_relation_with_troop", "trp_kutriguroi_king", 15),
          (call_script, "script_change_player_relation_with_troop", "trp_onoguroi_king", 15),
          (call_script, "script_change_player_relation_with_troop", "trp_saraguroi_king", 15),
          (call_script, "script_change_player_relation_with_troop", "trp_kingdom_23_lord", 5),
          (call_script, "script_change_player_relation_with_faction", "$g_talk_troop_faction", 5),
      (try_end),
    ],
    [
    ("option_1", [],"Continue.",
    [
      (set_jump_mission, "mt_longboat_landing_1"),
      (assign, "$g_next_menu", "mnu_ernak_final_feast"),
      (assign, "$temp", "trp_knight_23_8"),
      (quest_set_slot, "qst_ernak_quest", slot_quest_current_state, 6),
      (set_jump_mission, "mt_longboat_landing_1"),
      (modify_visitors_at_site, "scn_the_oath"),
      (reset_visitors),
      (set_visitor, 0, "trp_player"),
      (set_visitor, 1, "trp_knight_23_8"),
      (set_visitor, 2, "trp_onoguroi_king"),
      (set_visitor, 3, "trp_saraguroi_king"),
      (set_visitor, 3, "trp_kutriguroi_king"),
      (set_visitor, 4, "trp_hun_alka"),
      (jump_to_scene, "scn_the_oath"),
      (change_screen_mission),
    ]),
],),

("ernak_final_feast",mnf_scale_picture,
    "Following victory over the Sabirs, Prince Ernak held a grand banquet to celebrate his triumph and mark the occasion of his marriage to Alka, daughter of Atalgar, chief of the Onogurs. The banquet is a lavish affair, with food, wine, and music flowing freely, as the Huns celebrate their prince's achievements.^^The marriage between Ernak and Alka is a significant event, cementing the alliance between the Huns and the Onogurs. The couple was joined in matrimony with great pomp and ceremony, with the leaders of the tribes bearing witness to the union.^^The feasting and revelry continues long into the night, as the Huns celebrate the victories of their prince, the marriage and the future of their tribe. The feast itself remains in your memory only as a vague dream. Only the countless stars shining in the endless sky stay clearly in your mind. and the shaman invoking the sky-gods.",
    "none", [
      (set_background_mesh, "mesh_pic_khergit"),
    ],
    [
    ("option_1", [],"Continue.",
    [
      (add_xp_as_reward, 2500),
      (quest_set_slot, "qst_ernak_quest", slot_quest_current_state, 7),
      (call_script, "script_succeed_quest", "qst_ernak_quest"),
      (call_script, "script_end_quest", "qst_ernak_quest"),
      (jump_to_menu, "mnu_auto_return_to_map"),
    ]),
],),

  (
    "rebellion_launched",mnf_disable_all_keys|mnf_scale_picture,
    "The city of {s10} has revolted against the oppressive ruler of {s11} and has taken up arms against the {s12}. They dream of a Hispania free of Barbarian oppression and are calling for Rome's aid in their struggle.",
    "none",
    [
(set_background_mesh, "mesh_pic_swad"),
(assign, ":center", "$g_notification_menu_var1"),
(str_store_party_name, s10, ":center"),
(party_get_slot, ":town_lord", ":center", slot_town_lord),
(str_store_troop_name, s11, ":town_lord"),
(store_faction_of_party, ":party_faction", ":center"),
(str_store_faction_name, s12, ":party_faction"),
],
    [
      ("continue",[],"Continue...",[
(jump_to_menu, "mnu_auto_return_to_map"),
]),
    ],
  ),

#madsci cheat menu has too many options so move them to a separate page
  ("cheat_add_troops",0,
   "Select troops to add:",
   "none",
   [
     ],
    [
      ("camp_cheat_riders_of_rohan",[],"Skip Finnsburg quest",[
        (quest_set_slot, "qst_finnsburh_quest_2", slot_quest_current_state, 12),
        (troop_set_slot, "trp_augundzi_king", slot_troop_met, 1),
        (quest_set_slot, "qst_finnsburh_quest_2", slot_quest_dont_give_again_period, 2),

        (call_script, "script_change_player_relation_with_faction", "fac_minor_frisians", 200),
        (faction_set_slot, "fac_minor_frisians", slot_faction_leader, "trp_dani_guthlaf"),
        (str_store_troop_name, s1, "trp_frisian_king"),
        (str_store_troop_name, s2, "trp_dani_guthlaf"),
        (display_message, "@{s1} was killed in battle."),
        (display_message, "@{s2} is the new leader of the Frisi."),

        (troop_set_note_available, "trp_frisian_king", 0),
        (troop_set_note_available, "trp_dani_guthlaf", 1),
        (add_troop_note_tableau_mesh, "trp_dani_guthlaf", "tableau_troop_note_mesh"),
        (party_set_slot, "p_frisian_village", slot_town_lord, "trp_dani_guthlaf"),
        (party_remove_members, "p_frisian_village", "trp_frisian_king", 1),
        (troop_set_slot, "trp_frisian_king", slot_troop_occupation, dplmc_slto_dead), #madsci
        (try_begin),
          (troop_get_slot, ":leaded_party", "trp_frisian_king", slot_troop_leaded_party),
          (gt, ":leaded_party", 0),
          (party_is_active, ":leaded_party", 0),
          (call_script, "script_remove_hero_prisoners", ":leaded_party"),
          (remove_party, ":leaded_party"),
        (try_end),
        (party_add_leader, "p_frisian_village", "trp_dani_guthlaf"),
        (troop_set_slot, "trp_dani_guthlaf", slot_troop_age, 25),
        (troop_set_slot, "trp_dani_guthlaf", slot_troop_religion, slot_religion_paganism),
        (troop_set_slot, "trp_dani_guthlaf", slot_troop_renown, 450),

        (troop_set_slot, "trp_dani_hengest", slot_troop_occupation, slto_kingdom_hero),
	      (call_script, "script_change_troop_faction", "trp_dani_hengest", "fac_kingdom_19"),
        (troop_set_note_available,"trp_dani_hengest",1),
        (troop_set_slot, "trp_dani_hengest", slot_troop_wealth, 10000),
        (call_script, "script_cf_select_random_walled_center_with_faction", "fac_kingdom_19", -1),
        (assign, ":center", reg0),
        (try_begin),
          (is_between, ":center", walled_centers_begin, walled_centers_end),
          (call_script, "script_create_kingdom_hero_party", "trp_dani_hengest", ":center"),
        (try_end),
      ]),

      ("camp_cheat_riders_of_rohan",[],"Riders of Rohan",
       [
	(display_message, "@Add troops"),
         (party_add_members, "p_main_party", "trp_northern_germanic_horse_archer", 20),
        ]
       ),

      ("camp_cheat_conan",[],"CONAN O BORBOR",
       [
	(display_message, "@Add troops"),
         (party_add_members, "p_main_party", "trp_cimmerian_tribesman", 20),
        ]
       ),

      ("camp_cheat_roman",[],"Restitutor Orbis",
       [
	(display_message, "@Add troops"),
         (party_add_members, "p_main_party", "trp_miles_legionis", 100),
        ]
       ),

      ("camp_cheat_spawn_here",[],"Spawn here enemies",
       [
	(display_message, "@spawned enemies"),
         (set_spawn_radius, 0),
	(spawn_around_party, "p_main_party", "pt_deserters"),
	(party_add_members, reg0, "trp_tutorial_maceman", 120),
	(party_set_faction, reg0, "fac_outlaws"),
	(party_ignore_player, reg0, 1),
	(party_set_courage, reg0, 14),
        ]
       ),

      ("camp_enable_sea_battles",[
(try_begin),
(eq, "$sea_battles", 1),
(str_store_string, s10, "@Disable sea battles"),
(else_try),
(str_store_string, s10, "@Enable sea battles"),
(try_end),
],"{s10}.",
       [
	(try_begin),
	(eq, "$sea_battles", 1),
	(assign, "$sea_battles", 0),
	(display_message, "@Sea battles disabled"),
	(else_try),
	(assign, "$sea_battles", 1),
	(display_message, "@Sea battles enabled"),
	(try_end),
         (jump_to_menu, "mnu_camp_cheat"),
        ]
       ),

      ("scene_tester",[
],"Spawn bandits to besiege closest center",
       [
	(call_script, "script_get_closest_walled_center", "p_main_party"),
	(assign, ":center", reg0),
	(str_store_party_name, s10, ":center"),
	(try_begin),
	(party_slot_eq, ":center", slot_center_is_besieged_by, -1),
 	(set_spawn_radius, 0),
	(spawn_around_party, "p_main_party", "pt_rebel_army"),
	(assign, ":rebel_army", reg0),
	(party_set_slot, ":rebel_army", slot_party_home_center, ":center"),
	(party_add_members, ":rebel_army", "trp_manhunter", 300),
	(party_add_members, ":rebel_army", "trp_bandit", 300),
	(party_add_members, ":rebel_army", "trp_brigand", 300),
	(party_set_faction, ":rebel_army", "fac_outlaws"),
	(party_ignore_player, ":rebel_army", 1),
	(party_set_flags, ":rebel_army", pf_default_behavior, 1),
	(party_set_ai_behavior, ":rebel_army", ai_bhvr_attack_party),
	(party_set_ai_object, ":rebel_army", ":center"),
	(party_set_slot, ":center", slot_center_is_besieged_by, ":rebel_army"),
	(store_current_hours, ":cur_hours"),
	(party_set_slot, ":center", slot_center_siege_begin_hours, ":cur_hours"),
	(call_script, "script_village_set_state", ":center", svs_under_siege),
	(display_message, "@spawned enemies to besiege {s10}"),
	(else_try),
	(display_message, "@can't besiege {s10}"),
	(try_end),
        ]
       ),
      ("camp_action_1",[
(eq,"$cheat_mode",1),
],"{!}Cheat: Walk around the test scene.",
       [(set_jump_mission,"mt_ai_training"),
        (jump_to_scene, "scn_field_1"),
        (change_screen_mission),
        ]
       ),

      ("back_to_camp_menu",[],"{!}Back to cheat menu.",
       [
         (jump_to_menu, "mnu_camp_cheat"),
        ]
       ),
      ]
  ),

  (
    "suebi_civil_war_ended",mnf_disable_all_keys|mnf_scale_picture,
    "{s11} has won the Suebi civil war and is now known as {s10}.",
    "none",
    [
        (try_begin),
          (faction_get_slot, ":faction_leader", "$temp", slot_faction_leader),
          (ge, ":faction_leader", 0),
          (set_fixed_point_multiplier, 100),
          (position_set_x, pos0, 70),
          (position_set_y, pos0, 5),
          (position_set_z, pos0, 75),
          (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", ":faction_leader", pos0),
        (try_end),
],
    [
      ("continue",[],"Continue...",[
(assign, "$temp", -1),
(jump_to_menu, "mnu_auto_return_to_map"),
]),
    ],
  ),

  (
    "rebels_join_rome",mnf_disable_all_keys|mnf_scale_picture,
    "The rebels of {s10} have successfully petitioned to join {s11}.",
    "none",
    [
(str_store_faction_name, s10, "$temp"),
(str_store_faction_name, s11, "fac_kingdom_1"),
        (try_begin),
          (faction_get_slot, ":faction_leader", "$temp", slot_faction_leader),
          (ge, ":faction_leader", 0),
          (set_fixed_point_multiplier, 100),
          (position_set_x, pos0, 70),
          (position_set_y, pos0, 5),
          (position_set_z, pos0, 75),
          (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", ":faction_leader", pos0),
        (try_end),
],
    [
      ("continue",[],"Continue...",[
(assign, "$temp", -1),
(jump_to_menu, "mnu_auto_return_to_map"),
]),
    ],
  ),

  ("men_drowned",0,
    "You are caught in a storm at sea. ^^Your casualties: {s8}",
    "none", [
	#(set_background_mesh, "mesh_pic_mb_warrior_1"),
      (call_script, "script_inflict_casualties_to_party_vc", "p_main_party", 4),
    ],

    [("back_to_sea",[],"Continue...",
        [
          (call_script, "script_change_player_party_morale", -5),
          (jump_to_menu, "mnu_auto_return_to_map"),#phaiak
      ]),
    ],
  ),

  ("uprising_successful",0,
    "The uprising has been successful.",
    "none", [
        (try_begin),
          (faction_get_slot, ":faction_leader", "$temp", slot_faction_leader),
          (gt, ":faction_leader", 0),
          (set_fixed_point_multiplier, 100),
          (position_set_x, pos0, 70),
          (position_set_y, pos0, 5),
          (position_set_z, pos0, 75),
          (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", ":faction_leader", pos0),
        (try_end),
    ],

    [("back_to_map",[],"Continue...",
        [
	  (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),
      ]),
    ],
  ),

  ("armenian_uprising_no_player",0,
    "The Armenians have taken {s10} in an uprising and have established a new kingdom under the leadership of {s11}.",
    "none", [
	(str_store_party_name, s10, "$temp"),
	(str_store_troop_name, s11, "trp_kingdom_31_lord"),
        (try_begin),
          (set_fixed_point_multiplier, 100),
          (position_set_x, pos0, 70),
          (position_set_y, pos0, 5),
          (position_set_z, pos0, 75),
          (set_game_menu_tableau_mesh, "tableau_troop_note_mesh", "trp_kingdom_31_lord", pos0),
        (try_end),
    ],

    [("back_to_map",[],"Continue...",
        [
	  (leave_encounter),
          (jump_to_menu, "mnu_auto_return_to_map"),
      ]),
    ],
  ),

  (
    "jewish_rebellion_launched",mnf_disable_all_keys|mnf_scale_picture,
    "A major rebellion has erupted in {s10} in response to forced Christianization and persecution of Jews.",
    "none",
    [
(set_background_mesh, "mesh_pic_swad"),
(assign, ":center", "$g_notification_menu_var1"),
(str_store_party_name, s10, ":center"),
],
    [
      ("continue",[],"Continue...",[
(jump_to_menu, "mnu_auto_return_to_map"),
]),
    ],
  ),

  (
    "generic_rebellion_launched",mnf_disable_all_keys|mnf_scale_picture,
    "A major rebellion has erupted in {s10} as the {s11} attempt to overthrow their oppressors.",
    "none",
    [
(set_background_mesh, "mesh_pic_swad"),
(assign, ":center", "$g_notification_menu_var1"),
(assign, ":faction", "$g_notification_menu_var2"),
(str_store_party_name, s10, ":center"),
(str_store_faction_name, s11, ":faction"),
],
    [
      ("continue",[],"Continue...",[
(jump_to_menu, "mnu_auto_return_to_map"),
]),
    ],
  ),

  ("camp_action_read_book2",0,
   "Choose a book to read:",
   "none",
   [],
    [
      ("action_read_book_8",[(player_has_item, "itm_book_proclus_1"),
                             (item_slot_eq, "itm_book_proclus_1", slot_item_book_read, 0),
                             (str_store_item_name, s1, "itm_book_proclus_1"),
                             ],"{s1}.",
       [(assign, "$temp", "itm_book_proclus_1"),
        (jump_to_menu, "mnu_camp_action_read_book_start"),
        ]
       ),
      ("action_read_book_9",[(player_has_item, "itm_heretical_codex"),
                             (item_slot_eq, "itm_heretical_codex", slot_item_book_read, 0),
                             (str_store_item_name, s1, "itm_heretical_codex"),
                             ],"{s1}.",
       [(assign, "$temp", "itm_heretical_codex"),
        (jump_to_menu, "mnu_camp_action_read_book_start"),
        ]
       ),
      ("book_previous_page",[],"Previous page.",
       [(jump_to_menu, "mnu_camp_action_read_book"),
        ]
       ),
      ("camp_action_4",[],"Back to camp menu.",
       [(jump_to_menu, "mnu_camp"),
        ]
       ),
      ]
  ),

("haddingrs_revenge_meeting_guthormr",0,
  "As you cross the threshold of Heorot, Guthormr rises to meet you, his gaze sharp as the northern winds.",
  "none",[
    (set_background_mesh, "mesh_pic_nord"),
  ],[
  ("option_1",[],"Continue...",[
    (call_script, "script_setup_troop_meeting", "trp_dani_guthormr", -1), #SB : script call
  ]),
]),

("haddingrs_revenge_beach_battle",0,
  "You follow Guthormr toward the beach, where a host of Dani warriors stands ready, their blades gleaming as they await the enemy's arrival.",
  "none",[
    (set_background_mesh, "mesh_pic_charge"),
  ],[
  ("option_1",[
    (ge, "$cheat_mode", 1)
  ],"Test scene...",[
    (jump_to_scene, "scn_haddingrs_revenge_beach_battle"),
    (change_screen_mission),
  ]),
  ("option_1",[],"Continue...",[
    #haddingrs_revenge_beach_battle
    #17,18,19,25 for talk
    (set_jump_mission, "mt_longboat_landing_1"),
    (assign, "$g_next_menu", "mnu_haddingrs_revenge_beach_battle_landing"),
    (modify_visitors_at_site, "scn_haddingrs_revenge_beach_battle"),
    (reset_visitors),
    (assign, "$temp", "trp_dani_king"),
    (set_visitor, 10, "trp_dani_king"),
    (set_visitor, 11, "trp_player"),
    (set_visitor, 12, "trp_dani_guthormr"),
    (set_visitor, 13, "trp_dani_haddingr"),

    (jump_to_scene, "scn_haddingrs_revenge_beach_battle"),
    (change_screen_mission),
  ]),
]),

("haddingrs_revenge_defeat",mnf_scale_picture,
"The clash of steel fades, and the cries of war grow distant. The ravens circle above, bearing witness to your fate. Will your name be sung in the sagas, or is this where your story ends?",
"none", [
    (set_background_mesh, "mesh_pic_defeat"),
  ],[
  ("option_1", [],"Embrace the halls of the fallen!",[
    (change_screen_quit),
  ]),
]),

("haddingrs_revenge_beach_battle_landing",0,
  "The ships carve through the surf, their prows biting into the shore as warriors leap onto the sand. At their head strides Svipdagr, his armor gleaming like a beacon, rallying his men with every step. Both hosts form their battle lines, shields locked and weapons raised, before surging forward to meet in the crash of steel and fury.",
  "none",[
    (set_background_mesh, "mesh_pic_charge"),
  ],[
  ("option_1",[],"Continue...",[
    (assign, ":end", 50),
    (enable_party, "p_haddingrs_revenge_sedgean"),
    (party_clear, "p_haddingrs_revenge_sedgean"),
    (try_for_range, ":unused", 0, ":end"),# use p_camp_bandits as temp ally party
      (store_party_size_wo_prisoners, ":size", "p_haddingrs_revenge_sedgean"),
      (try_begin),
        (le, ":size", 200),
        (faction_get_slot, ":template", "fac_minor_dani", slot_faction_reinforcements_a),
        (gt, ":template", 0),
        (party_add_template, "p_haddingrs_revenge_sedgean", ":template"),
      (else_try),
        (assign, ":end", -1),
      (try_end),
    (try_end),
    (party_add_leader, "p_haddingrs_revenge_sedgean", "trp_dani_king"),
    (party_set_faction, "p_haddingrs_revenge_sedgean", "fac_minor_dani"),

    (party_set_faction, "p_dani_village", "fac_minor_augundzi"),
    (party_clear, "p_dani_village"),# the dani village is the  encountered party and thus the enemy, we give it to the augundzi, as they conquer them anyway
    (call_script, "script_fully_refresh_minor_faction_garrison", "p_dani_village", 200),

    # (party_add_leader, "p_dani_village", "trp_scandinavian_comes"),

    (party_quick_attach_to_current_battle, "p_haddingrs_revenge_sedgean", 0), #allies

    # calculate battle variables (mainly necessary if there are also allies)
    (assign, "$g_ally_party", "p_haddingrs_revenge_sedgean"),
    (assign, "$g_enemy_party", "p_dani_village"),
    (call_script, "script_encounter_calculate_fit"),
    (try_begin),
      (eq, "$new_encounter", 1),
      (assign, "$new_encounter", 0),
      (assign, "$g_encounter_is_in_village", 0),
      (assign, "$g_encounter_type", 0),
      (call_script, "script_encounter_init_variables"),
      (assign, "$encountered_party_hostile", 1),
      (assign, "$encountered_party_friendly", 0),
    (try_end),

    (troop_set_health, "trp_dani_king", 100),
    (troop_set_health, "trp_augundzi_king", 100),

    (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 2),
    (assign, "$g_battle_result", 0),
    (assign, "$g_engaged_enemy", 0),
    (assign, "$g_next_menu", "mnu_haddingrs_revenge_beach_battle_won"),#victory menu
    (assign, "$temp4", "mnu_haddingrs_revenge_defeat"),#defeat menu

    # as its a larger battle we should also calculate battle advantage
    (call_script, "script_calculate_battle_advantage"),
    (set_battle_advantage, reg0),

    (set_party_battle_mode),
    (set_jump_mission,"mt_lead_charge_quest"),#can be used for any quest battle
    (jump_to_scene, "scn_haddingrs_revenge_beach_battle"),
    (change_screen_mission),

    #kill dani king, as he dies in battle
    (remove_member_from_party, "trp_dani_king", "p_dani_village"),
    (troop_set_slot, "trp_dani_king", slot_troop_occupation, dplmc_slto_dead),
    (party_set_slot, "p_dani_village", slot_town_lord, -1),
  ]),
]),

("haddingrs_revenge_beach_battle_won",mnf_scale_picture,
"Amid the chaos of battle, Gramr sets his sights on Svipdagr and strides toward him, his voice cutting through the clash of steel. Raising his sword, he commands the warriors to form a ring, clearing the field for a duel to the death. The din of war dims as the two rivals face each other, their blades hungry for blood.",
"none", [
    (set_background_mesh, "mesh_pic_charge"),
  ],[
  ("option_1",[
    (ge, "$cheat_mode", 1)
  ],"Test scene...",[
    (jump_to_scene, "scn_haddingrs_revenge_beach_battle"),
    (change_screen_mission),
  ]),
  ("option_1", [],"Duel!",[

    (party_clear, "p_haddingrs_revenge_sedgean"), # clear temp ally party
    (party_set_faction, "p_haddingrs_revenge_sedgean", "fac_neutral"),# clear temp ally party
    (disable_party, "p_haddingrs_revenge_sedgean"),# clear temp ally party

    #refresh the dani village after battle
    (call_script, "script_fully_refresh_minor_faction_garrison", "p_dani_village", 200),

    (troop_set_health, "trp_dani_king", 100),
    (troop_set_health, "trp_augundzi_king", 100),

    (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 2),
    (set_jump_mission, "mt_haddingr_duel"),
    (modify_visitors_at_site, "scn_haddingrs_revenge_beach_battle"),
    (reset_visitors),
    (assign, "$temp", "trp_augundzi_king"),
    (set_visitor, 15, "trp_dani_king"),
    (set_visitor, 16, "trp_augundzi_king"),
    (set_visitor, 17, "trp_player"),

    (set_visitor, 18, "trp_saami_hunter", 1),
    (set_visitor, 19, "trp_scandinavian_retainer", 1),
    (set_visitor, 20, "trp_saami_hunter", 1),
    (set_visitor, 21, "trp_scandinavian_retainer", 1),
    (set_visitor, 22, "trp_saami_hunter", 1),
    (set_visitor, 23, "trp_scandinavian_retainer", 1),
    (set_visitor, 24, "trp_saami_hunter", 1),
    (set_visitor, 25, "trp_scandinavian_retainer", 1),

    (set_visitor, 26, "trp_dane_vanguard", 1),
    (set_visitor, 27, "trp_dane_vanguard", 1),
    (set_visitor, 28, "trp_dane_vanguard", 1),
    (set_visitor, 29, "trp_dane_vanguard", 1),
    (set_visitor, 30, "trp_dane_vanguard", 1),
    (set_visitor, 31, "trp_dane_vanguard", 1),
    (set_visitor, 32, "trp_dani_guthormr", 1),
    (set_visitor, 33, "trp_dani_haddingr", 1),

    (jump_to_scene, "scn_haddingrs_revenge_beach_battle"),
    (change_screen_mission),
  ]),
]),

("haddingrs_revenge_imprisoned",mnf_scale_picture,
"Days pass in the dim confines of the great hall, the weight of iron and fate heavy upon you. Haddingr and Guthormr sit in silence, their eyes shadowed with thought."
+" Only the guards break the solitude, bringing meager rations while the sounds of feasting and song echo beyond the walls - the Augandzi reveling in their triumph.",
"none", [
    (set_background_mesh, "mesh_pic_defeat"),
  ],[
  ("option_1", [],"Continue...",[
    (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 4),

    (store_time_of_day,":cur_time_of_day"),#0 to 24
    (val_add, ":cur_time_of_day", 1),
    (assign, reg22, 72),
    (val_sub,reg22,":cur_time_of_day"),

    (assign, "$auto_enter_town", "p_dani_village"),
    (assign, "$g_town_visit_after_rest", 1),
    (assign, "$g_last_rest_center", "p_dani_village"),
    (assign, "$g_last_rest_payment_until", -1),
    (rest_for_hours, reg22, 15, 0),
    # (leave_encounter),
    (change_screen_map),
  ]),
]),

("haddingrs_revenge_escape",mnf_scale_picture,
"Three nights have passed in uneasy silence - until now. A great clamor erupts beyond the walls, the din of steel and shouts cutting through the night. Suddenly, the doors burst open. Ordlaf stands before you, breathless, his eyes burning with urgency.",
"none", [
    (set_background_mesh, "mesh_pic_charge"),
  ],[
  ("option_1", [],"Continue...",[
    (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 5),
    (set_jump_mission, "mt_longboat_landing_1"),
    (assign, "$g_next_menu", "mnu_haddingrs_revenge_escape_2"),
    (modify_visitors_at_site, "scn_finns_hall_interior"),
    (reset_visitors),
    (assign, "$temp", "trp_dani_ordlaf"),
    (set_visitor, 0, "trp_player"),
    (set_visitor, 1, "trp_dani_haddingr"),
    (set_visitor, 7, "trp_dani_guthormr"),
    (set_visitor, 8, "trp_dani_ordlaf"),

    (jump_to_scene, "scn_finns_hall_interior"),
    (change_screen_mission),
  ]),
]),

("haddingrs_revenge_escape_2",mnf_scale_picture,
"Ordlaf leads you and Haddingr through the chaos raging outside Heorot's walls, the clash of steel and cries of battle filling the air. Moving swiftly, you weave through the turmoil until the shadowed embrace of the forest offers refuge. There, among the trees, a familiar figure awaits - Signe, Haddingr's mother.",
"none", [
    (set_background_mesh, "mesh_pic_escape_1"),
  ],[
  ("option_1",[
    (ge, "$cheat_mode", 1)
  ],"Test scene...",[
    (jump_to_scene, "scn_haddingrs_revenge_forest_hideout"),
    (change_screen_mission),
  ]),
  ("option_1", [],"Continue...",[
    (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 6),
    (set_jump_mission, "mt_longboat_landing_1"),
    (assign, "$g_next_menu", "mnu_auto_return_to_map"),
    (modify_visitors_at_site, "scn_haddingrs_revenge_forest_hideout"),
    (reset_visitors),
    (assign, "$temp", "trp_dani_signe"),
    (set_visitor, 0, "trp_player"),
    (set_visitor, 1, "trp_dani_haddingr"),
    (set_visitor, 2, "trp_dani_guthormr"),
    (set_visitor, 3, "trp_dani_ordlaf"),
    (set_visitor, 4, "trp_dani_signe"),
    (set_visitor, 5, "trp_dani_groa"),

    (jump_to_scene, "scn_haddingrs_revenge_forest_hideout"),
    (change_screen_mission),
  ]),
]),
("haddingrs_revenge_sedgean",mnf_scale_picture,
"The scent of damp earth and woodsmoke greets you as you step into the Sedgean village. Modest huts stand amidst the reeds, their thatched roofs swaying in the breeze. Villagers pause their work to eye you warily - strangers are rare here.",
"none", [
    (set_background_mesh, "mesh_pic_castlesnow"),
  ],[
  ("option_1",[
    (ge, "$cheat_mode", 1)
  ],"Test scene...",[
    (jump_to_scene, "scn_haddingrs_revenge_sedgean"),
    (change_screen_mission),
  ]),
  ("option_1", [
    (check_quest_active, "qst_haddingrs_revenge"),
    (this_or_next|quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 7),
    (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 29),
  ],"Continue...",[
    (try_begin),
      (is_currently_night),
      (display_message, "@Come back during day!", message_alert),
    (else_try),
      (set_jump_mission, "mt_visit_minor_town"),
      (modify_visitors_at_site, "scn_haddingrs_revenge_sedgean"),
      (reset_visitors),
      #villagers
      (set_visitor, 13, "trp_town_walker_1"),
      (set_visitor, 14, "trp_town_walker_2"),
      (set_visitor, 15, "trp_town_walker_1"),
      (set_visitor, 16, "trp_town_walker_2"),
      (set_visitor, 17, "trp_town_walker_1"),
      (set_visitor, 18, "trp_town_walker_2"),
      (set_visitor, 19, "trp_town_walker_1"),
      (set_visitor, 20, "trp_town_walker_2"),
      (set_visitor, 21, "trp_town_walker_1"),
      (set_visitor, 22, "trp_town_walker_2"),
      (set_visitor, 23, "trp_town_walker_1"),
      (set_visitor, 24, "trp_town_walker_2"),
      (set_visitor, 25, "trp_town_walker_1"),
      (set_visitor, 26, "trp_town_walker_2"),
      (set_visitor, 27, "trp_town_walker_1"),
      (set_visitor, 28, "trp_town_walker_2"),
      (set_visitor, 29, "trp_town_walker_1"),
      (set_visitor, 30, "trp_town_walker_2"),
      (set_visitor, 31, "trp_town_walker_1"),
      (set_visitor, 32, "trp_town_walker_2"),

      (set_visitor, 35, "trp_dani_ordlaf"),

      (set_jump_entry, 0),
      (assign, "$talk_context", tc_town_talk),
      (jump_to_scene, "scn_haddingrs_revenge_sedgean"),
      (change_screen_mission),
    (try_end),
  ]),
  ("option_1", [],"Leave...",[
    (change_screen_map),
  ]),
]),
("haddingrs_revenge_wagnofthus_hall",mnf_scale_picture,
"{s9}",
"none", [
    (try_begin),
      (check_quest_active, "qst_haddingrs_revenge"),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 12),
      (str_store_string, s9, "@Near Wagnofthus's dwelling, Haddingr stands by the crackling fire, his stance firm, his eyes alight with unwavering resolve. Not far off, Harthgrepa watches in silence, her gaze lingering upon him."),
    (else_try),
      (check_quest_active, "qst_haddingrs_revenge"),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 9),
      (str_store_string, s9, "@The cold winds of Scandza bite at your skin as you arrive at Wagnofthus's dwelling. Outside, Haddingr moves with precision, locked in a sparring match against one of his loyal warriors. Nearby, Wagnofthus observes in silence, his gaze stern and unyielding.^^Not far from them, Signe and Harthgrepa sit together, speaking in hushed tones. As you draw closer, Haddingr notices your approach and steps forward to greet you."),
    (else_try),
      (str_store_string, s9, "@You see Wangofthus hall in the distance."),
    (try_end),
    (set_background_mesh, "mesh_pic_castlesnow"),
  ],[
  ("option_1",[
    (ge, "$cheat_mode", 1)
  ],"Test scene...",[
    (jump_to_scene, "scn_haddingrs_revenge_wangofthus_hall"),
    (change_screen_mission),
  ]),
  ("option_1", [
    (check_quest_active, "qst_haddingrs_revenge"),
    (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 12),
  ],"Continue...",[
    #0 pplayer outside, 1 player inside, 2 haddingr, 3 soldier sparring, 4 gigant, 5 daughter of giant, 6-7 dani bitches
    # 8-16 other soldiers
    (assign, "$temp", "trp_dani_haddingr"),# start conversation with haddingr
    (set_jump_mission, "mt_longboat_landing_1"),
    (assign, "$g_next_menu", "mnu_auto_return_to_map"),
    (modify_visitors_at_site, "scn_haddingrs_revenge_wangofthus_hall"),
    (reset_visitors),
    (assign, "$g_battle_result", 0),
    #villagers
    (set_visitor, 1, "trp_player"),
    (set_visitor, 4, "trp_dani_haddingr"),
    (set_visitor, 5, "trp_giant_harthgrepa"),
    (set_visitor, 6, "trp_giant_wagnofthus"),
    (set_visitor, 7, "trp_dani_signe"),

    (assign, "$talk_context", tc_town_talk),
    (jump_to_scene, "scn_haddingrs_revenge_wangofthus_hall"),
    (change_screen_mission),
  ]),
  ("option_2", [
    (check_quest_active, "qst_haddingrs_revenge"),
    (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 9),
  ],"Continue...",[
    #0 pplayer outside, 1 player inside, 2 haddingr, 3 soldier sparring, 4 gigant, 5 daughter of giant, 6-7 dani bitches
    # 8-16 other soldiers
    (assign, "$temp", "trp_dani_haddingr"),# start conversation with haddingr
    (set_jump_mission, "mt_haddingr_giant_hall"),
    (modify_visitors_at_site, "scn_haddingrs_revenge_wangofthus_hall"),
    (reset_visitors),
    (assign, "$g_battle_result", 0),
    #villagers
    (set_visitor, 1, "trp_player"),
    (set_visitor, 2, "trp_dani_haddingr"),
    (set_visitor, 3, "trp_scandinavian_comes"),
    (set_visitor, 4, "trp_giant_wagnofthus"),
    (set_visitor, 5, "trp_giant_harthgrepa"),
    (set_visitor, 6, "trp_dani_groa"),
    (set_visitor, 7, "trp_dani_signe"),
    (set_visitor, 8, "trp_scandinavian_freeman"),
    (set_visitor, 9, "trp_scandinavian_freeman"),
    (set_visitor, 10, "trp_scandinavian_freeman"),
    (set_visitor, 11, "trp_scandinavian_freeman"),
    (set_visitor, 12, "trp_scandinavian_freeman"),
    (set_visitor, 13, "trp_scandinavian_freeman"),
    (set_visitor, 14, "trp_scandinavian_freeman"),
    (set_visitor, 15, "trp_scandinavian_freeman"),
    (set_visitor, 16, "trp_scandinavian_freeman"),

    (assign, "$talk_context", tc_town_talk),
    (jump_to_scene, "scn_haddingrs_revenge_wangofthus_hall"),
    (change_screen_mission),
  ]),
  ("option_1", [],"Leave...",[
    (change_screen_map),
  ]),
]),

("haddingrs_revenge_guthormr_talk",mnf_scale_picture,
"{s9}",
"none", [
    (try_begin),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 10),
      (str_store_string, s9, "@The guards bar your entry, yet grant you permission to speak with Guthormr."),
    (else_try),
      (str_store_string, s9, "@Groa stands quietly by the hearth, her gaze fixed on the conversation unfolding before her. As you leave, she turns to you, her voice soft and burdened with sorrow."),
    (try_end),
    (set_background_mesh, "mesh_pic_castlesnow"),
  ],[
  ("option_0", [
    (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 10),
  ],"Talk with Guthormr...",[
    (set_jump_mission, "mt_longboat_landing_1"),
    (assign, "$g_next_menu", "mnu_haddingrs_revenge_guthormr_talk"),
    (modify_visitors_at_site, "scn_finns_hall_interior"),
    (reset_visitors),
    (assign, "$temp", "trp_dani_guthormr"),
    (set_visitor, 0, "trp_player"),
    (set_visitor, 7, "trp_dani_guthormr"),
    (set_visitor, 8, "trp_dani_groa"),

    (jump_to_scene, "scn_finns_hall_interior"),
    (change_screen_mission),
  ]),
  ("option_1", [
    (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 10),
  ],"Leave...",[
    (change_screen_map),
  ]),
  ("option_2", [
    (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 11),
  ],"Continue...",[
    (set_jump_mission, "mt_longboat_landing_1"),
    (assign, "$g_next_menu", "mnu_auto_return_to_map"),
    (modify_visitors_at_site, "scn_finns_hall_interior"),
    (reset_visitors),
    (assign, "$temp", "trp_dani_groa"),
    (set_visitor, 0, "trp_player"),
    (set_visitor, 8, "trp_dani_groa"),

    (jump_to_scene, "scn_finns_hall_interior"),
    (change_screen_mission),
  ]),
]),

("haddingrs_revenge_message",mnf_scale_picture,
"A messenger approaches with a sealed letter bearing Haddingr's crest:"
+"^^To my most trusted companion, {playername},"
+"^^The time of waiting is over. My training under Wagnofthus has reached its end, and I am now ready to gather the strength needed to reclaim what is ours."
+"^But ill news accompanies my readiness: my brother Guthormr has passed in his seclusion, leaving me as the last heir to our father's legacy. Though his actions in life caused us grief, his death only hardens my resolve to restore honor to the Skjoldungr name."
+"^I beseech thee, {playername}, to meet me once more at the dwelling of Wagnofthus in Gothiscandza. Together, we shall begin the next step of this great undertaking."
+"^^With respect and determination,"
+"^Haddingr Skjoldungr",
"none", [
    (set_background_mesh, "mesh_pic_messenger"),
  ],[
  ("option_2", [
  ],"Continue...",[

    # kill old
    (party_remove_members, "p_dani_village", "trp_dani_guthormr", 1),
    (troop_set_slot, "trp_dani_guthormr", slot_troop_occupation, dplmc_slto_dead),

    # set the augundzi king as ruler of the Dani, as he subjugated them
    (party_set_slot, "p_frisian_village", slot_town_lord, "trp_augundzi_king"),
    (faction_set_slot, "fac_minor_dani", slot_faction_leader, "trp_augundzi_king"),

    (str_store_troop_name, s10, "trp_dani_guthormr"),
    (str_store_troop_name, s11, "trp_augundzi_king"),
    (display_log_message, "@{s10} deceased. {s11} is now the the new ruler of the Dani!", message_alert),

    # just in case also remove party if there is any
    (try_begin),
      (troop_get_slot, ":leaded_party", "trp_dani_guthormr", slot_troop_leaded_party),
      (gt, ":leaded_party", 0),
      (party_is_active, ":leaded_party", 0),
      (call_script, "script_remove_hero_prisoners", ":leaded_party"),
      (remove_party, ":leaded_party"),
    (try_end),


    (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 12),
    (change_screen_map),
  ]),
]),

("journey_to_raid",mnf_scale_picture,
"With steady strides, Haddingr, Harthgrepa, and Signe march at your side, their resolve firm as iron. Behind you, a band of loyal warriors moves in solemn unity."
+" As you press forward, your gaze catches a green-eyed cat trailing the procession. With silent grace, it leaps onto a weathered stone, settling there to watch as you depart."
+" The path ahead is shrouded in uncertainty, yet the fire of purpose burns bright in every heart.",
"none", [
    (set_background_mesh, "mesh_pic_nord"),
  ],[
  ("option_1", [
  ],"Continue...",[
    (add_xp_as_reward, 1500),

    (assign, "$g_next_menu", "mnu_journey_to_raid_2"),
    (assign, "$tutorial_state", 0),
    (assign, "$temp3", 1),
    (try_for_range, ":slot", 0, 8),
      (troop_set_slot, "trp_temp_array_c", ":slot", -1),
    (try_end),

    # spawn troops in group and move them
    (troop_set_slot, "trp_temp_array_c", 1, "trp_dani_haddingr"),
    (troop_set_slot, "trp_temp_array_c", 2, "trp_giant_harthgrepa"),
    (troop_set_slot, "trp_temp_array_c", 3, "trp_dani_signe"),
    (troop_set_slot, "trp_temp_array_c", 4, "trp_scandinavian_comes"),
    (troop_set_slot, "trp_temp_array_c", 5, "trp_scandinavian_retainer"),
    (troop_set_slot, "trp_temp_array_c", 6, "trp_scandinavian_freeman"),
    (troop_set_slot, "trp_temp_array_c", 7, "trp_multiplayer_profile_troop_male"), # used as player clone

    (troop_clear_inventory, "trp_multiplayer_profile_troop_male"),
    (try_begin),
        (eq,"$character_gender", tf_female),
        (troop_set_type,"trp_multiplayer_profile_troop_male", tf_female),
    (else_try),
        (troop_set_type,"trp_multiplayer_profile_troop_male", tf_male),
    (try_end),
    (str_store_troop_face_keys, s10, "trp_player"),
    (troop_set_face_keys, "trp_multiplayer_profile_troop_male", s10),
    (call_script, "script_dplmc_copy_inventory", "trp_player", "trp_multiplayer_profile_troop_male"),
    # they are all on foot, so ensure player is too
    (troop_set_inventory_slot, "trp_multiplayer_profile_troop_male",  ek_horse, -1),

    (set_jump_mission, "mt_travel_cutscene"),
    (set_jump_entry, 1),
    (jump_to_scene, "scn_haddingrs_revenge_travel_cutscene"),
    (change_screen_mission),
  ]),
]),

("journey_to_raid_2",mnf_scale_picture,
"Haddingr's host sets sail for the Mare Suebicum. Prepare for the battles ahead.",
"none", [
    (set_background_mesh, "mesh_pic_nord"),
  ],[
  ("option_1", [
  ],"Continue...",[
      # detache player party
      (try_begin),
          (party_get_attached_to, ":cur_town", "p_main_party"),
          (ge, ":cur_town", 1),
          (party_detach, "p_main_party"),
          (party_relocate_near_party, "p_main_party", "p_village_153", 5),
          (party_set_position, "p_main_party", pos32),
      (try_end),
      (leave_encounter),
      (change_screen_map),

      (enable_party, "p_transporter"),
      (set_fixed_point_multiplier, 1),
      (init_position, pos32),
      (position_set_x, pos32, -104),
      (position_set_y, pos32, 171),

      (party_set_slot, "p_transporter", slot_party_on_water, 1),
      (party_set_flags, "p_transporter", pf_is_ship, 0),
      (party_set_position, "p_transporter", pos32),

      (set_fixed_point_multiplier, 1),
      (init_position, pos31),
      (position_set_x, pos31, -95),
      (position_set_y, pos31, 155),

      (party_set_ai_behavior, "p_transporter", ai_bhvr_travel_to_point),
      (party_set_ai_target_position, "p_transporter", pos31),

      (party_set_icon, "p_transporter", "icon_ship"),

      (assign, "$auto_menu", "mnu_journey_to_raid_landing"),
      (rest_for_hours, 10 * 24, 1, 0),
      (set_camera_follow_party, "p_transporter"),
      (assign, "$g_player_is_captive", 1),
      (change_screen_return),
      (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 13),
  ]),
]),
("journey_to_raid_landing",mnf_scale_picture|mnf_enable_hot_keys,
"The host journeys to the distant shores of the Mare Suebicum, where the lands of the Aestii and the Venedi stretch beneath vast, whispering forests. In a secluded place, your company makes camp, spending days in quiet preparation - tending to gear, scouting the land, and gathering what little news the winds may carry."
+"^^As time passes, footsteps approach. Haddingr stands before you, his gaze steady, his words soon to follow.",
"none", [
    (set_background_mesh, "mesh_pic_camp"),
  ],[
  ("option_1", [
  ],"Continue...",[
    (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 14),
    (set_jump_mission, "mt_longboat_landing_1"),
    (assign, "$g_next_menu", "mnu_haddingr_move_party"),
    (modify_visitors_at_site, "scn_haddingrs_revenge_travel_cutscene"),
    (reset_visitors),
    (assign, "$temp", "trp_dani_haddingr"),
    (set_visitor, 1, "trp_player"),
    (set_visitor, 2, "trp_scandinavian_retainer"),
    (set_visitor, 3, "trp_scandinavian_retainer"),
    (set_visitor, 4, "trp_scandinavian_retainer"),
    (set_visitor, 5, "trp_scandinavian_retainer"),
    (set_visitor, 6, "trp_scandinavian_retainer"),
    (set_visitor, 7, "trp_dani_haddingr"),
    (set_visitor, 8, "trp_scandinavian_retainer"),
    (set_visitor, 9, "trp_scandinavian_retainer"),
    (set_visitor, 10, "trp_scandinavian_retainer"),
    (set_visitor, 11, "trp_scandinavian_retainer"),
    (set_visitor, 12, "trp_scandinavian_retainer"),
    (set_visitor, 13, "trp_scandinavian_retainer"),
    (set_visitor, 14, "trp_scandinavian_retainer"),
    (set_visitor, 15, "trp_scandinavian_retainer"),
    (set_visitor, 16, "trp_scandinavian_retainer"),
    (set_visitor, 17, "trp_scandinavian_retainer"),
    (set_visitor, 18, "trp_scandinavian_retainer"),
    (set_visitor, 19, "trp_scandinavian_retainer"),

    (jump_to_scene, "scn_haddingrs_revenge_travel_cutscene"),
    (change_screen_mission),
  ]),
]),
("haddingr_move_party",mnf_scale_picture|mnf_enable_hot_keys,
"Should'nt be reading this.",
"none", [
    (try_begin),# moving from landing to aesti village
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 14),
      (enable_party, "p_haddingrs_revenge_raiding_camp"),
      (call_script, "script_fully_refresh_minor_faction_garrison", "p_haddingrs_revenge_raiding_camp", 75),#initialize army
      (party_add_leader, "p_haddingrs_revenge_raiding_camp", "trp_dani_haddingr"),
      (party_set_icon, "p_haddingrs_revenge_raiding_camp", "icon_germanic_army_1"),
      (party_set_flags, "p_haddingrs_revenge_raiding_camp", pf_is_static, 0), # in case this is somehow wrong set
      (party_set_flags, "p_haddingrs_revenge_raiding_camp", pf_is_ship, 0),
      # (party_set_flags, "p_haddingrs_revenge_raiding_camp", pf_hide_defenders, 1), doe not work for non static parties
      (enable_party, "p_haddingrs_revenge_aesti_village_1"),

      (init_position, pos31),
      (party_get_position, pos31, "p_haddingrs_revenge_aesti_village_1"),
      (party_set_ai_target_position, "p_haddingrs_revenge_raiding_camp", pos31),
      (party_set_ai_behavior, "p_haddingrs_revenge_raiding_camp", ai_bhvr_travel_to_point),

      (assign, "$auto_menu", "mnu_haddingr_aesti_battle"),
      (rest_for_hours, 10 * 24, 1, 0),
      (set_camera_follow_party, "p_haddingrs_revenge_raiding_camp"),
      (assign, "$g_player_is_captive", 1),
      (change_screen_map),
    (else_try),# move from asesti village to grove
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 15),
      (enable_party, "p_haddingrs_revenge_aesti_sacred_grove"),

      (init_position, pos31),
      (party_get_position, pos31, "p_haddingrs_revenge_aesti_sacred_grove"),
      (party_set_ai_target_position, "p_haddingrs_revenge_raiding_camp", pos31),
      (party_set_ai_behavior, "p_haddingrs_revenge_raiding_camp", ai_bhvr_travel_to_point),

      (assign, "$auto_menu", "mnu_haddingr_aesti_battle"),
      (rest_for_hours, 10 * 24, 1, 0),
      (set_camera_follow_party, "p_haddingrs_revenge_raiding_camp"),
      (assign, "$g_player_is_captive", 1),

      (disable_party, "p_haddingrs_revenge_aesti_village_1"),

      (change_screen_map),
    (else_try),# move from grove to trading post, though ambush happens
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 16),
      (enable_party, "p_haddingrs_revenge_aesti_trade_post"),

      (init_position, pos30),
      (init_position, pos31),
      (party_get_position, pos30, "p_haddingrs_revenge_aesti_trade_post"),
      (map_get_land_position_around_position, pos31, pos30, 2),
      (party_set_ai_target_position, "p_haddingrs_revenge_raiding_camp", pos31),
      (party_set_ai_behavior, "p_haddingrs_revenge_raiding_camp", ai_bhvr_travel_to_point),

      (assign, "$auto_menu", "mnu_haddingr_aesti_battle"),
      (rest_for_hours, 10 * 24, 1, 0),
      (set_camera_follow_party, "p_haddingrs_revenge_raiding_camp"),
      (assign, "$g_player_is_captive", 1),

      (disable_party, "p_haddingrs_revenge_aesti_sacred_grove"),

      (change_screen_map),
    (else_try),# set up camp
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 18),

      (party_set_icon, "p_haddingrs_revenge_raiding_camp", "icon_camp"),
      (party_set_ai_behavior, "p_haddingrs_revenge_raiding_camp", ai_bhvr_hold),

      (store_time_of_day,":cur_time_of_day"),#0 to 24
      (val_add, ":cur_time_of_day", 9),
      (assign, reg22, 48),
      (val_sub,reg22,":cur_time_of_day"),

      (assign, "$auto_enter_town", "p_haddingrs_revenge_raiding_camp"),
      (assign, "$g_town_visit_after_rest", 1),
      (assign, "$g_last_rest_center", "p_haddingrs_revenge_raiding_camp"),
      (assign, "$g_last_rest_payment_until", -1),
      (rest_for_hours, reg22, 17, 0),
      # (leave_encounter),
      (change_screen_map),
    (else_try),# move to the trade hub
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 19),
      (party_set_icon, "p_haddingrs_revenge_raiding_camp", "icon_germanic_army_1"),
      (init_position, pos31),
      (party_get_position, pos31, "p_haddingrs_revenge_aesti_trade_post"),
      (party_set_ai_target_position, "p_haddingrs_revenge_raiding_camp", pos31),
      (party_set_ai_behavior, "p_haddingrs_revenge_raiding_camp", ai_bhvr_travel_to_point),

      (assign, "$auto_menu", "mnu_haddingr_aesti_battle"),
      (rest_for_hours, 10 * 24, 1, 0),
      (set_camera_follow_party, "p_haddingrs_revenge_raiding_camp"),
      (assign, "$g_player_is_captive", 1),

      (change_screen_map),
    (else_try),# set up camp again
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 20),

      (party_set_icon, "p_haddingrs_revenge_raiding_camp", "icon_camp"),
      (party_set_ai_behavior, "p_haddingrs_revenge_raiding_camp", ai_bhvr_hold),

      (store_time_of_day,":cur_time_of_day"),#0 to 24
      (val_add, ":cur_time_of_day", 9),
      (assign, reg22, 72),
      (val_sub,reg22,":cur_time_of_day"),

      (assign, "$auto_enter_town", "p_haddingrs_revenge_raiding_camp"),
      (assign, "$g_town_visit_after_rest", 1),
      (assign, "$g_last_rest_center", "p_haddingrs_revenge_raiding_camp"),
      (assign, "$g_last_rest_payment_until", -1),
      (rest_for_hours, reg22, 17, 0),
      # (leave_encounter),
      (change_screen_map),
    (else_try),# set up camp again
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 21),

      (party_set_icon, "p_haddingrs_revenge_raiding_camp", "icon_camp"),
      (party_set_ai_behavior, "p_haddingrs_revenge_raiding_camp", ai_bhvr_hold),

      (store_time_of_day,":cur_time_of_day"),#0 to 24
      (val_add, ":cur_time_of_day", 9),
      (assign, reg22, 2),
      (val_sub,reg22,":cur_time_of_day"),

      (assign, "$auto_enter_town", "p_haddingrs_revenge_aesti_trade_post"),
      (assign, "$g_town_visit_after_rest", 1),
      (assign, "$g_last_rest_center", "p_haddingrs_revenge_aesti_trade_post"),
      (assign, "$g_last_rest_payment_until", -1),
      (rest_for_hours, reg22, 17, 0),
      # (leave_encounter),
      (change_screen_map),
    (else_try),# set up camp again
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 23),

      (party_set_icon, "p_haddingrs_revenge_raiding_camp", "icon_germanic_army_1"),
      (init_position, pos31),
      (party_get_position, pos31, "p_haddingrs_revenge_aesti_village_1"),
      (party_set_ai_target_position, "p_haddingrs_revenge_raiding_camp", pos31),
      (party_set_ai_behavior, "p_haddingrs_revenge_raiding_camp", ai_bhvr_travel_to_point),

      (assign, "$auto_menu", "mnu_haddingrs_revenge_camp"),
      (rest_for_hours, 10 * 24, 1, 0),
      (set_camera_follow_party, "p_haddingrs_revenge_raiding_camp"),
      (assign, "$g_player_is_captive", 1),

      (disable_party, "p_haddingrs_revenge_aesti_trade_post"),

      (change_screen_map),
    (else_try),# set up camp again
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 24),

      (party_set_icon, "p_haddingrs_revenge_raiding_camp", "icon_camp"),
      (party_set_ai_behavior, "p_haddingrs_revenge_raiding_camp", ai_bhvr_hold),

      (store_time_of_day,":cur_time_of_day"),#0 to 24
      (val_add, ":cur_time_of_day", 1),
      (assign, reg22, 48),
      (val_sub,reg22,":cur_time_of_day"),

      (assign, "$auto_enter_town", "p_haddingrs_revenge_raiding_camp"),
      (assign, "$g_town_visit_after_rest", 1),
      (assign, "$g_last_rest_center", "p_haddingrs_revenge_raiding_camp"),
      (assign, "$g_last_rest_payment_until", -1),
      (rest_for_hours, reg22, 17, 0),
      # (leave_encounter),
      (change_screen_map),
    (else_try),# finish the mission
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 25),
      (disable_party, "p_haddingrs_revenge_raiding_camp"),
      (jump_to_menu, "mnu_haddingrs_revenge_return"),
    (else_try),# spawn haddingrs camp party and use it as host of the augudanzi
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 30),
      (enable_party, "p_haddingrs_revenge_raiding_camp"),
      (party_set_name, "p_haddingrs_revenge_raiding_camp", "@Augundzi host"),
      (party_set_faction, "p_haddingrs_revenge_raiding_camp", "fac_minor_augundzi"),
      (set_fixed_point_multiplier, 1000),
      (init_position, pos31),
      (position_set_x, pos31, -130620),
      (position_set_y, pos31, 167005),
      (party_set_position, "p_haddingrs_revenge_raiding_camp", pos31),

      (call_script, "script_fully_refresh_minor_faction_garrison", "p_haddingrs_revenge_raiding_camp", 750),#initialize army
      # (party_add_leader, "p_haddingrs_revenge_raiding_camp", "trp_dani_haddingr"),
      (party_set_icon, "p_haddingrs_revenge_raiding_camp", "icon_germanic_army_1"),
      (party_set_flags, "p_haddingrs_revenge_raiding_camp", pf_is_static, 0), # in case this is somehow wrong set
      (party_set_flags, "p_haddingrs_revenge_raiding_camp", pf_is_ship, 0),

      (party_get_position, pos31, "p_dani_village"),
      (party_set_ai_target_position, "p_haddingrs_revenge_raiding_camp", pos31),
      (party_set_ai_behavior, "p_haddingrs_revenge_raiding_camp", ai_bhvr_travel_to_point),

      (assign, "$auto_menu", "mnu_haddingr_aesti_battle"),
      (rest_for_hours, 10 * 24, 1, 0),
      (set_camera_follow_party, "p_haddingrs_revenge_raiding_camp"),
      (assign, "$g_player_is_captive", 1),
      (change_screen_map),
    (else_try),# wait for one day until feast
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 37),

      (store_time_of_day,":cur_time_of_day"),#0 to 24
      (val_add, ":cur_time_of_day", 11),
      (assign, reg22, 48),
      (val_sub,reg22,":cur_time_of_day"),

      (assign, "$auto_enter_town", "p_dani_village"),
      (assign, "$g_town_visit_after_rest", 1),
      (assign, "$g_last_rest_center", "p_dani_village"),
      (assign, "$g_last_rest_payment_until", -1),

      (party_clear, "p_haddingrs_revenge_raiding_camp"),
      (disable_party, "p_haddingrs_revenge_raiding_camp"),

      (rest_for_hours, reg22, 17, 0),
      # (leave_encounter),
      (change_screen_map),
    (try_end),
  ],[
  ("option_1", [
  ],"Stuck in menu - call hotline...",[
    (change_screen_quit),
  ]),
]),

("haddingr_aesti_battle",0,
  "{s10}",
  "none",[
    (set_background_mesh, "mesh_pic_charge"),
    (str_clear, s10),
    (try_begin),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 14),
      (str_store_string, s10, "@It is still, broken only by the distant crash of waves upon the shore. Haddingr and his warriors stand ready, their blades eager for blood. Before you lies an Aestii village, its defenses weak, its people unsuspecting. The scent of smoke and salt lingers in the air as the moment of reckoning draws near."),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 15),
      (str_store_string, s10, "@Beneath the ancient canopy of the sacred grove, the air is thick with the scent of earth and moss. Tall oaks stand as silent sentinels, their gnarled roots entwined with the bones of ancestors long passed. This is a place of reverence, a sanctuary untouched by war - until now. Haddingr stands beside you, his grip firm upon his blade, his eyes burning with purpose. The Aestii will not surrender their holy ground without a fight, but the gods of war have already cast their lots."),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 16),
      (str_store_string, s10, "@The march is slow, the earth beneath your feet treacherous and sodden. Gnarled roots twist through the murky ground, and the thick canopy above lets through little light. Each step sinks into the damp soil, the stench of stagnant water heavy in the air. Then - shouts in the distance. Scouts burst from the shadows, breathless with urgency."),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 17),
      (str_store_string, s10, "@The warning came too late. From the mist and tangled undergrowth, figures emerge - silent, swift, and deadly. The swamp offers no refuge. Steel must decide your fate."),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 19),
      (str_store_string, s10, "@The scent of trampled earth and distant smoke lingers in the air as you and Haddingr approach the crossing. The place is lightly wooded, where winding paths converge, a lifeline for merchants and wanderers alike. Wagons stand laden with goods, makeshift outposts dot the roadside, and the voices of traders carry through the clearing, unaware of the storm about to break upon them. This is no battlefield, yet soon the ground shall drink its share of blood. Haddingr stands ready, his hand upon his hilt, eyes scanning the prey before him. The time for hesitation has passed."),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 21),
      (faction_get_slot, ":faction_leader", "fac_minor_aestii", slot_faction_leader),
      (str_store_troop_name, s11, ":faction_leader"),
      (str_store_string, s10, "@Through the murmur of the camp, a figure strides forth with measured steps - {s11}, flanked by his loyal retainers. His armor catches the fading light, each polished plate a testament to his rank and station. There is weight in his presence, a quiet authority that stills the air.^^His gaze is steady, his expression unreadable. Whether he comes as friend or foe remains to be seen, but one thing is certain-his words shall bear consequence."),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 30),
      (str_store_string, s10, "@Night shrouds Heorot, but within its great hall, the fire burns bright, casting long shadows upon the gathered warriors. Mead flows, yet none drink deep, for the weight of the coming battle stills their hands. Haddingr stands before them, his blade catching the fire's glow, his gaze unwavering. The air is thick with unspoken oaths, the hush before the storm."),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 31),
      (str_store_string, s10, "@Word spreads like wildfire - Svipdagr marches south, his host at his back, vengeance burning in his heart. The warriors of Heorot sharpen their blades and ready their shields, knowing the final reckoning is at hand. Haddingr stands at the hall's threshold, gazing toward the horizon where his enemy gathers. The fate of the kingdom hangs in the balance, and soon, the fields before Heorot shall run red with the blood of the fallen."),
    (try_end),
  ],[
  ("option_0",[
    (ge, "$cheat_mode", 1),
    (this_or_next|quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 14),
    (this_or_next|quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 15),
    (this_or_next|quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 16),
    (this_or_next|quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 19),
    (this_or_next|quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 21),
    (this_or_next|quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 31),
    # (this_or_next|quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 22),
    (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 17),
  ],"Test scene",[
    # the encountered party is still wagnofs hall, so just use it as enemy
    (store_encountered_party, "$g_enemy_party"),
    (try_begin),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 14),
      (assign, ":scene_to_use", "scn_haddingrs_aesti_village"),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 15),
      (assign, ":scene_to_use", "scn_haddingrs_aesti_grove"),
    (else_try),
      (this_or_next|quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 16),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 16),
      (assign, ":scene_to_use", "scn_haddingrs_aesti_ambush"),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 19),
      (assign, ":scene_to_use", "scn_haddingrs_aesti_trade_post"),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 21),
      (assign, ":scene_to_use", "scn_haddingrs_revenge_travel_cutscene"),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 31),
      (assign, ":scene_to_use", "scn_haddingrs_final_battle"),
    (try_end),

    (jump_to_scene, ":scene_to_use"),
    (change_screen_mission),
  ]),
  ## meeting with aesti king will always end without battle.
  ("option_0",[
    (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 21),
  ],"Continue...",[
    (set_jump_mission, "mt_longboat_landing_1"),
    (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 22),
    (assign, "$g_next_menu", "mnu_haddingr_aesti_battle_won"),
    (modify_visitors_at_site, "scn_haddingrs_revenge_travel_cutscene"),
    (reset_visitors),
    (faction_get_slot, ":faction_leader", "fac_minor_aestii", slot_faction_leader),
    (assign, "$temp", ":faction_leader"),
    (set_visitor, 1, "trp_player"),
    (set_visitor, 2, "trp_dani_haddingr"),

    (set_visitor, 7, ":faction_leader"),
    (set_visitor, 31, "trp_aestii_companion"),
    (set_visitor, 32, "trp_aestii_companion"),
    (set_visitor, 33, "trp_aestii_companion"),
    (set_visitor, 34, "trp_aestii_companion"),

    (set_visitor, 35, "trp_scandinavian_comes"),
    (set_visitor, 36, "trp_scandinavian_comes"),
    (set_visitor, 37, "trp_scandinavian_retainer"),
    (set_visitor, 38, "trp_scandinavian_retainer"),
    (set_visitor, 39, "trp_scandinavian_retainer"),
    (set_visitor, 40, "trp_scandinavian_retainer"),
    (set_visitor, 41, "trp_scandinavian_retainer"),

    (jump_to_scene, "scn_haddingrs_revenge_travel_cutscene"),
    (change_screen_mission),
  ]),

  #prebattle speech of final battle
  ("option_0",[
    (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 30),
  ],"Continue...",[
    # give haddingr weapons of his father
    (try_for_range, ":item_slot", 0, 10),
      (troop_set_inventory_slot, "trp_dani_haddingr", ":item_slot", -1),
    (try_end),
    (troop_add_items, "trp_dani_haddingr", "itm_khergit_leather_boots",1),
    (troop_add_items, "trp_dani_haddingr", "itm_danish_king_mail",1),
    (troop_add_items, "trp_dani_haddingr", "itm_danish_king_mace",1),
    (troop_add_items, "trp_dani_haddingr", "itm_gultlingen_helmet_plume",1),
    (troop_add_items, "trp_dani_haddingr", "itm_round_shield_germanic_5",1),
    (troop_equip_items, "trp_dani_haddingr"),

    (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 31),

    (set_jump_mission, "mt_longboat_landing_1"),
    (modify_visitors_at_site, "scn_finns_hall_interior"),
    (reset_visitors),

    (assign, "$g_next_menu", "mnu_haddingr_aesti_battle"),

    (set_visitor, 0, "trp_player"),
    (set_visitor, 1, "trp_dani_guthlaf"),
    (set_visitor, 2, "trp_scandinavian_comes"),
    (set_visitor, 3, "trp_scandinavian_comes"),
    (set_visitor, 4, "trp_dani_ordlaf"),
    (set_visitor, 5, "trp_dani_haddingr"),
    (set_visitor, 6, "trp_scandinavian_comes"),
    (set_visitor, 7, "trp_scandinavian_comes"),
    (set_visitor, 8, "trp_scandinavian_comes"),
    (set_visitor, 9, "trp_scandinavian_comes"),
    (set_visitor, 10, "trp_scandinavian_comes"),
    (set_visitor, 11, "trp_scandinavian_comes"),
    (set_visitor, 12, "trp_scandinavian_comes"),
    (set_visitor, 13, "trp_scandinavian_comes"),
    (set_visitor, 14, "trp_scandinavian_comes"),

    (assign, "$temp", "trp_dani_haddingr"),

    (jump_to_scene, "scn_finns_hall_interior"),
    (change_screen_mission),
  ]),

  ("option_0",[
    (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 16),
  ],"Continue...",[
    (set_jump_mission, "mt_longboat_landing_1"),
    (assign, "$g_next_menu", "mnu_haddingr_aesti_battle"),
    (modify_visitors_at_site, "scn_haddingrs_aesti_ambush"),
    (reset_visitors),
    (try_for_range, ":entry_no", 1, 20),
      (mission_tpl_entry_set_override_flags, "mt_longboat_landing_1", ":entry_no", af_override_horse),
    (try_end),
    (assign, "$temp", "trp_scandinavian_freeman"),
    (set_visitor, 1, "trp_player"),
    (set_visitor, 2, "trp_scandinavian_retainer"),
    (set_visitor, 3, "trp_scandinavian_retainer"),
    (set_visitor, 4, "trp_scandinavian_retainer"),
    (set_visitor, 5, "trp_scandinavian_retainer"),
    (set_visitor, 6, "trp_scandinavian_freeman"),
    (set_visitor, 7, "trp_dani_haddingr"),
    (set_visitor, 8, "trp_scandinavian_retainer"),
    (set_visitor, 9, "trp_scandinavian_comes"),
    (set_visitor, 10, "trp_scandinavian_retainer"),
    (set_visitor, 11, "trp_scandinavian_comes"),
    (set_visitor, 12, "trp_scandinavian_retainer"),
    (set_visitor, 13, "trp_scandinavian_retainer"),
    (set_visitor, 14, "trp_scandinavian_retainer"),
    (set_visitor, 15, "trp_scandinavian_comes"),
    (set_visitor, 16, "trp_scandinavian_retainer"),
    (set_visitor, 17, "trp_scandinavian_comes"),
    (set_visitor, 18, "trp_scandinavian_retainer"),
    (set_visitor, 19, "trp_scandinavian_comes"),

    (jump_to_scene, "scn_haddingrs_aesti_ambush"),
    (change_screen_mission),
  ]),
  # the final battle
  ("option_1",[
    (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 31),
  ],"To battle Dani champions!",[
    (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 32),

    (store_encountered_party, "$g_enemy_party"),

    (assign, "$g_ally_party", "p_dani_village"),
    (assign, ":scene_to_use", "scn_haddingrs_final_battle"),

    # reset health to make it easier and more fun fun fun
    (troop_set_health, "trp_dani_haddingr", 100),
    (troop_set_health, "trp_dani_guthlaf", 100),
    (troop_set_health, "trp_dani_ordlaf", 100),

    (troop_set_health, "trp_player", 100),

    (party_clear, "$g_ally_party"),
    (call_script, "script_fully_refresh_minor_faction_garrison", "$g_ally_party", 300),
    (party_add_leader, "$g_ally_party", "trp_dani_haddingr"),

    (party_clear, "p_haddingrs_revenge_sedgean"),
    (party_set_faction, "p_haddingrs_revenge_sedgean", "fac_minor_frisians"),
    (call_script, "script_fully_refresh_minor_faction_garrison", "p_haddingrs_revenge_sedgean", 225),
    (party_add_leader, "p_haddingrs_revenge_sedgean", "trp_dani_guthlaf"),
    (party_add_members, "p_haddingrs_revenge_sedgean", "trp_dani_ordlaf", 1),

    # attach allies to battle
    (set_party_battle_mode),
    (party_quick_attach_to_current_battle, "$g_ally_party", 0), #allies
    (party_quick_attach_to_current_battle, "p_haddingrs_revenge_sedgean", 0), #allies
    # (party_quick_attach_to_current_battle, "$g_enemy_party", 1), #enemies

    # calculate battle variables (mainly necessary if there are also allies)
    (call_script, "script_encounter_calculate_fit"),
    # (display_message, "@{reg11}, {reg10}"),
    (try_begin),
      (eq, "$new_encounter", 1),
      (assign, "$new_encounter", 0),
      (assign, "$g_encounter_is_in_village", 1),
      (assign, "$g_encounter_type", 0),
      (call_script, "script_encounter_init_variables"),
      (assign, "$encountered_party_hostile", 1),
      (assign, "$encountered_party_friendly", 0),
    (try_end),

    (assign, "$g_battle_result", 0),
    (assign, "$g_engaged_enemy", 1),
    (assign, "$g_next_menu", "mnu_haddingr_aesti_battle_won"),#victory menu
    (assign, "$temp4", "mnu_haddingrs_revenge_defeat"),#defeat menu

    # as its a larger battle we should also calculate battle advantage
    (call_script, "script_calculate_battle_advantage"),
    (set_battle_advantage, reg0),

    (set_jump_mission,"mt_lead_charge_quest"),#can be used for any quest battle
    (jump_to_scene, ":scene_to_use"),
    (change_screen_mission),
  ]),

  ## battles against the Aesti
  ("option_1",[
    (this_or_next|quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 14),
    (this_or_next|quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 15),
    (this_or_next|quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 19),
    # (this_or_next|quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 22),
    (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 17),
  ],"To battle Dani champions!",[
    (store_encountered_party, "$g_enemy_party"),
    (try_begin),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 14),
      (assign, "$g_ally_party", "p_haddingrs_revenge_raiding_camp"),
      (assign, ":scene_to_use", "scn_haddingrs_aesti_village"),

      (assign, ":enemy_size", 25),
      (assign, ":ally_size", 75),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 15),
      (assign, "$g_ally_party", "p_haddingrs_revenge_raiding_camp"),
      (assign, ":scene_to_use", "scn_haddingrs_aesti_grove"),

      (assign, ":enemy_size", 75),
      (assign, ":ally_size", 75),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 17),
      (assign, "$g_ally_party", "p_haddingrs_revenge_raiding_camp"),
      (assign, ":scene_to_use", "scn_haddingrs_aesti_ambush"),

      (assign, ":enemy_size", 200),
      (assign, ":ally_size", 75),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 19),
      (assign, "$g_ally_party", "p_haddingrs_revenge_raiding_camp"),
      (assign, ":scene_to_use", "scn_haddingrs_aesti_trade_post"),

      (assign, ":enemy_size", 75),
      (assign, ":ally_size", 75),
    # (else_try),
    #   (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 22),
    #   (assign, "$g_ally_party", "p_haddingrs_revenge_raiding_camp"),
    #   (assign, ":scene_to_use", "scn_haddingrs_aesti_final_battle"),

    #   (assign, ":enemy_size", 150),
    #   (assign, ":ally_size", 85),
    (else_try),
      (display_message, "@Quest corrupted", message_alert),
    (try_end),

    # reset health to make it easier and more fun fun fun
    (troop_set_health, "trp_dani_haddingr", 100),
    (troop_set_health, "trp_player", 100),
    # (heal_party, "p_main_party"), # maybe too easy

    # (start_encounter, "$g_enemy_party"),
    # the encountered party is still wagnofs hall, so just use it as enemy
    # (store_encountered_party, ":party"),
    # (try_begin),
    #     (party_is_active, ":party"),
    #     (str_store_party_name, s10, ":party"),
    #     (display_message, "@{s10} encountered"),
    # (else_try),
    #     (display_message, "@Invalid"),
    # (try_end),
    # ## add troops
    (party_clear, "$g_ally_party"),
    (call_script, "script_fully_refresh_minor_faction_garrison", "$g_ally_party", ":ally_size"),
    (party_add_leader, "$g_ally_party", "trp_dani_haddingr"),
    (party_set_faction, "$g_ally_party", "fac_minor_dani"),

    (party_set_faction, "$g_enemy_party", "fac_minor_aestii"),
    (party_clear, "$g_enemy_party"),
    (call_script, "script_fully_refresh_minor_faction_garrison", "$g_enemy_party", ":enemy_size"),
    (try_begin),
        (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 14),
        (party_add_members, "$g_enemy_party", "trp_farmer", 50),
        (party_add_members, "$g_enemy_party", "trp_peasant_woman", 40),
    (else_try),
        (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 15),
        (party_add_members, "$g_enemy_party", "trp_farmer", 25),
        (party_add_members, "$g_enemy_party", "trp_peasant_woman", 15),
    (try_end),
    # attach allies to battle
    (set_party_battle_mode),
    (party_quick_attach_to_current_battle, "$g_ally_party", 0), #allies
    # (party_quick_attach_to_current_battle, "$g_enemy_party", 1), #enemies

    # calculate battle variables (mainly necessary if there are also allies)
    (call_script, "script_encounter_calculate_fit"),
    # (display_message, "@{reg11}, {reg10}"),
    (try_begin),
      (eq, "$new_encounter", 1),
      (assign, "$new_encounter", 0),
      (assign, "$g_encounter_is_in_village", 1),
      (assign, "$g_encounter_type", 0),
      (call_script, "script_encounter_init_variables"),
      (assign, "$encountered_party_hostile", 1),
      (assign, "$encountered_party_friendly", 0),
    (try_end),

    (assign, "$g_battle_result", 0),
    (assign, "$g_engaged_enemy", 1),
    (assign, "$g_next_menu", "mnu_haddingr_aesti_battle_won"),#victory menu
    (assign, "$temp4", "mnu_haddingrs_revenge_defeat"),#defeat menu

    # as its a larger battle we should also calculate battle advantage
    (call_script, "script_calculate_battle_advantage"),
    (set_battle_advantage, reg0),

    (set_jump_mission,"mt_lead_charge_quest"),#can be used for any quest battle
    (jump_to_scene, ":scene_to_use"),
    (change_screen_mission),
  ]),
]),
("haddingr_aesti_battle_won",mnf_scale_picture|mnf_enable_hot_keys,
"{s10}",
"none", [
    (set_background_mesh, "mesh_pic_victory"),
    (str_clear, s10),
    (try_begin),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 14),
      (str_store_string, s10, "@The raid was a success. Your party swept through the village, capturing provisions, amber meant for trade, and a modest cache of weapons and jewels. The cries of the villagers fade into the distance as your warriors regroup, their spirits bolstered by the spoils of battle."),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 15),
      (str_store_string, s10, "@After the battle, the grove lies in ruins, with idols broken and offerings plundered. Haddingr stands amidst the spoils, triumphant."),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 17),
      (str_store_string, s10, "@The echoes of battle fade into the mist, leaving only the heavy breath of warriors and the distant cries of the wounded. The Aestii are broken, their ambush shattered, their warriors scattered into the murky depths of the forest. Yet the silence that follows is unnatural, the swamp holding its breath as if mourning the dead. Haddingr strides toward you, his blade stained with blood, his eyes alight with the fire of triumph. He wipes the sweat from his brow, the weight of battle still fresh upon him."),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 19),
      (str_store_string, s10, "@The clash of steel has faded, replaced by the cries of the defeated and the weary murmurs of warriors counting their spoils. The trade route now lies firmly in Haddingr's grasp. Merchants flee into the woods or kneel before their new masters, their riches no longer their own. Wagons stand abandoned, their contents spilling onto the dirt, while the air remains thick with the scent of battle. Haddingr surveys the scene, victorious, yet ever watchful for what comes next."),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 22),
      (faction_get_slot, ":faction_leader", "fac_minor_aestii", slot_faction_leader),
      (str_store_troop_name, s11, ":faction_leader"),
      (try_begin),
        (eq, ":faction_leader", "trp_aestii_rebel_king"),
        (str_store_string, s10, "@With a final glance, {s11} turns on his heel, his retainers falling into step behind him like shadows cast by the fading sun. Their figures soon merge with the distant road, leaving only the whisper of their passing.^^Haddingr stands unmoving, his gaze lingering on the retreating warlord. A breath passes before he turns to you, his expression unreadable, yet the weight of unspoken thoughts lingers in his eyes."),
      (else_try),
        (str_store_string, s10, "@With a measured gesture, {s11} bids his retainers to step back, their armored forms retreating into the shadows. The tension lingers in the air as Haddingr watches him go, his gaze distant, his thoughts veiled. At last, he turns to you, his expression unreadable yet heavy with meaning."),
      (try_end),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 33),
      (str_store_string, s10, "@As the battle rages, steel clashing and war cries filling the air, fate draws Svipdagr and Haddingr together upon the blood-soaked field. Amidst the chaos, their blades meet, a duel that will decide the fate of Heorot. Warriors on both sides pause, their breath held, as king faces king in a contest of steel, will, and destiny."),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 36),
      (str_store_string, s10, "@As the dust of battle settles, Haddingr stands victorious, his blade dripping with the blood of his foe. A roar of triumph erupts from his warriors, their cheers shaking the walls of Heorot. The war is won, the throne secured, and the Skjoldung name restored to its rightful glory."),
    (try_end),
  ],[
  ("option_1", [
    (quest_slot_eq, "qst_haddingrs_revenge",  slot_quest_current_state, 33),
    (ge, "$cheat_mode", 1),
  ],"Test scene",[
    (jump_to_scene, "scn_haddingrs_final_battle_duel"),
    (change_screen_mission),
  ]),
  ("option_1", [
    (quest_slot_eq, "qst_haddingrs_revenge",  slot_quest_current_state, 33),
  ],"Duel!",[
    (party_clear, "p_haddingrs_revenge_sedgean"), # clear temp ally party
    (party_set_faction, "p_haddingrs_revenge_sedgean", "fac_neutral"),# clear temp ally party

    (troop_set_health, "trp_dani_haddingr", 100),
    (assign, ":weapons", 0),
    (try_for_range, ":i_slot", ek_item_0, ek_item_3 + 1),
      (troop_get_inventory_slot, ":item", "trp_dani_haddingr", ":i_slot"),
      (gt, ":item", -1),
      (item_get_type, ":type", ":item"),
      (this_or_next|eq, ":type", itp_type_one_handed_wpn),
      (this_or_next|eq, ":type", itp_type_two_handed_wpn),
      (eq, ":type", itp_type_polearm),
      (val_add, ":weapons", 1),
    (try_end),
    (try_begin),
      (eq, ":weapons", 0),
      (troop_add_item, "trp_dani_haddingr", "itm_danish_king_mace"),
      (troop_add_item, "trp_dani_haddingr", "itm_round_shield_germanic_5"),
      (troop_equip_items, "trp_dani_haddingr"),
    (try_end),

    (troop_set_health, "trp_augundzi_king", 100),

    (set_jump_mission, "mt_haddingr_duel"),
    (modify_visitors_at_site, "scn_haddingrs_final_battle_duel"),
    (reset_visitors),
    (assign, "$temp", "trp_augundzi_king"),
    (set_visitor, 1, "trp_dani_haddingr"),
    (set_visitor, 2, "trp_augundzi_king"),
    (set_visitor, 3, "trp_player"),

    (set_visitor, 4, "trp_dani_guthlaf"),
    (set_visitor, 5, "trp_dani_ordlaf"),

    (set_visitor, 6, "trp_saami_hunter"),
    (set_visitor, 7, "trp_scandinavian_retainer"),
    (set_visitor, 8, "trp_saami_hunter"),
    (set_visitor, 9, "trp_scandinavian_retainer"),
    (set_visitor, 10, "trp_saami_hunter"),
    (set_visitor, 11, "trp_scandinavian_retainer"),
    (set_visitor, 12, "trp_saami_hunter"),
    (set_visitor, 13, "trp_scandinavian_retainer"),

    (set_visitor, 14, "trp_dane_vanguard"),
    (set_visitor, 15, "trp_dane_vanguard"),
    (set_visitor, 16, "trp_frisian_companion"),
    (set_visitor, 17, "trp_dane_vanguard"),
    (set_visitor, 18, "trp_dane_vanguard"),
    (set_visitor, 19, "trp_dane_vanguard"),
    (set_visitor, 20, "trp_frisian_companion"),
    (set_visitor, 21, "trp_frisian_companion"),

    (jump_to_scene, "scn_haddingrs_final_battle_duel"),
    (change_screen_mission),
  ]),
  ("option_1", [
    (neg|quest_slot_eq, "qst_haddingrs_revenge",  slot_quest_current_state, 33),
  ],"Continue...",[
    (try_begin),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 14),
      (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 15),
      (display_message, "@A small amount of provision and riches has been gathered. Haddingr's legend is starting to grow."),

      (troop_add_items, "trp_player", "itm_grain", 4),
      (troop_add_items, "trp_player", "itm_bread", 2),
      (troop_add_items, "trp_player", "itm_dried_meat", 2),
      (troop_add_items, "trp_player", "itm_amber", 2),
      (troop_add_gold, "trp_player", 5000),
      (assign, ":scene_to_use", "scn_haddingrs_aesti_village"),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 15),
      (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 16),
      (display_message, "@The raid on the sacred grove was a triumph. Your party captured gold, amber, and relics of the Aestii gods, but the desecration of this place will not go unanswered. Whispers of vengeance spread across the land."),

      (troop_add_items, "trp_player", "itm_bread", 2),
      (troop_add_items, "trp_player", "itm_dried_meat", 2),
      (troop_add_items, "trp_player", "itm_amber", 2),
      (troop_add_items, "trp_player", "itm_gold_jewelry", 2),
      (troop_add_gold, "trp_player", 10000),
      (assign, ":scene_to_use", "scn_haddingrs_aesti_grove"),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 17),
      (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 18),
      (display_message, "@The ambush has been crushed. Haddingr's legend grows, and the Aestii tremble at the sound of his name."),
      (troop_add_gold, "trp_player", 2500),
      (assign, ":scene_to_use", "scn_haddingrs_aesti_ambush"),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 19),
      (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 20),
      (display_message, "@The trade route has been taken. Haddingr's legend reaches its zenith in the eastern lands."),
      (troop_add_gold, "trp_player", 15000),
      (troop_add_items, "trp_player", "itm_bread", 1),
      (troop_add_items, "trp_player", "itm_dried_meat", 1),
      (troop_add_items, "trp_player", "itm_amber", 4),
      (troop_add_items, "trp_player", "itm_gold_jewelry", 4),
      (assign, ":scene_to_use", "scn_haddingrs_aesti_trade_post"),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 22),
      (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 23),
      (try_begin),
        (faction_slot_eq, "fac_minor_aestii", slot_faction_leader, "trp_aestii_rebel_king"),
        (display_message, "@Shvarnas grants Haddingr passage but with bitterness. The raids have left scars that may not heal."),
      (else_try),
        (display_message, "@A solemn pact with Aiwarikiar has secured Haddingr's dominance in the east."),
      (try_end),
      (add_xp_as_reward, 10000),
      (assign, ":scene_to_use", "scn_haddingrs_revenge_travel_cutscene"),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 36),
      (add_xp_as_reward, 10000),
      (assign, ":scene_to_use", "scn_haddingrs_final_battle_duel"),
    (try_end),
    (set_jump_mission, "mt_longboat_landing_1"),
    (assign, "$g_next_menu", "mnu_haddingr_move_party"),
    (modify_visitors_at_site, ":scene_to_use"),
    (reset_visitors),
    (try_for_range, ":entry_no", 1, 20),
      (mission_tpl_entry_set_override_flags, "mt_longboat_landing_1", ":entry_no", af_override_horse),
    (try_end),
    (assign, "$temp", "trp_dani_haddingr"),
    (set_visitor, 1, "trp_player"),
    (set_visitor, 7, "trp_dani_haddingr"),
    (try_begin),
      (neg|quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 18),
      (set_visitor, 2, "trp_scandinavian_retainer"),
      (set_visitor, 3, "trp_scandinavian_retainer"),
      (set_visitor, 4, "trp_scandinavian_retainer"),
      (set_visitor, 5, "trp_scandinavian_retainer"),
      (set_visitor, 6, "trp_scandinavian_retainer"),
      (set_visitor, 8, "trp_scandinavian_retainer"),
      (set_visitor, 9, "trp_scandinavian_retainer"),
      (set_visitor, 10, "trp_scandinavian_retainer"),
      (set_visitor, 11, "trp_scandinavian_retainer"),
      (set_visitor, 12, "trp_scandinavian_retainer"),
      (set_visitor, 13, "trp_scandinavian_retainer"),
      (set_visitor, 14, "trp_scandinavian_retainer"),
      (set_visitor, 15, "trp_scandinavian_retainer"),
      (set_visitor, 16, "trp_scandinavian_retainer"),
      (set_visitor, 17, "trp_scandinavian_retainer"),
      (set_visitor, 18, "trp_scandinavian_retainer"),
      (set_visitor, 19, "trp_scandinavian_retainer"),
    (try_end),
    (jump_to_scene, ":scene_to_use"),
    (change_screen_mission),
  ]),
]),

("haddingrs_revenge_camp",mnf_scale_picture|mnf_enable_hot_keys,
"{s10}",
"none", [
    (set_background_mesh, "mesh_pic_camp"),
    (str_clear, s10),
    (try_begin),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 18),
      (str_store_string, s10, "@The campfire flickers, casting long shadows upon the earth as the night air carries the distant sounds of rustling leaves and crackling embers. The warriors rest, their bodies weary from battle, yet their spirits remain unbroken. Through the dim firelight, Haddingr strides toward you. His gaze is steady, his expression hardened by thought. There is no hesitation in his step, no wavering in his voice. Whatever weighs upon his mind, he has come to share it."),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 20),
      (str_store_string, s10, "@The trade route lies firmly in your grasp, a vital artery now flowing with merchants and their riches under Haddingr's command. The name of Skjoldungr resonates through the eastern lands, whispered with both fear and reverence. The sun sets on your conquests, and the time to return to Denmark approaches. In the camp, warriors gather, organizing their ranks and celebrating their newfound power. Suddenly, a scout bursts into the gathering, urgency etched upon his face, bearing news that could change the course of your journey."),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 23),
      (str_store_string, s10, "@The campaign in the east has drawn to its close. The warband, triumphant but weary, begins the march toward their ships, their sails set to carry them home. As the camp is set near the shore, a soldier approaches, his face pale with urgency, calling for you.^^There, at the edge of the camp, Haddingr stands in grim silence over Harthgrepa's lifeless form, his expression cold and unreadable. Signe stands nearby, her gaze distant and filled with sorrow. The air is thick with tension, the silence oppressive, as if the very earth mourns this loss."),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 24),
      (str_store_string, s10, "@As night falls and the camp readies for the journey ahead, a hooded figure appears from the shadows, his form barely visible beneath his cloak. Two wolves, silent and watchful, flank his sides like sentinels. The camp falls eerily still, the crackling of the fire the only sound breaking the heavy silence.^^His presence is commanding, as if the very air bends around him. When he speaks, his voice carries an otherworldly weight, as though his words are both a blessing and a warning."),
      (play_sound, "snd_wolf_short"),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 26),
      (str_store_string, s10, "@At last, the journey nears its end. You and Haddingr's host stand at the edge of the great hall's domain, gazing upon the towering walls of Heorot. The banners of the Augandzi hang above the palisades, their warriors standing watch, ever vigilant.^^The air is thick with tension, the weight of fate pressing upon your shoulders. The gods have led you here, and soon, swords shall be drawn, and blood shall be spilled."),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 27),
      (str_store_string, s10, "@Victory is yours - Heorot stands reclaimed, and Haddingr now sits upon the throne of the Skjoldungr. The warriors sing of triumph, and the banners of the Danir once more fly over the great hall. Yet, even in this moment of glory, the specter of war lingers.^^Svipdagr still lives, his wrath unquenched, and his forces gather beyond the horizon. Peace is but a fleeting breath before the storm. The Danir must ready themselves, for the battle to come shall shape the fate of the North."),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 29),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_temp_slot_2, 1),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_temp_slot_3, 1),
      (str_store_string, s10, "@The great hall of Heorot stands once more, its banners unfurled, its throne reclaimed. Within, the court gathers - chieftains, warriors, and scribes - each bearing a task in the forging of a new reign. Haddingr, seated upon his rightful throne, listens intently as matters of governance unfold. By his side, you stand, a trusted sword in the shaping of this realm's future.^Amidst the murmurs of counsel and the weight of decision, the doors burst open. A scout stumbles forward, breathless and dust-covered, urgency written upon his face."),
    (try_end),
  ],[
  ("option_1", [
  ],"Continue...",[
    (assign, "$g_next_menu", "mnu_haddingr_move_party"),
    (assign, ":scene", "scn_haddingrs_revenge_travel_cutscene"),
    (try_begin),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 18),
      (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 19),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 20),
      (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 21),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 23),
      (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 24),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 24),
      (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 25),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 27),
      (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 28),
      (assign, ":scene", "scn_finns_hall_interior"),
      (assign, "$g_next_menu", "mnu_auto_return_to_map"),
      (party_set_faction, "p_dani_village", "fac_minor_dani"),
      (party_add_leader, "p_dani_village", "trp_dani_haddingr"),
      (party_clear, "p_dani_village"),
      (call_script, "script_fully_refresh_minor_faction_garrison", "p_dani_village", 150),
      (faction_set_slot, "fac_minor_dani", slot_faction_leader, "trp_dani_haddingr"),
      (troop_set_slot, "trp_dani_haddingr", slot_troop_age, 19),
      (troop_set_slot, "trp_dani_haddingr", slot_troop_religion, slot_religion_paganism),
      (troop_set_slot, "trp_dani_haddingr", slot_troop_renown, 450),
      (troop_set_note_available, "trp_dani_haddingr", 1),
      (add_troop_note_tableau_mesh, "trp_dani_haddingr", "tableau_troop_note_mesh"),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 29),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_temp_slot_2, 1),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_temp_slot_3, 1),
      (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 30),
      (assign, ":scene", "scn_finns_hall_interior"),
    (try_end),
    (set_jump_mission, "mt_longboat_landing_1"),
    (try_for_range, ":entry_no", 1, 20),
      (mission_tpl_entry_set_override_flags, "mt_longboat_landing_1", ":entry_no", af_override_horse),
    (try_end),
    (try_begin),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 30),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_temp_slot_2, 1),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_temp_slot_3, 1),
      (modify_visitors_at_site, ":scene"),
      (reset_visitors),
      (assign, "$temp", "trp_scandinavian_freeman"),
      (set_visitor, 3, "trp_player"),
      (set_visitor, 7, "trp_scandinavian_freeman"),
      (set_visitor, 1, "trp_dani_haddingr"),
      (jump_to_scene, ":scene"),
      (change_screen_mission),
    (else_try),
      (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 25),
      (modify_visitors_at_site, ":scene"),
      (reset_visitors),
      (assign, "$temp", "trp_odin"),
      (set_visitor, 1, "trp_player"),
      (set_visitor, 7, "trp_odin"),
      (set_visitor, 2, "trp_dani_haddingr"),
      (jump_to_scene, ":scene"),
      (change_screen_mission),
    (else_try),
      (modify_visitors_at_site, ":scene"),
      (reset_visitors),
      (assign, "$temp", "trp_dani_haddingr"),
      (set_visitor, 1, "trp_player"),
      (set_visitor, 7, "trp_dani_haddingr"),
      (set_visitor, 2, "trp_scandinavian_retainer"),
      (set_visitor, 3, "trp_scandinavian_comes"),
      (set_visitor, 4, "trp_scandinavian_retainer"),
      (try_begin),
        (quest_slot_eq, "qst_haddingrs_revenge", slot_quest_current_state, 24),
        (set_visitor, 5, "trp_dani_signe"),
      (else_try),
        (set_visitor, 5, "trp_scandinavian_comes"),
      (try_end),
      (set_visitor, 6, "trp_scandinavian_retainer"),
      (set_visitor, 8, "trp_scandinavian_comes"),
      (set_visitor, 9, "trp_scandinavian_retainer"),
      (set_visitor, 10, "trp_scandinavian_comes"),
      (set_visitor, 11, "trp_scandinavian_retainer"),
      (set_visitor, 12, "trp_scandinavian_retainer"),
      (set_visitor, 13, "trp_scandinavian_freeman"),
      (set_visitor, 14, "trp_scandinavian_retainer"),
      (set_visitor, 15, "trp_scandinavian_retainer"),
      (set_visitor, 16, "trp_scandinavian_retainer"),
      (set_visitor, 17, "trp_scandinavian_retainer"),
      (set_visitor, 18, "trp_scandinavian_retainer"),
      (set_visitor, 19, "trp_scandinavian_retainer"),
      (jump_to_scene, ":scene"),
      (change_screen_mission),
    (try_end),
  ]),
]),
("haddingrs_revenge_return",mnf_scale_picture|mnf_enable_hot_keys,
"With the campaign in the east concluded, Haddingr's warband gathers at the shore, their ships ready to set sail for Denmark. The salt wind carries the scent of distant battles yet to come, and the warriors speak in hushed tones of the gods' will.^^The omens have been read, the path is clear - Heorot awaits, and with it, the clash that shall decide its fate. You and Haddingr stand apart, knowing the road ahead is fraught with peril. To avoid unwanted eyes and ensure success, you agree to travel separately, each taking a different course back to Denmark.",
"none", [
    (set_background_mesh, "mesh_pic_mb_warrior_1"),
  ],[
  ("option_1", [
  ],"Continue...",[
    (quest_set_slot, "qst_haddingrs_revenge", slot_quest_current_state, 26),

    (assign, "$g_next_menu", "mnu_auto_return_to_map"),
    (assign, "$tutorial_state", 0),
    (set_jump_mission, "mt_fleet_cutscene"),
    (modify_visitors_at_site, "scn_cutscene_longboat_fleet"),
    (reset_visitors),
    (try_begin),
        (eq,"$character_gender", tf_female),
        (troop_set_type,"trp_multiplayer_profile_troop_male", tf_female),
    (else_try),
        (troop_set_type,"trp_multiplayer_profile_troop_male", tf_male),
    (try_end),
    (str_store_troop_face_keys, s1, "trp_player"),
    (troop_set_face_keys, "trp_multiplayer_profile_troop_male", s1),
    (call_script, "script_dplmc_copy_inventory", "trp_player", "trp_multiplayer_profile_troop_male"),

    (set_visitor, 0, "trp_player"),
    (set_visitor, 1, "trp_scandinavian_comes"),
    (set_visitor, 2, "trp_scandinavian_comes"),
    (set_visitor, 3, "trp_dani_signe"),
    (set_visitor, 4, "trp_dani_haddingr"),
    (set_visitor, 5, "trp_scandinavian_comes"),
    (set_visitor, 6, "trp_scandinavian_comes"),
    (set_visitor, 7, "trp_multiplayer_profile_troop_male"),
    (set_visitor, 8, "trp_scandinavian_comes"),

    (try_for_range, ":entry", 9, 75),
        (set_visitors, ":entry", "trp_scandinavian_freeman", 2),
    (try_end),
    (play_track, "track_haddingrs_revenge", 1),
    (jump_to_scene, "scn_cutscene_longboat_fleet"),
    (change_screen_mission),
  ]),
]),

("haddingrs_revenge_assault_heorot",0,
  "The time has come. Haddingr's host stands assembled at the gates of Heorot, their weapons gleaming in the dim light of dawn. The war horns sound, echoing through the valley as the Augandzi defenders man the palisades, their banners whipping in the wind. The air is thick with the scent of blood and battle yet to be waged.^^Swords are drawn, shields are raised, and the warriors steel themselves for the storm of combat. The gates must fall, and the throne of the Skjoldungr must be reclaimed. There is no turning back - only glory or death awaits beyond these walls.",
  "none",[
    (set_background_mesh, "mesh_pic_charge"),
  ],[
  ("option_1",[],"Continue...",[
    (enable_party, "p_haddingrs_revenge_raiding_camp"),
    (party_clear, "p_haddingrs_revenge_raiding_camp"),
    (call_script, "script_fully_refresh_minor_faction_garrison", "p_haddingrs_revenge_raiding_camp", 200),

    (party_add_leader, "p_haddingrs_revenge_raiding_camp", "trp_dani_haddingr"),
    (troop_set_health, "trp_dani_haddingr", 100),

    (party_clear, "p_dani_village"),
    (call_script, "script_fully_refresh_minor_faction_garrison", "p_dani_village", 300),
    # (party_add_leader, "p_dani_village", "trp_scandinavian_comes"),

    (party_quick_attach_to_current_battle, "p_haddingrs_revenge_raiding_camp", 0), #allies

    # calculate battle variables (mainly necessary if there are also allies)
    (assign, "$g_ally_party", "p_haddingrs_revenge_raiding_camp"),
    (assign, "$g_enemy_party", "p_dani_village"),
    (call_script, "script_encounter_calculate_fit"),
    (try_begin),
      (eq, "$new_encounter", 1),
      (assign, "$new_encounter", 0),
      (assign, "$g_encounter_is_in_village", 0),
      (assign, "$g_encounter_type", 0),
      (call_script, "script_encounter_init_variables"),
      (assign, "$encountered_party_hostile", 1),
      (assign, "$encountered_party_friendly", 0),
    (try_end),

    (assign, "$g_battle_result", 0),
    (assign, "$g_engaged_enemy", 0),
    (assign, "$g_next_menu", "mnu_haddingrs_revenge_camp"),#victory menu
    (assign, "$temp4", "mnu_haddingrs_revenge_defeat"),#defeat menu

    # as its a larger battle we should also calculate battle advantage
    (call_script, "script_calculate_battle_advantage"),
    (set_battle_advantage, reg0),

    (set_party_battle_mode),
    (set_jump_mission,"mt_minor_village_attack_quest"),#can be used for any quest battle
    (jump_to_scene, "scn_dani_town"),
    (change_screen_mission),
  ]),
]),
("haddingrs_revenge_final_feast",0,
  "The procession marches into Heorot, greeted by thunderous cheers as the people hail Haddingr's name. Banners of the Skjoldung line the great hall, where warriors revel in their hard-won triumph. Goblets clash, laughter echoes, and the air is thick with the scent of roasted meat and spilled mead. Amidst the celebration, Haddingr rises, lifting his cup high. The hall falls silent, all eyes turning to him as he prepares to speak.",
  "none",[
    (set_background_mesh, "mesh_pic_victory"),
  ],[
  ("option_1",[],"Today we feast, tomorrow we battle!",[
    (set_jump_mission, "mt_final_feast"),
    (modify_visitors_at_site, "scn_finns_hall_interior"),
    (reset_visitors),

    (assign, "$g_next_menu", "mnu_haddingrs_revenge_final_end"),

    (set_visitor, 0, "trp_player"),
    (set_visitor, 1, "trp_dani_guthlaf"),
    (set_visitor, 2, "trp_giant_wagnofthus"),
    (set_visitor, 3, "trp_dani_signe"),
    (set_visitor, 4, "trp_dani_ordlaf"),
    (set_visitor, 5, "trp_dani_haddingr"),
    (set_visitor, 6, "trp_scandinavian_comes"),
    (set_visitor, 7, "trp_scandinavian_comes"),
    (set_visitor, 8, "trp_scandinavian_comes"),
    (set_visitor, 9, "trp_scandinavian_comes"),
    (set_visitor, 10, "trp_scandinavian_comes"),
    (set_visitor, 11, "trp_scandinavian_comes"),
    (set_visitor, 12, "trp_dani_groa"),
    (set_visitor, 13, "trp_musican_male"),
    (set_visitor, 14, "trp_musican_female"),

    (assign, "$temp", "trp_dani_haddingr"),

    (jump_to_scene, "scn_finns_hall_interior"),
    (change_screen_mission),
  ]),
]),
("haddingrs_revenge_final_end",0,
  "With Svipdagr slain, the Battle of Jutland ends in triumph. Haddingr ascends the throne, ruling over Heorot with strength and wisdom, ushering in an era of peace and prosperity. Yet, even as the land settles, the horizon whispers of new adventures, calling those who would seek glory beyond the comforts of victory.",
  "none",[
    (set_background_mesh, "mesh_pic_victory"),
  ],[
  ("option_1",[],"The shores of Britannia are calling!",[
    (faction_set_slot, "fac_minor_augundzi", slot_faction_leader, "trp_dani_alf"),
    (faction_set_slot, "fac_minor_augundzi", slot_faction_player_tributary, 1),
    (party_add_leader, "p_augundzi_village", "trp_dani_alf"),
    (party_set_slot, "p_augundzi_village", slot_town_lord, "trp_dani_alf"),
    (troop_set_faction, "trp_dani_alf", "fac_minor_augundzi"),

    (troop_set_slot, "trp_dani_alf", slot_troop_age, 45),
    (troop_set_slot, "trp_dani_alf", slot_troop_religion, slot_religion_paganism),
    (troop_set_slot, "trp_dani_alf", slot_troop_renown, 100),
    (troop_set_note_available, "trp_dani_alf", 1),
    (add_troop_note_tableau_mesh, "trp_dani_alf", "tableau_troop_note_mesh"),

    (str_store_troop_name_link, s11, "trp_dani_alf"),
    (str_store_faction_name_link, s10, "fac_minor_augundzi"),
    (display_log_message, "@The {s10} are now your vassal! Their new ruler is {s11}, your puppet king."),

    (troop_set_slot, "trp_augundzi_king", slot_troop_occupation, dplmc_slto_dead),

    (call_script, "script_set_player_relation_with_faction", "fac_minor_augundzi", 10),

    (troop_add_items, "trp_player", "itm_evebo_spatha", 1),
    (troop_add_gold, "trp_player", 10000),
    (add_xp_as_reward, 5000),
    (call_script, "script_end_quest", "qst_haddingrs_revenge"),
    (call_script, "script_change_troop_renown", "trp_player", 100),
    (call_script, "script_change_player_honor", 15),
    (jump_to_menu, "mnu_auto_return_to_map"),

    (try_begin),
      (is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
      (store_relation, ":reln", "fac_minor_augundzi", "$players_kingdom"),
      (lt, ":reln", 0),
      (set_relation, "fac_minor_augundzi", "$players_kingdom", 0), #make neutral towards the players faction if subjugated
    (try_end),
    (try_for_range, ":other_faction", npc_kingdoms_begin, npc_kingdoms_end),
      (neq, "$players_kingdom", ":other_faction"),
      (store_relation, ":reln", "fac_minor_augundzi", ":other_faction"),
      (gt, ":reln", 0),
      (set_relation, "fac_minor_augundzi", ":other_faction", 0), #this minor is no longer someone else ally if the player subjugate them
    (try_end),
  ]),
]),
]#end of file


#Freelance shit, fuck freelancer shit
pre_join_freelancer = [
          (eq, "$freelancer_state", 1),
      (try_begin),
      (party_get_attached_to, ":attached", "$enlisted_party"),
      (this_or_next|eq, "$enlisted_party", "$g_encountered_party_2"),
      (eq, ":attached", "$g_encountered_party_2"),
      (select_enemy, 0),
      (assign,"$g_enemy_party","$g_encountered_party"),
            (assign,"$g_ally_party","$g_encountered_party_2"),
      (else_try),
        (select_enemy, 1),
      (assign,"$g_enemy_party","$g_encountered_party_2"),
      (assign,"$g_ally_party","$g_encountered_party"),
      (try_end),
          (jump_to_menu,"mnu_join_battle"),
]

join_siege_outside_freelancer = [
          (eq, "$freelancer_state", 1),
      (try_begin),
      (store_troop_faction, ":commanders_faction", "$enlisted_lord"),
      (store_relation, ":relation", ":commanders_faction", "$g_encountered_party_faction"),
      (this_or_next|eq, ":commanders_faction", "$g_encountered_party_faction"), #encountered party is always the castle/town sieged
      (ge, ":relation", 0),
      (assign, "$g_defending_against_siege", 1),
      (assign, "$g_siege_first_encounter", 1),
      (jump_to_menu, "mnu_siege_started_defender"),
      (else_try),
      (jump_to_menu, "mnu_besiegers_camp_with_allies"),
      (try_end),

]

join_battle_collect_others = [
  (try_begin),
    (eq, "$freelancer_state", 1),
    (call_script, "script_let_nearby_parties_join_current_battle", 0, 0),
    (str_store_party_name, 1,"$g_enemy_party"), #to prevent bug'd text from the above script (which also uses s1)
  (try_end),
]

join_wounded_freelancer = [
  ("join_wounded",[
    (eq, "$freelancer_state", 1),
    (troop_is_wounded, "trp_player"),
    ],
    "You are too wounded to fight.",[(leave_encounter),(change_screen_map)]),

 ]


#Freelance shit, fuck freelancer shit
pre_join_freelancer = [
          (eq, "$freelancer_state", 1),
      (try_begin),
      (party_get_attached_to, ":attached", "$enlisted_party"),
      (this_or_next|eq, "$enlisted_party", "$g_encountered_party_2"),
      (eq, ":attached", "$g_encountered_party_2"),
      (select_enemy, 0),
      (assign,"$g_enemy_party","$g_encountered_party"),
            (assign,"$g_ally_party","$g_encountered_party_2"),
      (else_try),
        (select_enemy, 1),
      (assign,"$g_enemy_party","$g_encountered_party_2"),
      (assign,"$g_ally_party","$g_encountered_party"),
      (try_end),
          (jump_to_menu,"mnu_join_battle"),
]

join_siege_outside_freelancer = [
          (eq, "$freelancer_state", 1),
      (try_begin),
      (store_troop_faction, ":commanders_faction", "$enlisted_lord"),
      (store_relation, ":relation", ":commanders_faction", "$g_encountered_party_faction"),
      (this_or_next|eq, ":commanders_faction", "$g_encountered_party_faction"), #encountered party is always the castle/town sieged
      (ge, ":relation", 0),
      (assign, "$g_defending_against_siege", 1),
      (assign, "$g_siege_first_encounter", 1),
      (jump_to_menu, "mnu_siege_started_defender"),
      (else_try),
      (jump_to_menu, "mnu_besiegers_camp_with_allies"),
      (try_end),

]

join_battle_collect_others = [
  (try_begin),
    (eq, "$freelancer_state", 1),
    (call_script, "script_let_nearby_parties_join_current_battle", 0, 0),
    (str_store_party_name, 1,"$g_enemy_party"), #to prevent bug'd text from the above script (which also uses s1)
  (try_end),
]

join_wounded_freelancer = [
  ("join_wounded",[
    (eq, "$freelancer_state", 1),
    (troop_is_wounded, "trp_player"),
    ],
    "You are too wounded to fight.",[(leave_encounter),(change_screen_map)]),

 ]
